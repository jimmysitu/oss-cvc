!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A16	./lz4.c	218;"	d	file:
A32	./lz4.c	219;"	d	file:
A64	./lz4.c	220;"	d	file:
AARCH	./lz4.c	221;"	d	file:
ACCMAPTOMIP_LAST	./v_acc.c	202;"	d	file:
ACCMAPTOMIP_MAX	./v_acc.c	200;"	d	file:
ACCMAPTOMIP_MIN	./v_acc.c	201;"	d	file:
ACCSTRBUFSIZ	./v_acc.c	198;"	d	file:
ACCTOHIZ_AVG	./v_acc.c	204;"	d	file:
ACCTOHIZ_FROMUSER	./v_acc.c	207;"	d	file:
ACCTOHIZ_MAX	./v_acc.c	205;"	d	file:
ACCTOHIZ_MIN	./v_acc.c	206;"	d	file:
ACC_4IGATE	./v.h	1298;"	d
ACC_BUFNOT	./v.h	1296;"	d
ACC_NONE	./v.h	1294;"	d
ACC_ST4IGATE	./v.h	1299;"	d
ACC_STD	./v.h	1295;"	d
ACC_STIBUFNOT	./v.h	1297;"	d
ADDA_STR	./igen.h	734;"	d
ADDA_STR	./igen.h	887;"	d
AL	./igen.h	697;"	d
AL	./igen.h	815;"	d
ALIGN_FUNC_STR	./v_asmlnk.c	212;"	d	file:
ALIGN_JMPE_STR	./v_asmlnk.c	207;"	d	file:
ALL1HW	./v.h	362;"	d
ALL1HW	./v.h	380;"	d
ALL1W	./v.h	361;"	d
ALL1W	./v.h	379;"	d
ALLOCATOR	./lz4.c	161;"	d	file:
ALWAYS	./v.h	733;"	d
ALWAYS_COMB	./v.h	734;"	d
ALWAYS_FF	./v.h	735;"	d
ALWAYS_LATCH	./v.h	736;"	d
AM_BBLK	./igen.h	222;"	d
AM_IDP_ADR_OFS	./igen.h	219;"	d
AM_IMM	./igen.h	214;"	d
AM_LABEL	./igen.h	220;"	d
AM_NDXREG	./igen.h	216;"	d
AM_NDXREG_DBL	./igen.h	224;"	d
AM_NDXREG_DISP	./igen.h	217;"	d
AM_NLO	./igen.h	223;"	d
AM_NLO_ARRNDX	./igen.h	221;"	d
AM_NONE	./igen.h	213;"	d
AM_NONREG_OFS	./igen.h	218;"	d
AM_REG	./igen.h	215;"	d
AM_UNKN	./igen.h	212;"	d
ANDA_STR	./igen.h	732;"	d
ANDA_STR	./igen.h	885;"	d
AND_EQ	./v.h	662;"	d
AR_AX	./igen.h	719;"	d
AR_AX	./igen.h	865;"	d
AR_BP	./igen.h	725;"	d
AR_BP	./igen.h	871;"	d
AR_BX	./igen.h	720;"	d
AR_BX	./igen.h	866;"	d
AR_CX	./igen.h	721;"	d
AR_CX	./igen.h	867;"	d
AR_DI	./igen.h	723;"	d
AR_DI	./igen.h	869;"	d
AR_DX	./igen.h	722;"	d
AR_DX	./igen.h	868;"	d
AR_SI	./igen.h	724;"	d
AR_SI	./igen.h	870;"	d
AR_SP	./igen.h	726;"	d
AR_SP	./igen.h	872;"	d
ASHIFTL	./v.h	609;"	d
ASHIFTL_EQ	./v.h	666;"	d
ASHIFTR	./v.h	611;"	d
ASHIFTR_EQ	./v.h	668;"	d
ASLNUM	./v_cvcms.c	4001;"	d	file:
ASL_4STATE_TO_2STATE_WIDE	./igen.h	1230;"	d
ASL_ABS	./igen.h	1254;"	d
ASL_ACOS	./igen.h	1243;"	d
ASL_ACOSH	./igen.h	1249;"	d
ASL_ADD_DMPP_CHGLST_EL	./igen.h	1197;"	d
ASL_ADD_DMPP_CHGLST_EL_MDPRT	./igen.h	1202;"	d
ASL_ADD_DMPV_CHGLST_EL	./igen.h	1090;"	d
ASL_ADD_DMPV_CHGLST_EL_ARRAY	./igen.h	1229;"	d
ASL_ADD_DMPV_CHGLST_EL_MDPRT	./igen.h	1203;"	d
ASL_ADD_SELECT_NCHGLST_EL	./igen.h	1089;"	d
ASL_ADD_STATIC_NCHG_SEL	./igen.h	1149;"	d
ASL_ADD_TOGGLELST_EL	./igen.h	1257;"	d
ASL_ADD_TOGGLELST_EL_PORT	./igen.h	1258;"	d
ASL_ADJUST_TRIREG	./igen.h	1057;"	d
ASL_ARM_ECTRL	./igen.h	983;"	d
ASL_ARM_NB_ECTRL	./igen.h	985;"	d
ASL_ARM_NB_VARNDX_ECTRL	./igen.h	1129;"	d
ASL_ASIN	./igen.h	1244;"	d
ASL_ASINH	./igen.h	1250;"	d
ASL_ASSIGN_QCAF	./igen.h	1000;"	d
ASL_ASSIGN_QCAF_CONCAT	./igen.h	1276;"	d
ASL_ASSIGN_QCAF_REGFORM	./igen.h	1168;"	d
ASL_ASSIGN_QCAF_REGFORM_CONCAT	./igen.h	1275;"	d
ASL_ASSIGN_SCALAR_QCAF	./igen.h	1169;"	d
ASL_ATAN	./igen.h	1245;"	d
ASL_ATANH	./igen.h	1251;"	d
ASL_BBLK_DBG_MSG	./igen.h	1114;"	d
ASL_BLD_NB_NODELAY_TEV	./igen.h	1119;"	d
ASL_BSEL_WIRFRC_INHIBIT	./igen.h	992;"	d
ASL_BYTECMP	./igen.h	1062;"	d
ASL_CALC_BUFIF_NEWSTATE	./igen.h	1043;"	d
ASL_CANCELE_PEND_CHG_1GEV	./igen.h	1051;"	d
ASL_CANCELE_PEND_NOCHG_1GEV	./igen.h	1049;"	d
ASL_CANCEL_EV	./igen.h	1042;"	d
ASL_CEIL	./igen.h	1241;"	d
ASL_CHG_GATE_OUTWIRE	./igen.h	1050;"	d
ASL_CHK_DCE_CBVC	./igen.h	1105;"	d
ASL_CHK_GATE_VPI_CHG	./igen.h	1107;"	d
ASL_CHK_LD_VPIPUTV_DRIVER	./igen.h	1106;"	d
ASL_COMB_1BITSTS	./igen.h	1093;"	d
ASL_CORRECT_FRC	./igen.h	994;"	d
ASL_COS	./igen.h	1238;"	d
ASL_COSH	./igen.h	1246;"	d
ASL_CP_AUTO_IDP_AREA_FUNC	./igen.h	1225;"	d
ASL_CP_SOFS_WVAL	./igen.h	1067;"	d
ASL_CVT_LNGBOOL	./igen.h	1078;"	d
ASL_DOWNREL_TARG_TO_REF	./igen.h	1121;"	d
ASL_EVAL_1W_NONSTREN_WIRE	./igen.h	1109;"	d
ASL_EVAL_1W_NONSTREN_WIRE_AND	./igen.h	1110;"	d
ASL_EVAL_1W_NONSTREN_WIRE_OR	./igen.h	1111;"	d
ASL_EVAL_CMOS_GATE	./igen.h	1045;"	d
ASL_EVAL_HTRAN_STWIRE_1BIT	./igen.h	1159;"	d
ASL_EVAL_HTRAN_STWIRE_1BIT_NCHG	./igen.h	1160;"	d
ASL_EVAL_HTRAN_WIRE_1BIT	./igen.h	1157;"	d
ASL_EVAL_HTRAN_WIRE_1BIT_NCHG	./igen.h	1158;"	d
ASL_EVAL_NMOS_GATE	./igen.h	1063;"	d
ASL_EVAL_PMOS_GATE	./igen.h	1065;"	d
ASL_EVAL_RCMOS_GATE	./igen.h	1046;"	d
ASL_EVAL_RNMOS_GATE	./igen.h	1064;"	d
ASL_EVAL_RPMOS_GATE	./igen.h	1066;"	d
ASL_EVAL_STWIRE	./igen.h	1087;"	d
ASL_EVAL_TRANIF_LD	./igen.h	1085;"	d
ASL_EVAL_TRAN_BIDCHAN_1BIT	./igen.h	1162;"	d
ASL_EVAL_TRAN_BIDCHAN_1BIT_ASSIGN	./igen.h	1280;"	d
ASL_EVAL_TRAN_BIDCHAN_VECTORED_ASSIGN	./igen.h	1283;"	d
ASL_EVAL_TRAN_DRVRS	./igen.h	1056;"	d
ASL_EVAL_TRAN_DRVRS_VECTOR	./igen.h	1282;"	d
ASL_EVAL_TRAN_SCALAR_BIDCHAN_1BIT	./igen.h	1161;"	d
ASL_EVAL_TRAN_STBIDCHAN_1BIT	./igen.h	1163;"	d
ASL_EVAL_TRAN_STBIDCHAN_1BIT_ASSIGN	./igen.h	1281;"	d
ASL_EVAL_TRAN_STBIDCHAN_VECTORED_ASSIGN	./igen.h	1284;"	d
ASL_EVAL_WIDE_WIRE	./igen.h	1088;"	d
ASL_EVAL_WIDE_WIRE_AND	./igen.h	1112;"	d
ASL_EVAL_WIDE_WIRE_OR	./igen.h	1113;"	d
ASL_EXEC_CAUSE	./igen.h	1033;"	d
ASL_EXEC_DISABLE	./igen.h	1084;"	d
ASL_EXEC_DISPLAY	./igen.h	1200;"	d
ASL_EXEC_QC_ASSIGN	./igen.h	1079;"	d
ASL_EXEC_QC_ASSIGN_CONCAT	./igen.h	1289;"	d
ASL_EXEC_QC_DEASSIGN	./igen.h	1082;"	d
ASL_EXEC_QC_DEASSIGN_CONCAT	./igen.h	1292;"	d
ASL_EXEC_QC_DEASSIGN_FORCE	./igen.h	1167;"	d
ASL_EXEC_QC_DEASSIGN_FORCE_CONCAT	./igen.h	1291;"	d
ASL_EXEC_QC_FORCE	./igen.h	1080;"	d
ASL_EXEC_QC_FORCE_CONCAT	./igen.h	1290;"	d
ASL_EXEC_QC_TRAN_WIREFORCE	./igen.h	1165;"	d
ASL_EXEC_QC_TRAN_WIREFORCE_CONCAT	./igen.h	1293;"	d
ASL_EXEC_QC_TRAN_WIRERELEASE	./igen.h	1166;"	d
ASL_EXEC_QC_TRAN_WIRERELEASE_CONCAT	./igen.h	1287;"	d
ASL_EXEC_QC_WIREFORCE	./igen.h	1081;"	d
ASL_EXEC_QC_WIREFORCE_CONCAT	./igen.h	1286;"	d
ASL_EXEC_QC_WIRERELEASE	./igen.h	1083;"	d
ASL_EXEC_QC_WIRERELEASE_CONCAT	./igen.h	1288;"	d
ASL_EXEC_STSK	./igen.h	989;"	d
ASL_EXEC_SYSFUNC	./igen.h	1008;"	d
ASL_EXEC_SYSFUNC_STMTLOC	./igen.h	1278;"	d
ASL_EXEC_WIDE_LOGIC_GATE	./igen.h	1039;"	d
ASL_EXP	./igen.h	1256;"	d
ASL_FLOOR	./igen.h	1242;"	d
ASL_FMONIT_TRIGGER	./igen.h	999;"	d
ASL_FORCE_ACTIVE	./igen.h	1180;"	d
ASL_GET_DEL_1X	./igen.h	1186;"	d
ASL_GET_DEL_4X	./igen.h	1187;"	d
ASL_GET_DOWNREL_IDP	./igen.h	981;"	d
ASL_GET_PERINST_VAL	./igen.h	1059;"	d
ASL_GET_STRING_BYTE	./igen.h	1268;"	d
ASL_GET_UPREL_IDP	./igen.h	980;"	d
ASL_GET_XPROP_ACCUM	./igen.h	1298;"	d
ASL_HAS_XEDGE_WIDE	./igen.h	1313;"	d
ASL_HAS_XEDGE_WIDE_ST	./igen.h	1314;"	d
ASL_IMMED_EVAL_TRIFCHAN	./igen.h	1177;"	d
ASL_JMP_EQ_STMASK	./igen.h	997;"	d
ASL_JMP_EQ_WIDE_VARMASK	./igen.h	1196;"	d
ASL_LADD	./igen.h	1070;"	d
ASL_LDIVMOD	./igen.h	1074;"	d
ASL_LD_LOGIC_WIDE_DRIVER	./igen.h	1148;"	d
ASL_LD_TFRWARG_DRVP	./igen.h	1058;"	d
ASL_LHSPSEL	./igen.h	1068;"	d
ASL_LMULT	./igen.h	1071;"	d
ASL_LN	./igen.h	1252;"	d
ASL_LOG10	./igen.h	1253;"	d
ASL_LSUB	./igen.h	1069;"	d
ASL_MDPRT_BSEL	./igen.h	1204;"	d
ASL_MDPRT_BSEL_1W	./igen.h	1206;"	d
ASL_MDPRT_BSEL_1W_DMPP	./igen.h	1210;"	d
ASL_MDPRT_BSEL_1W_DMPV	./igen.h	1214;"	d
ASL_MDPRT_BSEL_DMPP	./igen.h	1208;"	d
ASL_MDPRT_BSEL_DMPV	./igen.h	1212;"	d
ASL_MDPRT_BSEL_NCHG	./igen.h	1205;"	d
ASL_MDPRT_BSEL_NCHG_1W	./igen.h	1207;"	d
ASL_MDPRT_BSEL_NCHG_1W_DMPP	./igen.h	1211;"	d
ASL_MDPRT_BSEL_NCHG_1W_DMPV	./igen.h	1215;"	d
ASL_MDPRT_BSEL_NCHG_DMPP	./igen.h	1209;"	d
ASL_MDPRT_BSEL_NCHG_DMPV	./igen.h	1213;"	d
ASL_MEMCPY	./igen.h	1091;"	d
ASL_MISC_TERR	./igen.h	1327;"	d
ASL_MOVABW_FR_SVEC	./igen.h	1001;"	d
ASL_MOVABW_ONEW_FR_SVEC	./igen.h	1115;"	d
ASL_MOVR_FR_SGNW	./igen.h	1006;"	d
ASL_MOVR_FR_W	./igen.h	1005;"	d
ASL_MOVSB_FR_SCALSTAD	./igen.h	1004;"	d
ASL_MOVSB_FR_WIDESTAD	./igen.h	1003;"	d
ASL_MOVSB_FR_WSTAD	./igen.h	1002;"	d
ASL_MOVW_FR_R	./igen.h	1007;"	d
ASL_MOVW_FR_R_2STATE	./igen.h	1234;"	d
ASL_MY_MEMSET	./igen.h	1092;"	d
ASL_NB_TRIGGER_ECTRL	./igen.h	1120;"	d
ASL_NEW_AUTO_IDP_AREA	./igen.h	1224;"	d
ASL_PEND_CHG_1GEV	./igen.h	1054;"	d
ASL_PEND_CHG_1GEV_CONST	./igen.h	1201;"	d
ASL_PEND_NOCHG_1GEV	./igen.h	1052;"	d
ASL_PER_BIT_XPROP_ACCUM	./igen.h	1301;"	d
ASL_POPCOUNT_1W	./igen.h	1309;"	d
ASL_POPCOUNT_WIDE	./igen.h	1310;"	d
ASL_POP_XSTK	./igen.h	1285;"	d
ASL_PROCESS_MIPD_NCHG	./igen.h	1150;"	d
ASL_PROCESS_SCAL_MIPD_NCHG	./igen.h	1151;"	d
ASL_PSEL_CORRECT_FRC	./igen.h	995;"	d
ASL_QC_ACTIVE	./igen.h	1164;"	d
ASL_RANDOM	./igen.h	1192;"	d
ASL_RANDOM_WITH_SEED	./igen.h	1191;"	d
ASL_REAL_DIV0_WARNING	./igen.h	1277;"	d
ASL_REAL_POW_FUNC	./igen.h	1118;"	d
ASL_REAL_QCOL_WARNING	./igen.h	1279;"	d
ASL_REG_QCAF_INHIBIT	./igen.h	990;"	d
ASL_REPCNT_JMP	./igen.h	1034;"	d
ASL_RESCHD_1WEV	./igen.h	1185;"	d
ASL_RESCHD_CAEV	./igen.h	1055;"	d
ASL_RESCHD_CAEV_CONST	./igen.h	1102;"	d
ASL_RHS_CONTA_STREN	./igen.h	1131;"	d
ASL_RHS_PSEL	./igen.h	1193;"	d
ASL_RHS_PSEL_2STATE	./igen.h	1232;"	d
ASL_RHS_PSEL_WIDE	./igen.h	1194;"	d
ASL_RHS_PSEL_WIDE_2STATE	./igen.h	1233;"	d
ASL_RHS_ST_PSEL	./igen.h	1195;"	d
ASL_SCALAR_WIRE_INHIBIT	./igen.h	991;"	d
ASL_SCHD_1GEV	./igen.h	1048;"	d
ASL_SCHD_1GEV_CONST	./igen.h	1152;"	d
ASL_SCHD_1GEV_PND0	./igen.h	1153;"	d
ASL_SCHD_1PTHWIREBIT	./igen.h	1142;"	d
ASL_SCHD_1PTHWIREBIT_NOMSG	./igen.h	1188;"	d
ASL_SCHD_1WEV	./igen.h	1189;"	d
ASL_SCHD_BIDPTHDRVRS	./igen.h	1172;"	d
ASL_SCHD_CAEV	./igen.h	1041;"	d
ASL_SCHD_CAEV_CONST	./igen.h	1100;"	d
ASL_SCHD_CAEV_CONST0	./igen.h	1101;"	d
ASL_SCHD_NB_VARDEL_RHSCONST_DCTRL	./igen.h	1123;"	d
ASL_SCHD_SCALAR_1PTHWIREBIT	./igen.h	1140;"	d
ASL_SCHD_SCALAR_1WEV	./igen.h	1184;"	d
ASL_SCHD_SCALAR_BIDPTHDRVRS	./igen.h	1173;"	d
ASL_SCHD_ST_1PTHWIREBIT	./igen.h	1143;"	d
ASL_SCHD_ST_SCALAR_1PTHWIREBIT	./igen.h	1141;"	d
ASL_SCHED_FORK	./igen.h	988;"	d
ASL_SCHED_NAMBLK_THD	./igen.h	987;"	d
ASL_SCHED_NBRHS_DCTRL	./igen.h	986;"	d
ASL_SCHED_NBRHS_DCTRL_CONST	./igen.h	1099;"	d
ASL_SCHED_NBRHS_DCTRL_CONST_LAST	./igen.h	1222;"	d
ASL_SCHED_NBRHS_DCTRL_CONST_T	./igen.h	1216;"	d
ASL_SCHED_NBRHS_NOMEM_DCTRL_CONST	./igen.h	1124;"	d
ASL_SCHED_NBRHS_NOMEM_DCTRL_CONST_LAST	./igen.h	1223;"	d
ASL_SCHED_NBRHS_NOMEM_DCTRL_CONST_T	./igen.h	1217;"	d
ASL_SCHED_NBRHS_SCALAR_DCTRL	./igen.h	1125;"	d
ASL_SCHED_NBRHS_SCALAR_DCTRL_CONST	./igen.h	1126;"	d
ASL_SCHED_NBRHS_SCALAR_DCTRL_CONST_LAST	./igen.h	1221;"	d
ASL_SCHED_NBRHS_SCALAR_DCTRL_CONST_T	./igen.h	1218;"	d
ASL_SCHED_NBRHS_VARNDX_DCTRL	./igen.h	1128;"	d
ASL_SCHED_NBRHS_VARNDX_DCTRL_CONCAT	./igen.h	1182;"	d
ASL_SCHED_NBRHS_VARNDX_DCTRL_CONST	./igen.h	1127;"	d
ASL_SCHED_NBRHS_VARNDX_DCTRL_CONST_CONCAT	./igen.h	1181;"	d
ASL_SCHED_NBRHS_VARNDX_DCTRL_CONST_CONCAT_T	./igen.h	1220;"	d
ASL_SCHED_NBRHS_VARNDX_DCTRL_CONST_SEL_T	./igen.h	1274;"	d
ASL_SCHED_NBRHS_VARNDX_DCTRL_CONST_T	./igen.h	1219;"	d
ASL_SCHED_NBRHS_VARNDX_DCTRL_SEL_CONST	./igen.h	1271;"	d
ASL_SCHED_NBRHS_VARNDX_SEL_DCTRL	./igen.h	1272;"	d
ASL_SCHED_NB_PND0_LHS_VARNDX	./igen.h	1130;"	d
ASL_SCHED_NB_PND0_LHS_VARNDX_CONCAT	./igen.h	1183;"	d
ASL_SCHED_NB_PND0_LHS_VARNDX_SEL	./igen.h	1273;"	d
ASL_SCHED_PROC_DELAY	./igen.h	982;"	d
ASL_SCHED_PROC_DELAY_CONST	./igen.h	1097;"	d
ASL_SCHED_PROC_DELAY_CONST_NT	./igen.h	1146;"	d
ASL_SCHED_PROC_DELAY_NT	./igen.h	1145;"	d
ASL_SCHED_PROC_DELAY_PND0	./igen.h	1098;"	d
ASL_SCHED_PROC_DELAY_PND0_NT	./igen.h	1147;"	d
ASL_SCHED_PROC_DELAY_TASK_CONST	./igen.h	1154;"	d
ASL_SCHED_PROC_DELAY_TASK_PND0	./igen.h	1155;"	d
ASL_SCHED_SCALAR_MIPD_16V	./igen.h	1133;"	d
ASL_SCHED_SCALAR_MIPD_CONST	./igen.h	1139;"	d
ASL_SCHED_SCALAR_MIPD_IS16V	./igen.h	1134;"	d
ASL_SCHED_SCALAR_MIPD_IS16V1	./igen.h	1135;"	d
ASL_SCHED_SCALAR_MIPD_IS16V2	./igen.h	1136;"	d
ASL_SCHED_SCALAR_MIPD_IS1V	./igen.h	1137;"	d
ASL_SCHED_SCALAR_MIPD_PATH	./igen.h	1132;"	d
ASL_SCHED_SCALAR_MIPD_PND0	./igen.h	1138;"	d
ASL_SCHED_UNKNOWN_BIT	./igen.h	1061;"	d
ASL_SCHED_VEC_MIPD_BIT	./igen.h	1040;"	d
ASL_SETSAV_ASSOC_TSK	./igen.h	984;"	d
ASL_SETUP_TASK_THD	./igen.h	1025;"	d
ASL_SETUP_TASK_THD_AUTO	./igen.h	1226;"	d
ASL_SET_BYTEVAL	./igen.h	1038;"	d
ASL_SET_RESTORE_XPROP_ACCUM_BLOCK	./igen.h	1305;"	d
ASL_SET_RESTORE_XPROP_ACCUM_BLOCK_NODEFAULT	./igen.h	1306;"	d
ASL_SET_RESTORE_XPROP_ACCUM_TOSELF	./igen.h	1319;"	d
ASL_SET_RHS_NEW_GATEVAL	./igen.h	1044;"	d
ASL_SET_XPROP_ACCUM_BLOCK_CASE	./igen.h	1304;"	d
ASL_SET_XPROP_ACCUM_BLOCK_IF	./igen.h	1320;"	d
ASL_SET_XPROP_ACCUM_INIT	./igen.h	1299;"	d
ASL_SET_XPROP_ACCUM_INIT_WIDE	./igen.h	1300;"	d
ASL_SGNBIT_ON	./igen.h	1037;"	d
ASL_SGNMASK	./igen.h	1024;"	d
ASL_SGN_LDIVMOD	./igen.h	1073;"	d
ASL_SGN_LMULT	./igen.h	1072;"	d
ASL_SGN_WIDE_CMP	./igen.h	1028;"	d
ASL_SGN_XTND_WIDEN	./igen.h	1094;"	d
ASL_SGN_XTND_WIDEN_2STATE	./igen.h	1231;"	d
ASL_SIN	./igen.h	1239;"	d
ASL_SINH	./igen.h	1247;"	d
ASL_SQRT	./igen.h	1255;"	d
ASL_STMT_ASSIGN_TO_ACCUM_1W	./igen.h	1303;"	d
ASL_STMT_ASSIGN_TO_ACCUM_1W_CASE_ID	./igen.h	1322;"	d
ASL_STMT_ASSIGN_TO_ACCUM_1W_IF_ID	./igen.h	1321;"	d
ASL_STMT_ASSIGN_TO_ACCUM_WIDE	./igen.h	1302;"	d
ASL_STMT_ASSIGN_TO_ACCUM_WIDE_CASE_ID	./igen.h	1324;"	d
ASL_STMT_ASSIGN_TO_ACCUM_WIDE_IF_ID	./igen.h	1323;"	d
ASL_STORE_BIDPTHDRVRS	./igen.h	1174;"	d
ASL_STREN_CORRECT_FRC	./igen.h	993;"	d
ASL_STREN_PEND_CHG_1GEV	./igen.h	1053;"	d
ASL_STREN_PSEL_CORRECT_FRC	./igen.h	996;"	d
ASL_STREN_SCHD_1GEV	./igen.h	1047;"	d
ASL_STREN_SCHD_BIDPTHDRVRS	./igen.h	1171;"	d
ASL_STREN_SCHED_UNKNOWN_BIT	./igen.h	1060;"	d
ASL_STRING_BINOP	./igen.h	1263;"	d
ASL_ST_STRING_ARRAY_CONST	./igen.h	1265;"	d
ASL_ST_STRING_ARRAY_RHSX	./igen.h	1267;"	d
ASL_ST_STRING_ARRAY_VAR	./igen.h	1266;"	d
ASL_ST_STRING_BYTE	./igen.h	1264;"	d
ASL_ST_STRING_CONST	./igen.h	1260;"	d
ASL_ST_STRING_RHSX	./igen.h	1262;"	d
ASL_ST_STRING_VAR	./igen.h	1261;"	d
ASL_SV_DPI_STRING	./igen.h	1269;"	d
ASL_SV_DPI_STRING_STORE	./igen.h	1270;"	d
ASL_TAN	./igen.h	1240;"	d
ASL_TANH	./igen.h	1248;"	d
ASL_THREAD_AUTO_CLEANUP	./igen.h	1228;"	d
ASL_TIMING_CHECK_RECORD	./igen.h	1190;"	d
ASL_TRACE_XPROP_WRITE	./igen.h	1307;"	d
ASL_TRACE_XPROP_WRITE_WIDE	./igen.h	1308;"	d
ASL_TRAN_ADDR	./igen.h	1170;"	d
ASL_TRIGGER_ECTRL	./igen.h	998;"	d
ASL_TRIGGER_ECTRL_XPROP	./igen.h	1312;"	d
ASL_TRPATH_SCALAR_STORE	./igen.h	1175;"	d
ASL_TRPATH_STORE	./igen.h	1176;"	d
ASL_TSKDONE_CLEANUP_RET	./igen.h	1026;"	d
ASL_TSKDONE_CLEANUP_RET_AUTO	./igen.h	1227;"	d
ASL_UDP_WIDE_ADJSTATE	./igen.h	1179;"	d
ASL_UPDATE_TRAN_HARDDRVS	./igen.h	1156;"	d
ASL_UPREL_TARG_TO_REF	./igen.h	1122;"	d
ASL_VVAL_IS1	./igen.h	1077;"	d
ASL_WDEL_SCHD_1WIREBIT	./igen.h	1086;"	d
ASL_WDEL_TRIREG_SCHED_HIZ	./igen.h	1178;"	d
ASL_WIDCASX_EVAL	./igen.h	1010;"	d
ASL_WIDCASZ_EVAL	./igen.h	1011;"	d
ASL_WIDCAS_EVAL	./igen.h	1009;"	d
ASL_WIDE_ANY1	./igen.h	1035;"	d
ASL_WIDE_BITAND	./igen.h	1014;"	d
ASL_WIDE_BITOR	./igen.h	1020;"	d
ASL_WIDE_BITXOR	./igen.h	1012;"	d
ASL_WIDE_CMP	./igen.h	1027;"	d
ASL_WIDE_CMP_EQ	./igen.h	1199;"	d
ASL_WIDE_CMP_NEQ	./igen.h	1198;"	d
ASL_WIDE_JMPOR_0	./igen.h	1031;"	d
ASL_WIDE_JMP_EQ	./igen.h	1032;"	d
ASL_WIDE_LSHIFT	./igen.h	1022;"	d
ASL_WIDE_NOTL	./igen.h	1013;"	d
ASL_WIDE_POWER	./igen.h	1116;"	d
ASL_WIDE_QCOL_COMB_OPANDS	./igen.h	1036;"	d
ASL_WIDE_REDXOR	./igen.h	1015;"	d
ASL_WIDE_RSHIFT	./igen.h	1021;"	d
ASL_WIDE_SGNWORD_CMP	./igen.h	1030;"	d
ASL_WIDE_SGN_POWER	./igen.h	1117;"	d
ASL_WIDE_SGN_POWER_2STATE	./igen.h	1235;"	d
ASL_WIDE_VVAL_IS0	./igen.h	1076;"	d
ASL_WIDE_WORD_CMP	./igen.h	1029;"	d
ASL_WIDOMITXZ_NE	./igen.h	1023;"	d
ASL_WID_BIN_BITOR	./igen.h	1017;"	d
ASL_WID_BIN_BITOR_X	./igen.h	1296;"	d
ASL_WID_BIN_BITXNOR	./igen.h	1016;"	d
ASL_WID_BIN_BITXNOR_2STATE	./igen.h	1236;"	d
ASL_WID_UNBITNOT	./igen.h	1019;"	d
ASL_WID_UNBITNOT_2STATE	./igen.h	1237;"	d
ASL_WID_UN_REDOR	./igen.h	1018;"	d
ASL_WID_UN_REDOR_X	./igen.h	1297;"	d
ASL_WORDCMP	./igen.h	1103;"	d
ASL_WRD_REDXOR	./igen.h	1075;"	d
ASL_XPROP_ACCUM_TO_SELF	./igen.h	1315;"	d
ASL_XPROP_ACCUM_TO_SELF_WIDE	./igen.h	1316;"	d
ASL_XPROP_CHECK_CASE_NET_SET	./igen.h	1311;"	d
ASL_XPROP_SET_XEDGE_NET	./igen.h	1318;"	d
ASL_XPROP_XEDGE_NET	./igen.h	1317;"	d
ASM_WORD_STR	./igen.h	738;"	d
ASM_WORD_STR	./igen.h	892;"	d
ASSIGN	./v.h	737;"	d
AT	./v.h	570;"	d
AUTOMATIC	./v.h	738;"	d
AW_STR	./igen.h	736;"	d
AW_STR	./igen.h	891;"	d
AX	./igen.h	706;"	d
AX	./igen.h	833;"	d
A_DBLE	./igen.h	976;"	d
A_INT	./igen.h	972;"	d
A_NUM	./igen.h	977;"	d
A_RPTR	./igen.h	973;"	d
A_RWPTR	./igen.h	975;"	d
A_UNKN	./igen.h	971;"	d
A_WPTR	./igen.h	974;"	d
BADOBJ	./v.h	548;"	d
BASE	./v_ex2.c	9658;"	d	file:
BASE1	./v_ex2.c	9659;"	d	file:
BASE_VERIUSERTFS	./v.h	230;"	d
BBIN	./v.h	393;"	d
BCHAR	./v.h	399;"	d
BDBLE	./v.h	396;"	d
BDEC	./v.h	395;"	d
BDVAL	./v.h	237;"	d
BEVEN	./v.h	997;"	d
BE_FALSE	./igen.h	196;"	d
BE_TRUE	./igen.h	195;"	d
BE_UNCOND	./igen.h	197;"	d
BE_UNKN	./igen.h	194;"	d
BHEX	./v.h	392;"	d
BIG_ALLOC_SIZE	./v.h	245;"	d
BINOP	./v.h	1084;"	d
BIT	./v.h	740;"	d
BITNOT	./v.h	577;"	d
BITREDAND	./v.h	586;"	d
BITREDOR	./v.h	587;"	d
BITREDXOR	./v.h	588;"	d
BKEYS	./v.h	884;"	d
BL	./igen.h	698;"	d
BL	./igen.h	816;"	d
BLACK	./v.h	5197;"	d
BLEFT	./v.h	996;"	d
BNONE	./v.h	397;"	d
BOCT	./v.h	394;"	d
BOOLAND	./v.h	606;"	d
BOOLOR	./v.h	607;"	d
BOTHOP	./v.h	1085;"	d
BP_INST	./v.h	1044;"	d
BP_TYPE	./v.h	1045;"	d
BP_UNKN	./v.h	1043;"	d
BREAK	./v.h	741;"	d
BRIGHT	./v.h	998;"	d
BSTR	./v.h	400;"	d
BTREEMAXWID	./v.h	243;"	d
BUFSIZE	./hexasm.c	175;"	d	file:
BX	./igen.h	707;"	d
BX	./igen.h	834;"	d
BYTE	./lz4.c	/^  typedef  uint8_t BYTE;$/;"	t	file:
BYTE	./lz4.c	/^  typedef unsigned char       BYTE;$/;"	t	file:
BYTE	./v.h	742;"	d
BYTEBITS	./v.h	341;"	d
Begin	./v.h	739;"	d
CAP_LARGE	./v.h	462;"	d
CAP_MED	./v.h	461;"	d
CAP_NONE	./v.h	459;"	d
CAP_SMALL	./v.h	460;"	d
CAP_STREN	./v.h	445;"	d
CASE	./v.h	743;"	d
CASEX	./v.h	744;"	d
CASEZ	./v.h	745;"	d
CATCOM	./v.h	637;"	d
CATREP	./v.h	638;"	d
CAUSE	./v.h	573;"	d
CB_ACTION	./v.h	1305;"	d
CB_DELAY	./v.h	1304;"	d
CB_NONE	./v.h	1302;"	d
CB_VALCHG	./v.h	1303;"	d
CC_JA	./igen.h	939;"	d
CC_JAE	./igen.h	941;"	d
CC_JB	./igen.h	940;"	d
CC_JBE	./igen.h	942;"	d
CC_JE	./igen.h	928;"	d
CC_JGE	./igen.h	932;"	d
CC_JGT	./igen.h	933;"	d
CC_JLE	./igen.h	934;"	d
CC_JLT	./igen.h	935;"	d
CC_JNE	./igen.h	929;"	d
CC_JNS	./igen.h	936;"	d
CC_JNZ	./igen.h	931;"	d
CC_JP	./igen.h	937;"	d
CC_JRZ	./igen.h	938;"	d
CC_JZ	./igen.h	930;"	d
CC_NONE	./igen.h	927;"	d
CC_UNKN	./igen.h	926;"	d
CDIR_ACCEL	./v.h	693;"	d
CDIR_AEXPVECNETS	./v.h	694;"	d
CDIR_CELLDEF	./v.h	695;"	d
CDIR_DEFINE	./v.h	696;"	d
CDIR_DELMODEDIST	./v.h	723;"	d
CDIR_DELMODEPATH	./v.h	724;"	d
CDIR_DELMODEUNIT	./v.h	725;"	d
CDIR_DELMODEZERO	./v.h	727;"	d
CDIR_DFLNTYP	./v.h	697;"	d
CDIR_DFLTDECAYTIME	./v.h	721;"	d
CDIR_DFLTTRIREGSTREN	./v.h	722;"	d
CDIR_ECELLDEF	./v.h	698;"	d
CDIR_ELSE	./v.h	699;"	d
CDIR_ELSIF	./v.h	700;"	d
CDIR_ENDIF	./v.h	701;"	d
CDIR_ENDPROTECT	./v.h	702;"	d
CDIR_ENDPROTECTED	./v.h	703;"	d
CDIR_IFDEF	./v.h	705;"	d
CDIR_IFNDEF	./v.h	706;"	d
CDIR_INCLUDE	./v.h	707;"	d
CDIR_LANG	./v.h	726;"	d
CDIR_NOACCEL	./v.h	708;"	d
CDIR_NOREMGATENAMES	./v.h	710;"	d
CDIR_NOREMNETNAMES	./v.h	711;"	d
CDIR_NOUNCONNDRIVE	./v.h	712;"	d
CDIR_NOXPNDVNETS	./v.h	709;"	d
CDIR_PROTECT	./v.h	713;"	d
CDIR_PROTECTED	./v.h	714;"	d
CDIR_REMGATESNAMES	./v.h	715;"	d
CDIR_REMNETNAMES	./v.h	716;"	d
CDIR_RESETALL	./v.h	717;"	d
CDIR_TIMESCALE	./v.h	718;"	d
CDIR_TOKEN_END	./v.h	730;"	d
CDIR_TOKEN_START	./v.h	729;"	d
CDIR_UNCONNDRIVE	./v.h	719;"	d
CDIR_UNDEF	./v.h	720;"	d
CDIR_XPNDVNETS	./v.h	704;"	d
CFG_CELL	./v.h	1346;"	d
CFG_CFG	./v.h	1341;"	d
CFG_COMMA	./v.h	1337;"	d
CFG_DEFAULT	./v.h	1349;"	d
CFG_DESIGN	./v.h	1343;"	d
CFG_ENDCFG	./v.h	1348;"	d
CFG_EOF	./v.h	1339;"	d
CFG_ID	./v.h	1336;"	d
CFG_INCLUDE	./v.h	1342;"	d
CFG_INSTANCE	./v.h	1345;"	d
CFG_LIBLIST	./v.h	1344;"	d
CFG_LIBRARY	./v.h	1340;"	d
CFG_SEMI	./v.h	1338;"	d
CFG_UNKNOWN	./v.h	1335;"	d
CFG_USE	./v.h	1347;"	d
CHANDLE	./v.h	746;"	d
CINTBITS	./v.h	342;"	d
CL	./igen.h	699;"	d
CL	./igen.h	817;"	d
CMPA_STR	./igen.h	737;"	d
CMPA_STR	./igen.h	889;"	d
COLON	./v.h	561;"	d
COMLAB_CA	./igen.h	258;"	d
COMLAB_CINT	./igen.h	263;"	d
COMLAB_CONADR	./igen.h	268;"	d
COMLAB_CONTA_DRVBP	./igen.h	241;"	d
COMLAB_CONTA_ENTER	./igen.h	277;"	d
COMLAB_DCEADR	./igen.h	260;"	d
COMLAB_DCEEXPR_BP	./igen.h	247;"	d
COMLAB_DCEPREV	./igen.h	240;"	d
COMLAB_DCESCH_TEVS	./igen.h	248;"	d
COMLAB_DEL	./igen.h	292;"	d
COMLAB_DELREP_BP	./igen.h	249;"	d
COMLAB_E_UDPADR	./igen.h	290;"	d
COMLAB_GATE	./igen.h	256;"	d
COMLAB_GATEBP	./igen.h	238;"	d
COMLAB_GATE_ACC_CHANGE_ENTER	./igen.h	281;"	d
COMLAB_GATE_CHANGE_ENTER	./igen.h	280;"	d
COMLAB_GATE_ENTER	./igen.h	278;"	d
COMLAB_GATE_OUTBP	./igen.h	274;"	d
COMLAB_GREF	./igen.h	255;"	d
COMLAB_IDP	./igen.h	275;"	d
COMLAB_IDPDAT	./igen.h	286;"	d
COMLAB_L_UDPADR	./igen.h	289;"	d
COMLAB_MIPD_ENTER	./igen.h	283;"	d
COMLAB_NB_BP	./igen.h	245;"	d
COMLAB_NCHGACTION	./igen.h	276;"	d
COMLAB_NETADR	./igen.h	257;"	d
COMLAB_NETBP	./igen.h	239;"	d
COMLAB_NONE	./igen.h	234;"	d
COMLAB_NPPADR	./igen.h	259;"	d
COMLAB_PD_RHSBP	./igen.h	272;"	d
COMLAB_PNCHG	./igen.h	282;"	d
COMLAB_PROCESS_WIRE_ENTER	./igen.h	284;"	d
COMLAB_PROC_ENTER	./igen.h	271;"	d
COMLAB_PROC_NB_ENTER	./igen.h	287;"	d
COMLAB_REP_BP	./igen.h	246;"	d
COMLAB_STMT	./igen.h	253;"	d
COMLAB_TASK_ADR	./igen.h	288;"	d
COMLAB_TCHK	./igen.h	291;"	d
COMLAB_TEVP	./igen.h	285;"	d
COMLAB_XPR	./igen.h	254;"	d
COMMA	./v.h	560;"	d
CONTEXT	./v.h	747;"	d
CONTINUE	./v.h	748;"	d
COPYLENGTH	./lz4.c	233;"	d	file:
CO_A	./cvc.c	3479;"	d	file:
CO_ACC	./cvc.c	3586;"	d	file:
CO_ACC_NO_NUM	./cvc.c	3587;"	d	file:
CO_AOFF	./cvc.c	3480;"	d	file:
CO_ASM_EMIT_LOC	./cvc.c	3624;"	d	file:
CO_ASM_VAR_NAMES	./cvc.c	3626;"	d	file:
CO_C	./cvc.c	3476;"	d	file:
CO_CHG_PORTDIR	./cvc.c	3537;"	d	file:
CO_COMPILE	./cvc.c	3585;"	d	file:
CO_COMPILED_OPT_SIM	./cvc.c	3588;"	d	file:
CO_COMPILED_OPT_SIM_GATE	./cvc.c	3589;"	d	file:
CO_CVC_STATS	./cvc.c	3621;"	d	file:
CO_D	./cvc.c	3478;"	d	file:
CO_DEBUG	./cvc.c	3493;"	d	file:
CO_DEFINE	./cvc.c	3507;"	d	file:
CO_DMP_ARRAYS	./cvc.c	3552;"	d	file:
CO_DMP_ARRAY_CELLS	./cvc.c	3553;"	d	file:
CO_DMP_FLOWG	./cvc.c	3622;"	d	file:
CO_DMP_VARS	./cvc.c	3612;"	d	file:
CO_DPIVERB	./cvc.c	3547;"	d	file:
CO_DPI_SVLIB	./cvc.c	3545;"	d	file:
CO_DPI_WR_HDRS	./cvc.c	3556;"	d	file:
CO_DRVN_CONST_AS_TGL	./cvc.c	3564;"	d	file:
CO_DRVN_CONST_RPT_CONCISE	./cvc.c	3565;"	d	file:
CO_D_ESC	./cvc.c	3551;"	d	file:
CO_D_ULINE	./cvc.c	3550;"	d	file:
CO_E	./cvc.c	3483;"	d	file:
CO_EVENT_COVERAGE	./cvc.c	3572;"	d	file:
CO_EVENT_COVERAGE_FILE	./cvc.c	3573;"	d	file:
CO_EXECUTE	./cvc.c	3590;"	d	file:
CO_F	./cvc.c	3469;"	d	file:
CO_FRSPICE	./cvc.c	3535;"	d	file:
CO_FST_DUMP2FST	./cvc.c	3613;"	d	file:
CO_FST_PARALLEL	./cvc.c	3616;"	d	file:
CO_FST_PARALLEL2	./cvc.c	3617;"	d	file:
CO_FST_VARS	./cvc.c	3614;"	d	file:
CO_FST_VARS_REPACK	./cvc.c	3615;"	d	file:
CO_GATE_EATER	./cvc.c	3509;"	d	file:
CO_HELP	./cvc.c	3468;"	d	file:
CO_IAINPUT	./cvc.c	3472;"	d	file:
CO_IGNORE_SDF_IOPATH_EDGES	./cvc.c	3521;"	d	file:
CO_INCDIR	./cvc.c	3508;"	d	file:
CO_INFORM	./cvc.c	3485;"	d	file:
CO_INTERPRETER	./cvc.c	3584;"	d	file:
CO_KEY	./cvc.c	3471;"	d	file:
CO_LARGE_MODEL	./cvc.c	3610;"	d	file:
CO_LBEXT	./cvc.c	3505;"	d	file:
CO_LBVERB	./cvc.c	3489;"	d	file:
CO_LIBLIST	./cvc.c	3548;"	d	file:
CO_LIBMAP	./cvc.c	3549;"	d	file:
CO_LIBNOCELL	./cvc.c	3520;"	d	file:
CO_LIBNOHIDE	./cvc.c	3492;"	d	file:
CO_LIBORD	./cvc.c	3490;"	d	file:
CO_LIBRESCAN	./cvc.c	3491;"	d	file:
CO_LOADPLI1	./cvc.c	3543;"	d	file:
CO_LOADVPI	./cvc.c	3544;"	d	file:
CO_LOG	./cvc.c	3470;"	d	file:
CO_MAXDEL	./cvc.c	3496;"	d	file:
CO_MAXERRS	./cvc.c	3475;"	d	file:
CO_MINDEL	./cvc.c	3494;"	d	file:
CO_MIPD_CYCLE_PND0_SCHD	./cvc.c	3529;"	d	file:
CO_NBAOPT	./cvc.c	3606;"	d	file:
CO_NB_NOSEP_QUEUE	./cvc.c	3539;"	d	file:
CO_NCHG_TRACE	./cvc.c	3634;"	d	file:
CO_NOIACT	./cvc.c	3517;"	d	file:
CO_NOKEEPCOMMANDS	./cvc.c	3532;"	d	file:
CO_NORMPTHPND0S	./cvc.c	3531;"	d	file:
CO_NOSHOWCANCELE	./cvc.c	3524;"	d	file:
CO_NOSPFY	./cvc.c	3518;"	d	file:
CO_NOTCHKS	./cvc.c	3519;"	d	file:
CO_NOWARNCANCELE	./cvc.c	3528;"	d	file:
CO_NO_GATE_EATER	./cvc.c	3510;"	d	file:
CO_OLD_VPI_AFTER_ITER_FREE	./cvc.c	3608;"	d	file:
CO_OPTCFGFIL	./cvc.c	3557;"	d	file:
CO_OPT_BLOCK_TRACE	./cvc.c	3625;"	d	file:
CO_OPT_DEBUG	./cvc.c	3620;"	d	file:
CO_OPT_LEVEL_2	./cvc.c	3619;"	d	file:
CO_OPT_VALTRK	./cvc.c	3627;"	d	file:
CO_OVERRIDE_CHANGE	./cvc.c	3577;"	d	file:
CO_PARSEONLY	./cvc.c	3477;"	d	file:
CO_PIPE	./cvc.c	3593;"	d	file:
CO_PLIKEEPSRC	./cvc.c	3533;"	d	file:
CO_PRTALLSTATS	./cvc.c	3512;"	d	file:
CO_PRTSTATS	./cvc.c	3511;"	d	file:
CO_PULSEX_ONDETECT	./cvc.c	3526;"	d	file:
CO_PULSEX_ONEVENTE	./cvc.c	3525;"	d	file:
CO_PWD_TMP	./cvc.c	3630;"	d	file:
CO_QUIET	./cvc.c	3474;"	d	file:
CO_RANDOM	./cvc.c	3579;"	d	file:
CO_RANDOM_2STATE	./cvc.c	3581;"	d	file:
CO_RANDOM_2STATE_SEED	./cvc.c	3582;"	d	file:
CO_RANDOM_SEED	./cvc.c	3580;"	d	file:
CO_REAL_WARNS	./cvc.c	3631;"	d	file:
CO_RMGATEPND0S	./cvc.c	3530;"	d	file:
CO_SAME_PARAM_MUST_SPLIT	./cvc.c	3578;"	d	file:
CO_SCHD_ALW_FIRST	./cvc.c	3538;"	d	file:
CO_SDFANNOTATE	./cvc.c	3514;"	d	file:
CO_SDFVERB	./cvc.c	3515;"	d	file:
CO_SDF_DURING_SIM	./cvc.c	3516;"	d	file:
CO_SDF_LOG	./cvc.c	3540;"	d	file:
CO_SDF_NO_ERRS	./cvc.c	3541;"	d	file:
CO_SDF_NO_WARNS	./cvc.c	3542;"	d	file:
CO_SETEVTRACE	./cvc.c	3500;"	d	file:
CO_SETPTHTRACE	./cvc.c	3501;"	d	file:
CO_SETTRACE	./cvc.c	3499;"	d	file:
CO_SET_TGLED_FROM_FILE	./cvc.c	3569;"	d	file:
CO_SHOWCANCELE	./cvc.c	3523;"	d	file:
CO_SHOW_ASM	./cvc.c	3623;"	d	file:
CO_SNAPSHOT	./cvc.c	3534;"	d	file:
CO_SPIKEANAL	./cvc.c	3513;"	d	file:
CO_STMT_COVERAGE	./cvc.c	3574;"	d	file:
CO_STMT_COVERAGE_FILE	./cvc.c	3576;"	d	file:
CO_STMT_TASKS_COVERAGE	./cvc.c	3575;"	d	file:
CO_STOP	./cvc.c	3482;"	d	file:
CO_SUPPWARNS	./cvc.c	3506;"	d	file:
CO_SV_PARSE	./cvc.c	3554;"	d	file:
CO_SV_PARSE2	./cvc.c	3555;"	d	file:
CO_SWITCHVERB	./cvc.c	3536;"	d	file:
CO_TGLVERBOSE	./cvc.c	3570;"	d	file:
CO_TOGGLE	./cvc.c	3558;"	d	file:
CO_TOGGLE_COVERED	./cvc.c	3563;"	d	file:
CO_TOGGLE_FILE	./cvc.c	3559;"	d	file:
CO_TOGGLE_REPORT_BITS	./cvc.c	3561;"	d	file:
CO_TOGGLE_REPORT_INSTANCE	./cvc.c	3560;"	d	file:
CO_TOGGLE_UNCOVERED	./cvc.c	3562;"	d	file:
CO_TRACEFILE	./cvc.c	3502;"	d	file:
CO_TRK_VERBOSE	./cvc.c	3628;"	d	file:
CO_TWO_STATE	./cvc.c	3591;"	d	file:
CO_TWO_STATE_NO_WIRE	./cvc.c	3592;"	d	file:
CO_TYPDEL	./cvc.c	3495;"	d	file:
CO_UC	./cvc.c	3486;"	d	file:
CO_UNROLL_LOOPS	./cvc.c	3607;"	d	file:
CO_UNTGL_RPT_CONCISE	./cvc.c	3566;"	d	file:
CO_USEDIR	./cvc.c	3635;"	d	file:
CO_USE_INTERP_DPI_MK	./cvc.c	3629;"	d	file:
CO_V	./cvc.c	3487;"	d	file:
CO_VERB	./cvc.c	3473;"	d	file:
CO_VERB_MEM	./cvc.c	3632;"	d	file:
CO_W	./cvc.c	3484;"	d	file:
CO_WARNCANCELE	./cvc.c	3527;"	d	file:
CO_WRITE_TGLDAT	./cvc.c	3567;"	d	file:
CO_WRITE_TGLDAT_FILE	./cvc.c	3568;"	d	file:
CO_X	./cvc.c	3481;"	d	file:
CO_XPROP	./cvc.c	3595;"	d	file:
CO_XPROP2	./cvc.c	3596;"	d	file:
CO_XPROP_AND_OR	./cvc.c	3600;"	d	file:
CO_XPROP_EXCLUDED	./cvc.c	3601;"	d	file:
CO_XPROP_NO_EDGES	./cvc.c	3602;"	d	file:
CO_XPROP_NO_VECTORED_EDGES	./cvc.c	3603;"	d	file:
CO_XPROP_ONLY_EDGES	./cvc.c	3604;"	d	file:
CO_XPROP_TRACE	./cvc.c	3597;"	d	file:
CO_XPROP_TRACE_MAX	./cvc.c	3599;"	d	file:
CO_XPROP_TRACE_SUPPRESS	./cvc.c	3598;"	d	file:
CO_Y	./cvc.c	3488;"	d	file:
CV_NVOTYPS	./v_vpi3.c	7360;"	d	file:
CX	./igen.h	708;"	d
CX	./igen.h	835;"	d
DBAD_0	./v.h	1171;"	d
DBAD_EXPR	./v.h	1170;"	d
DBAD_MAYBE0	./v.h	1172;"	d
DBAD_NONE	./v.h	1169;"	d
DB_BPDIS_DISABLE	./v_dbg.c	1959;"	d	file:
DB_BPDIS_ENABLE	./v_dbg.c	1958;"	d	file:
DB_BRKPT	./v_dbg.c	1955;"	d	file:
DB_COND	./v_dbg.c	1969;"	d	file:
DB_DELBRKDIS	./v_dbg.c	1957;"	d	file:
DB_DISPLAY	./v_dbg.c	1964;"	d	file:
DB_EMPTHIST	./v_dbg.c	1963;"	d	file:
DB_EXPRIS	./v_dbg.c	1948;"	d	file:
DB_HELP	./v_dbg.c	1942;"	d	file:
DB_HIST	./v_dbg.c	1962;"	d	file:
DB_IBRKPT	./v_dbg.c	1956;"	d	file:
DB_IGNORE	./v_dbg.c	1968;"	d	file:
DB_INFO	./v_dbg.c	1953;"	d	file:
DB_ISTEP	./v_dbg.c	1961;"	d	file:
DB_LIST	./v_dbg.c	1951;"	d	file:
DB_NEXTB	./v_dbg.c	1971;"	d	file:
DB_PRINT	./v_dbg.c	1946;"	d	file:
DB_QUIT	./v_dbg.c	1944;"	d	file:
DB_RESET	./v_dbg.c	1947;"	d	file:
DB_SCOPE	./v_dbg.c	1954;"	d	file:
DB_SET	./v_dbg.c	1952;"	d	file:
DB_SH	./v_dbg.c	1943;"	d	file:
DB_SNAPSHOT	./v_dbg.c	1970;"	d	file:
DB_STEP	./v_dbg.c	1960;"	d	file:
DB_TBRKPT	./v_dbg.c	1966;"	d	file:
DB_TIBRKPT	./v_dbg.c	1967;"	d	file:
DB_UNDISPLAY	./v_dbg.c	1965;"	d	file:
DB_VARIS	./v_dbg.c	1949;"	d	file:
DB_WHATIS	./v_dbg.c	1950;"	d	file:
DB_WHERE	./v_dbg.c	1945;"	d	file:
DCE_CBF	./v.h	1253;"	d
DCE_CBR	./v.h	1255;"	d
DCE_CBVC	./v.h	1260;"	d
DCE_INST	./v.h	1247;"	d
DCE_MONIT	./v.h	1249;"	d
DCE_NONE	./v.h	1250;"	d
DCE_PVC	./v.h	1258;"	d
DCE_QCAF	./v.h	1251;"	d
DCE_RNG_CBF	./v.h	1254;"	d
DCE_RNG_CBR	./v.h	1256;"	d
DCE_RNG_CBVC	./v.h	1261;"	d
DCE_RNG_INST	./v.h	1246;"	d
DCE_RNG_MONIT	./v.h	1248;"	d
DCE_RNG_PVC	./v.h	1259;"	d
DCE_RNG_QCAF	./v.h	1252;"	d
DC_DELAY	./v.h	1072;"	d
DC_EVENT	./v.h	1071;"	d
DC_NONE	./v.h	1070;"	d
DC_RHSDELAY	./v.h	1074;"	d
DC_RHSEVENT	./v.h	1073;"	d
DC_WAITEVENT	./v.h	1075;"	d
DEASSIGN	./v.h	749;"	d
DEC	./v.h	656;"	d
DEFAULT	./v.h	750;"	d
DEFAULT_EVENT_FILE_NAME	./v.h	1211;"	d
DEFAULT_STMT_FILE_NAME	./v.h	1212;"	d
DEFAULT_TGLDAT_OUT_FILE_NAME	./v.h	1210;"	d
DEFAULT_TOGGLE_FILE_NAME	./v.h	1209;"	d
DEFPARAM	./v.h	751;"	d
DEF_EXE_NAME	./igen.h	958;"	d
DEF_OBJ_DIR	./igen.h	957;"	d
DEL_MAX	./v.h	948;"	d
DEL_MIN	./v.h	946;"	d
DEL_TYP	./v.h	947;"	d
DFLFSTFNAM	./v.h	1201;"	d
DFLTDPFNAM	./v.h	1200;"	d
DFLTDVFNAM	./v.h	1199;"	d
DFLTIOWORDS	./v.h	202;"	d
DFLTKEYFNAM	./v.h	1202;"	d
DFLT_LOGFNAM	./v.h	1198;"	d
DFLT_NOT_ELIGIBLE_XPROPFNAM	./v.h	1205;"	d
DFLT_SEP_CHAR	./v.h	682;"	d
DFLT_SNAP_EVS	./v.h	235;"	d
DFLT_XPROPFNAM	./v.h	1204;"	d
DGOOD	./v.h	1168;"	d
DI	./igen.h	702;"	d
DI	./igen.h	820;"	d
DISABLE	./v.h	752;"	d
DIV	./v.h	596;"	d
DIV_EQ	./v.h	660;"	d
DL	./igen.h	700;"	d
DL	./igen.h	818;"	d
DMPP_CHGONLY	./v.h	1232;"	d
DMPP_DMPALL	./v.h	1233;"	d
DMPP_DUMPX	./v.h	1234;"	d
DMPV_CHGONLY	./v.h	1221;"	d
DMPV_DMPALL	./v.h	1222;"	d
DMPV_DUMPX	./v.h	1223;"	d
DO	./v.h	753;"	d
DOT	./v.h	569;"	d
DPI_CVC_PTRS	./v.h	1414;"	d
DPI_DFLT_STRING_BYTES	./v_dpi.c	1480;"	d	file:
DPI_EXPORT	./v.h	1413;"	d
DPI_EXP_INTERP_WRAP_ROUT	./v_dpi.c	1477;"	d	file:
DPI_HDR_FIL	./v_dpi.c	1478;"	d	file:
DPI_IMPORT	./v.h	1412;"	d
DPI_IMPRT_CONTEXT	./v.h	1421;"	d
DPI_IMPRT_PURE	./v.h	1422;"	d
DPI_IMPRT_UNKN	./v.h	1420;"	d
DPI_IMP_INTERP_ROUT	./v_dpi.c	1476;"	d	file:
DPI_LANG_C	./v.h	1417;"	d
DPI_TF_FUNC	./v.h	1427;"	d
DPI_TF_TASK	./v.h	1426;"	d
DPI_TF_UNKN	./v.h	1425;"	d
DPI_UNKN	./v.h	1411;"	d
DPST_DUMPING	./v.h	1227;"	d
DPST_NOTDUMPING	./v.h	1228;"	d
DPST_NOTSETUP	./v.h	1226;"	d
DPST_OVERLIMIT	./v.h	1229;"	d
DP_DRV_UNKN	./v.h	1237;"	d
DP_INOUT_1DRVR	./v.h	1242;"	d
DP_INOUT_DRVRS	./v.h	1243;"	d
DP_IN_1DRVR	./v.h	1238;"	d
DP_IN_DRVRS	./v.h	1239;"	d
DP_OUT_1DRVR	./v.h	1240;"	d
DP_OUT_DRVRS	./v.h	1241;"	d
DRVR_ICONN	./v.h	512;"	d
DRVR_MDPRT	./v.h	513;"	d
DRVR_NONE	./v.h	510;"	d
DRVR_NON_PORT	./v.h	511;"	d
DT_16V	./v.h	1158;"	d
DT_1V	./v.h	1150;"	d
DT_1X	./v.h	1162;"	d
DT_4V	./v.h	1154;"	d
DT_4X	./v.h	1163;"	d
DT_CMPLST	./v.h	1165;"	d
DT_IS16V	./v.h	1159;"	d
DT_IS16V1	./v.h	1160;"	d
DT_IS16V2	./v.h	1161;"	d
DT_IS1V	./v.h	1151;"	d
DT_IS1V1	./v.h	1152;"	d
DT_IS1V2	./v.h	1153;"	d
DT_IS4V	./v.h	1155;"	d
DT_IS4V1	./v.h	1156;"	d
DT_IS4V2	./v.h	1157;"	d
DT_NONE	./v.h	1149;"	d
DT_PTHDST	./v.h	1164;"	d
DVBUFSIZ	./v.h	249;"	d
DVST_DUMPING	./v.h	1216;"	d
DVST_NOTDUMPING	./v.h	1217;"	d
DVST_NOTSETUP	./v.h	1215;"	d
DVST_OVERLIMIT	./v.h	1218;"	d
DX	./igen.h	709;"	d
DX	./igen.h	836;"	d
EAX	./igen.h	686;"	d
EAX	./igen.h	790;"	d
EBP	./igen.h	692;"	d
EBP_B	./igen.h	703;"	d
EBP_B	./igen.h	830;"	d
EBX	./igen.h	687;"	d
EBX	./igen.h	791;"	d
ECX	./igen.h	688;"	d
ECX	./igen.h	792;"	d
EDGE	./v.h	754;"	d
EDGE01	./v.h	1131;"	d
EDGE0X	./v.h	1133;"	d
EDGE10	./v.h	1132;"	d
EDGE1X	./v.h	1135;"	d
EDGEX0	./v.h	1136;"	d
EDGEX1	./v.h	1134;"	d
EDI	./igen.h	691;"	d
EDI	./igen.h	795;"	d
EDX	./igen.h	689;"	d
EDX	./igen.h	793;"	d
ELSE	./v.h	755;"	d
END	./v.h	756;"	d
ENDCASE	./v.h	757;"	d
ENDFUNCTION	./v.h	758;"	d
ENDGENERATE	./v.h	759;"	d
ENDMODULE	./v.h	760;"	d
ENDPRIMITIVE	./v.h	761;"	d
ENDSPECIFY	./v.h	762;"	d
ENDTABLE	./v.h	763;"	d
ENDTASK	./v.h	764;"	d
EPSILON	./v.h	368;"	d
EPSILON	./v.h	387;"	d
EQ	./v.h	574;"	d
ERROR	./v.h	1316;"	d
ESI	./igen.h	690;"	d
ESI	./igen.h	794;"	d
ESP	./igen.h	693;"	d
ESP_b	./igen.h	704;"	d
ESP_b	./igen.h	831;"	d
EVENT	./v.h	766;"	d
EXPORT	./v.h	765;"	d
E_NEGEDGE	./v.h	1139;"	d
E_POSEDGE	./v.h	1138;"	d
FALSE	./v.h	347;"	d
FASTLZ_COMPRESSOR	./fastlz.c	/^static FASTLZ_INLINE int FASTLZ_COMPRESSOR(const void* input, int length, void* output)$/;"	f	file:	signature:(const void* input, int length, void* output)
FASTLZ_COMPRESSOR	./fastlz.c	103;"	d	file:
FASTLZ_COMPRESSOR	./fastlz.c	105;"	d	file:
FASTLZ_COMPRESSOR	./fastlz.c	118;"	d	file:
FASTLZ_COMPRESSOR	./fastlz.c	120;"	d	file:
FASTLZ_DECOMPRESSOR	./fastlz.c	/^static FASTLZ_INLINE int FASTLZ_DECOMPRESSOR(const void* input, int length, void* output, int maxout)$/;"	f	file:	signature:(const void* input, int length, void* output, int maxout)
FASTLZ_DECOMPRESSOR	./fastlz.c	104;"	d	file:
FASTLZ_DECOMPRESSOR	./fastlz.c	106;"	d	file:
FASTLZ_DECOMPRESSOR	./fastlz.c	119;"	d	file:
FASTLZ_DECOMPRESSOR	./fastlz.c	121;"	d	file:
FASTLZ_EXPECT_CONDITIONAL	./fastlz.c	42;"	d	file:
FASTLZ_EXPECT_CONDITIONAL	./fastlz.c	45;"	d	file:
FASTLZ_H	./fastlz.h	28;"	d
FASTLZ_INLINE	./fastlz.c	53;"	d	file:
FASTLZ_INLINE	./fastlz.c	55;"	d	file:
FASTLZ_INLINE	./fastlz.c	57;"	d	file:
FASTLZ_LEVEL	./fastlz.c	100;"	d	file:
FASTLZ_LEVEL	./fastlz.c	101;"	d	file:
FASTLZ_LEVEL	./fastlz.c	111;"	d	file:
FASTLZ_LEVEL	./fastlz.c	112;"	d	file:
FASTLZ_READU16	./fastlz.c	90;"	d	file:
FASTLZ_READU16	./fastlz.c	92;"	d	file:
FASTLZ_SAFE	./fastlz.c	35;"	d	file:
FASTLZ_STRICT_ALIGN	./fastlz.c	64;"	d	file:
FASTLZ_STRICT_ALIGN	./fastlz.c	66;"	d	file:
FASTLZ_STRICT_ALIGN	./fastlz.c	68;"	d	file:
FASTLZ_STRICT_ALIGN	./fastlz.c	70;"	d	file:
FASTLZ_STRICT_ALIGN	./fastlz.c	72;"	d	file:
FASTLZ_STRICT_ALIGN	./fastlz.c	74;"	d	file:
FASTLZ_STRICT_ALIGN	./fastlz.c	76;"	d	file:
FASTLZ_UNEXPECT_CONDITIONAL	./fastlz.c	43;"	d	file:
FASTLZ_UNEXPECT_CONDITIONAL	./fastlz.c	46;"	d	file:
FASTLZ_VERSION	./fastlz.h	37;"	d
FASTLZ_VERSION_MAJOR	./fastlz.h	39;"	d
FASTLZ_VERSION_MINOR	./fastlz.h	40;"	d
FASTLZ_VERSION_REVISION	./fastlz.h	41;"	d
FASTLZ_VERSION_STRING	./fastlz.h	43;"	d
FATAL	./v.h	1317;"	d
FCALL	./v.h	639;"	d
FCCOM	./v.h	640;"	d
FG_CAP	./igen.h	208;"	d
FG_GATECA	./igen.h	207;"	d
FG_ICONN	./igen.h	206;"	d
FG_NCHG	./igen.h	209;"	d
FG_NONE	./igen.h	205;"	d
FIO_FD	./v.h	1329;"	d
FIO_MSB	./v.h	1328;"	d
FIO_STREAM_ST	./v.h	1330;"	d
FIRSTKEY	./v.h	883;"	d
FIXCON_1BITX	./v_src2.c	3723;"	d	file:
FIXCON_1BITZ	./v_src2.c	3722;"	d	file:
FIXCON_32BITX	./v_src2.c	3725;"	d	file:
FIXCON_32BITZ	./v_src2.c	3724;"	d	file:
FLOWG_CONTA	./igen.h	180;"	d
FLOWG_DCE	./igen.h	177;"	d
FLOWG_FUNC	./igen.h	176;"	d
FLOWG_GATECA	./igen.h	182;"	d
FLOWG_GATEDA	./igen.h	183;"	d
FLOWG_ICONN	./igen.h	181;"	d
FLOWG_MDC	./igen.h	189;"	d
FLOWG_MIPD	./igen.h	186;"	d
FLOWG_MULTFI	./igen.h	179;"	d
FLOWG_NCHG	./igen.h	184;"	d
FLOWG_NPP	./igen.h	178;"	d
FLOWG_PROC	./igen.h	174;"	d
FLOWG_PROCESS_NCHG	./igen.h	185;"	d
FLOWG_SIZE	./igen.h	191;"	d
FLOWG_TASK	./igen.h	175;"	d
FLOWG_TRPTH	./igen.h	188;"	d
FLOWG_UNKN	./igen.h	173;"	d
FLOWG_WIRE_EV	./igen.h	187;"	d
FOR	./v.h	767;"	d
FORCE	./v.h	768;"	d
FORCE_INLINE	./lz4.c	121;"	d	file:
FORCE_INLINE	./lz4.c	133;"	d	file:
FORCE_INLINE	./lz4.c	135;"	d	file:
FOREACH	./v.h	769;"	d
FOREVER	./v.h	770;"	d
FORK	./v.h	771;"	d
FPTHCON	./v.h	612;"	d
FREEMEM	./lz4.c	162;"	d	file:
FST_ACTIVATE_HUGE_BREAK	./fstapi.c	110;"	d	file:
FST_ACTIVATE_HUGE_INC	./fstapi.c	111;"	d	file:
FST_API_H	./fstapi.h	24;"	d
FST_AR_MAX	./fstapi.h	/^    FST_AR_MAX         = 3$/;"	e	enum:fstArrayType
FST_AR_MIN	./fstapi.h	/^    FST_AR_MIN         = 0,$/;"	e	enum:fstArrayType
FST_AR_NONE	./fstapi.h	/^    FST_AR_NONE        = 0,$/;"	e	enum:fstArrayType
FST_AR_PACKED	./fstapi.h	/^    FST_AR_PACKED      = 2,$/;"	e	enum:fstArrayType
FST_AR_SPARSE	./fstapi.h	/^    FST_AR_SPARSE      = 3,$/;"	e	enum:fstArrayType
FST_AR_UNPACKED	./fstapi.h	/^    FST_AR_UNPACKED    = 1,$/;"	e	enum:fstArrayType
FST_AT_ARRAY	./fstapi.h	/^    FST_AT_ARRAY       = 1,$/;"	e	enum:fstAttrType
FST_AT_ENUM	./fstapi.h	/^    FST_AT_ENUM        = 2,$/;"	e	enum:fstAttrType
FST_AT_MAX	./fstapi.h	/^    FST_AT_MAX         = 3$/;"	e	enum:fstAttrType
FST_AT_MIN	./fstapi.h	/^    FST_AT_MIN         = 0,$/;"	e	enum:fstAttrType
FST_AT_MISC	./fstapi.h	/^    FST_AT_MISC        = 0,     \/* self-contained: does not need matching FST_HT_ATTREND *\/$/;"	e	enum:fstAttrType
FST_AT_PACK	./fstapi.h	/^    FST_AT_PACK        = 3,$/;"	e	enum:fstAttrType
FST_BL_BLACKOUT	./fstapi.h	/^    FST_BL_BLACKOUT            = 2,$/;"	e	enum:fstBlockType
FST_BL_GEOM	./fstapi.h	/^    FST_BL_GEOM                = 3,$/;"	e	enum:fstBlockType
FST_BL_HDR	./fstapi.h	/^    FST_BL_HDR                 = 0,$/;"	e	enum:fstBlockType
FST_BL_HIER	./fstapi.h	/^    FST_BL_HIER                = 4,$/;"	e	enum:fstBlockType
FST_BL_HIER_LZ4	./fstapi.h	/^    FST_BL_HIER_LZ4            = 6,$/;"	e	enum:fstBlockType
FST_BL_HIER_LZ4DUO	./fstapi.h	/^    FST_BL_HIER_LZ4DUO         = 7,$/;"	e	enum:fstBlockType
FST_BL_SKIP	./fstapi.h	/^    FST_BL_SKIP                = 255    \/* used while block is being written *\/$/;"	e	enum:fstBlockType
FST_BL_VCDATA	./fstapi.h	/^    FST_BL_VCDATA              = 1,$/;"	e	enum:fstBlockType
FST_BL_VCDATA_DYN_ALIAS	./fstapi.h	/^    FST_BL_VCDATA_DYN_ALIAS    = 5,$/;"	e	enum:fstBlockType
FST_BL_VCDATA_DYN_ALIAS2	./fstapi.h	/^    FST_BL_VCDATA_DYN_ALIAS2   = 8,$/;"	e	enum:fstBlockType
FST_BL_ZWRAPPER	./fstapi.h	/^    FST_BL_ZWRAPPER            = 254,   \/* indicates that whole trace is gz wrapped *\/$/;"	e	enum:fstBlockType
FST_BREAK_ADD_SIZE	./fstapi.c	108;"	d	file:
FST_BREAK_SIZE	./fstapi.c	107;"	d	file:
FST_BREAK_SIZE_MAX	./fstapi.c	109;"	d	file:
FST_CADDR_T_CAST	./fstapi.c	333;"	d	file:
FST_CADDR_T_CAST	./fstapi.c	335;"	d	file:
FST_DOUBLE_ENDTEST	./fstapi.c	116;"	d	file:
FST_DO_MISALIGNED_OPS	./fstapi.c	125;"	d	file:
FST_EV_MAX	./fstapi.h	/^    FST_EV_MAX                  = 13$/;"	e	enum:fstEnumValueType
FST_EV_SV_BIT	./fstapi.h	/^    FST_EV_SV_BIT               = 1,$/;"	e	enum:fstEnumValueType
FST_EV_SV_BYTE	./fstapi.h	/^    FST_EV_SV_BYTE              = 6,$/;"	e	enum:fstEnumValueType
FST_EV_SV_INT	./fstapi.h	/^    FST_EV_SV_INT               = 3,$/;"	e	enum:fstEnumValueType
FST_EV_SV_INTEGER	./fstapi.h	/^    FST_EV_SV_INTEGER           = 0,$/;"	e	enum:fstEnumValueType
FST_EV_SV_LOGIC	./fstapi.h	/^    FST_EV_SV_LOGIC             = 2,$/;"	e	enum:fstEnumValueType
FST_EV_SV_LONGINT	./fstapi.h	/^    FST_EV_SV_LONGINT           = 5,$/;"	e	enum:fstEnumValueType
FST_EV_SV_SHORTINT	./fstapi.h	/^    FST_EV_SV_SHORTINT          = 4,$/;"	e	enum:fstEnumValueType
FST_EV_SV_UNSIGNED_BIT	./fstapi.h	/^    FST_EV_SV_UNSIGNED_BIT      = 8,$/;"	e	enum:fstEnumValueType
FST_EV_SV_UNSIGNED_BYTE	./fstapi.h	/^    FST_EV_SV_UNSIGNED_BYTE     = 13,$/;"	e	enum:fstEnumValueType
FST_EV_SV_UNSIGNED_INT	./fstapi.h	/^    FST_EV_SV_UNSIGNED_INT      = 10,$/;"	e	enum:fstEnumValueType
FST_EV_SV_UNSIGNED_INTEGER	./fstapi.h	/^    FST_EV_SV_UNSIGNED_INTEGER  = 7,$/;"	e	enum:fstEnumValueType
FST_EV_SV_UNSIGNED_LOGIC	./fstapi.h	/^    FST_EV_SV_UNSIGNED_LOGIC    = 9,$/;"	e	enum:fstEnumValueType
FST_EV_SV_UNSIGNED_LONGINT	./fstapi.h	/^    FST_EV_SV_UNSIGNED_LONGINT  = 12,$/;"	e	enum:fstEnumValueType
FST_EV_SV_UNSIGNED_SHORTINT	./fstapi.h	/^    FST_EV_SV_UNSIGNED_SHORTINT = 11,$/;"	e	enum:fstEnumValueType
FST_FT_MAX	./fstapi.h	/^    FST_FT_MAX                 = 2$/;"	e	enum:fstFileType
FST_FT_MIN	./fstapi.h	/^    FST_FT_MIN                 = 0,$/;"	e	enum:fstFileType
FST_FT_VERILOG	./fstapi.h	/^    FST_FT_VERILOG             = 0,$/;"	e	enum:fstFileType
FST_FT_VERILOG_VHDL	./fstapi.h	/^    FST_FT_VERILOG_VHDL        = 2,$/;"	e	enum:fstFileType
FST_FT_VHDL	./fstapi.h	/^    FST_FT_VHDL                = 1,$/;"	e	enum:fstFileType
FST_GZIO_LEN	./fstapi.c	121;"	d	file:
FST_HDR_DATE_SIZE	./fstapi.c	118;"	d	file:
FST_HDR_FILETYPE_SIZE	./fstapi.c	119;"	d	file:
FST_HDR_FOURPACK_DUO_SIZE	./fstapi.c	122;"	d	file:
FST_HDR_LENGTH	./fstapi.c	940;"	d	file:
FST_HDR_OFFS_DATE	./fstapi.c	926;"	d	file:
FST_HDR_OFFS_ENDIAN_TEST	./fstapi.c	900;"	d	file:
FST_HDR_OFFS_END_TIME	./fstapi.c	897;"	d	file:
FST_HDR_OFFS_FILETYPE	./fstapi.c	934;"	d	file:
FST_HDR_OFFS_MAXHANDLE	./fstapi.c	912;"	d	file:
FST_HDR_OFFS_MEM_USED	./fstapi.c	903;"	d	file:
FST_HDR_OFFS_NUM_SCOPES	./fstapi.c	906;"	d	file:
FST_HDR_OFFS_NUM_VARS	./fstapi.c	909;"	d	file:
FST_HDR_OFFS_SECLEN	./fstapi.c	891;"	d	file:
FST_HDR_OFFS_SECTION_CNT	./fstapi.c	915;"	d	file:
FST_HDR_OFFS_SIM_VERSION	./fstapi.c	921;"	d	file:
FST_HDR_OFFS_START_TIME	./fstapi.c	894;"	d	file:
FST_HDR_OFFS_TAG	./fstapi.c	888;"	d	file:
FST_HDR_OFFS_TIMESCALE	./fstapi.c	918;"	d	file:
FST_HDR_OFFS_TIMEZERO	./fstapi.c	937;"	d	file:
FST_HDR_SIM_VERSION_SIZE	./fstapi.c	117;"	d	file:
FST_HDR_TIMEZERO_SIZE	./fstapi.c	120;"	d	file:
FST_HT_ATTRBEGIN	./fstapi.h	/^    FST_HT_ATTRBEGIN   = 3,$/;"	e	enum:fstHierType
FST_HT_ATTREND	./fstapi.h	/^    FST_HT_ATTREND     = 4,$/;"	e	enum:fstHierType
FST_HT_MAX	./fstapi.h	/^    FST_HT_MAX         = 4$/;"	e	enum:fstHierType
FST_HT_MIN	./fstapi.h	/^    FST_HT_MIN         = 0,$/;"	e	enum:fstHierType
FST_HT_SCOPE	./fstapi.h	/^    FST_HT_SCOPE       = 0,$/;"	e	enum:fstHierType
FST_HT_UPSCOPE	./fstapi.h	/^    FST_HT_UPSCOPE     = 1,$/;"	e	enum:fstHierType
FST_HT_VAR	./fstapi.h	/^    FST_HT_VAR         = 2,$/;"	e	enum:fstHierType
FST_ID_NAM_ATTR_SIZ	./fstapi.c	115;"	d	file:
FST_ID_NAM_SIZ	./fstapi.c	114;"	d	file:
FST_MACOSX	./fstapi.c	129;"	d	file:
FST_MT_COMMENT	./fstapi.h	/^    FST_MT_COMMENT     = 0,     \/* use fstWriterSetComment() to emit *\/$/;"	e	enum:fstMiscType
FST_MT_ENVVAR	./fstapi.h	/^    FST_MT_ENVVAR      = 1,     \/* use fstWriterSetEnvVar() to emit *\/$/;"	e	enum:fstMiscType
FST_MT_MAX	./fstapi.h	/^    FST_MT_MAX         = 6$/;"	e	enum:fstMiscType
FST_MT_MIN	./fstapi.h	/^    FST_MT_MIN         = 0,$/;"	e	enum:fstMiscType
FST_MT_PATHNAME	./fstapi.h	/^    FST_MT_PATHNAME    = 3,     \/* reserved for fstWriterSetSourceStem() string -> number management *\/$/;"	e	enum:fstMiscType
FST_MT_SOURCEISTEM	./fstapi.h	/^    FST_MT_SOURCEISTEM = 5,     \/* use fstWriterSetSourceInstantiationStem() to emit *\/$/;"	e	enum:fstMiscType
FST_MT_SOURCESTEM	./fstapi.h	/^    FST_MT_SOURCESTEM  = 4,     \/* use fstWriterSetSourceStem() to emit *\/$/;"	e	enum:fstMiscType
FST_MT_SUPVAR	./fstapi.h	/^    FST_MT_SUPVAR      = 2,     \/* use fstWriterCreateVar2() to emit *\/$/;"	e	enum:fstMiscType
FST_MT_UNKNOWN	./fstapi.h	/^    FST_MT_UNKNOWN     = 6,$/;"	e	enum:fstMiscType
FST_PATH_HASHMASK	./fstapi.c	86;"	d	file:
FST_PT_MAX	./fstapi.h	/^    FST_PT_MAX           = 3$/;"	e	enum:fstPackType
FST_PT_NONE	./fstapi.h	/^    FST_PT_NONE          = 0,$/;"	e	enum:fstPackType
FST_PT_PACKED	./fstapi.h	/^    FST_PT_PACKED        = 2,$/;"	e	enum:fstPackType
FST_PT_TAGGED_PACKED	./fstapi.h	/^    FST_PT_TAGGED_PACKED = 3,$/;"	e	enum:fstPackType
FST_PT_UNPACKED	./fstapi.h	/^    FST_PT_UNPACKED      = 1,$/;"	e	enum:fstPackType
FST_RCV_D	./fstapi.c	162;"	d	file:
FST_RCV_H	./fstapi.c	158;"	d	file:
FST_RCV_L	./fstapi.c	161;"	d	file:
FST_RCV_Q	./fstapi.c	163;"	d	file:
FST_RCV_STR	./fstapi.c	165;"	d	file:
FST_RCV_U	./fstapi.c	159;"	d	file:
FST_RCV_W	./fstapi.c	160;"	d	file:
FST_RCV_X	./fstapi.c	156;"	d	file:
FST_RCV_Z	./fstapi.c	157;"	d	file:
FST_RDLOAD	./fstapi.h	39;"	d
FST_SDT_ABS_MAX	./fstapi.h	/^    FST_SDT_ABS_MAX                = ((1<<(FST_SDT_SVT_SHIFT_COUNT))-1)$/;"	e	enum:fstSupplementalDataType
FST_SDT_MAX	./fstapi.h	/^    FST_SDT_MAX                    = 16,$/;"	e	enum:fstSupplementalDataType
FST_SDT_MIN	./fstapi.h	/^    FST_SDT_MIN                    = 0,$/;"	e	enum:fstSupplementalDataType
FST_SDT_NONE	./fstapi.h	/^    FST_SDT_NONE                   = 0,$/;"	e	enum:fstSupplementalDataType
FST_SDT_SVT_SHIFT_COUNT	./fstapi.h	/^    FST_SDT_SVT_SHIFT_COUNT        = 10, \/* FST_SVT_* is ORed in by fstWriterCreateVar2() to the left after shifting FST_SDT_SVT_SHIFT_COUNT *\/$/;"	e	enum:fstSupplementalDataType
FST_SDT_VHDL_BIT	./fstapi.h	/^    FST_SDT_VHDL_BIT               = 2,$/;"	e	enum:fstSupplementalDataType
FST_SDT_VHDL_BIT_VECTOR	./fstapi.h	/^    FST_SDT_VHDL_BIT_VECTOR        = 3,$/;"	e	enum:fstSupplementalDataType
FST_SDT_VHDL_BOOLEAN	./fstapi.h	/^    FST_SDT_VHDL_BOOLEAN           = 1,$/;"	e	enum:fstSupplementalDataType
FST_SDT_VHDL_CHARACTER	./fstapi.h	/^    FST_SDT_VHDL_CHARACTER         = 15,$/;"	e	enum:fstSupplementalDataType
FST_SDT_VHDL_INTEGER	./fstapi.h	/^    FST_SDT_VHDL_INTEGER           = 10,$/;"	e	enum:fstSupplementalDataType
FST_SDT_VHDL_NATURAL	./fstapi.h	/^    FST_SDT_VHDL_NATURAL           = 12,$/;"	e	enum:fstSupplementalDataType
FST_SDT_VHDL_POSITIVE	./fstapi.h	/^    FST_SDT_VHDL_POSITIVE          = 13,$/;"	e	enum:fstSupplementalDataType
FST_SDT_VHDL_REAL	./fstapi.h	/^    FST_SDT_VHDL_REAL              = 11,$/;"	e	enum:fstSupplementalDataType
FST_SDT_VHDL_SIGNED	./fstapi.h	/^    FST_SDT_VHDL_SIGNED            = 9,$/;"	e	enum:fstSupplementalDataType
FST_SDT_VHDL_STD_LOGIC	./fstapi.h	/^    FST_SDT_VHDL_STD_LOGIC         = 6,$/;"	e	enum:fstSupplementalDataType
FST_SDT_VHDL_STD_LOGIC_VECTOR	./fstapi.h	/^    FST_SDT_VHDL_STD_LOGIC_VECTOR  = 7,$/;"	e	enum:fstSupplementalDataType
FST_SDT_VHDL_STD_ULOGIC	./fstapi.h	/^    FST_SDT_VHDL_STD_ULOGIC        = 4,$/;"	e	enum:fstSupplementalDataType
FST_SDT_VHDL_STD_ULOGIC_VECTOR	./fstapi.h	/^    FST_SDT_VHDL_STD_ULOGIC_VECTOR = 5,$/;"	e	enum:fstSupplementalDataType
FST_SDT_VHDL_STRING	./fstapi.h	/^    FST_SDT_VHDL_STRING            = 16,$/;"	e	enum:fstSupplementalDataType
FST_SDT_VHDL_TIME	./fstapi.h	/^    FST_SDT_VHDL_TIME              = 14,$/;"	e	enum:fstSupplementalDataType
FST_SDT_VHDL_UNSIGNED	./fstapi.h	/^    FST_SDT_VHDL_UNSIGNED          = 8,$/;"	e	enum:fstSupplementalDataType
FST_ST_GEN_ATTRBEGIN	./fstapi.h	/^    FST_ST_GEN_ATTRBEGIN       = 252,$/;"	e	enum:fstScopeType
FST_ST_GEN_ATTREND	./fstapi.h	/^    FST_ST_GEN_ATTREND         = 253,$/;"	e	enum:fstScopeType
FST_ST_MAX	./fstapi.h	/^    FST_ST_MAX                 = 21,$/;"	e	enum:fstScopeType
FST_ST_MIN	./fstapi.h	/^    FST_ST_MIN                 = 0,$/;"	e	enum:fstScopeType
FST_ST_VCD_BEGIN	./fstapi.h	/^    FST_ST_VCD_BEGIN           = 3,$/;"	e	enum:fstScopeType
FST_ST_VCD_CLASS	./fstapi.h	/^    FST_ST_VCD_CLASS           = 8,$/;"	e	enum:fstScopeType
FST_ST_VCD_FORK	./fstapi.h	/^    FST_ST_VCD_FORK            = 4,$/;"	e	enum:fstScopeType
FST_ST_VCD_FUNCTION	./fstapi.h	/^    FST_ST_VCD_FUNCTION        = 2,$/;"	e	enum:fstScopeType
FST_ST_VCD_GENERATE	./fstapi.h	/^    FST_ST_VCD_GENERATE        = 5,$/;"	e	enum:fstScopeType
FST_ST_VCD_INTERFACE	./fstapi.h	/^    FST_ST_VCD_INTERFACE       = 9,$/;"	e	enum:fstScopeType
FST_ST_VCD_MODULE	./fstapi.h	/^    FST_ST_VCD_MODULE          = 0,$/;"	e	enum:fstScopeType
FST_ST_VCD_PACKAGE	./fstapi.h	/^    FST_ST_VCD_PACKAGE         = 10,$/;"	e	enum:fstScopeType
FST_ST_VCD_PROGRAM	./fstapi.h	/^    FST_ST_VCD_PROGRAM         = 11,$/;"	e	enum:fstScopeType
FST_ST_VCD_SCOPE	./fstapi.h	/^    FST_ST_VCD_SCOPE           = 254,$/;"	e	enum:fstScopeType
FST_ST_VCD_STRUCT	./fstapi.h	/^    FST_ST_VCD_STRUCT          = 6,$/;"	e	enum:fstScopeType
FST_ST_VCD_TASK	./fstapi.h	/^    FST_ST_VCD_TASK            = 1,$/;"	e	enum:fstScopeType
FST_ST_VCD_UNION	./fstapi.h	/^    FST_ST_VCD_UNION           = 7,$/;"	e	enum:fstScopeType
FST_ST_VCD_UPSCOPE	./fstapi.h	/^    FST_ST_VCD_UPSCOPE         = 255$/;"	e	enum:fstScopeType
FST_ST_VHDL_ARCHITECTURE	./fstapi.h	/^    FST_ST_VHDL_ARCHITECTURE   = 12,$/;"	e	enum:fstScopeType
FST_ST_VHDL_BLOCK	./fstapi.h	/^    FST_ST_VHDL_BLOCK          = 17,$/;"	e	enum:fstScopeType
FST_ST_VHDL_FOR_GENERATE	./fstapi.h	/^    FST_ST_VHDL_FOR_GENERATE   = 18,$/;"	e	enum:fstScopeType
FST_ST_VHDL_FUNCTION	./fstapi.h	/^    FST_ST_VHDL_FUNCTION       = 14,$/;"	e	enum:fstScopeType
FST_ST_VHDL_GENERATE	./fstapi.h	/^    FST_ST_VHDL_GENERATE       = 20,$/;"	e	enum:fstScopeType
FST_ST_VHDL_IF_GENERATE	./fstapi.h	/^    FST_ST_VHDL_IF_GENERATE    = 19,$/;"	e	enum:fstScopeType
FST_ST_VHDL_PACKAGE	./fstapi.h	/^    FST_ST_VHDL_PACKAGE        = 21,$/;"	e	enum:fstScopeType
FST_ST_VHDL_PROCEDURE	./fstapi.h	/^    FST_ST_VHDL_PROCEDURE      = 13,$/;"	e	enum:fstScopeType
FST_ST_VHDL_PROCESS	./fstapi.h	/^    FST_ST_VHDL_PROCESS        = 16,$/;"	e	enum:fstScopeType
FST_ST_VHDL_RECORD	./fstapi.h	/^    FST_ST_VHDL_RECORD         = 15,$/;"	e	enum:fstScopeType
FST_SVT_MAX	./fstapi.h	/^    FST_SVT_MAX                    = 5,$/;"	e	enum:fstSupplementalVarType
FST_SVT_MIN	./fstapi.h	/^    FST_SVT_MIN                    = 0,$/;"	e	enum:fstSupplementalVarType
FST_SVT_NONE	./fstapi.h	/^    FST_SVT_NONE                   = 0,$/;"	e	enum:fstSupplementalVarType
FST_SVT_VHDL_CONSTANT	./fstapi.h	/^    FST_SVT_VHDL_CONSTANT          = 3,$/;"	e	enum:fstSupplementalVarType
FST_SVT_VHDL_FILE	./fstapi.h	/^    FST_SVT_VHDL_FILE              = 4,$/;"	e	enum:fstSupplementalVarType
FST_SVT_VHDL_MEMORY	./fstapi.h	/^    FST_SVT_VHDL_MEMORY            = 5,$/;"	e	enum:fstSupplementalVarType
FST_SVT_VHDL_SIGNAL	./fstapi.h	/^    FST_SVT_VHDL_SIGNAL            = 1,$/;"	e	enum:fstSupplementalVarType
FST_SVT_VHDL_VARIABLE	./fstapi.h	/^    FST_SVT_VHDL_VARIABLE          = 2,$/;"	e	enum:fstSupplementalVarType
FST_VD_BUFFER	./fstapi.h	/^    FST_VD_BUFFER      = 4,$/;"	e	enum:fstVarDir
FST_VD_IMPLICIT	./fstapi.h	/^    FST_VD_IMPLICIT    = 0,$/;"	e	enum:fstVarDir
FST_VD_INOUT	./fstapi.h	/^    FST_VD_INOUT       = 3,$/;"	e	enum:fstVarDir
FST_VD_INPUT	./fstapi.h	/^    FST_VD_INPUT       = 1,$/;"	e	enum:fstVarDir
FST_VD_LINKAGE	./fstapi.h	/^    FST_VD_LINKAGE     = 5,$/;"	e	enum:fstVarDir
FST_VD_MAX	./fstapi.h	/^    FST_VD_MAX         = 5$/;"	e	enum:fstVarDir
FST_VD_MIN	./fstapi.h	/^    FST_VD_MIN         = 0,$/;"	e	enum:fstVarDir
FST_VD_OUTPUT	./fstapi.h	/^    FST_VD_OUTPUT      = 2,$/;"	e	enum:fstVarDir
FST_VT_GEN_STRING	./fstapi.h	/^    FST_VT_GEN_STRING          = 21,    \/* generic string type   (max len is defined dynamically via fstWriterEmitVariableLengthValueChange) *\/$/;"	e	enum:fstVarType
FST_VT_MAX	./fstapi.h	/^    FST_VT_MAX                 = 29     \/* end of vartypes *\/$/;"	e	enum:fstVarType
FST_VT_MIN	./fstapi.h	/^    FST_VT_MIN                 = 0,     \/* start of vartypes *\/$/;"	e	enum:fstVarType
FST_VT_SV_BIT	./fstapi.h	/^    FST_VT_SV_BIT              = 22,$/;"	e	enum:fstVarType
FST_VT_SV_BYTE	./fstapi.h	/^    FST_VT_SV_BYTE             = 27,    \/* declare as size = 8  *\/$/;"	e	enum:fstVarType
FST_VT_SV_ENUM	./fstapi.h	/^    FST_VT_SV_ENUM             = 28,    \/* declare as appropriate type range *\/$/;"	e	enum:fstVarType
FST_VT_SV_INT	./fstapi.h	/^    FST_VT_SV_INT              = 24,    \/* declare as size = 32 *\/$/;"	e	enum:fstVarType
FST_VT_SV_LOGIC	./fstapi.h	/^    FST_VT_SV_LOGIC            = 23,$/;"	e	enum:fstVarType
FST_VT_SV_LONGINT	./fstapi.h	/^    FST_VT_SV_LONGINT          = 26,    \/* declare as size = 64 *\/$/;"	e	enum:fstVarType
FST_VT_SV_SHORTINT	./fstapi.h	/^    FST_VT_SV_SHORTINT         = 25,    \/* declare as size = 16 *\/$/;"	e	enum:fstVarType
FST_VT_SV_SHORTREAL	./fstapi.h	/^    FST_VT_SV_SHORTREAL        = 29,    \/* declare and emit same as FST_VT_VCD_REAL (needs to be emitted as double, not a float) *\/$/;"	e	enum:fstVarType
FST_VT_VCD_EVENT	./fstapi.h	/^    FST_VT_VCD_EVENT           = 0,$/;"	e	enum:fstVarType
FST_VT_VCD_INTEGER	./fstapi.h	/^    FST_VT_VCD_INTEGER         = 1,$/;"	e	enum:fstVarType
FST_VT_VCD_PARAMETER	./fstapi.h	/^    FST_VT_VCD_PARAMETER       = 2,$/;"	e	enum:fstVarType
FST_VT_VCD_PORT	./fstapi.h	/^    FST_VT_VCD_PORT            = 18,$/;"	e	enum:fstVarType
FST_VT_VCD_REAL	./fstapi.h	/^    FST_VT_VCD_REAL            = 3,$/;"	e	enum:fstVarType
FST_VT_VCD_REALTIME	./fstapi.h	/^    FST_VT_VCD_REALTIME        = 20,$/;"	e	enum:fstVarType
FST_VT_VCD_REAL_PARAMETER	./fstapi.h	/^    FST_VT_VCD_REAL_PARAMETER  = 4,$/;"	e	enum:fstVarType
FST_VT_VCD_REG	./fstapi.h	/^    FST_VT_VCD_REG             = 5,$/;"	e	enum:fstVarType
FST_VT_VCD_SPARRAY	./fstapi.h	/^    FST_VT_VCD_SPARRAY         = 19,    \/* used to define the rownum (index) port for a sparse array *\/$/;"	e	enum:fstVarType
FST_VT_VCD_SUPPLY0	./fstapi.h	/^    FST_VT_VCD_SUPPLY0         = 6,$/;"	e	enum:fstVarType
FST_VT_VCD_SUPPLY1	./fstapi.h	/^    FST_VT_VCD_SUPPLY1         = 7,$/;"	e	enum:fstVarType
FST_VT_VCD_TIME	./fstapi.h	/^    FST_VT_VCD_TIME            = 8,$/;"	e	enum:fstVarType
FST_VT_VCD_TRI	./fstapi.h	/^    FST_VT_VCD_TRI             = 9,$/;"	e	enum:fstVarType
FST_VT_VCD_TRI0	./fstapi.h	/^    FST_VT_VCD_TRI0            = 13,$/;"	e	enum:fstVarType
FST_VT_VCD_TRI1	./fstapi.h	/^    FST_VT_VCD_TRI1            = 14,$/;"	e	enum:fstVarType
FST_VT_VCD_TRIAND	./fstapi.h	/^    FST_VT_VCD_TRIAND          = 10,$/;"	e	enum:fstVarType
FST_VT_VCD_TRIOR	./fstapi.h	/^    FST_VT_VCD_TRIOR           = 11,$/;"	e	enum:fstVarType
FST_VT_VCD_TRIREG	./fstapi.h	/^    FST_VT_VCD_TRIREG          = 12,$/;"	e	enum:fstVarType
FST_VT_VCD_WAND	./fstapi.h	/^    FST_VT_VCD_WAND            = 15,$/;"	e	enum:fstVarType
FST_VT_VCD_WIRE	./fstapi.h	/^    FST_VT_VCD_WIRE            = 16,$/;"	e	enum:fstVarType
FST_VT_VCD_WOR	./fstapi.h	/^    FST_VT_VCD_WOR             = 17,$/;"	e	enum:fstVarType
FST_WRITER_PARALLEL	./fstapi.c	42;"	d	file:
FST_WRITER_PARALLEL	./fstapi.c	49;"	d	file:
FST_WRITER_STR	./fstapi.c	113;"	d	file:
FST_WRITEX_MAX	./fstapi.c	98;"	d	file:
FST_WR_PT_FASTLZ	./fstapi.h	/^    FST_WR_PT_FASTLZ           = 1,$/;"	e	enum:fstWriterPackType
FST_WR_PT_LZ4	./fstapi.h	/^    FST_WR_PT_LZ4              = 2$/;"	e	enum:fstWriterPackType
FST_WR_PT_ZLIB	./fstapi.h	/^    FST_WR_PT_ZLIB             = 0,$/;"	e	enum:fstWriterPackType
FUNCTION	./v.h	772;"	d
GB	./lz4.c	240;"	d	file:
GBL_OFS_STR	./igen.h	739;"	d
GBL_OFS_STR	./igen.h	894;"	d
GCC_VERSION	./lz4.c	145;"	d	file:
GC_BUFIF	./v.h	874;"	d
GC_CMOS	./v.h	876;"	d
GC_LOGIC	./v.h	873;"	d
GC_MOS	./v.h	875;"	d
GC_PULL	./v.h	880;"	d
GC_TRAN	./v.h	877;"	d
GC_TRANIF	./v.h	878;"	d
GC_UDP	./v.h	879;"	d
GDVAL	./v.h	236;"	d
GENERATE	./v.h	773;"	d
GENVAR	./v.h	774;"	d
GI_CELL	./v.h	1061;"	d
GI_CONTA	./v.h	1060;"	d
GI_DFPARM	./v.h	1067;"	d
GI_GATE	./v.h	1062;"	d
GI_GBLK	./v.h	1056;"	d
GI_GCASE	./v.h	1059;"	d
GI_GFOR	./v.h	1057;"	d
GI_GIF	./v.h	1058;"	d
GI_GREF	./v.h	1066;"	d
GI_INITALW	./v.h	1065;"	d
GI_INST	./v.h	1063;"	d
GI_UNKN	./v.h	1055;"	d
GI_VARDECL	./v.h	1064;"	d
GLBPTH	./v.h	652;"	d
GLBREF	./v.h	651;"	d
G_ASSIGN	./v.h	842;"	d
G_BITREDAND	./v.h	843;"	d
G_BITREDOR	./v.h	854;"	d
G_BITREDXOR	./v.h	867;"	d
G_BUF	./v.h	844;"	d
G_BUFIF0	./v.h	845;"	d
G_BUFIF1	./v.h	846;"	d
G_CMOS	./v.h	847;"	d
G_NAND	./v.h	848;"	d
G_NMOS	./v.h	849;"	d
G_NOR	./v.h	850;"	d
G_NOT	./v.h	851;"	d
G_NOTIF0	./v.h	852;"	d
G_NOTIF1	./v.h	853;"	d
G_PMOS	./v.h	855;"	d
G_PULLDOWN	./v.h	856;"	d
G_PULLUP	./v.h	857;"	d
G_RCMOS	./v.h	858;"	d
G_REDXNOR	./v.h	868;"	d
G_RNMOS	./v.h	859;"	d
G_RPMOS	./v.h	860;"	d
G_RTRAN	./v.h	861;"	d
G_RTRANIF0	./v.h	862;"	d
G_RTRANIF1	./v.h	863;"	d
G_TRAN	./v.h	864;"	d
G_TRANIF0	./v.h	865;"	d
G_TRANIF1	./v.h	866;"	d
HASHNBCELLS4	./lz4.c	229;"	d	file:
HASHSEED	./v_src2.c	3662;"	d	file:
HASHTABLESIZE	./lz4.c	228;"	d	file:
HASHTABSIZ	./v_src2.c	3661;"	d	file:
HASH_FUNCTION	./fastlz.c	98;"	d	file:
HASH_LOG	./fastlz.c	95;"	d	file:
HASH_MASK	./fastlz.c	97;"	d	file:
HASH_SIZE	./fastlz.c	96;"	d	file:
HAVE_ALLOCA	./config.h	13;"	d
HAVE_ALLOCA_H	./config.h	17;"	d
HAVE_ATEXIT	./config.h	20;"	d
HAVE_BTOWC	./config.h	23;"	d
HAVE_BZERO	./config.h	26;"	d
HAVE_DIRENT_H	./config.h	30;"	d
HAVE_DUP2	./config.h	36;"	d
HAVE_FCNTL_H	./config.h	39;"	d
HAVE_FORK	./config.h	42;"	d
HAVE_FSEEKO	./config.h	45;"	d
HAVE_GETOPT_H	./config.h	48;"	d
HAVE_GETOPT_LONG	./config.h	51;"	d
HAVE_GETPAGESIZE	./config.h	54;"	d
HAVE_INTTYPES_H	./config.h	57;"	d
HAVE_LIBDL	./config.h	60;"	d
HAVE_LIBINTL_H	./config.h	63;"	d
HAVE_LIBM	./config.h	66;"	d
HAVE_LIBNSL	./config.h	69;"	d
HAVE_LIBPTHREAD	./config.h	72;"	d
HAVE_LIMITS_H	./config.h	78;"	d
HAVE_MALLOC_H	./config.h	81;"	d
HAVE_MEMMOVE	./config.h	84;"	d
HAVE_MEMORY_H	./config.h	87;"	d
HAVE_MEMSET	./config.h	90;"	d
HAVE_MMAP	./config.h	93;"	d
HAVE_MUNMAP	./config.h	96;"	d
HAVE_POW	./config.h	102;"	d
HAVE_PTRDIFF_T	./config.h	105;"	d
HAVE_PUTENV	./config.h	108;"	d
HAVE_REALPATH	./config.h	111;"	d
HAVE_REGCOMP	./config.h	114;"	d
HAVE_RE_COMP	./config.h	117;"	d
HAVE_RPC_TYPES_H	./config.h	120;"	d
HAVE_RPC_XDR_H	./config.h	123;"	d
HAVE_SELECT	./config.h	126;"	d
HAVE_SETENV	./config.h	129;"	d
HAVE_STDBOOL_H	./config.h	136;"	d
HAVE_STDDEF_H	./config.h	139;"	d
HAVE_STDINT_H	./config.h	142;"	d
HAVE_STDLIB_H	./config.h	145;"	d
HAVE_STRCASECMP	./config.h	148;"	d
HAVE_STRCHR	./config.h	151;"	d
HAVE_STRDUP	./config.h	154;"	d
HAVE_STRERROR	./config.h	157;"	d
HAVE_STRINGS_H	./config.h	160;"	d
HAVE_STRING_H	./config.h	163;"	d
HAVE_STRNCASECMP	./config.h	166;"	d
HAVE_STRRCHR	./config.h	169;"	d
HAVE_STRSTR	./config.h	172;"	d
HAVE_SYS_PARAM_H	./config.h	183;"	d
HAVE_SYS_SELECT_H	./config.h	186;"	d
HAVE_SYS_SOCKET_H	./config.h	189;"	d
HAVE_SYS_STAT_H	./config.h	192;"	d
HAVE_SYS_TIME_H	./config.h	195;"	d
HAVE_SYS_TYPES_H	./config.h	198;"	d
HAVE_SYS_WAIT_H	./config.h	201;"	d
HAVE_UNISTD_H	./config.h	204;"	d
HAVE_UNSETENV	./config.h	207;"	d
HAVE_VFORK	./config.h	210;"	d
HAVE_VPRINTF	./config.h	216;"	d
HAVE_WCHAR_H	./config.h	219;"	d
HAVE_WCTYPE_H	./config.h	222;"	d
HAVE_WORKING_FORK	./config.h	225;"	d
HAVE_WORKING_VFORK	./config.h	228;"	d
HAVE__BOOL	./config.h	231;"	d
HEAPMODE	./lz4.c	51;"	d	file:
HEAP_INIT_SIZE	./v.h	5240;"	d
HIER	./v_src3.c	7128;"	d	file:
HIGHZ0	./v.h	775;"	d
HIGHZ1	./v.h	776;"	d
HIGH_BHW_REG	./igen.h	713;"	d
HIGH_BHW_REG	./igen.h	859;"	d
HIGH_GEN_REG	./igen.h	712;"	d
HIGH_GEN_REG	./igen.h	858;"	d
HIGH_MACH_REG	./igen.h	714;"	d
HIGH_MACH_REG	./igen.h	860;"	d
HIGH_STREN	./v.h	444;"	d
HIGH_X86_REG	./igen.h	710;"	d
HIGH_X86_REG	./igen.h	856;"	d
HLP_BP	./v_dbg.c	2607;"	d	file:
HLP_CHGBP	./v_dbg.c	2608;"	d	file:
HLP_CMD	./v_dbg.c	2612;"	d	file:
HLP_COMP	./v_dbg.c	2600;"	d	file:
HLP_DAT	./v_dbg.c	2604;"	d	file:
HLP_DBG	./v_dbg.c	2599;"	d	file:
HLP_DIF	./v_dbg.c	2602;"	d	file:
HLP_HIST	./v_dbg.c	2609;"	d	file:
HLP_INF	./v_dbg.c	2610;"	d	file:
HLP_SCP	./v_dbg.c	2606;"	d	file:
HLP_SRC	./v_dbg.c	2605;"	d	file:
HLP_STMT	./v_dbg.c	2603;"	d	file:
HLP_TRC	./v_dbg.c	2601;"	d	file:
HLP_TSK	./v_dbg.c	2611;"	d	file:
IAER_BRKPT	./v.h	1049;"	d
IAER_CTRLC	./v.h	1052;"	d
IAER_STEP	./v.h	1050;"	d
IAER_STOP	./v.h	1051;"	d
IAER_UNKN	./v.h	1048;"	d
IAHISTSIZ	./v.h	233;"	d
ICASX_COMPLEX	./igen.h	474;"	d
ICASX_ENDMARK	./igen.h	470;"	d
ICASX_EXPR	./igen.h	473;"	d
ICASX_NONXZNUM	./igen.h	471;"	d
ICASX_UNKN	./igen.h	469;"	d
ICASX_XZNUM	./igen.h	472;"	d
ICLASS_ASL	./igen.h	494;"	d
ICLASS_BIN	./igen.h	480;"	d
ICLASS_CALL	./igen.h	487;"	d
ICLASS_CMP	./igen.h	483;"	d
ICLASS_DEFLST	./igen.h	502;"	d
ICLASS_DIR	./igen.h	498;"	d
ICLASS_DIV	./igen.h	499;"	d
ICLASS_ENTER	./igen.h	501;"	d
ICLASS_FUNC_BRK	./igen.h	500;"	d
ICLASS_JMP	./igen.h	484;"	d
ICLASS_LABEL	./igen.h	497;"	d
ICLASS_MOV	./igen.h	478;"	d
ICLASS_NDXJMP	./igen.h	485;"	d
ICLASS_POP	./igen.h	490;"	d
ICLASS_PUSH	./igen.h	489;"	d
ICLASS_REAL_1RD	./igen.h	491;"	d
ICLASS_REAL_NORD	./igen.h	492;"	d
ICLASS_REAL_WRAX	./igen.h	493;"	d
ICLASS_SETE	./igen.h	496;"	d
ICLASS_SHFT	./igen.h	482;"	d
ICLASS_STORE	./igen.h	479;"	d
ICLASS_SUSPEND	./igen.h	488;"	d
ICLASS_TFJMP	./igen.h	486;"	d
ICLASS_UN	./igen.h	481;"	d
ICLASS_UNKN	./igen.h	477;"	d
ICLASS_WREDX	./igen.h	495;"	d
ID	./v.h	547;"	d
IDCHARS	./v.h	214;"	d
IDLEN	./v.h	215;"	d
IDPMAP_CA_DRVBP	./igen.h	307;"	d
IDPMAP_CA_SCHBP	./igen.h	308;"	d
IDPMAP_CA_TEVP	./igen.h	300;"	d
IDPMAP_DCEEXPR_BP	./igen.h	312;"	d
IDPMAP_DCEPREV	./igen.h	311;"	d
IDPMAP_DCESCH_TEVS	./igen.h	303;"	d
IDPMAP_DELREP_BP	./igen.h	304;"	d
IDPMAP_DPFD	./igen.h	317;"	d
IDPMAP_GATEBP	./igen.h	310;"	d
IDPMAP_GATE_OUTBP	./igen.h	309;"	d
IDPMAP_GP_TEVP	./igen.h	301;"	d
IDPMAP_ISNUM	./igen.h	314;"	d
IDPMAP_NB_BP	./igen.h	306;"	d
IDPMAP_NCHGACTION	./igen.h	297;"	d
IDPMAP_NET_TEVP	./igen.h	298;"	d
IDPMAP_NVAOFS	./igen.h	296;"	d
IDPMAP_PD_RHSBP	./igen.h	305;"	d
IDPMAP_PNCHG	./igen.h	313;"	d
IDPMAP_REP_BP	./igen.h	302;"	d
IDPMAP_ST_TEVP	./igen.h	299;"	d
IDPMAP_TCHK_CHG	./igen.h	316;"	d
IDPMAP_UNKN	./igen.h	295;"	d
IDP_HD_BYTOFS	./v.h	1390;"	d
IDP_HD_WOFS	./v.h	1393;"	d
IDP_IA_GROW_MAX	./v.h	1396;"	d
IDP_REG	./igen.h	717;"	d
IDP_REG	./igen.h	863;"	d
IF	./v.h	777;"	d
IFNONE	./v.h	778;"	d
IGEN_DCE	./igen.h	946;"	d
IGEN_DCE	./igen.h	952;"	d
IGEN_NPP	./igen.h	947;"	d
IGEN_NPP	./igen.h	953;"	d
IGEN_PROC	./igen.h	945;"	d
IGEN_PROC	./igen.h	951;"	d
IGEN_UNKN	./igen.h	944;"	d
IGEN_UNKN	./igen.h	950;"	d
IMPORT	./v.h	779;"	d
INC	./v.h	655;"	d
INFLOOP_MAX	./v.h	234;"	d
INFORM	./v.h	1314;"	d
INFO_BRKPT	./v_dbg2.c	1088;"	d	file:
INFO_DISPLAY	./v_dbg2.c	1091;"	d	file:
INFO_HLSIZE	./v_dbg2.c	1086;"	d	file:
INFO_LOGECHO	./v_dbg2.c	1090;"	d	file:
INFO_LSIZE	./v_dbg2.c	1085;"	d	file:
INFO_PRTBASE	./v_dbg2.c	1089;"	d	file:
INFO_SCHG	./v_dbg2.c	1087;"	d	file:
INITial	./v.h	780;"	d
INOUT	./v.h	781;"	d
INPUT	./v.h	782;"	d
INT	./v.h	783;"	d
INTBITS	./v.h	340;"	d
INTBYTES	./v.h	348;"	d
INTEGER	./v.h	784;"	d
IO_BID	./v.h	928;"	d
IO_IN	./v.h	926;"	d
IO_OUT	./v.h	927;"	d
IO_UNKN	./v.h	929;"	d
ISNUMBER	./v.h	550;"	d
ISREALNUM	./v.h	552;"	d
I_ADCL	./igen.h	661;"	d
I_ADDA	./igen.h	681;"	d
I_ADDA	./igen.h	784;"	d
I_ADDL	./igen.h	563;"	d
I_ADDQ	./igen.h	746;"	d
I_ANDAREAL	./igen.h	769;"	d
I_ANDL	./igen.h	574;"	d
I_ASL_CALL	./igen.h	633;"	d
I_ASL_REST_STK	./igen.h	634;"	d
I_BBLK_JMP	./igen.h	511;"	d
I_BBLK_LABEL	./igen.h	520;"	d
I_CALL	./igen.h	607;"	d
I_CALL_ASLFUNC	./igen.h	540;"	d
I_CALL_ASLPROC	./igen.h	538;"	d
I_CALL_FREE_EVENT	./igen.h	659;"	d
I_CALL_FREE_NBMEM_EVENT	./igen.h	660;"	d
I_CLTD	./igen.h	638;"	d
I_CMPB	./igen.h	596;"	d
I_CMPL	./igen.h	594;"	d
I_CMPW	./igen.h	595;"	d
I_COMPLETE	./igen.h	532;"	d
I_COND_JMP	./igen.h	512;"	d
I_COPY	./igen.h	535;"	d
I_DEFLST	./igen.h	545;"	d
I_DIRECTIVE	./igen.h	642;"	d
I_DIVL	./igen.h	568;"	d
I_ENTER_CAP	./igen.h	525;"	d
I_ENTER_DECL	./igen.h	523;"	d
I_ENTER_GATECA	./igen.h	527;"	d
I_ENTER_GATEDA	./igen.h	648;"	d
I_ENTER_ICONN	./igen.h	526;"	d
I_ENTER_LABEL	./igen.h	644;"	d
I_ENTER_MDC	./igen.h	672;"	d
I_ENTER_MIPD	./igen.h	653;"	d
I_ENTER_NB_PROC	./igen.h	656;"	d
I_ENTER_NB_PROC_FREE	./igen.h	657;"	d
I_ENTER_NCHG	./igen.h	651;"	d
I_ENTER_NPP	./igen.h	524;"	d
I_ENTER_PORT	./igen.h	646;"	d
I_ENTER_PROC	./igen.h	521;"	d
I_ENTER_PROCESS_NCHG	./igen.h	652;"	d
I_ENTER_THD_RET	./igen.h	522;"	d
I_ENTER_TRPTH_EV	./igen.h	654;"	d
I_ENTER_WIRE_EV	./igen.h	655;"	d
I_EPILOGUE	./igen.h	543;"	d
I_FABS	./igen.h	619;"	d
I_FADD	./igen.h	614;"	d
I_FADDL	./igen.h	622;"	d
I_FCHS	./igen.h	628;"	d
I_FDIV	./igen.h	618;"	d
I_FDIVL	./igen.h	625;"	d
I_FG_CALL	./igen.h	671;"	d
I_FLD	./igen.h	615;"	d
I_FLDL	./igen.h	620;"	d
I_FLDZ	./igen.h	630;"	d
I_FMUL	./igen.h	617;"	d
I_FMULL	./igen.h	624;"	d
I_FNSTSW	./igen.h	627;"	d
I_FSTPL	./igen.h	621;"	d
I_FSUB	./igen.h	616;"	d
I_FSUBL	./igen.h	623;"	d
I_FUCOMPP	./igen.h	626;"	d
I_FUNC_JMP	./igen.h	604;"	d
I_FXCH	./igen.h	629;"	d
I_IMUL	./igen.h	566;"	d
I_IMULL	./igen.h	567;"	d
I_IND_JMP	./igen.h	602;"	d
I_JMP	./igen.h	601;"	d
I_LABEL	./igen.h	643;"	d
I_LDEPSILON	./igen.h	770;"	d
I_LDR1	./igen.h	750;"	d
I_LDR10	./igen.h	759;"	d
I_LDR11	./igen.h	760;"	d
I_LDR12	./igen.h	761;"	d
I_LDR13	./igen.h	762;"	d
I_LDR14	./igen.h	763;"	d
I_LDR15	./igen.h	764;"	d
I_LDR16	./igen.h	765;"	d
I_LDR2	./igen.h	751;"	d
I_LDR3	./igen.h	752;"	d
I_LDR4	./igen.h	753;"	d
I_LDR5	./igen.h	754;"	d
I_LDR6	./igen.h	755;"	d
I_LDR7	./igen.h	756;"	d
I_LDR8	./igen.h	757;"	d
I_LDR9	./igen.h	758;"	d
I_LDRABS	./igen.h	771;"	d
I_LDRNEG	./igen.h	772;"	d
I_LEAL	./igen.h	556;"	d
I_LEAVE	./igen.h	609;"	d
I_MODL	./igen.h	570;"	d
I_MOVA	./igen.h	678;"	d
I_MOVA	./igen.h	781;"	d
I_MOVABSQ	./igen.h	773;"	d
I_MOVB	./igen.h	552;"	d
I_MOVL	./igen.h	549;"	d
I_MOVQ	./igen.h	743;"	d
I_MOVQL	./igen.h	776;"	d
I_MOVSBL	./igen.h	551;"	d
I_MOVSLQ	./igen.h	775;"	d
I_MOVW	./igen.h	553;"	d
I_MOVZBL	./igen.h	550;"	d
I_MOVZWL	./igen.h	554;"	d
I_MULTFI_SUBR	./igen.h	528;"	d
I_NEGL	./igen.h	588;"	d
I_NEVENT_JMP	./igen.h	650;"	d
I_NEXT_EVENT	./igen.h	649;"	d
I_NEXT_NCHG_EVENT	./igen.h	658;"	d
I_NOTL	./igen.h	587;"	d
I_ORL	./igen.h	575;"	d
I_POPA	./igen.h	683;"	d
I_POPA	./igen.h	785;"	d
I_POPL	./igen.h	611;"	d
I_POPQ	./igen.h	748;"	d
I_PORT_IND_JMP	./igen.h	647;"	d
I_PROLOGUE	./igen.h	542;"	d
I_PUSHA	./igen.h	682;"	d
I_PUSHA	./igen.h	786;"	d
I_PUSHL	./igen.h	610;"	d
I_PUSHQ	./igen.h	747;"	d
I_REAL_COND_JMP	./igen.h	513;"	d
I_RETURN	./igen.h	608;"	d
I_SAHF	./igen.h	591;"	d
I_SALL	./igen.h	583;"	d
I_SARL	./igen.h	584;"	d
I_SARU	./igen.h	580;"	d
I_SETA	./igen.h	667;"	d
I_SETAE	./igen.h	668;"	d
I_SETB	./igen.h	669;"	d
I_SETBE	./igen.h	670;"	d
I_SETE	./igen.h	640;"	d
I_SETG	./igen.h	664;"	d
I_SETGE	./igen.h	663;"	d
I_SETL	./igen.h	666;"	d
I_SETLE	./igen.h	665;"	d
I_SETNE	./igen.h	662;"	d
I_SGN_DIVL	./igen.h	569;"	d
I_SGN_MODL	./igen.h	571;"	d
I_SHLL	./igen.h	581;"	d
I_SHRL	./igen.h	582;"	d
I_SHRU	./igen.h	579;"	d
I_STOREA	./igen.h	679;"	d
I_STOREA	./igen.h	782;"	d
I_STOREB	./igen.h	559;"	d
I_STOREL	./igen.h	558;"	d
I_STOREQ	./igen.h	744;"	d
I_STOREQL	./igen.h	777;"	d
I_STOREW	./igen.h	560;"	d
I_STREAL	./igen.h	766;"	d
I_SUBA	./igen.h	680;"	d
I_SUBA	./igen.h	783;"	d
I_SUBL	./igen.h	564;"	d
I_SUBQ	./igen.h	745;"	d
I_SUSPEND	./igen.h	531;"	d
I_TESTB	./igen.h	597;"	d
I_TESTL	./igen.h	598;"	d
I_TSKJMP	./igen.h	516;"	d
I_TSKRET_JMP	./igen.h	517;"	d
I_UNKN	./igen.h	505;"	d
I_XORL	./igen.h	576;"	d
I_XORNREAL	./igen.h	768;"	d
I_XORSREAL	./igen.h	767;"	d
JOIN	./v.h	785;"	d
JenkinsFree	./fstapi.c	/^void JenkinsFree(void *base_i, uint32_t hashmask)$/;"	f	signature:(void *base_i, uint32_t hashmask)
JenkinsIns	./fstapi.c	/^void **JenkinsIns(void *base_i, const unsigned char *mem, uint32_t length, uint32_t hashmask)$/;"	f	signature:(void *base_i, const unsigned char *mem, uint32_t length, uint32_t hashmask)
JudyHSFreeArray	./fstapi.c	91;"	d	file:
JudyHSIns	./fstapi.c	90;"	d	file:
KB	./lz4.c	238;"	d	file:
LARGE	./v.h	786;"	d
LASTLITERALS	./lz4.c	234;"	d	file:
LASTOP	./v.h	886;"	d
LAST_GSYM	./v.h	870;"	d
LAST_INSN	./igen.h	676;"	d
LAST_INSN	./igen.h	779;"	d
LAST_VPIOBJTYP	./v_acc.c	7936;"	d	file:
LCB	./v.h	567;"	d
LEFT	./v.h	5237;"	d
LG2_DIV_LG10	./v.h	367;"	d
LG2_DIV_LG10	./v.h	386;"	d
LHS_DECL	./v.h	542;"	d
LHS_PROC	./v.h	543;"	d
LITSTR	./v.h	553;"	d
LOCALPARAM	./v.h	788;"	d
LOGIC	./v.h	787;"	d
LONGCINTBITS	./v.h	344;"	d
LONGINT	./v.h	789;"	d
LOW_STREN	./v.h	443;"	d
LPAR	./v.h	563;"	d
LSB	./v.h	565;"	d
LSETBRAK	./v_cvr.c	2211;"	d	file:
LSQBRAK	./v_cvr.c	2213;"	d	file:
LSTAT_FOLLOWS_SLASHED_SYMLINK	./config.h	235;"	d
LWBITS	./v.h	357;"	d
LWBITS	./v.h	374;"	d
LZ4_64KLIMIT	./lz4.c	242;"	d	file:
LZ4_ARCH64	./lz4.c	62;"	d	file:
LZ4_ARCH64	./lz4.c	64;"	d	file:
LZ4_BIG_ENDIAN	./lz4.c	74;"	d	file:
LZ4_BIG_ENDIAN	./lz4.c	77;"	d	file:
LZ4_BIG_ENDIAN	./lz4.c	82;"	d	file:
LZ4_COMPRESSBOUND	./lz4.h	86;"	d
LZ4_COPY8	./lz4.c	278;"	d	file:
LZ4_COPYSTEP	./lz4.c	277;"	d	file:
LZ4_Data_Structure	./lz4.c	/^} LZ4_Data_Structure;$/;"	t	typeref:struct:__anon5	file:
LZ4_FORCE_SW_BITCOUNT	./lz4.c	98;"	d	file:
LZ4_FORCE_UNALIGNED_ACCESS	./lz4.c	93;"	d	file:
LZ4_HASHLOG	./lz4.c	227;"	d	file:
LZ4_MAX_INPUT_SIZE	./lz4.h	85;"	d
LZ4_NbCommonBytes	./lz4.c	/^FORCE_INLINE int LZ4_NbCommonBytes (register U32 val)$/;"	f	signature:(register U32 val)
LZ4_NbCommonBytes	./lz4.c	/^FORCE_INLINE int LZ4_NbCommonBytes (register U64 val)$/;"	f	signature:(register U64 val)
LZ4_READ_LITTLEENDIAN_16	./lz4.c	281;"	d	file:
LZ4_READ_LITTLEENDIAN_16	./lz4.c	284;"	d	file:
LZ4_SECURECOPY	./lz4.c	297;"	d	file:
LZ4_VERSION_MAJOR	./lz4.h	44;"	d
LZ4_VERSION_MINOR	./lz4.h	45;"	d
LZ4_VERSION_RELEASE	./lz4.h	46;"	d
LZ4_WILDCOPY	./lz4.c	293;"	d	file:
LZ4_WILDCOPY	./lz4.c	295;"	d	file:
LZ4_WRITE_LITTLEENDIAN_16	./lz4.c	282;"	d	file:
LZ4_WRITE_LITTLEENDIAN_16	./lz4.c	285;"	d	file:
LZ4_compress	./lz4.c	/^int LZ4_compress(const char* source, char* dest, int inputSize)$/;"	f	signature:(const char* source, char* dest, int inputSize)
LZ4_compressBound	./lz4.h	/^static inline int LZ4_compressBound(int isize)  { return LZ4_COMPRESSBOUND(isize); }$/;"	f	signature:(int isize)
LZ4_compress_continue	./lz4.c	/^int LZ4_compress_continue (void* LZ4_Data, const char* source, char* dest, int inputSize)$/;"	f	signature:(void* LZ4_Data, const char* source, char* dest, int inputSize)
LZ4_compress_generic	./lz4.c	/^FORCE_INLINE int LZ4_compress_generic($/;"	f	signature:( void* ctx, const char* source, char* dest, int inputSize, int maxOutputSize, limitedOutput_directive limitedOutput, tableType_t tableType, prefix64k_directive prefix)
LZ4_compress_limitedOutput	./lz4.c	/^int LZ4_compress_limitedOutput(const char* source, char* dest, int inputSize, int maxOutputSize)$/;"	f	signature:(const char* source, char* dest, int inputSize, int maxOutputSize)
LZ4_compress_limitedOutput_continue	./lz4.c	/^int LZ4_compress_limitedOutput_continue (void* LZ4_Data, const char* source, char* dest, int inputSize, int maxOutputSize)$/;"	f	signature:(void* LZ4_Data, const char* source, char* dest, int inputSize, int maxOutputSize)
LZ4_compress_limitedOutput_withState	./lz4.c	/^int LZ4_compress_limitedOutput_withState (void* state, const char* source, char* dest, int inputSize, int maxOutputSize)$/;"	f	signature:(void* state, const char* source, char* dest, int inputSize, int maxOutputSize)
LZ4_compress_withState	./lz4.c	/^int LZ4_compress_withState (void* state, const char* source, char* dest, int inputSize)$/;"	f	signature:(void* state, const char* source, char* dest, int inputSize)
LZ4_create	./lz4.c	/^void* LZ4_create (const char* inputBuffer)$/;"	f	signature:(const char* inputBuffer)
LZ4_decompress_fast	./lz4.c	/^int LZ4_decompress_fast(const char* source, char* dest, int outputSize)$/;"	f	signature:(const char* source, char* dest, int outputSize)
LZ4_decompress_fast_withPrefix64k	./lz4.c	/^int LZ4_decompress_fast_withPrefix64k(const char* source, char* dest, int outputSize)$/;"	f	signature:(const char* source, char* dest, int outputSize)
LZ4_decompress_generic	./lz4.c	/^FORCE_INLINE int LZ4_decompress_generic($/;"	f	signature:( const char* source, char* dest, int inputSize, int outputSize, int endOnInput, int prefix64k, int partialDecoding, int targetOutputSize )
LZ4_decompress_safe	./lz4.c	/^int LZ4_decompress_safe(const char* source, char* dest, int inputSize, int maxOutputSize)$/;"	f	signature:(const char* source, char* dest, int inputSize, int maxOutputSize)
LZ4_decompress_safe_partial	./lz4.c	/^int LZ4_decompress_safe_partial(const char* source, char* dest, int inputSize, int targetOutputSize, int maxOutputSize)$/;"	f	signature:(const char* source, char* dest, int inputSize, int targetOutputSize, int maxOutputSize)
LZ4_decompress_safe_withPrefix64k	./lz4.c	/^int LZ4_decompress_safe_withPrefix64k(const char* source, char* dest, int inputSize, int maxOutputSize)$/;"	f	signature:(const char* source, char* dest, int inputSize, int maxOutputSize)
LZ4_free	./lz4.c	/^int LZ4_free (void* LZ4_Data)$/;"	f	signature:(void* LZ4_Data)
LZ4_getPosition	./lz4.c	/^FORCE_INLINE const BYTE* LZ4_getPosition(const BYTE* p, void* tableBase, tableType_t tableType, const BYTE* srcBase)$/;"	f	signature:(const BYTE* p, void* tableBase, tableType_t tableType, const BYTE* srcBase)
LZ4_getPositionOnHash	./lz4.c	/^FORCE_INLINE const BYTE* LZ4_getPositionOnHash(U32 h, void* tableBase, tableType_t tableType, const BYTE* srcBase)$/;"	f	signature:(U32 h, void* tableBase, tableType_t tableType, const BYTE* srcBase)
LZ4_hashPosition	./lz4.c	/^FORCE_INLINE int LZ4_hashPosition(const BYTE* p, tableType_t tableType) { return LZ4_hashSequence(A32(p), tableType); }$/;"	f	signature:(const BYTE* p, tableType_t tableType)
LZ4_hashSequence	./lz4.c	/^FORCE_INLINE int LZ4_hashSequence(U32 sequence, tableType_t tableType)$/;"	f	signature:(U32 sequence, tableType_t tableType)
LZ4_init	./lz4.c	/^FORCE_INLINE void LZ4_init(LZ4_Data_Structure* lz4ds, const BYTE* base)$/;"	f	signature:(LZ4_Data_Structure* lz4ds, const BYTE* base)
LZ4_minLength	./lz4.c	/^static const int LZ4_minLength = (MFLIMIT+1);$/;"	v	file:
LZ4_putPosition	./lz4.c	/^FORCE_INLINE void LZ4_putPosition(const BYTE* p, void* tableBase, tableType_t tableType, const BYTE* srcBase)$/;"	f	signature:(const BYTE* p, void* tableBase, tableType_t tableType, const BYTE* srcBase)
LZ4_putPositionOnHash	./lz4.c	/^FORCE_INLINE void LZ4_putPositionOnHash(const BYTE* p, U32 h, void* tableBase, tableType_t tableType, const BYTE* srcBase)$/;"	f	signature:(const BYTE* p, U32 h, void* tableBase, tableType_t tableType, const BYTE* srcBase)
LZ4_resetStreamState	./lz4.c	/^int LZ4_resetStreamState(void* state, const char* inputBuffer)$/;"	f	signature:(void* state, const char* inputBuffer)
LZ4_sizeofState	./lz4.c	/^int LZ4_sizeofState() { return 1 << MEMORY_USAGE; }$/;"	f
LZ4_sizeofStreamState	./lz4.c	/^int LZ4_sizeofStreamState()$/;"	f
LZ4_slideInputBuffer	./lz4.c	/^char* LZ4_slideInputBuffer (void* LZ4_Data)$/;"	f	signature:(void* LZ4_Data)
LZ4_uncompress	./lz4.h	/^static inline int LZ4_uncompress (const char* source, char* dest, int outputSize) { return LZ4_decompress_fast(source, dest, outputSize); }$/;"	f	signature:(const char* source, char* dest, int outputSize)
LZ4_uncompress_unknownOutputSize	./lz4.h	/^static inline int LZ4_uncompress_unknownOutputSize (const char* source, char* dest, int isize, int maxOutputSize) { return LZ4_decompress_safe(source, dest, isize, maxOutputSize); }$/;"	f	signature:(const char* source, char* dest, int isize, int maxOutputSize)
MACROMODULE	./v.h	790;"	d
MAX64_CONSTANT	./v_bbopt.c	811;"	d	file:
MAXBTDPTH	./v.h	242;"	d
MAXCIRDPTH	./v.h	232;"	d
MAXD_LOG	./lz4.c	245;"	d	file:
MAXEMSGNUM	./v.h	252;"	d
MAXFCNEST	./v.h	212;"	d
MAXFILNEST	./v.h	220;"	d
MAXFILS	./v.h	219;"	d
MAXGLBCOMPS	./v.h	222;"	d
MAXINCDIRS	./v.h	224;"	d
MAXITDPTH	./v.h	231;"	d
MAXLBEXTS	./v.h	223;"	d
MAXLEVELS	./v.h	221;"	d
MAXNOOPTMODS	./v.h	225;"	d
MAXNUMBITS	./v.h	209;"	d
MAXNUMPORTS	./v.h	210;"	d
MAXPRPSTNEST	./v.h	241;"	d
MAXTIME	./v.h	352;"	d
MAXUPRTS	./v.h	226;"	d
MAXVERIUSERTFS	./v.h	228;"	d
MAXWSWRDS	./v.h	359;"	d
MAXWSWRDS	./v.h	377;"	d
MAXXNEST	./v.h	211;"	d
MAX_ARRAY_DIM	./v.h	2301;"	d
MAX_CASE_JMPTAB	./v_bbgen.c	8281;"	d	file:
MAX_COPY	./fastlz.c	85;"	d	file:
MAX_DISTANCE	./fastlz.c	114;"	d	file:
MAX_DISTANCE	./fastlz.c	115;"	d	file:
MAX_DISTANCE	./fastlz.c	87;"	d	file:
MAX_DISTANCE	./lz4.c	246;"	d	file:
MAX_DMPPRTS_FILES	./v.h	250;"	d
MAX_ERRORS	./v.h	251;"	d
MAX_FARDISTANCE	./fastlz.c	116;"	d	file:
MAX_LEN	./fastlz.c	86;"	d	file:
MB	./lz4.c	239;"	d	file:
MD_DOWNITPS	./v.h	1386;"	d
MD_DPIP	./v.h	1387;"	d
MD_INUM	./v.h	1382;"	d
MD_ITP	./v.h	1384;"	d
MD_MDP	./v.h	1383;"	d
MD_UPIDP	./v.h	1385;"	d
MEDIUM	./v.h	791;"	d
MEMORY_USAGE	./lz4.c	44;"	d	file:
MEM_INIT	./lz4.c	164;"	d	file:
MFLIMIT	./lz4.c	235;"	d	file:
MINMATCH	./lz4.c	231;"	d	file:
MINUS	./v.h	585;"	d
MINUS_EQ	./v.h	658;"	d
ML_BITS	./lz4.c	248;"	d	file:
ML_MASK	./lz4.c	249;"	d	file:
MOD	./v.h	597;"	d
MODULE	./v.h	792;"	d
MOD_EQ	./v.h	661;"	d
MOVA_STR	./igen.h	728;"	d
MOVA_STR	./igen.h	881;"	d
MR2_SPILLNDX_SPILL	./igen.h	905;"	d
MR2_SPILLNDX_SPILLNDX	./igen.h	907;"	d
MR2_SPILLNDX_X86NDX	./igen.h	908;"	d
MR2_SPILL_SPILL	./igen.h	902;"	d
MR2_SPILL_SPILLNDX	./igen.h	903;"	d
MR2_SPILL_SPILL_NOMEM	./igen.h	911;"	d
MR2_SPILL_X86NDX	./igen.h	904;"	d
MR2_UNKN	./igen.h	901;"	d
MR2_X86NDX_SPILL	./igen.h	906;"	d
MR2_X86NDX_SPILLNDX	./igen.h	909;"	d
MR2_X86NDX_X86NDX	./igen.h	910;"	d
MSGTRUNCLEN	./v.h	217;"	d
MUSTFREEWORDS	./v.h	203;"	d
MY_FOPEN_MAX	./v.h	254;"	d
MY_LONG_MAX	./v.h	262;"	d
MY_LONG_MAX2	./v.h	259;"	d
MY_LONG_MIN	./v.h	263;"	d
MY_LONG_SMAX	./v_cnv.c	3914;"	d	file:
MY_LONG_SMIN	./v_cnv.c	3915;"	d	file:
MY_MAXDOUBLE	./v_cnv.c	3911;"	d	file:
MY_MINDOUBLE	./v_cnv.c	3913;"	d	file:
NACC_CONS	./v_acc.c	8305;"	d	file:
NCGFCONS	./v_acc.c	8154;"	d	file:
NCHG_ALL_CHGED	./v.h	1323;"	d
NCHG_DMPP_NOTCHGED	./v.h	1325;"	d
NCHG_DMPP_VARNOW	./v.h	1324;"	d
NCHG_DMPVARED	./v.h	1322;"	d
NCHG_DMPVARNOW	./v.h	1320;"	d
NCHG_DMPVNOTCHGED	./v.h	1321;"	d
NCMDOPTS	./cvc.c	3797;"	d	file:
NDBCMDS	./v_dbg.c	2006;"	d	file:
NEGEDGE	./v.h	793;"	d
NHLPTOPS	./v_dbg.c	2632;"	d	file:
NINFOARGS	./v_dbg2.c	1103;"	d	file:
NL	./v.h	1079;"	d
NLO_4STATE_TO2	./igen.h	451;"	d
NLO_BF0_HIZ	./igen.h	366;"	d
NLO_BF0_PULL0	./igen.h	367;"	d
NLO_BF0_PULL1	./igen.h	368;"	d
NLO_BF0_STRONGX	./igen.h	365;"	d
NLO_BF0_STRVAL	./igen.h	364;"	d
NLO_BF0_SUPPLY0	./igen.h	369;"	d
NLO_BF0_SUPPLY1	./igen.h	370;"	d
NLO_BF1_HIZ	./igen.h	373;"	d
NLO_BF1_PULL0	./igen.h	374;"	d
NLO_BF1_PULL1	./igen.h	375;"	d
NLO_BF1_STRONGX	./igen.h	372;"	d
NLO_BF1_STRVAL	./igen.h	371;"	d
NLO_BF1_SUPPLY0	./igen.h	376;"	d
NLO_BF1_SUPPLY1	./igen.h	377;"	d
NLO_CURTHD	./igen.h	328;"	d
NLO_CUR_TEVP	./igen.h	341;"	d
NLO_DBGSTR	./igen.h	338;"	d
NLO_DELAYED_MIPD	./igen.h	323;"	d
NLO_EPAIR_NEG_TAB	./igen.h	332;"	d
NLO_EPAIR_POS_TAB	./igen.h	331;"	d
NLO_EPAIR_TAB	./igen.h	330;"	d
NLO_EPSILON	./igen.h	333;"	d
NLO_EVENT_COVER	./igen.h	452;"	d
NLO_G3_BITREDAND	./igen.h	434;"	d
NLO_G3_BITREDOR	./igen.h	436;"	d
NLO_G3_BITREDXOR	./igen.h	438;"	d
NLO_G3_NAND	./igen.h	435;"	d
NLO_G3_NOR	./igen.h	437;"	d
NLO_G3_REDXNOR	./igen.h	439;"	d
NLO_G4_BITREDAND	./igen.h	441;"	d
NLO_G4_BITREDOR	./igen.h	443;"	d
NLO_G4_BITREDXOR	./igen.h	445;"	d
NLO_G4_NAND	./igen.h	442;"	d
NLO_G4_NOR	./igen.h	444;"	d
NLO_G4_REDXNOR	./igen.h	446;"	d
NLO_GBITREDAND	./igen.h	342;"	d
NLO_GBITREDOR	./igen.h	344;"	d
NLO_GBITREDXOR	./igen.h	346;"	d
NLO_GBUFVAL	./igen.h	361;"	d
NLO_GNAND	./igen.h	343;"	d
NLO_GNOR	./igen.h	345;"	d
NLO_GNOTVAL	./igen.h	362;"	d
NLO_GREDXNOR	./igen.h	347;"	d
NLO_HIGH_USED	./igen.h	462;"	d
NLO_HIGH_USED	./igen.h	464;"	d
NLO_IDP	./igen.h	340;"	d
NLO_INST_INDX	./igen.h	339;"	d
NLO_IS_XEDGE_TAB	./igen.h	461;"	d
NLO_MASKTAB	./igen.h	329;"	d
NLO_NB_TE_ENDP	./igen.h	448;"	d
NLO_NCHGED_I1	./igen.h	321;"	d
NLO_NCHGED_I2	./igen.h	322;"	d
NLO_NCHG_FUTEND	./igen.h	394;"	d
NLO_NCHG_FUTHDR	./igen.h	395;"	d
NLO_NEWGVAL	./igen.h	325;"	d
NLO_NEWINPUTVAL	./igen.h	327;"	d
NLO_NEXT_NCHGLP	./igen.h	397;"	d
NLO_NF0_HIZ	./igen.h	381;"	d
NLO_NF0_PULL0	./igen.h	382;"	d
NLO_NF0_PULL1	./igen.h	383;"	d
NLO_NF0_STRONGX	./igen.h	380;"	d
NLO_NF0_STRVAL	./igen.h	379;"	d
NLO_NF0_SUPPLY0	./igen.h	384;"	d
NLO_NF0_SUPPLY1	./igen.h	385;"	d
NLO_NF1_HIZ	./igen.h	388;"	d
NLO_NF1_PULL0	./igen.h	389;"	d
NLO_NF1_PULL1	./igen.h	390;"	d
NLO_NF1_STRONGX	./igen.h	387;"	d
NLO_NF1_STRVAL	./igen.h	386;"	d
NLO_NF1_SUPPLY0	./igen.h	391;"	d
NLO_NF1_SUPPLY1	./igen.h	392;"	d
NLO_NONE	./igen.h	320;"	d
NLO_OLDGVAL	./igen.h	324;"	d
NLO_ORM_2_0	./igen.h	349;"	d
NLO_ORM_2_1	./igen.h	350;"	d
NLO_ORM_2_2	./igen.h	351;"	d
NLO_ORM_2_3	./igen.h	352;"	d
NLO_ORM_3_0	./igen.h	353;"	d
NLO_ORM_3_1	./igen.h	354;"	d
NLO_ORM_3_2	./igen.h	355;"	d
NLO_ORM_3_3	./igen.h	356;"	d
NLO_ORM_4_0	./igen.h	357;"	d
NLO_ORM_4_1	./igen.h	358;"	d
NLO_ORM_4_2	./igen.h	359;"	d
NLO_ORM_4_3	./igen.h	360;"	d
NLO_P0_TE_ENDP	./igen.h	410;"	d
NLO_P0_TE_HDRP	./igen.h	409;"	d
NLO_PDMINDEL	./igen.h	405;"	d
NLO_PDMINDEL_ADR	./igen.h	404;"	d
NLO_PDMINDEL_HIGH	./igen.h	407;"	d
NLO_POPCOUNT_BYTE	./igen.h	457;"	d
NLO_QCOL_COMB	./igen.h	429;"	d
NLO_SAVE_SCP_TSKP	./igen.h	450;"	d
NLO_SBO_BITREDAND	./igen.h	419;"	d
NLO_SBO_DIV	./igen.h	417;"	d
NLO_SBO_MOD	./igen.h	418;"	d
NLO_SBO_NAND	./igen.h	431;"	d
NLO_SBO_NOR	./igen.h	432;"	d
NLO_SBO_P1	./igen.h	411;"	d
NLO_SBO_P2	./igen.h	412;"	d
NLO_SBO_P3	./igen.h	413;"	d
NLO_SBO_P4	./igen.h	414;"	d
NLO_SBO_RELCEQ	./igen.h	423;"	d
NLO_SBO_RELCNEQ	./igen.h	424;"	d
NLO_SBO_RELGT	./igen.h	420;"	d
NLO_SBO_RELLE	./igen.h	421;"	d
NLO_SBO_RELLT	./igen.h	422;"	d
NLO_SBO_SHIFT	./igen.h	425;"	d
NLO_SBO_TIMES	./igen.h	416;"	d
NLO_SBO_X_BITOR	./igen.h	456;"	d
NLO_SCP_TSKP	./igen.h	449;"	d
NLO_SIMTIME	./igen.h	400;"	d
NLO_SIMTIME_HIGH	./igen.h	402;"	d
NLO_SLOTEND_ACTION	./igen.h	334;"	d
NLO_STMT_COVER	./igen.h	453;"	d
NLO_STMT_SUSPEND	./igen.h	335;"	d
NLO_STREN_MAP_TAB	./igen.h	337;"	d
NLO_THDJMP_RET_ADDR_TAB	./igen.h	336;"	d
NLO_UDP_NOZTAB	./igen.h	399;"	d
NLO_UDP_UVALTAB	./igen.h	398;"	d
NLO_UN_P1	./igen.h	427;"	d
NLO_UN_P2	./igen.h	428;"	d
NLO_XEDGE_SET_NEG_TAB	./igen.h	459;"	d
NLO_XEDGE_SET_POS_TAB	./igen.h	458;"	d
NLO_XEDGE_SET_TAB	./igen.h	460;"	d
NOEDGE	./v.h	1130;"	d
NONL	./v.h	1078;"	d
NONWIRE_ST	./v.h	923;"	d
NONXZ_CONBASE	./v_src2.c	3726;"	d	file:
NON_IO	./v.h	930;"	d
NOT	./v.h	578;"	d
NOTANOP	./v.h	1082;"	d
NOTPTHOP	./v.h	1095;"	d
NOTREALOP	./v.h	1093;"	d
NOT_ELIGIBLE_ASSIGNS_DONT_MATCH	./v_xprop.c	324;"	d	file:
NOT_ELIGIBLE_CASE_DUP	./v_xprop.c	331;"	d	file:
NOT_ELIGIBLE_CASE_EXPR	./v_xprop.c	332;"	d	file:
NOT_ELIGIBLE_IF_EXPR	./v_xprop.c	333;"	d	file:
NOT_ELIGIBLE_ILLEGAL_STMT	./v_xprop.c	319;"	d	file:
NOT_ELIGIBLE_LHS_ARRAY	./v_xprop.c	330;"	d	file:
NOT_ELIGIBLE_LHS_COND	./v_xprop.c	321;"	d	file:
NOT_ELIGIBLE_LHS_RHS_PROCA	./v_xprop.c	320;"	d	file:
NOT_ELIGIBLE_LHS_VARNDX	./v_xprop.c	325;"	d	file:
NOT_ELIGIBLE_LHS_XMR	./v_xprop.c	326;"	d	file:
NOT_ELIGIBLE_NB_NOT_CONST	./v_xprop.c	327;"	d	file:
NOT_ELIGIBLE_NB_NOT_SAME	./v_xprop.c	328;"	d	file:
NOT_ELIGIBLE_NET_FORCED	./v_xprop.c	329;"	d	file:
NOT_ELIGIBLE_NO_XZ_SELECT	./v_xprop.c	323;"	d	file:
NOT_ELIGIBLE_REAL	./v_xprop.c	322;"	d	file:
NO_SPLIT_INST_MAX	./v.h	1352;"	d
NO_STREN	./v.h	465;"	d
NO_UNCPULL	./v.h	889;"	d
NO_VAL	./v.h	480;"	d
NPCHG_NONE	./v.h	525;"	d
NPCHG_PTHSRC	./v.h	528;"	d
NPCHG_TCCHK	./v.h	527;"	d
NPCHG_TCSTART	./v.h	526;"	d
NPRIMS	./cvc.c	6477;"	d	file:
NP_BIDICONN	./v.h	506;"	d
NP_BIDMDPRT	./v.h	507;"	d
NP_CONTA	./v.h	491;"	d
NP_GATE	./v.h	490;"	d
NP_ICONN	./v.h	493;"	d
NP_MDPRT	./v.h	495;"	d
NP_MIPD_NCHG	./v.h	497;"	d
NP_PB_ICONN	./v.h	492;"	d
NP_PB_MDPRT	./v.h	494;"	d
NP_PROC_FILT	./v.h	539;"	d
NP_PROC_GREF	./v.h	538;"	d
NP_PROC_INMOD	./v.h	537;"	d
NP_PULL	./v.h	500;"	d
NP_TCHG	./v.h	498;"	d
NP_TFRWARG	./v.h	502;"	d
NP_TRAN	./v.h	505;"	d
NP_TRANIF	./v.h	499;"	d
NP_VPIPUTV	./v.h	503;"	d
NSETARGS	./v_dbg2.c	992;"	d	file:
NSHNDS	./cvc.c	7431;"	d	file:
NSKEYWDS	./v_sdf.c	7763;"	d	file:
NTYPARGS	./v_dbg2.c	2658;"	d	file:
NUMBER	./v.h	549;"	d
NUM_ALLOCABLE_REGS	./igen.h	715;"	d
NUM_ALLOCABLE_REGS	./igen.h	861;"	d
NUM_INSNS	./v_cvcms.c	3035;"	d	file:
NVKEYWDS	./v_ms.c	4374;"	d	file:
NVOPTYPS	./v_vpi3.c	7551;"	d	file:
NVOTYPS	./v_vpi3.c	7348;"	d	file:
NVPTYPS	./v_vpi3.c	7484;"	d	file:
NX_ARR	./v.h	404;"	d
NX_CT	./v.h	403;"	d
NX_DWIR	./v.h	405;"	d
NX_SCALWIR	./v.h	407;"	d
NX_WIR	./v.h	406;"	d
N_BIT	./v.h	909;"	d
N_BYTE	./v.h	916;"	d
N_CHANDLE	./v.h	919;"	d
N_CINT	./v.h	911;"	d
N_EVENT	./v.h	915;"	d
N_INT	./v.h	910;"	d
N_LOGIC	./v.h	907;"	d
N_LONGCINT	./v.h	918;"	d
N_REAL	./v.h	914;"	d
N_REG	./v.h	906;"	d
N_SHORTCINT	./v.h	917;"	d
N_STRING	./v.h	920;"	d
N_SUPPLY0	./v.h	903;"	d
N_SUPPLY1	./v.h	904;"	d
N_TIME	./v.h	913;"	d
N_TRI	./v.h	895;"	d
N_TRI0	./v.h	896;"	d
N_TRI1	./v.h	897;"	d
N_TRIAND	./v.h	898;"	d
N_TRIOR	./v.h	899;"	d
N_TRIREG	./v.h	900;"	d
N_WA	./v.h	901;"	d
N_WIRE	./v.h	894;"	d
N_WO	./v.h	902;"	d
OCFG_EXL_INST	./v.h	1362;"	d
OCFG_EXL_MOD	./v.h	1360;"	d
OCFG_EXL_TREE	./v.h	1361;"	d
OCFG_INST	./v.h	1358;"	d
OCFG_MOD	./v.h	1356;"	d
OCFG_TREE	./v.h	1357;"	d
OCFG_UNKN	./v.h	1355;"	d
OCPRP_ACC_ANNGD	./v.h	1372;"	d
OCPRP_ACC_ANNPD	./v.h	1371;"	d
OCPRP_ACC_CBK	./v.h	1370;"	d
OCPRP_ACC_RW	./v.h	1369;"	d
OCPRP_EVENT	./v.h	1366;"	d
OCPRP_STMT	./v.h	1367;"	d
OCPRP_TGL	./v.h	1365;"	d
OCPRP_XPROP	./v.h	1376;"	d
OCPRP_XPROP2	./v.h	1377;"	d
OCPRP_XPROP_AND_OR_X	./v.h	1378;"	d
OFDT	./v.h	194;"	d
OFLW_REG	./igen.h	716;"	d
OFLW_REG	./igen.h	862;"	d
OPEMPTY	./v.h	554;"	d
OPEVCOMMAOR	./v.h	642;"	d
OPEVOR	./v.h	641;"	d
OPNEGEDGE	./v.h	644;"	d
OPPOSEDGE	./v.h	643;"	d
OR_EQ	./v.h	663;"	d
OUTLINLEN	./v.h	201;"	d
OUTPUT	./v.h	794;"	d
PACKAGE	./config.h	241;"	d
PACKAGE_BUGREPORT	./config.h	244;"	d
PACKAGE_NAME	./config.h	247;"	d
PACKAGE_STRING	./config.h	250;"	d
PACKAGE_TARNAME	./config.h	253;"	d
PACKAGE_URL	./config.h	256;"	d
PACKAGE_VERSION	./config.h	259;"	d
PARAMETER	./v.h	795;"	d
PARENT	./v.h	5236;"	d
PARTITION_MAX_INSN_COUNT	./igen.h	1873;"	d
PARTSEL	./v.h	634;"	d
PARTSEL_NDX_MINUS	./v.h	636;"	d
PARTSEL_NDX_PLUS	./v.h	635;"	d
PASS_REG1	./igen.h	874;"	d
PASS_REG2	./igen.h	875;"	d
PASS_REG3	./igen.h	876;"	d
PASS_REG4	./igen.h	877;"	d
PASS_REG5	./igen.h	878;"	d
PASS_REG6	./igen.h	879;"	d
PATH_MAX	./fstapi.c	76;"	d	file:
PLUS	./v.h	584;"	d
PLUS_EQ	./v.h	657;"	d
PNP_CONTADEL	./v.h	517;"	d
PNP_GATEDEL	./v.h	516;"	d
PNP_NETDEL	./v.h	518;"	d
PNP_PATHDEL	./v.h	520;"	d
PNP_PROCDCTRL	./v.h	519;"	d
PNP_TCHKP1	./v.h	521;"	d
PNP_TCHKP2	./v.h	522;"	d
POLAR_MINUS	./v.h	1113;"	d
POLAR_NONE	./v.h	1111;"	d
POLAR_PLUS	./v.h	1112;"	d
POPA_STR	./igen.h	731;"	d
POPA_STR	./igen.h	884;"	d
POPEN_STACK_SIZE	./v_asmlnk.c	10556;"	d	file:
POSEDGE	./v.h	796;"	d
POWER	./v.h	595;"	d
PPTHCON	./v.h	613;"	d
PPvoid_t	./fstapi.c	/^typedef void **PPvoid_t;$/;"	t	file:
PRIMITIVE	./v.h	797;"	d
PTHOP	./v.h	1094;"	d
PTH_FULL	./v.h	1108;"	d
PTH_NONE	./v.h	1109;"	d
PTH_PAR	./v.h	1107;"	d
PULL0	./v.h	798;"	d
PULL1	./v.h	799;"	d
PURE	./v.h	800;"	d
PUSHA_STR	./igen.h	729;"	d
PUSHA_STR	./igen.h	882;"	d
PVH_MAGIC	./v.h	239;"	d
Pcvoid_t	./fstapi.c	/^typedef const void *Pcvoid_t;$/;"	t	file:
Pvoid_t	./fstapi.c	/^typedef void *Pvoid_t;$/;"	t	file:
QCOL	./v.h	633;"	d
QMARK	./v_src3.c	7127;"	d	file:
QUEST	./v.h	632;"	d
R10	./igen.h	804;"	d
R10B	./igen.h	823;"	d
R10D	./igen.h	849;"	d
R10W	./igen.h	839;"	d
R11	./igen.h	805;"	d
R11B	./igen.h	824;"	d
R11D	./igen.h	850;"	d
R11W	./igen.h	840;"	d
R12	./igen.h	806;"	d
R12B	./igen.h	825;"	d
R12D	./igen.h	851;"	d
R12W	./igen.h	841;"	d
R13	./igen.h	807;"	d
R13B	./igen.h	826;"	d
R13D	./igen.h	852;"	d
R13W	./igen.h	842;"	d
R14	./igen.h	808;"	d
R14B	./igen.h	827;"	d
R14D	./igen.h	853;"	d
R14W	./igen.h	843;"	d
R15	./igen.h	809;"	d
R15B	./igen.h	828;"	d
R15D	./igen.h	854;"	d
R15W	./igen.h	844;"	d
R8	./igen.h	802;"	d
R8B	./igen.h	821;"	d
R8D	./igen.h	847;"	d
R8W	./igen.h	837;"	d
R9	./igen.h	803;"	d
R9B	./igen.h	822;"	d
R9D	./igen.h	848;"	d
R9W	./igen.h	838;"	d
RAX	./igen.h	796;"	d
RBINOP	./v.h	1088;"	d
RBOTHOP	./v.h	1089;"	d
RBP	./igen.h	810;"	d
RBX	./igen.h	797;"	d
RCB	./v.h	568;"	d
RCX	./igen.h	798;"	d
RDBUFSIZ	./v.h	247;"	d
RDI	./igen.h	801;"	d
RDX	./igen.h	799;"	d
REAL	./v.h	801;"	d
REALBITS	./v.h	366;"	d
REALBITS	./v.h	384;"	d
REALBOOLAND	./v.h	626;"	d
REALBOOLOR	./v.h	627;"	d
REALDIV	./v.h	619;"	d
REALMINUS	./v.h	591;"	d
REALNOT	./v.h	580;"	d
REALNUM	./v.h	551;"	d
REALOP	./v.h	1092;"	d
REALPLUS	./v.h	616;"	d
REALPOWER	./v.h	618;"	d
REALREALQUEST	./v.h	646;"	d
REALREGQUEST	./v.h	647;"	d
REALRELEQ	./v.h	624;"	d
REALRELGE	./v.h	621;"	d
REALRELGT	./v.h	620;"	d
REALRELLE	./v.h	623;"	d
REALRELLT	./v.h	622;"	d
REALRELNEQ	./v.h	625;"	d
REALTIME	./v.h	802;"	d
REALTIMES	./v.h	617;"	d
RECLEN	./v.h	216;"	d
RED	./v.h	5196;"	d
REDXNOR	./v.h	583;"	d
REG	./v.h	803;"	d
REGREALQUEST	./v.h	648;"	d
REG_NONE	./igen.h	685;"	d
REG_NONE	./igen.h	789;"	d
RELCEQ	./v.h	602;"	d
RELCNEQ	./v.h	604;"	d
RELEASE	./v.h	804;"	d
RELEQ	./v.h	603;"	d
RELGE	./v.h	598;"	d
RELGT	./v.h	599;"	d
RELLE	./v.h	600;"	d
RELLT	./v.h	601;"	d
RELNEQ	./v.h	605;"	d
REPEAT	./v.h	805;"	d
RETURN	./v.h	806;"	d
RE_BYTE	./igen.h	966;"	d
RE_DBLE	./igen.h	967;"	d
RE_INT	./igen.h	964;"	d
RE_PTR	./igen.h	965;"	d
RE_UNKN	./igen.h	962;"	d
RE_VOID	./igen.h	963;"	d
RIGHT	./v.h	5238;"	d
RMADDR	./v.h	556;"	d
RPAR	./v.h	564;"	d
RSB	./v.h	566;"	d
RSETBRAK	./v_cvr.c	2212;"	d	file:
RSI	./igen.h	800;"	d
RSP	./igen.h	811;"	d
RSQBRAK	./v_cvr.c	2214;"	d	file:
RT_DPI_INTERP_MKFIL	./v_dpi.c	1475;"	d	file:
RUNOP	./v.h	1087;"	d
RUNTIME_MAKEFILE	./igen.h	959;"	d
RUN_BITS	./lz4.c	250;"	d	file:
RUN_MASK	./lz4.c	251;"	d	file:
S32	./lz4.c	/^  typedef   signed int        S32;$/;"	t	file:
S32	./lz4.c	/^  typedef  int32_t S32;$/;"	t	file:
SCALARED	./v.h	807;"	d
SDF_1VAL	./v_sdf.c	197;"	d	file:
SDF_ABSOLUTE	./v_sdf.c	203;"	d	file:
SDF_ARRIVAL	./v_sdf.c	204;"	d	file:
SDF_BACKQ	./v.h	684;"	d
SDF_BACKSLASH	./v.h	686;"	d
SDF_BKEYS	./v_sdf.c	260;"	d	file:
SDF_CCOND	./v_sdf.c	205;"	d	file:
SDF_CELL	./v_sdf.c	206;"	d	file:
SDF_CELLTYPE	./v_sdf.c	207;"	d	file:
SDF_COND	./v_sdf.c	208;"	d	file:
SDF_CONDELSE	./v_sdf.c	209;"	d	file:
SDF_DATE	./v_sdf.c	210;"	d	file:
SDF_DELAY	./v_sdf.c	211;"	d	file:
SDF_DELAYFILE	./v_sdf.c	212;"	d	file:
SDF_DEPARTURE	./v_sdf.c	213;"	d	file:
SDF_DESIGN	./v_sdf.c	214;"	d	file:
SDF_DEVICE	./v_sdf.c	215;"	d	file:
SDF_DIFF	./v_sdf.c	216;"	d	file:
SDF_DIVIDER	./v_sdf.c	217;"	d	file:
SDF_DOL	./v.h	683;"	d
SDF_EXCEPTION	./v_sdf.c	218;"	d	file:
SDF_FULLSKEW	./v_sdf.c	219;"	d	file:
SDF_HOLD	./v_sdf.c	220;"	d	file:
SDF_INCREMENT	./v_sdf.c	221;"	d	file:
SDF_INSTANCE	./v_sdf.c	222;"	d	file:
SDF_INTERCONNECT	./v_sdf.c	223;"	d	file:
SDF_IOPATH	./v_sdf.c	224;"	d	file:
SDF_LABEL	./v_sdf.c	225;"	d	file:
SDF_MAXDELS	./v_sdf.c	193;"	d	file:
SDF_MTMDNUM	./v_sdf.c	191;"	d	file:
SDF_MTMVAL	./v_sdf.c	198;"	d	file:
SDF_NAME	./v_sdf.c	226;"	d	file:
SDF_NEGEDGE	./v_sdf.c	257;"	d	file:
SDF_NOCHANGE	./v_sdf.c	227;"	d	file:
SDF_NOVAL	./v_sdf.c	196;"	d	file:
SDF_PATHCONSTRAINT	./v_sdf.c	228;"	d	file:
SDF_PATHPULSE	./v_sdf.c	230;"	d	file:
SDF_PATHPULSEPERCENT	./v_sdf.c	231;"	d	file:
SDF_PERIOD	./v_sdf.c	232;"	d	file:
SDF_PERIODCONSTRAINT	./v_sdf.c	229;"	d	file:
SDF_PORT	./v_sdf.c	233;"	d	file:
SDF_POSEDGE	./v_sdf.c	258;"	d	file:
SDF_PROCESS	./v_sdf.c	234;"	d	file:
SDF_PROGRAM	./v_sdf.c	235;"	d	file:
SDF_PULDNUM	./v_sdf.c	192;"	d	file:
SDF_QUOTE	./v.h	685;"	d
SDF_RECOVERY	./v_sdf.c	237;"	d	file:
SDF_RECREM	./v_sdf.c	236;"	d	file:
SDF_REMOVAL	./v_sdf.c	238;"	d	file:
SDF_RETAIN	./v_sdf.c	239;"	d	file:
SDF_SCOND	./v_sdf.c	240;"	d	file:
SDF_SETUP	./v_sdf.c	243;"	d	file:
SDF_SETUPHOLD	./v_sdf.c	244;"	d	file:
SDF_SKEW	./v_sdf.c	245;"	d	file:
SDF_SKEWCONSTRAINT	./v_sdf.c	241;"	d	file:
SDF_SLACK	./v_sdf.c	242;"	d	file:
SDF_SUM	./v_sdf.c	246;"	d	file:
SDF_TEMPERATURE	./v_sdf.c	247;"	d	file:
SDF_TIMESCALE	./v_sdf.c	248;"	d	file:
SDF_TIMESKEW	./v_sdf.c	249;"	d	file:
SDF_TIMINGCHECK	./v_sdf.c	250;"	d	file:
SDF_TIMINGENV	./v_sdf.c	251;"	d	file:
SDF_UNKN	./v.h	687;"	d
SDF_VENDOR	./v_sdf.c	252;"	d	file:
SDF_VERSION	./v_sdf.c	253;"	d	file:
SDF_VOLTAGE	./v_sdf.c	254;"	d	file:
SDF_WAVEFORM	./v_sdf.c	255;"	d	file:
SDF_WIDTH	./v_sdf.c	256;"	d	file:
SELECT_TYPE_ARG1	./config.h	262;"	d
SELECT_TYPE_ARG234	./config.h	265;"	d
SELECT_TYPE_ARG5	./config.h	268;"	d
SEMI	./v.h	559;"	d
SENTINEL	./v.h	5193;"	d
SET_HLSIZE	./v_dbg2.c	975;"	d	file:
SET_LOGECHO	./v_dbg2.c	979;"	d	file:
SET_LSIZE	./v_dbg2.c	974;"	d	file:
SET_NOLOGECHO	./v_dbg2.c	980;"	d	file:
SET_NOSCHG	./v_dbg2.c	977;"	d	file:
SET_PRTBASE	./v_dbg2.c	978;"	d	file:
SET_SCHG	./v_dbg2.c	976;"	d	file:
SE_DUMPALL	./v.h	1273;"	d
SE_DUMPOFF	./v.h	1275;"	d
SE_DUMPON	./v.h	1274;"	d
SE_DUMPPORTS	./v.h	1280;"	d
SE_DUMPPORTSALL	./v.h	1281;"	d
SE_DUMPPORTSOFF	./v.h	1283;"	d
SE_DUMPPORTSON	./v.h	1282;"	d
SE_DUMPVARS	./v.h	1272;"	d
SE_FMONIT_TRIGGER	./v.h	1270;"	d
SE_MONIT_CHG	./v.h	1267;"	d
SE_MONIT_TRIGGER	./v.h	1268;"	d
SE_STROBE	./v.h	1271;"	d
SE_TCHK_VIOLATION	./v.h	1266;"	d
SE_TFROSYNC	./v.h	1276;"	d
SE_TOGGLE	./v.h	1284;"	d
SE_VPIROSYNC	./v.h	1277;"	d
SE_VPIROSYNC	./v.h	1331;"	d
SHARP	./v.h	562;"	d
SHIFTL	./v.h	608;"	d
SHIFTL_EQ	./v.h	665;"	d
SHIFTR	./v.h	610;"	d
SHIFTR_EQ	./v.h	667;"	d
SHORTBASE	./v.h	363;"	d
SHORTBASE	./v.h	381;"	d
SHORTCINTBITS	./v.h	343;"	d
SHORTINT	./v.h	808;"	d
SHORTREAL	./v.h	809;"	d
SHORTREALBITS	./v.h	385;"	d
SI	./igen.h	701;"	d
SI	./igen.h	819;"	d
SIGNED	./v.h	810;"	d
SIZEOF_DOUBLE	./config.h	271;"	d
SIZEOF_INT	./config.h	274;"	d
SIZEOF_LONG	./config.h	277;"	d
SIZEOF_VOID_P	./config.h	280;"	d
SIZ_B	./igen.h	915;"	d
SIZ_BL	./igen.h	916;"	d
SIZ_D	./igen.h	920;"	d
SIZ_L	./igen.h	919;"	d
SIZ_LL	./igen.h	923;"	d
SIZ_NONE	./igen.h	914;"	d
SIZ_QL	./igen.h	922;"	d
SIZ_W	./igen.h	917;"	d
SIZ_WL	./igen.h	918;"	d
SKIPSTRENGTH	./lz4.c	243;"	d	file:
SMALL	./v.h	813;"	d
SO_SUFFIX	./v_vpi.c	427;"	d	file:
SPECIFY	./v.h	811;"	d
SPECOP	./v.h	1086;"	d
SPECPARAM	./v.h	812;"	d
SPLT_DFLT	./v.h	941;"	d
SPLT_SCAL	./v.h	942;"	d
SPLT_VECT	./v.h	943;"	d
SR_ARRAY	./v.h	416;"	d
SR_BBLK	./v.h	437;"	d
SR_BIT2S	./v.h	414;"	d
SR_CINT	./v.h	436;"	d
SR_DPI_BYTE	./v.h	426;"	d
SR_DPI_CHANDLE	./v.h	431;"	d
SR_DPI_CINT	./v.h	427;"	d
SR_DPI_LONGCINT	./v.h	429;"	d
SR_DPI_REAL	./v.h	430;"	d
SR_DPI_SCAL2S	./v.h	425;"	d
SR_DPI_SHORTCINT	./v.h	428;"	d
SR_DPI_STRING	./v.h	432;"	d
SR_DPI_UNKN	./v.h	433;"	d
SR_DSGNADR	./v.h	439;"	d
SR_MODADR	./v.h	438;"	d
SR_PISNUM	./v.h	421;"	d
SR_PISXPR	./v.h	419;"	d
SR_PNUM	./v.h	420;"	d
SR_PVEC	./v.h	417;"	d
SR_PXPR	./v.h	418;"	d
SR_SCAL	./v.h	412;"	d
SR_SCAL2S	./v.h	415;"	d
SR_SSCAL	./v.h	413;"	d
SR_STRING	./v.h	422;"	d
SR_SVEC	./v.h	411;"	d
SR_UNKN	./v.h	440;"	d
SR_VEC	./v.h	410;"	d
SS_COMP	./v.h	1308;"	d
SS_LOAD	./v.h	1309;"	d
SS_RESET	./v.h	1310;"	d
SS_SIM	./v.h	1311;"	d
ST1	./igen.h	694;"	d
ST1	./igen.h	812;"	d
STAR	./v_src3.c	7126;"	d	file:
STDC_HEADERS	./config.h	291;"	d
STEPSIZE	./lz4.c	276;"	d	file:
STN_ABS	./systsks.h	372;"	d
STN_ACOS	./systsks.h	357;"	d
STN_ACOSH	./systsks.h	364;"	d
STN_ALLOWWARNS	./systsks.h	346;"	d
STN_ASIN	./systsks.h	358;"	d
STN_ASINH	./systsks.h	365;"	d
STN_ATAN	./systsks.h	359;"	d
STN_ATAN2	./systsks.h	360;"	d
STN_ATANH	./systsks.h	366;"	d
STN_BITSTOREAL	./systsks.h	173;"	d
STN_CEIL	./systsks.h	177;"	d
STN_CLEARDEBUG	./systsks.h	337;"	d
STN_CLEAREVTRACE	./systsks.h	339;"	d
STN_CLEARTRACE	./systsks.h	298;"	d
STN_CLOG2	./systsks.h	204;"	d
STN_COS	./systsks.h	354;"	d
STN_COSH	./systsks.h	361;"	d
STN_COUNTONES	./systsks.h	432;"	d
STN_COUNT_DRIVERS	./systsks.h	199;"	d
STN_DEFINEGROUPWAVES	./systsks.h	333;"	d
STN_DIMENSION	./systsks.h	419;"	d
STN_DISPLAY	./systsks.h	225;"	d
STN_DISPLAYB	./systsks.h	226;"	d
STN_DISPLAYH	./systsks.h	227;"	d
STN_DISPLAYO	./systsks.h	228;"	d
STN_DIST_CHI_SQUARE	./systsks.h	192;"	d
STN_DIST_ERLANG	./systsks.h	194;"	d
STN_DIST_EXPONENTIAL	./systsks.h	190;"	d
STN_DIST_NORMAL	./systsks.h	189;"	d
STN_DIST_POISSON	./systsks.h	191;"	d
STN_DIST_T	./systsks.h	193;"	d
STN_DIST_UNIFORM	./systsks.h	188;"	d
STN_DUMPALL	./systsks.h	279;"	d
STN_DUMPFILE	./systsks.h	280;"	d
STN_DUMPFLUSH	./systsks.h	281;"	d
STN_DUMPLIMIT	./systsks.h	282;"	d
STN_DUMPOFF	./systsks.h	283;"	d
STN_DUMPON	./systsks.h	284;"	d
STN_DUMPPORTS	./systsks.h	397;"	d
STN_DUMPPORTSALL	./systsks.h	398;"	d
STN_DUMPPORTSFLUSH	./systsks.h	399;"	d
STN_DUMPPORTSLIMIT	./systsks.h	400;"	d
STN_DUMPPORTSOFF	./systsks.h	401;"	d
STN_DUMPPORTSON	./systsks.h	402;"	d
STN_DUMPVARS	./systsks.h	278;"	d
STN_ERROR	./systsks.h	436;"	d
STN_EXP	./systsks.h	375;"	d
STN_FATAL	./systsks.h	435;"	d
STN_FCLOSE	./systsks.h	223;"	d
STN_FDISPLAY	./systsks.h	229;"	d
STN_FDISPLAYB	./systsks.h	231;"	d
STN_FDISPLAYH	./systsks.h	230;"	d
STN_FDISPLAYO	./systsks.h	232;"	d
STN_FEOF	./systsks.h	218;"	d
STN_FERROR	./systsks.h	213;"	d
STN_FFLUSH	./systsks.h	389;"	d
STN_FGETC	./systsks.h	207;"	d
STN_FGETS	./systsks.h	209;"	d
STN_FINISH	./systsks.h	300;"	d
STN_FLOOR	./systsks.h	178;"	d
STN_FLUSHLOG	./systsks.h	348;"	d
STN_FMONITOR	./systsks.h	257;"	d
STN_FMONITORB	./systsks.h	262;"	d
STN_FMONITORH	./systsks.h	261;"	d
STN_FMONITORO	./systsks.h	263;"	d
STN_FOPEN	./systsks.h	198;"	d
STN_FREAD	./systsks.h	214;"	d
STN_FREEZEWAVES	./systsks.h	332;"	d
STN_FSCANF	./systsks.h	215;"	d
STN_FSEEK	./systsks.h	212;"	d
STN_FSTROBE	./systsks.h	249;"	d
STN_FSTROBEB	./systsks.h	251;"	d
STN_FSTROBEH	./systsks.h	250;"	d
STN_FSTROBEO	./systsks.h	252;"	d
STN_FST_DUMPALL	./systsks.h	404;"	d
STN_FST_DUMPFILE	./systsks.h	405;"	d
STN_FST_DUMPFLUSH	./systsks.h	406;"	d
STN_FST_DUMPLIMIT	./systsks.h	407;"	d
STN_FST_DUMPOFF	./systsks.h	408;"	d
STN_FST_DUMPON	./systsks.h	409;"	d
STN_FST_DUMPREPACK	./systsks.h	410;"	d
STN_FST_DUMPVARS	./systsks.h	411;"	d
STN_FST_PARALLELOFF	./systsks.h	412;"	d
STN_FST_PARALLELON	./systsks.h	413;"	d
STN_FTELL	./systsks.h	210;"	d
STN_FWRITE	./systsks.h	239;"	d
STN_FWRITEB	./systsks.h	241;"	d
STN_FWRITEH	./systsks.h	240;"	d
STN_FWRITEO	./systsks.h	242;"	d
STN_GETPATTERN	./systsks.h	202;"	d
STN_GRREGS	./systsks.h	330;"	d
STN_GRREMOTE	./systsks.h	327;"	d
STN_GRSYNCHON	./systsks.h	329;"	d
STN_GRWAVES	./systsks.h	331;"	d
STN_HDB	./systsks.h	384;"	d
STN_HIGH	./systsks.h	424;"	d
STN_HISTORY	./systsks.h	292;"	d
STN_HLOG	./systsks.h	382;"	d
STN_HLOG10	./systsks.h	383;"	d
STN_HPOW	./systsks.h	380;"	d
STN_HPWR	./systsks.h	381;"	d
STN_HSIGN	./systsks.h	385;"	d
STN_HSQRT	./systsks.h	379;"	d
STN_HYPOT	./systsks.h	386;"	d
STN_INCREMENT	./systsks.h	425;"	d
STN_INCSAVE	./systsks.h	294;"	d
STN_INFO	./systsks.h	438;"	d
STN_INPUT	./systsks.h	295;"	d
STN_INT	./systsks.h	368;"	d
STN_ISUNKNOWN	./systsks.h	431;"	d
STN_ITOR	./systsks.h	174;"	d
STN_KEEPCMDS	./systsks.h	302;"	d
STN_KEY	./systsks.h	287;"	d
STN_LEFT	./systsks.h	421;"	d
STN_LIST	./systsks.h	289;"	d
STN_LN	./systsks.h	370;"	d
STN_LOG	./systsks.h	290;"	d
STN_LOG10	./systsks.h	371;"	d
STN_LOW	./systsks.h	423;"	d
STN_MAX	./systsks.h	377;"	d
STN_MEMUSE	./systsks.h	347;"	d
STN_MIN	./systsks.h	376;"	d
STN_MONITOR	./systsks.h	254;"	d
STN_MONITORB	./systsks.h	259;"	d
STN_MONITORH	./systsks.h	258;"	d
STN_MONITORO	./systsks.h	260;"	d
STN_MONITOROFF	./systsks.h	255;"	d
STN_MONITORON	./systsks.h	256;"	d
STN_NOKEEPCMDS	./systsks.h	303;"	d
STN_NOKEY	./systsks.h	288;"	d
STN_NOLOG	./systsks.h	291;"	d
STN_ONEHOT	./systsks.h	429;"	d
STN_ONEHOT0	./systsks.h	430;"	d
STN_POW	./systsks.h	373;"	d
STN_PRINTTIMESCALE	./systsks.h	266;"	d
STN_PSPRINTF	./systsks.h	416;"	d
STN_PSWAVES	./systsks.h	328;"	d
STN_Q_ADD	./systsks.h	315;"	d
STN_Q_EXAM	./systsks.h	317;"	d
STN_Q_FULL	./systsks.h	203;"	d
STN_Q_INITIALIZE	./systsks.h	314;"	d
STN_Q_REMOVE	./systsks.h	316;"	d
STN_RANDOM	./systsks.h	187;"	d
STN_READMEMB	./systsks.h	270;"	d
STN_READMEMH	./systsks.h	271;"	d
STN_REALTIME	./systsks.h	181;"	d
STN_REALTOBITS	./systsks.h	175;"	d
STN_RESET	./systsks.h	299;"	d
STN_RESET_COUNT	./systsks.h	200;"	d
STN_RESET_VALUE	./systsks.h	201;"	d
STN_RESTART	./systsks.h	296;"	d
STN_REWIND	./systsks.h	211;"	d
STN_RIGHT	./systsks.h	422;"	d
STN_RTOI	./systsks.h	176;"	d
STN_SAVE	./systsks.h	293;"	d
STN_SCALE	./systsks.h	184;"	d
STN_SCANPLUSARGS	./systsks.h	349;"	d
STN_SCOPE	./systsks.h	306;"	d
STN_SDF_ANNOTATE	./systsks.h	320;"	d
STN_SETDEBUG	./systsks.h	336;"	d
STN_SETEVTRACE	./systsks.h	338;"	d
STN_SETTRACE	./systsks.h	297;"	d
STN_SFORMAT	./systsks.h	394;"	d
STN_SGN	./systsks.h	369;"	d
STN_SHOWALLINSTANCES	./systsks.h	307;"	d
STN_SHOWEXPANDEDNETS	./systsks.h	308;"	d
STN_SHOWSCOPES	./systsks.h	309;"	d
STN_SHOWVARIABLES	./systsks.h	310;"	d
STN_SHOWVARS	./systsks.h	311;"	d
STN_SIGNED	./systsks.h	323;"	d
STN_SIN	./systsks.h	355;"	d
STN_SINH	./systsks.h	362;"	d
STN_SIZE	./systsks.h	426;"	d
STN_SNAPSHOT	./systsks.h	343;"	d
STN_SQRT	./systsks.h	374;"	d
STN_SREADMEMB	./systsks.h	272;"	d
STN_SREADMEMH	./systsks.h	273;"	d
STN_SSCANF	./systsks.h	216;"	d
STN_STICKSTIME	./systsks.h	341;"	d
STN_STIME	./systsks.h	182;"	d
STN_STOP	./systsks.h	301;"	d
STN_STROBE	./systsks.h	245;"	d
STN_STROBEB	./systsks.h	247;"	d
STN_STROBEH	./systsks.h	246;"	d
STN_STROBEO	./systsks.h	248;"	d
STN_SUPWARNS	./systsks.h	345;"	d
STN_SWRITE	./systsks.h	390;"	d
STN_SWRITEB	./systsks.h	391;"	d
STN_SWRITEH	./systsks.h	392;"	d
STN_SWRITEO	./systsks.h	393;"	d
STN_SYSTEM	./systsks.h	344;"	d
STN_TAN	./systsks.h	356;"	d
STN_TANH	./systsks.h	363;"	d
STN_TESTPLUSARGS	./systsks.h	197;"	d
STN_TGL_RECORD_OFF	./systsks.h	448;"	d
STN_TGL_RECORD_OFF_SET_OLD_VAL_X	./systsks.h	449;"	d
STN_TGL_RECORD_ON	./systsks.h	447;"	d
STN_TGL_STATE_RESET	./systsks.h	446;"	d
STN_TICKSTIME	./systsks.h	342;"	d
STN_TIME	./systsks.h	183;"	d
STN_TIMEFORMAT	./systsks.h	267;"	d
STN_TRACEFILE	./systsks.h	340;"	d
STN_UNGETC	./systsks.h	208;"	d
STN_UNPACKED_DIMENSION	./systsks.h	420;"	d
STN_UNSIGNED	./systsks.h	324;"	d
STN_VALUEPLUSARGS	./systsks.h	350;"	d
STN_WARNING	./systsks.h	437;"	d
STN_WRITE	./systsks.h	235;"	d
STN_WRITEB	./systsks.h	237;"	d
STN_WRITEH	./systsks.h	236;"	d
STN_WRITEMEMB	./systsks.h	274;"	d
STN_WRITEMEMH	./systsks.h	275;"	d
STN_WRITEO	./systsks.h	238;"	d
STN_XTRACE_OFF	./systsks.h	442;"	d
STN_XTRACE_ON	./systsks.h	441;"	d
STRING	./v.h	815;"	d
STRONG0	./v.h	816;"	d
STRONG1	./v.h	817;"	d
STRRELEQ	./v.h	674;"	d
STRRELGE	./v.h	671;"	d
STRRELGT	./v.h	670;"	d
STRRELLE	./v.h	673;"	d
STRRELLT	./v.h	672;"	d
STRRELNEQ	./v.h	675;"	d
STR_IDP_NDX_OFS	./v.h	1403;"	d
STR_IDP_OFS	./v.h	1401;"	d
STR_IDP_SIZE_OFS	./v.h	1405;"	d
STR_IDP_WLEN	./v.h	1399;"	d
STR_INIT_CHARS	./v.h	1408;"	d
ST_HIGHZ	./v.h	449;"	d
ST_HIZ	./v.h	470;"	d
ST_LARGE	./v.h	453;"	d
ST_MEDIUM	./v.h	451;"	d
ST_ND_PREVVAL	./v.h	1263;"	d
ST_PULL	./v.h	454;"	d
ST_PULL0	./v.h	471;"	d
ST_PULL1	./v.h	472;"	d
ST_SMALL	./v.h	450;"	d
ST_STRONG	./v.h	455;"	d
ST_STRONGX	./v.h	469;"	d
ST_STRVAL	./v.h	466;"	d
ST_SUPPLY	./v.h	456;"	d
ST_SUPPLY0	./v.h	473;"	d
ST_SUPPLY1	./v.h	474;"	d
ST_WEAK	./v.h	452;"	d
SUBA_STR	./igen.h	730;"	d
SUBA_STR	./igen.h	883;"	d
SUPPLY0	./v.h	818;"	d
SUPPLY1	./v.h	819;"	d
SVNKEYWDS	./v_ms.c	4521;"	d	file:
SV_BIT	./v.h	1433;"	d
SV_BITVECVAL	./v.h	1440;"	d
SV_BYTE	./v.h	1434;"	d
SV_CHANDLE	./v.h	1441;"	d
SV_CHAR_PTR	./v.h	1447;"	d
SV_CINT	./v.h	1436;"	d
SV_LOGIC	./v.h	1445;"	d
SV_LOGICVECVAL	./v.h	1446;"	d
SV_LONGCINT	./v.h	1437;"	d
SV_REAL	./v.h	1439;"	d
SV_SHORTCINT	./v.h	1435;"	d
SV_SHORTREAL	./v.h	1438;"	d
SV_UNKN	./v.h	1431;"	d
SV_VOID	./v.h	1442;"	d
SV_VOID_PTR	./v.h	1443;"	d
SYM_BIT	./v.h	979;"	d
SYM_CA	./v.h	966;"	d
SYM_DEF	./v.h	956;"	d
SYM_DPIF	./v.h	982;"	d
SYM_F	./v.h	961;"	d
SYM_I	./v.h	959;"	d
SYM_IMPATH	./v.h	972;"	d
SYM_LB	./v.h	962;"	d
SYM_LGB	./v.h	969;"	d
SYM_M	./v.h	953;"	d
SYM_MPATH	./v.h	973;"	d
SYM_MPTERM	./v.h	977;"	d
SYM_N	./v.h	965;"	d
SYM_PBIT	./v.h	980;"	d
SYM_PORT	./v.h	978;"	d
SYM_PRIM	./v.h	963;"	d
SYM_PRIMPATH	./v.h	974;"	d
SYM_PTH	./v.h	968;"	d
SYM_SF	./v.h	955;"	d
SYM_STSK	./v.h	954;"	d
SYM_TCHK	./v.h	967;"	d
SYM_TERM	./v.h	976;"	d
SYM_TSK	./v.h	960;"	d
SYM_UDP	./v.h	964;"	d
SYM_UNKN	./v.h	952;"	d
SYM_WIREPATH	./v.h	975;"	d
SYNC_FLEVEL	./v.h	933;"	d
SYNC_MODLEVEL	./v.h	934;"	d
SYNC_SPECITEM	./v.h	936;"	d
SYNC_STMT	./v.h	935;"	d
SYNC_TARG	./v.h	938;"	d
SYNC_UDPLEVEL	./v.h	937;"	d
SYSF_BUILTIN	./v.h	1038;"	d
SYSF_TF	./v.h	1039;"	d
SYSF_UNKNOWN	./v.h	1037;"	d
SYSF_VPI	./v.h	1040;"	d
SYSTFDATSIZE	./v.h	229;"	d
S_BREAK	./v.h	1030;"	d
S_BRKPT	./v.h	1027;"	d
S_CASE	./v.h	1006;"	d
S_CAUSE	./v.h	1019;"	d
S_CONTINUE	./v.h	1031;"	d
S_DEC	./v.h	1029;"	d
S_DELCTRL	./v.h	1012;"	d
S_DO_WHILE	./v.h	1032;"	d
S_DSABLE	./v.h	1020;"	d
S_FOR	./v.h	1007;"	d
S_FORASSGN	./v.h	1026;"	d
S_FOREVER	./v.h	1008;"	d
S_FUNCCALL	./v.h	1033;"	d
S_GOTO	./v.h	1025;"	d
S_IF	./v.h	1005;"	d
S_INC	./v.h	1028;"	d
S_NAMBLK	./v.h	1013;"	d
S_NBPROCA	./v.h	1003;"	d
S_NULL	./v.h	1001;"	d
S_PROCA	./v.h	1002;"	d
S_QCONTA	./v.h	1017;"	d
S_QCONTDEA	./v.h	1018;"	d
S_REPDCSETUP	./v.h	1024;"	d
S_REPEAT	./v.h	1009;"	d
S_REPSETUP	./v.h	1023;"	d
S_RETURN	./v.h	1034;"	d
S_RHSDEPROCA	./v.h	1004;"	d
S_STNONE	./v.h	1021;"	d
S_TSKCALL	./v.h	1016;"	d
S_UNBLK	./v.h	1014;"	d
S_UNFJ	./v.h	1015;"	d
S_WAIT	./v.h	1011;"	d
S_WHILE	./v.h	1010;"	d
Strength	./v.h	814;"	d
TABLE	./v.h	820;"	d
TASK	./v.h	821;"	d
TCHKEVAND	./v.h	614;"	d
TCHK_FULLSKEW	./v.h	1123;"	d
TCHK_HOLD	./v.h	1116;"	d
TCHK_NOCHANGE	./v.h	1121;"	d
TCHK_PERIOD	./v.h	1118;"	d
TCHK_RECOVERY	./v.h	1120;"	d
TCHK_RECREM	./v.h	1124;"	d
TCHK_REMOVAL	./v.h	1125;"	d
TCHK_SETUP	./v.h	1115;"	d
TCHK_SETUPHOLD	./v.h	1122;"	d
TCHK_SKEW	./v.h	1119;"	d
TCHK_TIMESKEW	./v.h	1126;"	d
TCHK_WIDTH	./v.h	1117;"	d
TEOF	./v.h	679;"	d
TESTA_STR	./igen.h	735;"	d
TESTA_STR	./igen.h	888;"	d
TEVTAB_ALLOC_SIZE	./v.h	256;"	d
TE_BIDPATH	./v.h	1179;"	d
TE_CA	./v.h	1177;"	d
TE_G	./v.h	1176;"	d
TE_MIPD_NCHG	./v.h	1180;"	d
TE_MIPD_SCALAR_NCHG	./v.h	1194;"	d
TE_NBPA	./v.h	1181;"	d
TE_NBPA_ND	./v.h	1191;"	d
TE_NBPA_SCALAR	./v.h	1192;"	d
TE_NBPA_VARNDX	./v.h	1193;"	d
TE_NO_THRD	./v.h	1195;"	d
TE_SYNC	./v.h	1183;"	d
TE_TFPUTPDEL	./v.h	1184;"	d
TE_TFSETDEL	./v.h	1182;"	d
TE_THRD	./v.h	1175;"	d
TE_UNKN	./v.h	1196;"	d
TE_VPICBDEL	./v.h	1187;"	d
TE_VPIDRVDEL	./v.h	1186;"	d
TE_VPIPUTVDEL	./v.h	1185;"	d
TE_WIRE	./v.h	1178;"	d
THASH_SIZE	./v.h	5243;"	d
TIME	./v.h	822;"	d
TIMEBITS	./v.h	349;"	d
TIMES	./v.h	594;"	d
TIMES_EQ	./v.h	659;"	d
TIME_WITH_SYS_TIME	./config.h	294;"	d
TN_ADR	./igen.h	231;"	d
TN_UNKN	./igen.h	229;"	d
TN_VAL	./igen.h	230;"	d
TOK_NONE	./v.h	546;"	d
TOPVPIVAL	./v.h	238;"	d
TRI	./v.h	823;"	d
TRI0	./v.h	824;"	d
TRI1	./v.h	825;"	d
TRIAND	./v.h	826;"	d
TRIOR	./v.h	827;"	d
TRIREG	./v.h	828;"	d
TRK_BOT_VARYING	./igen.h	203;"	d
TRK_CON	./igen.h	202;"	d
TRK_TOP_UNDEF	./igen.h	201;"	d
TRK_UNKN	./igen.h	200;"	d
TRPROC_BID	./v.h	1288;"	d
TRPROC_STBID	./v.h	1289;"	d
TRPROC_STWTYPBID	./v.h	1290;"	d
TRPROC_TRAN	./v.h	1291;"	d
TRPROC_UNKN	./v.h	1287;"	d
TRTRUNCLEN	./v.h	218;"	d
TRUE	./v.h	346;"	d
TYP_BRKPTS	./v_dbg2.c	2650;"	d	file:
TYP_DISP	./v_dbg2.c	2651;"	d	file:
U16	./lz4.c	/^  typedef uint16_t U16;$/;"	t	file:
U16	./lz4.c	/^  typedef unsigned short      U16;$/;"	t	file:
U16_S	./lz4.c	/^typedef struct { U16 v; }  _PACKED U16_S;$/;"	t	typeref:struct:__anon1	file:
U32	./lz4.c	/^  typedef uint32_t U32;$/;"	t	file:
U32	./lz4.c	/^  typedef unsigned int        U32;$/;"	t	file:
U32_S	./lz4.c	/^typedef struct { U32 v; }  _PACKED U32_S;$/;"	t	typeref:struct:__anon2	file:
U64	./lz4.c	/^  typedef uint64_t U64;$/;"	t	file:
U64	./lz4.c	/^  typedef unsigned long long  U64;$/;"	t	file:
U64_S	./lz4.c	/^typedef struct { U64 v; }  _PACKED U64_S;$/;"	t	typeref:struct:__anon3	file:
UALTREPIPNUM	./v.h	227;"	d
UNCONNPULL	./v.h	555;"	d
UNCPULL0	./v.h	890;"	d
UNCPULL1	./v.h	891;"	d
UNDEF	./v.h	678;"	d
UNOP	./v.h	1083;"	d
UNSIGNED	./v.h	829;"	d
UV_0	./v.h	483;"	d
UV_1	./v.h	484;"	d
UV_B	./v.h	487;"	d
UV_Q	./v.h	486;"	d
UV_X	./v.h	485;"	d
U_COMB	./v.h	477;"	d
U_EDGE	./v.h	479;"	d
U_LEVEL	./v.h	478;"	d
VECTORED	./v.h	830;"	d
VERS	./v.h	167;"	d
VERS2	./v.h	173;"	d
VERS2	./v.h	175;"	d
VERS2	./v.h	179;"	d
VERS2	./v.h	181;"	d
VERS2	./v.h	185;"	d
VERS2	./v.h	187;"	d
VERSION	./config.h	300;"	d
VOID	./v.h	831;"	d
VPI_OBJALLOCNUM	./v.h	246;"	d
WAIT	./v.h	832;"	d
WAND	./v.h	833;"	d
WANT_A_VEC	./igen.h	1337;"	d
WARN	./v.h	1315;"	d
WBITS	./v.h	356;"	d
WBITS	./v.h	373;"	d
WBUFSIZ	./v_asmlnk.c	10424;"	d	file:
WEAK0	./v.h	834;"	d
WEAK1	./v.h	835;"	d
WHILE	./v.h	836;"	d
WIDENONE	./v.h	1100;"	d
WIDLEFT	./v.h	1101;"	d
WIDMAX	./v.h	1102;"	d
WIDNONE	./v.h	1098;"	d
WIDONE	./v.h	1099;"	d
WIDSELF	./v.h	1104;"	d
WIDSUM	./v.h	1103;"	d
WIRE	./v.h	837;"	d
WOR	./v.h	838;"	d
WORDMASK_ULL	./v.h	360;"	d
WORDMASK_ULL	./v.h	378;"	d
WRAPPER_NONE	./igen.h	1330;"	d
WRAPPER_NPBA_VARNDX_CONCAT_EV	./igen.h	1332;"	d
WRAPPER_PROCESS_THRD_EV	./igen.h	1331;"	d
WRDBYTES	./v.h	358;"	d
WRDBYTES	./v.h	375;"	d
WRITE_NET_NUM	./v_ex4.c	5497;"	d	file:
XMP_GBLK	./v.h	990;"	d
XMP_INST	./v.h	988;"	d
XMP_INST_INGEN	./v.h	989;"	d
XMP_MOD	./v.h	987;"	d
XMP_NET	./v.h	992;"	d
XMP_NET_INGEN	./v.h	993;"	d
XMP_TSK	./v.h	991;"	d
XMP_UNKN	./v.h	986;"	d
XMRCOM	./v.h	654;"	d
XMRID	./v.h	653;"	d
XNESTFIXINC	./v.h	213;"	d
XNP_DOWNXMR	./v.h	532;"	d
XNP_LOC	./v.h	531;"	d
XNP_RTXMR	./v.h	533;"	d
XNP_UPXMR	./v.h	534;"	d
XORA_STR	./igen.h	733;"	d
XORA_STR	./igen.h	886;"	d
XOR_EQ	./v.h	664;"	d
XPND_COPY_WORDS	./v_bbgen3.c	752;"	d	file:
XPROP_XEDGE_NOT_SET	./v.h	1144;"	d
XPROP_XEDGE_TO_0	./v.h	1142;"	d
XPROP_XEDGE_TO_1	./v.h	1143;"	d
YYTEXT_POINTER	./config.h	304;"	d
_DARWIN_USE_64_BIT_INODE	./config.h	308;"	d
_DEXPLEN	./v.h	369;"	d
_DEXPLEN	./v.h	388;"	d
_FILE_OFFSET_BITS	./config.h	312;"	d
_PACKED	./lz4.c	192;"	d	file:
_PACKED	./lz4.c	194;"	d	file:
__XPROP__	./v.h	199;"	d
__abwrkwlen	./cvc.c	/^int32 __abwrkwlen;     \/* current acwrk a half length in words *\/$/;"	v
__acc_defaultattr0	./v_acc.c	/^int32 __acc_defaultattr0;$/;"	v
__acc_developmentversion	./v_acc.c	/^char *__acc_developmentversion;$/;"	v
__acc_displayerrors	./v_acc.c	/^int32 __acc_displayerrors;$/;"	v
__acc_displaywarnings	./v_acc.c	/^int32 __acc_displaywarnings;$/;"	v
__acc_enableargs_pth	./v_acc.c	/^int32 __acc_enableargs_pth;$/;"	v
__acc_enableargs_setscope	./v_acc.c	/^int32 __acc_enableargs_setscope;$/;"	v
__acc_enableargs_tchk	./v_acc.c	/^int32 __acc_enableargs_tchk;$/;"	v
__acc_err	./v_acc.c	/^extern void __acc_err(int32 id_num, char *fmt, ...)$/;"	f	signature:(int32 id_num, char *fmt, ...)
__acc_evchg_gate_outwire	./v_sim.c	/^extern void __acc_evchg_gate_outwire(struct gate_t *gp)$/;"	f	signature:(struct gate_t *gp)
__acc_maptomipd	./v_acc.c	/^int32 __acc_maptomipd;$/;"	v
__acc_mintypmaxdelays	./v_acc.c	/^int32 __acc_mintypmaxdelays;$/;"	v
__acc_open	./v_acc.c	/^int32 __acc_open;             \/* T => acc initialize routine called *\/$/;"	v
__acc_pathdelaycount	./v_acc.c	/^int32 __acc_pathdelaycount;$/;"	v
__acc_pathdelimstr	./v_acc.c	/^char *__acc_pathdelimstr;$/;"	v
__acc_scope_set	./v_acc.c	/^int32 __acc_scope_set;        \/* T => acc scope changed from call tf inst *\/$/;"	v
__acc_scope_vpiobj	./v_acc.c	/^vpiHandle __acc_scope_vpiobj; \/* currently set acc_ scope as vpi objec *\/$/;"	v
__acc_sferr	./v_acc.c	/^extern void __acc_sferr(int32 id_num, char *fmt, ...)$/;"	f	signature:(int32 id_num, char *fmt, ...)
__acc_sfwarn	./v_acc.c	/^extern void __acc_sfwarn(int32 id_num, char *fmt, ...)$/;"	f	signature:(int32 id_num, char *fmt, ...)
__acc_show_object	./v_acc.c	/^extern int32 __acc_show_object(handle obj)$/;"	f	signature:(handle obj)
__acc_strbuf	./v_acc.c	/^char *__acc_strbuf;           \/* ptr to reused acc_ str buf *\/ $/;"	v
__acc_strbuf_nxti	./v_acc.c	/^int32 __acc_strbuf_nxti;      \/* next free ndx - gets rewound *\/$/;"	v
__acc_terr	./v_acc.c	/^extern void __acc_terr(char *fnam, int32 lno)$/;"	f	signature:(char *fnam, int32 lno)
__acc_tohizdelay	./v_acc.c	/^int32 __acc_tohizdelay;$/;"	v
__acc_vpi_erroff	./cvc.c	/^int32 __acc_vpi_erroff;\/* acc_ flag to stop internal acc_ error cbs *\/$/;"	v
__acc_vpi_terr	./v_acc.c	/^extern void __acc_vpi_terr(char *fnam, int32 lno)$/;"	f	signature:(char *fnam, int32 lno)
__acc_warn	./v_acc.c	/^extern void __acc_warn(int32 id_num, char *fmt, ...)$/;"	f	signature:(int32 id_num, char *fmt, ...)
__accelerate	./cvc.c	/^int32 __accelerate;    \/* T => use short circuits g\/prt code if can *\/$/;"	v
__acum_a	./cvc.c	/^word32 __acum_a;       \/* accumulator for tran chan non stren *\/$/;"	v
__acum_b	./cvc.c	/^word32 __acum_b;$/;"	v
__acum_sb	./cvc.c	/^word32 __acum_sb;      \/* accumulator for stren tran chan combined *\/$/;"	v
__acum_sbp	./cvc.c	/^byte *__acum_sbp;      \/* ptr to stacked strength byte *\/$/;"	v
__acum_xsp	./cvc.c	/^struct xstk_t *__acum_xsp; \/* ptr to stacked strength byte *\/$/;"	v	typeref:struct:xstk_t
__acwrk	./cvc.c	/^word32 *__acwrk;       \/* a value work string for scanning number *\/$/;"	v
__add_alloc_mipd_npp	./v_prp2.c	/^extern void __add_alloc_mipd_npp(struct net_t *np, struct mod_t *mdp)$/;"	f	signature:(struct net_t *np, struct mod_t *mdp)
__add_conta_pnd0del	./v_prp.c	/^extern int32 __add_conta_pnd0del(struct conta_t *cap, struct mod_t *mdp,$/;"	f	signature:(struct conta_t *cap, struct mod_t *mdp, char *sdfmsg)
__add_dcep_to_table	./v_prp2.c	/^extern void __add_dcep_to_table(struct net_t *np, struct dcevnt_t *dcep)$/;"	f	signature:(struct net_t *np, struct dcevnt_t *dcep)
__add_dctldel_pnp	./v_prp.c	/^extern void __add_dctldel_pnp(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__add_dmpv_chglst_el	./v_sim.c	/^extern void __add_dmpv_chglst_el(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__add_dmpv_chglst_el_sel	./v_sim.c	/^extern void __add_dmpv_chglst_el_sel(struct net_t *np, int32 ndx)$/;"	f	signature:(struct net_t *np, int32 ndx)
__add_dp_chglst_el	./v_sim.c	/^extern void __add_dp_chglst_el(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__add_ev_to_front	./v_ex.c	/^extern void __add_ev_to_front(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__add_expr_totable	./v_src2.c	/^extern void __add_expr_totable(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__add_gate_expr	./v_bbgen3.c	/^extern struct gate_conta_t *__add_gate_expr(struct gate_t *gp, $/;"	f	signature:(struct gate_t *gp, struct net_pin_t *npp)
__add_gate_pnd0del	./v_prp.c	/^extern int32 __add_gate_pnd0del(struct gate_t *gp, struct mod_t *mdp,$/;"	f	signature:(struct gate_t *gp, struct mod_t *mdp, char *sdfmsg)
__add_infil	./cvc.c	/^extern void __add_infil(char *fnam)$/;"	f	signature:(char *fnam)
__add_insn_toend	./v_bbgen3.c	/^extern void __add_insn_toend(struct insn_t *ip)$/;"	f	signature:(struct insn_t *ip)
__add_isnum_to_tree	./v_cvcrt.c	/^extern void __add_isnum_to_tree(void *obj, int32 xvi, int32 size)$/;"	f	signature:(void *obj, int32 xvi, int32 size)
__add_modsym	./v_src.c	/^extern struct sy_t *__add_modsym(char *nam)$/;"	f	signature:(char *nam)
__add_nchglst_el	./v_sim.c	/^extern void __add_nchglst_el(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__add_net	./v_src.c	/^extern struct net_t *__add_net(struct sy_t *syp, struct symtab_t *net_sytp)$/;"	f	signature:(struct sy_t *syp, struct symtab_t *net_sytp)
__add_net_to_netchg_lst	./v_prp.c	/^extern void __add_net_to_netchg_lst(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__add_np_iconn_expr	./v_bbgen3.c	/^extern struct np_iconn_t *__add_np_iconn_expr(struct net_pin_t *npp, $/;"	f	signature:(struct net_pin_t *npp, struct expr_t *up_rhsx)
__add_param	./v_src.c	/^extern struct net_t *__add_param(char *nam, struct expr_t *x1,$/;"	f	signature:(char *nam, struct expr_t *x1, struct expr_t *x2, int32 is_local_param, int32 is_genvar)
__add_pathdel_pnp	./v_prp.c	/^extern void __add_pathdel_pnp(struct spcpth_t *pthp)$/;"	f	signature:(struct spcpth_t *pthp)
__add_select_nchglst_el	./v_sim.c	/^extern void __add_select_nchglst_el(struct net_t *np, int32 i1, int32 i2)$/;"	f	signature:(struct net_t *np, int32 i1, int32 i2)
__add_sym	./v_ms.c	/^extern void __add_sym(char *snam, struct tnode_t *tnp)$/;"	f	signature:(char *snam, struct tnode_t *tnp)
__add_syp_to_undefs	./v_src.c	/^extern void __add_syp_to_undefs(struct sy_t *syp)$/;"	f	signature:(struct sy_t *syp)
__add_tchkdel_pnp	./v_prp.c	/^extern void __add_tchkdel_pnp(struct tchk_t *tcp, int32 is_1st)$/;"	f	signature:(struct tchk_t *tcp, int32 is_1st)
__add_togglelst_el	./v_sim.c	/^extern void __add_togglelst_el(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__added_xprop_stlst_hdr	./cvc.c	/^struct st_list_t *__added_xprop_stlst_hdr; \/* alloc xprop stmt hdr *\/$/;"	v	typeref:struct:st_list_t
__added_xprop_stlst_tail	./cvc.c	/^struct st_list_t *__added_xprop_stlst_tail; \/* alloc xprop stmt tail *\/$/;"	v	typeref:struct:st_list_t
__addr_2state_zero	./cvc.c	/^word32 *__addr_2state_zero; \/* 2-state empty bpart *\/$/;"	v
__addr_add_dup_node_free	./v_bbgen3.c	/^extern void __addr_add_dup_node_free(void *adraddp)$/;"	f	signature:(void *adraddp)
__addrtmp	./cvc.c	/^word32 __addrtmp[2];   \/* up to 32 bit temp with addr. *\/$/;"	v
__adds	./v_cnv.c	/^extern void __adds(char *s)$/;"	f	signature:(char *s)
__adradd_child_tree	./v_bbgen.c	/^struct avlhd_t *__adradd_child_tree;\/* adradd child tree *\/$/;"	v	typeref:struct:avlhd_t
__advance_seta_va	./v_bbgen.c	/^va_list  __advance_seta_va; \/* global to reset advance of varargs *\/$/;"	v
__aiter_accnxt_list	./v_acc.c	/^struct acciter_t *__aiter_accnxt_list; \/* list for all acc next (no type) *\/$/;"	v	typeref:struct:acciter_t
__aiter_freelst	./v_acc.c	/^struct acciter_t *__aiter_freelst;$/;"	v	typeref:struct:acciter_t
__aiter_tab	./v_acc.c	/^struct acciter_t **__aiter_tab; \/* table by vpi type of acc next iters *\/$/;"	v	typeref:struct:acciter_t
__aithptab	./v_acc.c	/^struct h_t **__aithptab;      \/* and the work ptr to handle tab *\/$/;"	v	typeref:struct:h_t
__aithptab2	./v_acc.c	/^struct h_t **__aithptab2;     \/* 2nd work ptr tab for in subtree handles *\/$/;"	v	typeref:struct:h_t
__aithtsiz	./v_acc.c	/^int32 __aithtsiz;             \/* size of acc work handle table *\/$/;"	v
__aithtsiz2	./v_acc.c	/^int32 __aithtsiz2;            \/* size of acc 2nd work handle table *\/$/;"	v
__all_nb_same_time	./v_cvcrt.c	/^int32  __all_nb_same_time;   \/* nb assign const all same time *\/$/;"	v
__all_sig_bits_tgl	./v_cvr.c	/^extern int32 __all_sig_bits_tgl(struct rt_tgl_t *togp, int32 for_01_tgl)$/;"	f	signature:(struct rt_tgl_t *togp, int32 for_01_tgl)
__all_topm_gen_xpnd	./cvc.c	/^int32 __all_topm_gen_xpnd; \/* T - all top modules gen expanded *\/$/;"	v
__allforce_cbs_off	./cvc.c	/^int32 __allforce_cbs_off; \/* T => can't reenter any of all force cbs *\/$/;"	v
__alloc2_stmt	./v_src.c	/^extern struct st_t *__alloc2_stmt(int32 styp, int32 fnind, int32 lcnt)$/;"	f	signature:(int32 styp, int32 fnind, int32 lcnt)
__alloc_arrncomp	./v_src.c	/^extern struct ncomp_t *__alloc_arrncomp(void)$/;"	f	signature:(void)
__alloc_avlnode	./v_cvcrt.c	/^extern struct avlnode_t *__alloc_avlnode(void *valp)$/;"	f	signature:(void *valp)
__alloc_bbedge	./v_cvcms.c	/^extern struct bbedge_t *__alloc_bbedge(void)$/;"	f	signature:(void)
__alloc_bblk	./v_cvcms.c	/^extern struct bblk_t *__alloc_bblk(int32 is_xz)$/;"	f	signature:(int32 is_xz)
__alloc_cell	./v_src.c	/^extern struct cell_t *__alloc_cell(struct sy_t *syp)$/;"	f	signature:(struct sy_t *syp)
__alloc_compiled_sim_storage	./v_prp2.c	/^extern void __alloc_compiled_sim_storage(void)$/;"	f	signature:(void)
__alloc_cpin	./v_src.c	/^extern struct cell_pin_t *__alloc_cpin(int32 has_name)$/;"	f	signature:(int32 has_name)
__alloc_csitem	./v_src2.c	/^extern struct csitem_t *__alloc_csitem(void)$/;"	f	signature:(void)
__alloc_cur_tev	./v_sim.c	/^extern struct tev_t *__alloc_cur_tev(void *enterptr, word64 absetime)$/;"	f	signature:(void *enterptr, word64 absetime)
__alloc_dcevnt	./v_prp2.c	/^extern struct dcevnt_t *__alloc_dcevnt(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__alloc_dctrl	./v_src.c	/^extern struct delctrl_t *__alloc_dctrl(void)$/;"	f	signature:(void)
__alloc_empty_iter	./v_vpi.c	/^extern struct pviter_t *__alloc_empty_iter(int32 nels, vpiHandle *ihrefp)$/;"	f	signature:(int32 nels, vpiHandle *ihrefp)
__alloc_expridnd	./v_src2.c	/^extern struct expridtab_t *__alloc_expridnd(char *idnam)$/;"	f	signature:(char *idnam)
__alloc_exprnd	./v_src2.c	/^extern struct expr_t *__alloc_exprnd(void)$/;"	f	signature:(void)
__alloc_flowg	./v_cvcms.c	/^extern struct flowg_t *__alloc_flowg(int32 ftyp)$/;"	f	signature:(int32 ftyp)
__alloc_getasfmt	./v_cnv.c	/^extern char *__alloc_getasfmt(struct expr_t *xp, struct tfrec_t *tfrp,$/;"	f	signature:(struct expr_t *xp, struct tfrec_t *tfrp, int32 fmtchar)
__alloc_grtab	./v_genfx.c	/^extern struct gref_t *__alloc_grtab(struct gref_t *oldgrtab, int32 grnum)$/;"	f	signature:(struct gref_t *oldgrtab, int32 grnum)
__alloc_init_iusedef	./v_cvcms.c	/^extern struct iusedef_t *__alloc_init_iusedef(void)$/;"	f	signature:(void)
__alloc_init_new_genblk	./v_src.c	/^extern struct genblk_t *__alloc_init_new_genblk(char *blknam)$/;"	f	signature:(char *blknam)
__alloc_init_new_genitem	./v_src.c	/^extern struct genitem_t *__alloc_init_new_genitem(int32 typ)$/;"	f	signature:(int32 typ)
__alloc_insn	./v_cvcms.c	/^extern struct insn_t *__alloc_insn(int32 op)$/;"	f	signature:(int32 op)
__alloc_is_cval	./v_src2.c	/^extern int32 __alloc_is_cval(int32 wlen)$/;"	f	signature:(int32 wlen)
__alloc_mod	./v_src.c	/^extern struct mod_t *__alloc_mod(struct sy_t *syp)$/;"	f	signature:(struct sy_t *syp)
__alloc_modpin	./v_src.c	/^extern struct mod_pin_t *__alloc_modpin(void)$/;"	f	signature:(void)
__alloc_namparam	./v_src.c	/^extern struct namparam_t *__alloc_namparam(void)$/;"	f	signature:(void)
__alloc_newxnd	./v_src2.c	/^extern struct expr_t *__alloc_newxnd(void)$/;"	f	signature:(void)
__alloc_npaux	./v_prp.c	/^extern struct npaux_t *__alloc_npaux(void)$/;"	f	signature:(void)
__alloc_npin	./v_prp.c	/^extern struct net_pin_t *__alloc_npin(int32 nptyp, int32 i1, int32 i2)$/;"	f	signature:(int32 nptyp, int32 i1, int32 i2)
__alloc_plidce_prevval	./v_vpi.c	/^extern void __alloc_plidce_prevval(struct dcevnt_t *dcep)$/;"	f	signature:(struct dcevnt_t *dcep)
__alloc_pval	./v_src.c	/^extern struct paramlst_t *__alloc_pval(void)$/;"	f	signature:(void)
__alloc_qcval	./v_prp2.c	/^extern void __alloc_qcval(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__alloc_shareable_cval	./v_src2.c	/^extern int32 __alloc_shareable_cval(word32 aval, word32 bval, int32 bwid)$/;"	f	signature:(word32 aval, word32 bval, int32 bwid)
__alloc_shareable_rlcval	./v_src2.c	/^extern int32 __alloc_shareable_rlcval(double d1)$/;"	f	signature:(double d1)
__alloc_sim_storage	./v_prp2.c	/^extern void __alloc_sim_storage(void)$/;"	f	signature:(void)
__alloc_stmt	./v_src.c	/^extern struct st_t *__alloc_stmt(int32 styp)$/;"	f	signature:(int32 styp)
__alloc_symtab	./v_ms.c	/^extern struct symtab_t *__alloc_symtab(int32 freezes)$/;"	f	signature:(int32 freezes)
__alloc_tev	./v_sim.c	/^extern struct tev_t *__alloc_tev(void *enterptr, t_midat *te_idp, $/;"	f	signature:(void *enterptr, t_midat *te_idp, word64 absetime)
__alloc_tfdrv_wp	./v_prp2.c	/^extern void __alloc_tfdrv_wp(struct tfarg_t *tfap, struct expr_t *xp,$/;"	f	signature:(struct tfarg_t *tfap, struct expr_t *xp, struct mod_t *mdp)
__alloc_thrd	./v_ex.c	/^extern struct thread_t *__alloc_thrd(void)$/;"	f	signature:(void)
__alloc_xprlst	./v_src2.c	/^extern struct exprlst_t *__alloc_xprlst(void)$/;"	f	signature:(void)
__alloc_xsval	./v_ex2.c	/^extern void __alloc_xsval(struct xstk_t *xsp, int32 xstkwlen)$/;"	f	signature:(struct xstk_t *xsp, int32 xstkwlen)
__allocfill_cval_new	./v_src2.c	/^extern int32 __allocfill_cval_new(word32 *ap, word32 *bp, int32 wlen)$/;"	f	signature:(word32 *ap, word32 *bp, int32 wlen)
__allocinit_avlhd	./v_cvcrt.c	/^extern struct avlhd_t *__allocinit_avlhd(void)$/;"	f	signature:(void)
__allocinit_perival	./v_prp2.c	/^extern void __allocinit_perival(union pck_u *nvap, int32 insts, int32 blen,$/;"	f	signature:(union pck_u *nvap, int32 insts, int32 blen, int32 nd_alloc)
__allocinit_stperival	./v_prp2.c	/^extern void __allocinit_stperival(union pck_u *nvap, int32 insts,$/;"	f	signature:(union pck_u *nvap, int32 insts, struct net_t *np, int32 nd_alloc)
__allow_scope_lsb	./cvc.c	/^int32 __allow_scope_lsb; \/* T => process systask arg be XMR lsb *\/$/;"	v
__allow_scope_var	./cvc.c	/^int32 __allow_scope_var; \/* T => process systask arg can be scope *\/$/;"	v
__allrel_cbs_off	./cvc.c	/^int32 __allrel_cbs_off;\/* T => can't reenter any of all release cbs *\/$/;"	v
__alnk_cp_is1v_32b_tev_dels	./v_aslib.c	/^extern void __alnk_cp_is1v_32b_tev_dels(void *tev_vp, void *vp, int32 ninsts)$/;"	f	signature:(void *tev_vp, void *vp, int32 ninsts)
__alnk_cp_is1v_32b_tev_dels	./v_aslib.s	/^__alnk_cp_is1v_32b_tev_dels:$/;"	l
__alnk_cp_is1v_64b_tev_dels	./v_aslib.c	/^extern void __alnk_cp_is1v_64b_tev_dels(void *tev_vp, word32 *wp, int32 ninsts)$/;"	f	signature:(void *tev_vp, word32 *wp, int32 ninsts)
__alnk_cp_is1v_64b_tev_dels	./v_aslib.s	/^__alnk_cp_is1v_64b_tev_dels:$/;"	l
__alnk_fixup_allmods_comm_idp_areas	./v_aslib.c	/^extern void __alnk_fixup_allmods_comm_idp_areas(void)$/;"	f	signature:(void)
__alnk_fixup_allmods_comm_idp_areas	./v_aslib.s	/^__alnk_fixup_allmods_comm_idp_areas:$/;"	l
__alnk_ialst_enters	./v_aslib.c	/^extern void __alnk_ialst_enters(void **ialst_arrp, int32 mod_id)$/;"	f	signature:(void **ialst_arrp, int32 mod_id)
__alnk_ialst_enters	./v_aslib.s	/^__alnk_ialst_enters:$/;"	l
__alnk_init_mdp	./v_aslib.c	/^extern void __alnk_init_mdp(int32 mi)$/;"	f	signature:(int32 mi)
__alnk_init_mdp	./v_aslib.s	/^__alnk_init_mdp:$/;"	l
__alnk_init_nchglst_el	./v_aslib.c	/^extern void __alnk_init_nchglst_el(void *nchg_vp, void *proc_nchg_vp, $/;"	f	signature:(void *nchg_vp, void *proc_nchg_vp, int32 ni, size_t nchg_idp_ofs)
__alnk_init_nchglst_el	./v_aslib.s	/^__alnk_init_nchglst_el:$/;"	l
__alnk_init_nchglst_el_npp	./v_aslib.c	/^extern void __alnk_init_nchglst_el_npp(void *nchg_vp, void *proc_nchg_vp, $/;"	f	signature:(void *nchg_vp, void *proc_nchg_vp, int32 ni, size_t nchg_idp_ofs, void *proc_nppe_vp)
__alnk_init_nchglst_el_npp	./v_aslib.s	/^__alnk_init_nchglst_el_npp:$/;"	l
__alnk_init_nchglst_el_rng	./v_aslib.c	/^extern void __alnk_init_nchglst_el_rng(void *nchg_vp, void *proc_nchg_vp, $/;"	f	signature:(void *nchg_vp, void *proc_nchg_vp, int32 ni, size_t nchg_idp_ofs, int32 ncpi1, int32 ncpi2)
__alnk_init_nchglst_el_rng	./v_aslib.s	/^__alnk_init_nchglst_el_rng:$/;"	l
__alnk_init_nchglst_el_rng_npp	./v_aslib.c	/^extern void __alnk_init_nchglst_el_rng_npp(void *nchg_vp, void *proc_nchg_vp, $/;"	f	signature:(void *nchg_vp, void *proc_nchg_vp, int32 ni, size_t nchg_idp_ofs, int32 ncpi1, int32 ncpi2, void *proc_nppe_vp)
__alnk_init_nchglst_el_rng_npp	./v_aslib.s	/^__alnk_init_nchglst_el_rng_npp:$/;"	l
__alnk_init_tev_dat	./v_aslib.c	/^extern void __alnk_init_tev_dat(void *dst, int32 ninsts, void *enterp,$/;"	f	signature:(void *dst, int32 ninsts, void *enterp, size_t ctev_idp_ofs, word64 del)
__alnk_init_tev_dat	./v_aslib.s	/^__alnk_init_tev_dat:$/;"	l
__alnk_init_tev_dat_nodelay	./v_aslib.c	/^extern void __alnk_init_tev_dat_nodelay(void *dst, int32 ninsts, void *enterp,$/;"	f	signature:(void *dst, int32 ninsts, void *enterp, size_t ctev_idp_ofs)
__alnk_init_tev_dat_nodelay	./v_aslib.s	/^__alnk_init_tev_dat_nodelay:$/;"	l
__alnk_set_conta	./v_aslib.c	/^extern void __alnk_set_conta(void *conta_vp, int32 ci)$/;"	f	signature:(void *conta_vp, int32 ci)
__alnk_set_conta	./v_aslib.s	/^__alnk_set_conta:$/;"	l
__alnk_set_dcevnt	./v_aslib.c	/^extern void __alnk_set_dcevnt(void *dcep_vp, int32 ni, int32 di)$/;"	f	signature:(void *dcep_vp, int32 ni, int32 di)
__alnk_set_dcevnt	./v_aslib.s	/^__alnk_set_dcevnt:$/;"	l
__alnk_set_gate	./v_aslib.c	/^extern void __alnk_set_gate(void *gate_vp, int32 gi)$/;"	f	signature:(void *gate_vp, int32 gi)
__alnk_set_gate	./v_aslib.s	/^__alnk_set_gate:$/;"	l
__alnk_set_gref	./v_aslib.c	/^extern void __alnk_set_gref(void *grp_vp, int32 gi)$/;"	f	signature:(void *grp_vp, int32 gi)
__alnk_set_gref	./v_aslib.s	/^__alnk_set_gref:$/;"	l
__alnk_set_net_addr	./v_aslib.c	/^extern void __alnk_set_net_addr(void *net_vp, int32 ni)$/;"	f	signature:(void *net_vp, int32 ni)
__alnk_set_net_addr	./v_aslib.s	/^__alnk_set_net_addr:$/;"	l
__alnk_set_npp_addr	./v_aslib.c	/^extern void __alnk_set_npp_addr(void *npp_vp, int32 nppi)$/;"	f	signature:(void *npp_vp, int32 nppi)
__alnk_set_npp_addr	./v_aslib.s	/^__alnk_set_npp_addr:$/;"	l
__alnk_set_npp_entptr	./v_aslib.c	/^extern void __alnk_set_npp_entptr(void *npp_entp, int32 ni)$/;"	f	signature:(void *npp_entp, int32 ni)
__alnk_set_npp_entptr	./v_aslib.s	/^__alnk_set_npp_entptr:$/;"	l
__alnk_set_pth_del_adr	./v_aslib.c	/^extern void __alnk_set_pth_del_adr(void *pthdel_adr, int32 pth_id)$/;"	f	signature:(void *pthdel_adr, int32 pth_id)
__alnk_set_pth_del_adr	./v_aslib.s	/^__alnk_set_pth_del_adr:$/;"	l
__alnk_set_stmt_entptr	./v_aslib.c	/^extern void __alnk_set_stmt_entptr(void *stmt_entp, int32 sti)$/;"	f	signature:(void *stmt_entp, int32 sti)
__alnk_set_stmt_entptr	./v_aslib.s	/^__alnk_set_stmt_entptr:$/;"	l
__alnk_set_task_addr	./v_aslib.c	/^extern void __alnk_set_task_addr(void *task_vp, int32 ti)$/;"	f	signature:(void *task_vp, int32 ti)
__alnk_set_task_addr	./v_aslib.s	/^__alnk_set_task_addr:$/;"	l
__alnk_set_tchk_tchg_adr	./v_aslib.c	/^extern void __alnk_set_tchk_tchg_adr(void *tchk_tchg_adr, int32 npp_id)$/;"	f	signature:(void *tchk_tchg_adr, int32 npp_id)
__alnk_set_tchk_tchg_adr	./v_aslib.s	/^__alnk_set_tchk_tchg_adr:$/;"	l
__alnk_set_tev_del	./v_aslib.c	/^extern void __alnk_set_tev_del(void *tev_vp, word64 gdel, int32 ninsts)$/;"	f	signature:(void *tev_vp, word64 gdel, int32 ninsts)
__alnk_set_tev_del	./v_aslib.s	/^__alnk_set_tev_del:$/;"	l
__alnk_set_tev_gp_u	./v_aslib.c	/^extern void __alnk_set_tev_gp_u(void *tev_vp, int32 gi, int32 ninsts)$/;"	f	signature:(void *tev_vp, int32 gi, int32 ninsts)
__alnk_set_tev_gp_u	./v_aslib.s	/^__alnk_set_tev_gp_u:$/;"	l
__alnk_set_tev_nb_free_nextevptr	./v_aslib.c	/^extern void __alnk_set_tev_nb_free_nextevptr(void *tev_vp,$/;"	f	signature:(void *tev_vp, void *next_nb_free_vp, int32 ninsts)
__alnk_set_tev_nb_free_nextevptr	./v_aslib.s	/^__alnk_set_tev_nb_free_nextevptr:$/;"	l
__alnk_set_tev_nxtptr	./v_aslib.c	/^extern void __alnk_set_tev_nxtptr(void *tev_vp)$/;"	f	signature:(void *tev_vp)
__alnk_set_tev_nxtptr	./v_aslib.s	/^__alnk_set_tev_nxtptr:$/;"	l
__alnk_set_trchan_vtx_nchgs	./v_aslib.c	/^extern void __alnk_set_trchan_vtx_nchgs(void) $/;"	f	signature:(void)
__alnk_set_trchan_vtx_nchgs	./v_aslib.s	/^__alnk_set_trchan_vtx_nchgs:$/;"	l
__alnk_set_udptab_adrs	./v_aslib.c	/^extern void __alnk_set_udptab_adrs(void *udptab_l_adr, void *udptab_e_adr,$/;"	f	signature:(void *udptab_l_adr, void *udptab_e_adr, int32 udp_idnum)
__alnk_set_udptab_adrs	./v_aslib.s	/^__alnk_set_udptab_adrs:$/;"	l
__alnk_set_xpr_addr	./v_aslib.c	/^extern void __alnk_set_xpr_addr(void *xpr_vp, int32 xi)$/;"	f	signature:(void *xpr_vp, int32 xi)
__alnk_set_xpr_addr	./v_aslib.s	/^__alnk_set_xpr_addr:$/;"	l
__alnk_tev_set_tu_nbrhs	./v_aslib.c	/^extern void __alnk_tev_set_tu_nbrhs(void *tev_vp, void *nbrhs_vp,$/;"	f	signature:(void *tev_vp, void *nbrhs_vp, int32 nb_rhs_bytsiz, int32 ninsts)
__alnk_tev_set_tu_nbrhs	./v_aslib.s	/^__alnk_tev_set_tu_nbrhs:$/;"	l
__alnk_tev_set_tu_nbrhs_2s	./v_aslib.c	/^extern void __alnk_tev_set_tu_nbrhs_2s(void *tev_vp, void *nbrhs_vp,$/;"	f	signature:(void *tev_vp, void *nbrhs_vp, int32 nb_rhs_bytsiz, int32 ninsts)
__alnk_tev_set_tu_nbrhs_2s	./v_aslib.s	/^__alnk_tev_set_tu_nbrhs_2s:$/;"	l
__amode_mem_ref	./v_asmlnk.c	/^extern int32 __amode_mem_ref(struct amode_t *amp)$/;"	f	signature:(struct amode_t *amp)
__and_g3	./v_aslib.c	/^const word32 __and_g3[64] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,0,3,3,3,0,3,3,3,0,0,0,0,0,3,3,3,0,3,3,3,0,3,3,3,0,0,0,0,0,3,3,3,0,3,3,3,0,3,3,3};$/;"	v
__and_g3	./v_aslib.s	/^__and_g3:$/;"	l
__and_g4	./v_aslib.c	/^const word32 __and_g4[256] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,0,3,3,3,0,3,3,3,0,0,0,0,0,3,3,3,0,3,3,3,0,3,3,3,0,0,0,0,0,3,3,3,0,3,3,3,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,3,3,3,0,3,3,3,0,0,0,0,0,3,3,3,0,3,3,3,0,3,3,3,0,0,0,0,0,3,3,3,0,3,3,3,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,3,3,3,0,3,3,3,0,0,0,0,0,3,3,3,0,3,3,3,0,3,3,3,0,0,0,0,0,3,3,3,0,3,3,3,0,3,3,3};$/;"	v
__and_g4	./v_aslib.s	/^__and_g4:$/;"	l
__anon11::__anon12::high	./v.h	/^ struct { word32 high; word32 low; } w_u;$/;"	m	struct:__anon11::__anon12	access:public
__anon11::__anon12::low	./v.h	/^ struct { word32 high; word32 low; } w_u;$/;"	m	struct:__anon11::__anon12	access:public
__anon11::__anon13::high	./v.h	/^ struct { word32 low; word32 high; } w_u;$/;"	m	struct:__anon11::__anon13	access:public
__anon11::__anon13::low	./v.h	/^ struct { word32 low; word32 high; } w_u;$/;"	m	struct:__anon11::__anon13	access:public
__anon11::w64v	./v.h	/^ word64 w64v; $/;"	m	union:__anon11	access:public
__anon11::w_u	./v.h	/^ struct { word32 high; word32 low; } w_u;$/;"	m	union:__anon11	typeref:struct:__anon11::__anon12	access:public
__anon11::w_u	./v.h	/^ struct { word32 low; word32 high; } w_u;$/;"	m	union:__anon11	typeref:struct:__anon11::__anon13	access:public
__anon14::__anon15::high	./v.h	/^ struct { word32 high; word32 low; } w_u;$/;"	m	struct:__anon14::__anon15	access:public
__anon14::__anon15::low	./v.h	/^ struct { word32 high; word32 low; } w_u;$/;"	m	struct:__anon14::__anon15	access:public
__anon14::__anon16::high	./v.h	/^ struct { word32 low; word32 high; } w_u;$/;"	m	struct:__anon14::__anon16	access:public
__anon14::__anon16::low	./v.h	/^ struct { word32 low; word32 high; } w_u;$/;"	m	struct:__anon14::__anon16	access:public
__anon14::w64v	./v.h	/^ word64 w64v; $/;"	m	union:__anon14	access:public
__anon14::w_u	./v.h	/^ struct { word32 high; word32 low; } w_u;$/;"	m	union:__anon14	typeref:struct:__anon14::__anon15	access:public
__anon14::w_u	./v.h	/^ struct { word32 low; word32 high; } w_u;$/;"	m	union:__anon14	typeref:struct:__anon14::__anon16	access:public
__anon1::v	./lz4.c	/^typedef struct { U16 v; }  _PACKED U16_S;$/;"	m	struct:__anon1	file:	access:public
__anon2::v	./lz4.c	/^typedef struct { U32 v; }  _PACKED U32_S;$/;"	m	struct:__anon2	file:	access:public
__anon3::v	./lz4.c	/^typedef struct { U64 v; }  _PACKED U64_S;$/;"	m	struct:__anon3	file:	access:public
__anon4::v	./lz4.c	/^typedef struct {size_t v;} _PACKED size_t_S;$/;"	m	struct:__anon4	file:	access:public
__anon5::base	./lz4.c	/^    const BYTE* base;$/;"	m	struct:__anon5	file:	access:public
__anon5::bufferStart	./lz4.c	/^    const BYTE* bufferStart;$/;"	m	struct:__anon5	file:	access:public
__anon5::hashTable	./lz4.c	/^    U32 hashTable[HASHNBCELLS4];$/;"	m	struct:__anon5	file:	access:public
__anon5::nextBlock	./lz4.c	/^    const BYTE* nextBlock;$/;"	m	struct:__anon5	file:	access:public
__any_scalar_tn	./v_bbgen2.c	/^extern int32 __any_scalar_tn(int32 tmp_ti)$/;"	f	signature:(int32 tmp_ti)
__any_stren_tn	./v_bbgen2.c	/^extern int32 __any_stren_tn(int32 tmp_ti)$/;"	f	signature:(int32 tmp_ti)
__arg_terr	./v_ms.c	/^extern void __arg_terr(char *fnam, int32 lno)$/;"	f	signature:(char *fnam, int32 lno)
__arith_mwrshift	./v_ex2.c	/^extern void __arith_mwrshift(word32 *valwp, word32 shiftval, int32 blen)$/;"	f	signature:(word32 *valwp, word32 shiftval, int32 blen)
__arrvmem_use	./cvc.c	/^long __arrvmem_use;    \/* allocated bytes for Verilog arrays *\/$/;"	v
__asl_4state_to_2state_wide	./v_aslib.c	/^extern void __asl_4state_to_2state_wide(t_midat *dstp, t_midat *srcp, $/;"	f	signature:(t_midat *dstp, t_midat *srcp, int32 wlen)
__asl_4state_to_2state_wide	./v_aslib.s	/^__asl_4state_to_2state_wide:$/;"	l
__asl_4to2	./v_aslib.c	/^const word32 __asl_4to2[] = {0, 1, 0, 0 };$/;"	v
__asl_4to2	./v_aslib.s	/^__asl_4to2:$/;"	l
__asl_add_dmpp_chglst_el	./v_aslib.c	/^extern void __asl_add_dmpp_chglst_el(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__asl_add_dmpp_chglst_el	./v_aslib.s	/^__asl_add_dmpp_chglst_el:$/;"	l
__asl_add_dmpp_chglst_el_mdprt	./v_aslib.c	/^extern void __asl_add_dmpp_chglst_el_mdprt(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__asl_add_dmpp_chglst_el_mdprt	./v_aslib.s	/^__asl_add_dmpp_chglst_el_mdprt:$/;"	l
__asl_add_dmpv_chglst_el	./v_aslib.c	/^extern void __asl_add_dmpv_chglst_el(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__asl_add_dmpv_chglst_el	./v_aslib.s	/^__asl_add_dmpv_chglst_el:$/;"	l
__asl_add_dmpv_chglst_el_array	./v_aslib.c	/^extern void __asl_add_dmpv_chglst_el_array(struct net_t *np, int32 ndx)$/;"	f	signature:(struct net_t *np, int32 ndx)
__asl_add_dmpv_chglst_el_array	./v_aslib.s	/^__asl_add_dmpv_chglst_el_array:$/;"	l
__asl_add_dmpv_chglst_el_mdprt	./v_aslib.c	/^extern void __asl_add_dmpv_chglst_el_mdprt(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__asl_add_static_nchglst_sel	./v_aslib.c	/^extern void __asl_add_static_nchglst_sel(struct nchglst_t *nchglp,$/;"	f	signature:(struct nchglst_t *nchglp, int32 i1, int32 i2)
__asl_add_static_nchglst_sel	./v_aslib.s	/^__asl_add_static_nchglst_sel:$/;"	l
__asl_add_togglelst_el_port	./v_aslib.c	/^extern void __asl_add_togglelst_el_port(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__asl_add_togglelst_el_port	./v_aslib.s	/^__asl_add_togglelst_el_port:$/;"	l
__asl_adjust_edge_udp	./v_aslib.c	/^extern word32 __asl_adjust_edge_udp(int32 pi, int32 ndx, int32 old_ival, $/;"	f	signature:(int32 pi, int32 ndx, int32 old_ival, struct gate_t *gp)
__asl_adjust_edge_udp	./v_aslib.s	/^__asl_adjust_edge_udp:$/;"	l
__asl_adjust_trireg	./v_aslib.c	/^extern void __asl_adjust_trireg(byte *sbp, byte *abp, int32 nwid, word32 cstren)$/;"	f	signature:(byte *sbp, byte *abp, int32 nwid, word32 cstren)
__asl_adjust_trireg	./v_aslib.s	/^__asl_adjust_trireg:$/;"	l
__asl_arm_ectrl	./v_aslib.c	/^extern void __asl_arm_ectrl(struct tev_t *tevp, size_t ndx)$/;"	f	signature:(struct tev_t *tevp, size_t ndx)
__asl_arm_ectrl	./v_aslib.s	/^__asl_arm_ectrl:$/;"	l
__asl_arm_nb_ectrl	./v_aslib.c	/^extern word32 *__asl_arm_nb_ectrl(struct st_t *stp, struct tev_t *tevp)$/;"	f	signature:(struct st_t *stp, struct tev_t *tevp)
__asl_arm_nb_ectrl	./v_aslib.s	/^__asl_arm_nb_ectrl:$/;"	l
__asl_arm_nb_varndx_ectrl	./v_aslib.c	/^extern word32 *__asl_arm_nb_varndx_ectrl(struct st_t *stp, struct tev_t *tevp, $/;"	f	signature:(struct st_t *stp, struct tev_t *tevp, int32 bi)
__asl_arm_nb_varndx_ectrl	./v_aslib.s	/^__asl_arm_nb_varndx_ectrl:$/;"	l
__asl_assign_qcaf	./v_aslib.c	/^extern void __asl_assign_qcaf(struct dcevnt_t *dcep, struct nchglst_t *nchglp,$/;"	f	signature:(struct dcevnt_t *dcep, struct nchglst_t *nchglp, size_t nchg_idp_ofs)
__asl_assign_qcaf	./v_aslib.s	/^__asl_assign_qcaf:$/;"	l
__asl_assign_qcaf_concat	./v_aslib.c	/^extern void __asl_assign_qcaf_concat(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__asl_assign_qcaf_concat	./v_aslib.s	/^__asl_assign_qcaf_concat:$/;"	l
__asl_assign_qcaf_regform	./v_aslib.c	/^extern void __asl_assign_qcaf_regform(struct dcevnt_t *dcep, $/;"	f	signature:(struct dcevnt_t *dcep, struct nchglst_t *nchglp, size_t nchg_idp_ofs)
__asl_assign_qcaf_regform	./v_aslib.s	/^__asl_assign_qcaf_regform:$/;"	l
__asl_assign_qcaf_regform_concat	./v_aslib.c	/^extern void __asl_assign_qcaf_regform_concat(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__asl_assign_qcaf_regform_concat	./v_aslib.s	/^__asl_assign_qcaf_regform_concat:$/;"	l
__asl_assign_scalar_qcaf	./v_aslib.c	/^extern void __asl_assign_scalar_qcaf(struct dcevnt_t *dcep, $/;"	f	signature:(struct dcevnt_t *dcep, struct nchglst_t *nchglp, size_t nchg_idp_ofs)
__asl_assign_scalar_qcaf	./v_aslib.s	/^__asl_assign_scalar_qcaf:$/;"	l
__asl_bld_nb_nodelay_tev	./v_aslib.c	/^extern void __asl_bld_nb_nodelay_tev(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__asl_bld_nb_nodelay_tev	./v_aslib.s	/^__asl_bld_nb_nodelay_tev:$/;"	l
__asl_bsel_wirfrc_inhibit	./v_aslib.c	/^extern int32 __asl_bsel_wirfrc_inhibit(struct net_t *np, int32 biti)$/;"	f	signature:(struct net_t *np, int32 biti)
__asl_bsel_wirfrc_inhibit	./v_aslib.s	/^__asl_bsel_wirfrc_inhibit:$/;"	l
__asl_bytecmp	./v_aslib.c	/^extern int32 __asl_bytecmp(byte *b1, byte *b2, int32 bsize) $/;"	f	signature:(byte *b1, byte *b2, int32 bsize)
__asl_bytecmp	./v_aslib.s	/^__asl_bytecmp:$/;"	l
__asl_calc_bufif_newstate	./v_aslib.c	/^extern word32 __asl_calc_bufif_newstate(word32 gwrd, int32 base, int32 g_stval)$/;"	f	signature:(word32 gwrd, int32 base, int32 g_stval)
__asl_calc_bufif_newstate	./v_aslib.s	/^__asl_calc_bufif_newstate:$/;"	l
__asl_calc_comb_udp	./v_aslib.c	/^extern word32 __asl_calc_comb_udp(struct gate_t *gp, int32 wi, int32 bi)$/;"	f	signature:(struct gate_t *gp, int32 wi, int32 bi)
__asl_calc_comb_udp	./v_aslib.s	/^__asl_calc_comb_udp:$/;"	l
__asl_cancel_ev	./v_aslib.c	/^extern void __asl_cancel_ev(struct tev_t *tevp) $/;"	f	signature:(struct tev_t *tevp)
__asl_cancel_ev	./v_aslib.s	/^__asl_cancel_ev:$/;"	l
__asl_cancele_pend_chg_1gev	./v_aslib.c	/^extern int32 __asl_cancele_pend_chg_1gev(struct gate_t *gp, struct tev_t *tevp) $/;"	f	signature:(struct gate_t *gp, struct tev_t *tevp)
__asl_cancele_pend_chg_1gev	./v_aslib.s	/^__asl_cancele_pend_chg_1gev:$/;"	l
__asl_cancele_pend_nochg_1gev	./v_aslib.c	/^extern int32 __asl_cancele_pend_nochg_1gev(struct gate_t *gp, $/;"	f	signature:(struct gate_t *gp, struct tev_t *tevp)
__asl_cancele_pend_nochg_1gev	./v_aslib.s	/^__asl_cancele_pend_nochg_1gev:$/;"	l
__asl_chg_gate_outwire	./v_aslib.c	/^extern void __asl_chg_gate_outwire(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__asl_chg_gate_outwire	./v_aslib.s	/^__asl_chg_gate_outwire:$/;"	l
__asl_chg_vec_lhsbsel	./v_aslib.c	/^extern void __asl_chg_vec_lhsbsel(struct net_t *np, int32 dbit, word32 aw,$/;"	f	signature:(struct net_t *np, int32 dbit, word32 aw, word32 bw, struct nchglst_t *nchglp)
__asl_chg_vec_lhsbsel	./v_aslib.s	/^__asl_chg_vec_lhsbsel:$/;"	l
__asl_chg_vec_lhsbsel_2state	./v_aslib.c	/^extern void __asl_chg_vec_lhsbsel_2state(struct net_t *np, int32 dbit, $/;"	f	signature:(struct net_t *np, int32 dbit, word32 aw, struct nchglst_t *nchglp)
__asl_chg_vec_lhsbsel_2state	./v_aslib.s	/^__asl_chg_vec_lhsbsel_2state:$/;"	l
__asl_chk_dce_cbvc	./v_aslib.c	/^extern void __asl_chk_dce_cbvc(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__asl_chk_dce_cbvc	./v_aslib.s	/^__asl_chk_dce_cbvc:$/;"	l
__asl_chk_gate_vpi_chg	./v_aslib.c	/^extern void __asl_chk_gate_vpi_chg(int32 gi)$/;"	f	signature:(int32 gi)
__asl_chk_gate_vpi_chg	./v_aslib.s	/^__asl_chk_gate_vpi_chg:$/;"	l
__asl_chk_ld_vpiputv_driver	./v_aslib.c	/^extern void __asl_chk_ld_vpiputv_driver(word32 *accum_ap, struct net_t *np)$/;"	f	signature:(word32 *accum_ap, struct net_t *np)
__asl_chk_ld_vpiputv_driver	./v_aslib.s	/^__asl_chk_ld_vpiputv_driver:$/;"	l
__asl_compiled_ev_to_front	./v_aslib.c	/^extern void __asl_compiled_ev_to_front(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__asl_compiled_ev_to_front	./v_aslib.s	/^__asl_compiled_ev_to_front:$/;"	l
__asl_correct_frc	./v_aslib.c	/^extern int32 __asl_correct_frc(word32 *ap, struct net_t *np)$/;"	f	signature:(word32 *ap, struct net_t *np)
__asl_correct_frc	./v_aslib.s	/^__asl_correct_frc:$/;"	l
__asl_cp_auto_idp_area_func	./v_aslib.c	/^extern void __asl_cp_auto_idp_area_func(t_midat *dst_idp, t_midat *src_idp)$/;"	f	signature:(t_midat *dst_idp, t_midat *src_idp)
__asl_cp_auto_idp_area_func	./v_aslib.s	/^__asl_cp_auto_idp_area_func:$/;"	l
__asl_downrel_targ_to_ref	./v_aslib.c	/^extern void *__asl_downrel_targ_to_ref(struct gref_t *grp)$/;"	f	signature:(struct gref_t *grp)
__asl_downrel_targ_to_ref	./v_aslib.s	/^__asl_downrel_targ_to_ref:$/;"	l
__asl_epair_tab	./v_aslib.c	/^const word32 __asl_epair_tab[] =$/;"	v
__asl_epair_tab	./v_aslib.s	/^__asl_epair_tab:$/;"	l
__asl_eval_1w_nonstren_wire	./v_aslib.c	/^extern void __asl_eval_1w_nonstren_wire(word32 *resa, word32 op2a, word32 op2b)$/;"	f	signature:(word32 *resa, word32 op2a, word32 op2b)
__asl_eval_1w_nonstren_wire	./v_aslib.s	/^__asl_eval_1w_nonstren_wire:$/;"	l
__asl_eval_1w_nonstren_wire_and	./v_aslib.c	/^extern void __asl_eval_1w_nonstren_wire_and(word32 *resa, word32 op2a, $/;"	f	signature:(word32 *resa, word32 op2a, word32 op2b)
__asl_eval_1w_nonstren_wire_and	./v_aslib.s	/^__asl_eval_1w_nonstren_wire_and:$/;"	l
__asl_eval_1w_nonstren_wire_or	./v_aslib.c	/^extern void __asl_eval_1w_nonstren_wire_or(word32 *resa, word32 op2a, $/;"	f	signature:(word32 *resa, word32 op2a, word32 op2b)
__asl_eval_1w_nonstren_wire_or	./v_aslib.s	/^__asl_eval_1w_nonstren_wire_or:$/;"	l
__asl_eval_cmos_gate	./v_aslib.c	/^extern int32 __asl_eval_cmos_gate(int32 nmos_gwrd, int32 pmos_gwrd,$/;"	f	signature:(int32 nmos_gwrd, int32 pmos_gwrd, int32 old_gateval, int32 wtyp)
__asl_eval_cmos_gate	./v_aslib.s	/^__asl_eval_cmos_gate:$/;"	l
__asl_eval_htran_stwire_1bit	./v_aslib.c	/^extern void __asl_eval_htran_stwire_1bit(struct net_t *np, int32 bi)$/;"	f	signature:(struct net_t *np, int32 bi)
__asl_eval_htran_stwire_1bit	./v_aslib.s	/^__asl_eval_htran_stwire_1bit:$/;"	l
__asl_eval_htran_stwire_1bit_nchg	./v_aslib.c	/^extern void __asl_eval_htran_stwire_1bit_nchg(struct net_t *np, $/;"	f	signature:(struct net_t *np, struct nchglst_t *nchglp, int32 bi)
__asl_eval_htran_stwire_1bit_nchg	./v_aslib.s	/^__asl_eval_htran_stwire_1bit_nchg:$/;"	l
__asl_eval_htran_wire_1bit	./v_aslib.c	/^extern void __asl_eval_htran_wire_1bit(struct net_t *np, int32 bi)$/;"	f	signature:(struct net_t *np, int32 bi)
__asl_eval_htran_wire_1bit	./v_aslib.s	/^__asl_eval_htran_wire_1bit:$/;"	l
__asl_eval_htran_wire_1bit_nchg	./v_aslib.c	/^extern void __asl_eval_htran_wire_1bit_nchg(struct net_t *np, $/;"	f	signature:(struct net_t *np, struct nchglst_t *nchglp, int32 bi)
__asl_eval_htran_wire_1bit_nchg	./v_aslib.s	/^__asl_eval_htran_wire_1bit_nchg:$/;"	l
__asl_eval_rcmos_gate	./v_aslib.c	/^extern int32 __asl_eval_rcmos_gate(int32 nmos_gwrd, int32 pmos_gwrd,$/;"	f	signature:(int32 nmos_gwrd, int32 pmos_gwrd, int32 old_gateval, int32 wtyp)
__asl_eval_rcmos_gate	./v_aslib.s	/^__asl_eval_rcmos_gate:$/;"	l
__asl_eval_tran_1bit	./v_aslib.c	/^extern void __asl_eval_tran_1bit(struct net_t *np, int32 bi)$/;"	f	signature:(struct net_t *np, int32 bi)
__asl_eval_tran_1bit	./v_aslib.s	/^__asl_eval_tran_1bit:$/;"	l
__asl_eval_tran_bidchan_1bit	./v_aslib.c	/^extern word32 __asl_eval_tran_bidchan_1bit(int32 chan_id)$/;"	f	signature:(int32 chan_id)
__asl_eval_tran_bidchan_1bit	./v_aslib.s	/^__asl_eval_tran_bidchan_1bit:$/;"	l
__asl_eval_tran_bidchan_1bit_assign	./v_aslib.c	/^extern void __asl_eval_tran_bidchan_1bit_assign(int32 chan_id)$/;"	f	signature:(int32 chan_id)
__asl_eval_tran_bidchan_1bit_assign	./v_aslib.s	/^__asl_eval_tran_bidchan_1bit_assign:$/;"	l
__asl_eval_tran_bidchan_vectored_assign	./v_aslib.c	/^extern void __asl_eval_tran_bidchan_vectored_assign(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__asl_eval_tran_bidchan_vectored_assign	./v_aslib.s	/^__asl_eval_tran_bidchan_vectored_assign:$/;"	l
__asl_eval_tran_scalar_bidchan_1bit	./v_aslib.c	/^extern word32 __asl_eval_tran_scalar_bidchan_1bit(int32 chan_id)$/;"	f	signature:(int32 chan_id)
__asl_eval_tran_scalar_bidchan_1bit	./v_aslib.s	/^__asl_eval_tran_scalar_bidchan_1bit:$/;"	l
__asl_eval_tran_stbidchan_1bit	./v_aslib.c	/^extern word32 __asl_eval_tran_stbidchan_1bit(int32 chan_id)$/;"	f	signature:(int32 chan_id)
__asl_eval_tran_stbidchan_1bit	./v_aslib.s	/^__asl_eval_tran_stbidchan_1bit:$/;"	l
__asl_eval_tran_stbidchan_1bit_assign	./v_aslib.c	/^extern void __asl_eval_tran_stbidchan_1bit_assign(int32 chan_id)$/;"	f	signature:(int32 chan_id)
__asl_eval_tran_stbidchan_1bit_assign	./v_aslib.s	/^__asl_eval_tran_stbidchan_1bit_assign:$/;"	l
__asl_eval_tran_stbidchan_vectored_assign	./v_aslib.c	/^extern void __asl_eval_tran_stbidchan_vectored_assign(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__asl_eval_tran_stbidchan_vectored_assign	./v_aslib.s	/^__asl_eval_tran_stbidchan_vectored_assign:$/;"	l
__asl_eval_tran_vector	./v_aslib.c	/^extern void __asl_eval_tran_vector(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__asl_eval_tran_vector	./v_aslib.s	/^__asl_eval_tran_vector:$/;"	l
__asl_eval_tranif_ld	./v_aslib.c	/^extern int32 __asl_eval_tranif_ld(struct gate_t *gp)$/;"	f	signature:(struct gate_t *gp)
__asl_eval_tranif_ld	./v_aslib.s	/^__asl_eval_tranif_ld:$/;"	l
__asl_eval_wide_wire	./v_aslib.c	/^extern void __asl_eval_wide_wire(word32 *acc_ap, word32 *drv_ap,$/;"	f	signature:(word32 *acc_ap, word32 *drv_ap, word32 *drv_bp, int32 wlen)
__asl_eval_wide_wire	./v_aslib.s	/^__asl_eval_wide_wire:$/;"	l
__asl_eval_wide_wire_and	./v_aslib.c	/^extern void __asl_eval_wide_wire_and(word32 *acc_ap, word32 *drv_ap,$/;"	f	signature:(word32 *acc_ap, word32 *drv_ap, word32 *drv_bp, int32 wlen)
__asl_eval_wide_wire_and	./v_aslib.s	/^__asl_eval_wide_wire_and:$/;"	l
__asl_eval_wide_wire_or	./v_aslib.c	/^extern void __asl_eval_wide_wire_or(word32 *acc_ap, word32 *drv_ap, $/;"	f	signature:(word32 *acc_ap, word32 *drv_ap, word32 *drv_bp, int32 wlen)
__asl_eval_wide_wire_or	./v_aslib.s	/^__asl_eval_wide_wire_or:$/;"	l
__asl_exec_cause	./v_aslib.c	/^extern void __asl_exec_cause(struct st_t *stp, struct nchglst_t *nchglp)$/;"	f	signature:(struct st_t *stp, struct nchglst_t *nchglp)
__asl_exec_cause	./v_aslib.s	/^__asl_exec_cause:$/;"	l
__asl_exec_disable	./v_aslib.c	/^extern int32 __asl_exec_disable(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__asl_exec_disable	./v_aslib.s	/^__asl_exec_disable:$/;"	l
__asl_exec_display	./v_aslib.c	/^extern void __asl_exec_display(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__asl_exec_display	./v_aslib.s	/^__asl_exec_display:$/;"	l
__asl_exec_qc_assign	./v_aslib.c	/^extern void __asl_exec_qc_assign(struct st_t *stp, int32 rhsbi, $/;"	f	signature:(struct st_t *stp, int32 rhsbi, struct nchglst_t *nchglp, size_t nchg_idp_ofs)
__asl_exec_qc_assign	./v_aslib.s	/^__asl_exec_qc_assign:$/;"	l
__asl_exec_qc_assign_concat	./v_aslib.c	/^extern void __asl_exec_qc_assign_concat(struct st_t *stp, int32 rhsbi, $/;"	f	signature:(struct st_t *stp, int32 rhsbi, struct nchglst_t *nchglp, size_t nchg_idp_ofs, struct expr_t *lhsx)
__asl_exec_qc_assign_concat	./v_aslib.s	/^__asl_exec_qc_assign_concat:$/;"	l
__asl_exec_qc_deassign	./v_aslib.c	/^extern void __asl_exec_qc_deassign(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__asl_exec_qc_deassign	./v_aslib.s	/^__asl_exec_qc_deassign:$/;"	l
__asl_exec_qc_deassign_concat	./v_aslib.c	/^extern void __asl_exec_qc_deassign_concat(struct expr_t *lhsx)$/;"	f	signature:(struct expr_t *lhsx)
__asl_exec_qc_deassign_concat	./v_aslib.s	/^__asl_exec_qc_deassign_concat:$/;"	l
__asl_exec_qc_deassign_force	./v_aslib.c	/^extern void __asl_exec_qc_deassign_force(struct st_t *stp, $/;"	f	signature:(struct st_t *stp, struct nchglst_t *nchglp, size_t nchg_idp_ofs)
__asl_exec_qc_deassign_force	./v_aslib.s	/^__asl_exec_qc_deassign_force:$/;"	l
__asl_exec_qc_deassign_force_concat	./v_aslib.c	/^extern void __asl_exec_qc_deassign_force_concat(struct expr_t *lhsx,$/;"	f	signature:(struct expr_t *lhsx, struct nchglst_t *nchglp, size_t nchg_idp_ofs)
__asl_exec_qc_deassign_force_concat	./v_aslib.s	/^__asl_exec_qc_deassign_force_concat:$/;"	l
__asl_exec_qc_force	./v_aslib.c	/^extern void __asl_exec_qc_force(struct st_t *stp, int32 rhsbi, $/;"	f	signature:(struct st_t *stp, int32 rhsbi, struct nchglst_t *nchglp, size_t nchg_idp_ofs)
__asl_exec_qc_force	./v_aslib.s	/^__asl_exec_qc_force:$/;"	l
__asl_exec_qc_force_concat	./v_aslib.c	/^extern void __asl_exec_qc_force_concat(struct st_t *stp, int32 rhsbi, $/;"	f	signature:(struct st_t *stp, int32 rhsbi, struct nchglst_t *nchglp, size_t nchg_idp_ofs, struct expr_t *lhsx)
__asl_exec_qc_force_concat	./v_aslib.s	/^__asl_exec_qc_force_concat:$/;"	l
__asl_exec_qc_tran_wireforce	./v_aslib.c	/^extern void __asl_exec_qc_tran_wireforce(struct st_t *stp, int32 bi, $/;"	f	signature:(struct st_t *stp, int32 bi, struct nchglst_t *nchglp, size_t nchg_idp_ofs)
__asl_exec_qc_tran_wireforce	./v_aslib.s	/^__asl_exec_qc_tran_wireforce:$/;"	l
__asl_exec_qc_tran_wireforce_concat	./v_aslib.c	/^extern void __asl_exec_qc_tran_wireforce_concat(struct st_t *stp, $/;"	f	signature:(struct st_t *stp, struct expr_t *lhsx, int32 bi, struct nchglst_t *nchglp, size_t nchg_idp_ofs)
__asl_exec_qc_tran_wireforce_concat	./v_aslib.s	/^__asl_exec_qc_tran_wireforce_concat:$/;"	l
__asl_exec_qc_tran_wirerelease	./v_aslib.c	/^extern void __asl_exec_qc_tran_wirerelease(struct st_t *stp, $/;"	f	signature:(struct st_t *stp, struct nchglst_t *nchglp, size_t nchg_idp_ofs)
__asl_exec_qc_tran_wirerelease	./v_aslib.s	/^__asl_exec_qc_tran_wirerelease:$/;"	l
__asl_exec_qc_tran_wirerelease_concat	./v_aslib.c	/^extern void __asl_exec_qc_tran_wirerelease_concat(struct expr_t *lhsx,$/;"	f	signature:(struct expr_t *lhsx, struct nchglst_t *nchglp, size_t nchg_idp_ofs)
__asl_exec_qc_tran_wirerelease_concat	./v_aslib.s	/^__asl_exec_qc_tran_wirerelease_concat:$/;"	l
__asl_exec_qc_wireforce	./v_aslib.c	/^extern void __asl_exec_qc_wireforce(struct st_t *stp, int32 bi, $/;"	f	signature:(struct st_t *stp, int32 bi, struct nchglst_t *nchglp, size_t nchg_idp_ofs)
__asl_exec_qc_wireforce	./v_aslib.s	/^__asl_exec_qc_wireforce:$/;"	l
__asl_exec_qc_wireforce_concat	./v_aslib.c	/^extern void __asl_exec_qc_wireforce_concat(struct st_t *stp, $/;"	f	signature:(struct st_t *stp, struct expr_t *lhsx, int32 bi, struct nchglst_t *nchglp, size_t nchg_idp_ofs)
__asl_exec_qc_wireforce_concat	./v_aslib.s	/^__asl_exec_qc_wireforce_concat:$/;"	l
__asl_exec_qc_wirerelease	./v_aslib.c	/^extern void __asl_exec_qc_wirerelease(struct st_t *stp, struct nchglst_t *nchglp, $/;"	f	signature:(struct st_t *stp, struct nchglst_t *nchglp, size_t nchg_idp_ofs)
__asl_exec_qc_wirerelease	./v_aslib.s	/^__asl_exec_qc_wirerelease:$/;"	l
__asl_exec_qc_wirerelease_concat	./v_aslib.c	/^extern void __asl_exec_qc_wirerelease_concat(struct expr_t *lhsx,$/;"	f	signature:(struct expr_t *lhsx, struct nchglst_t *nchglp, size_t nchg_idp_ofs)
__asl_exec_qc_wirerelease_concat	./v_aslib.s	/^__asl_exec_qc_wirerelease_concat:$/;"	l
__asl_exec_stsk	./v_aslib.c	/^extern void __asl_exec_stsk(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__asl_exec_stsk	./v_aslib.s	/^__asl_exec_stsk:$/;"	l
__asl_exec_sysfunc	./v_aslib.c	/^extern void *__asl_exec_sysfunc(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__asl_exec_sysfunc	./v_aslib.s	/^__asl_exec_sysfunc:$/;"	l
__asl_exec_sysfunc_stmtloc	./v_aslib.c	/^extern void *__asl_exec_sysfunc_stmtloc(struct expr_t *ndp, struct st_t *stp)$/;"	f	signature:(struct expr_t *ndp, struct st_t *stp)
__asl_exec_sysfunc_stmtloc	./v_aslib.s	/^__asl_exec_sysfunc_stmtloc:$/;"	l
__asl_exec_wide_logic_gate	./v_aslib.c	/^extern word32 __asl_exec_wide_logic_gate(struct gate_t *gp, int32 i)$/;"	f	signature:(struct gate_t *gp, int32 i)
__asl_exec_wide_logic_gate	./v_aslib.s	/^__asl_exec_wide_logic_gate:$/;"	l
__asl_fmonit_trigger	./v_aslib.c	/^extern void __asl_fmonit_trigger(struct dcevnt_t *dcep)$/;"	f	signature:(struct dcevnt_t *dcep)
__asl_fmonit_trigger	./v_aslib.s	/^__asl_fmonit_trigger:$/;"	l
__asl_force_active	./v_aslib.c	/^extern int32 __asl_force_active(struct net_t *np, int32 bi) $/;"	f	signature:(struct net_t *np, int32 bi)
__asl_force_active	./v_aslib.s	/^__asl_force_active:$/;"	l
__asl_free_next_event	./v_aslib.c	/^extern struct tev_t *__asl_free_next_event(void)$/;"	f	signature:(void)
__asl_free_next_event	./v_aslib.s	/^__asl_free_next_event:$/;"	l
__asl_get_del_1x	./v_aslib.c	/^extern word64 __asl_get_del_1x(union del_u du)$/;"	f	signature:(union del_u du)
__asl_get_del_1x	./v_aslib.s	/^__asl_get_del_1x:$/;"	l
__asl_get_del_4x	./v_aslib.c	/^extern word64 __asl_get_del_4x(union del_u du)$/;"	f	signature:(union del_u du)
__asl_get_del_4x	./v_aslib.s	/^__asl_get_del_4x:$/;"	l
__asl_get_downrel_idp	./v_aslib.c	/^extern void *__asl_get_downrel_idp(struct gref_t *grp)$/;"	f	signature:(struct gref_t *grp)
__asl_get_downrel_idp	./v_aslib.s	/^__asl_get_downrel_idp:$/;"	l
__asl_get_perinst_val	./v_aslib.c	/^extern void __asl_get_perinst_val(word32 *wp, union pck_u drv_wp, int32 blen) $/;"	f	signature:(word32 *wp, union pck_u drv_wp, int32 blen)
__asl_get_perinst_val	./v_aslib.s	/^__asl_get_perinst_val:$/;"	l
__asl_get_string_byte	./v_aslib.c	/^extern word32 __asl_get_string_byte(struct net_t *np, int32 bi)$/;"	f	signature:(struct net_t *np, int32 bi)
__asl_get_string_byte	./v_aslib.s	/^__asl_get_string_byte:$/;"	l
__asl_get_uprel_idp	./v_aslib.c	/^extern void *__asl_get_uprel_idp(struct gref_t *grp)$/;"	f	signature:(struct gref_t *grp)
__asl_get_uprel_idp	./v_aslib.s	/^__asl_get_uprel_idp:$/;"	l
__asl_get_xprop_accum	./v_aslib.c	/^extern word32 *__asl_get_xprop_accum(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__asl_get_xprop_accum	./v_aslib.s	/^__asl_get_xprop_accum:$/;"	l
__asl_has_xedge_wide	./v_aslib.c	/^extern int32 __asl_has_xedge_wide(word32 *wp1, word32 *wp2, int32 wlen)$/;"	f	signature:(word32 *wp1, word32 *wp2, int32 wlen)
__asl_has_xedge_wide	./v_aslib.s	/^__asl_has_xedge_wide:$/;"	l
__asl_has_xedge_wide_st	./v_aslib.c	/^extern int32 __asl_has_xedge_wide_st(byte *bp1, byte *bp2, int32 blen)$/;"	f	signature:(byte *bp1, byte *bp2, int32 blen)
__asl_has_xedge_wide_st	./v_aslib.s	/^__asl_has_xedge_wide_st:$/;"	l
__asl_immed_eval_trifchan	./v_aslib.c	/^extern void __asl_immed_eval_trifchan(struct gate_t *gp)$/;"	f	signature:(struct gate_t *gp)
__asl_immed_eval_trifchan	./v_aslib.s	/^__asl_immed_eval_trifchan:$/;"	l
__asl_info_map	./v_cvcrt.c	/^int32 *__asl_info_map;    \/* map of routine number to table index *\/$/;"	v
__asl_is_xedge_tab	./v_aslib.c	/^const word32 __asl_is_xedge_tab[16] =$/;"	v
__asl_is_xedge_tab	./v_aslib.s	/^__asl_is_xedge_tab:$/;"	l
__asl_jmp_eq_stmask	./v_aslib.c	/^extern int32 __asl_jmp_eq_stmask(byte *sbp1, byte *sbp2, int32 blen)$/;"	f	signature:(byte *sbp1, byte *sbp2, int32 blen)
__asl_jmp_eq_stmask	./v_aslib.s	/^__asl_jmp_eq_stmask:$/;"	l
__asl_jmp_eq_wide_var	./v_aslib.c	/^extern int32 __asl_jmp_eq_wide_var(word32 *op1p, word32 *op2p, int32 blen)$/;"	f	signature:(word32 *op1p, word32 *op2p, int32 blen)
__asl_jmp_eq_wide_var	./v_aslib.s	/^__asl_jmp_eq_wide_var:$/;"	l
__asl_ld_logic_wide_driver	./v_aslib.c	/^extern word32 __asl_ld_logic_wide_driver(struct gate_t *gp, int32 nins)$/;"	f	signature:(struct gate_t *gp, int32 nins)
__asl_ld_logic_wide_driver	./v_aslib.s	/^__asl_ld_logic_wide_driver:$/;"	l
__asl_ld_tfrwarg_drvp	./v_aslib.c	/^extern void *__asl_ld_tfrwarg_drvp(struct net_pin_t *npp)$/;"	f	signature:(struct net_pin_t *npp)
__asl_ld_tfrwarg_drvp	./v_aslib.s	/^__asl_ld_tfrwarg_drvp:$/;"	l
__asl_linkout_tevp	./v_aslib.c	/^extern void __asl_linkout_tevp(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__asl_linkout_tevp	./v_aslib.s	/^__asl_linkout_tevp:$/;"	l
__asl_linkout_tevp_no_trigger	./v_aslib.c	/^extern void __asl_linkout_tevp_no_trigger(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__asl_linkout_tevp_no_trigger	./v_aslib.s	/^__asl_linkout_tevp_no_trigger:$/;"	l
__asl_loc_get_new_event	./v_aslib.c	/^extern struct tev_t *__asl_loc_get_new_event(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__asl_loc_get_new_event	./v_aslib.s	/^__asl_loc_get_new_event:$/;"	l
__asl_loc_get_new_thread_event	./v_aslib.c	/^extern struct tev_t *__asl_loc_get_new_thread_event(void)$/;"	f	signature:(void)
__asl_loc_get_new_thread_event	./v_aslib.s	/^__asl_loc_get_new_thread_event:$/;"	l
__asl_mdprt_bsel	./v_aslib.c	/^extern void __asl_mdprt_bsel(struct expr_t *up_lhsx, word32 *lhs_ap,$/;"	f	signature:(struct expr_t *up_lhsx, word32 *lhs_ap, word32 new_val)
__asl_mdprt_bsel	./v_aslib.s	/^__asl_mdprt_bsel:$/;"	l
__asl_mdprt_bsel_1w	./v_aslib.c	/^extern void __asl_mdprt_bsel_1w(int32 bi, word32 *lhs_ap, word32 new_val)$/;"	f	signature:(int32 bi, word32 *lhs_ap, word32 new_val)
__asl_mdprt_bsel_1w	./v_aslib.s	/^__asl_mdprt_bsel_1w:$/;"	l
__asl_mdprt_bsel_1w_dmpp	./v_aslib.c	/^extern void __asl_mdprt_bsel_1w_dmpp(int32 bi, word32 *lhs_ap, word32 new_val,$/;"	f	signature:(int32 bi, word32 *lhs_ap, word32 new_val, struct net_t *up_np)
__asl_mdprt_bsel_1w_dmpp	./v_aslib.s	/^__asl_mdprt_bsel_1w_dmpp:$/;"	l
__asl_mdprt_bsel_1w_dmpv	./v_aslib.c	/^extern void __asl_mdprt_bsel_1w_dmpv(int32 bi, word32 *lhs_ap, word32 new_val,$/;"	f	signature:(int32 bi, word32 *lhs_ap, word32 new_val, struct net_t *up_np)
__asl_mdprt_bsel_1w_dmpv	./v_aslib.s	/^__asl_mdprt_bsel_1w_dmpv:$/;"	l
__asl_mdprt_bsel_dmpp	./v_aslib.c	/^extern void __asl_mdprt_bsel_dmpp(struct expr_t *up_lhsx, word32 *lhs_ap,$/;"	f	signature:(struct expr_t *up_lhsx, word32 *lhs_ap, word32 new_val)
__asl_mdprt_bsel_dmpp	./v_aslib.s	/^__asl_mdprt_bsel_dmpp:$/;"	l
__asl_mdprt_bsel_dmpv	./v_aslib.c	/^extern void __asl_mdprt_bsel_dmpv(struct expr_t *up_lhsx, word32 *lhs_ap,$/;"	f	signature:(struct expr_t *up_lhsx, word32 *lhs_ap, word32 new_val)
__asl_mdprt_bsel_dmpv	./v_aslib.s	/^__asl_mdprt_bsel_dmpv:$/;"	l
__asl_mdprt_bsel_nchg	./v_aslib.c	/^extern void __asl_mdprt_bsel_nchg(struct expr_t *up_lhsx, word32 *lhs_ap,$/;"	f	signature:(struct expr_t *up_lhsx, word32 *lhs_ap, word32 new_val, struct nchglst_t *nchglp)
__asl_mdprt_bsel_nchg	./v_aslib.s	/^__asl_mdprt_bsel_nchg:$/;"	l
__asl_mdprt_bsel_nchg_1w	./v_aslib.c	/^extern void __asl_mdprt_bsel_nchg_1w(int32 bi, word32 *lhs_ap, word32 new_val,$/;"	f	signature:(int32 bi, word32 *lhs_ap, word32 new_val, struct nchglst_t *nchglp)
__asl_mdprt_bsel_nchg_1w	./v_aslib.s	/^__asl_mdprt_bsel_nchg_1w:$/;"	l
__asl_mdprt_bsel_nchg_1w_dmpp	./v_aslib.c	/^extern void __asl_mdprt_bsel_nchg_1w_dmpp(int32 bi, word32 *lhs_ap, $/;"	f	signature:(int32 bi, word32 *lhs_ap, word32 new_val, struct nchglst_t *nchglp, struct net_t *up_np)
__asl_mdprt_bsel_nchg_1w_dmpp	./v_aslib.s	/^__asl_mdprt_bsel_nchg_1w_dmpp:$/;"	l
__asl_mdprt_bsel_nchg_1w_dmpv	./v_aslib.c	/^extern void __asl_mdprt_bsel_nchg_1w_dmpv(int32 bi, word32 *lhs_ap, $/;"	f	signature:(int32 bi, word32 *lhs_ap, word32 new_val, struct nchglst_t *nchglp, struct net_t *up_np)
__asl_mdprt_bsel_nchg_1w_dmpv	./v_aslib.s	/^__asl_mdprt_bsel_nchg_1w_dmpv:$/;"	l
__asl_mdprt_bsel_nchg_dmpp	./v_aslib.c	/^extern void __asl_mdprt_bsel_nchg_dmpp(struct expr_t *up_lhsx, word32 *lhs_ap,$/;"	f	signature:(struct expr_t *up_lhsx, word32 *lhs_ap, word32 new_val, struct nchglst_t *nchglp)
__asl_mdprt_bsel_nchg_dmpp	./v_aslib.s	/^__asl_mdprt_bsel_nchg_dmpp:$/;"	l
__asl_mdprt_bsel_nchg_dmpv	./v_aslib.c	/^extern void __asl_mdprt_bsel_nchg_dmpv(struct expr_t *up_lhsx, word32 *lhs_ap,$/;"	f	signature:(struct expr_t *up_lhsx, word32 *lhs_ap, word32 new_val, struct nchglst_t *nchglp)
__asl_mdprt_bsel_nchg_dmpv	./v_aslib.s	/^__asl_mdprt_bsel_nchg_dmpv:$/;"	l
__asl_misc_terr	./v_aslib.c	/^extern void __asl_misc_terr(void)$/;"	f	signature:(void)
__asl_misc_terr	./v_aslib.s	/^__asl_misc_terr:$/;"	l
__asl_movabw_fr_svec	./v_aslib.c	/^extern void __asl_movabw_fr_svec(word32 *resap, byte *sbp, int32 blen)$/;"	f	signature:(word32 *resap, byte *sbp, int32 blen)
__asl_movabw_fr_svec	./v_aslib.s	/^__asl_movabw_fr_svec:$/;"	l
__asl_movabw_onew_fr_svec	./v_aslib.c	/^extern word32 __asl_movabw_onew_fr_svec(byte *sbp, int32 blen)$/;"	f	signature:(byte *sbp, int32 blen)
__asl_movabw_onew_fr_svec	./v_aslib.s	/^__asl_movabw_onew_fr_svec:$/;"	l
__asl_move_time	./v_aslib.c	/^extern void __asl_move_time(void)$/;"	f	signature:(void)
__asl_move_time_last	./v_aslib.c	/^extern void __asl_move_time_last(void)$/;"	f	signature:(void)
__asl_movr_fr_sgnw	./v_aslib.c	/^extern double __asl_movr_fr_sgnw(word32 *wp, int32 blen)$/;"	f	signature:(word32 *wp, int32 blen)
__asl_movr_fr_sgnw	./v_aslib.s	/^__asl_movr_fr_sgnw:$/;"	l
__asl_movr_fr_w	./v_aslib.c	/^extern double __asl_movr_fr_w(word32 *wp, int32 blen)$/;"	f	signature:(word32 *wp, int32 blen)
__asl_movr_fr_w	./v_aslib.s	/^__asl_movr_fr_w:$/;"	l
__asl_movsb_fr_scalstad	./v_aslib.c	/^extern byte __asl_movsb_fr_scalstad(word32 aw, word32 stval) $/;"	f	signature:(word32 aw, word32 stval)
__asl_movsb_fr_scalstad	./v_aslib.s	/^__asl_movsb_fr_scalstad:$/;"	l
__asl_movsb_fr_widestad	./v_aslib.c	/^extern void __asl_movsb_fr_widestad(byte *sbp, word32 *ap, int32 blen,$/;"	f	signature:(byte *sbp, word32 *ap, int32 blen, word32 stval)
__asl_movsb_fr_widestad	./v_aslib.s	/^__asl_movsb_fr_widestad:$/;"	l
__asl_movsb_fr_wstad	./v_aslib.c	/^extern void __asl_movsb_fr_wstad(byte *sbp, word32 *ap, int32 blen,$/;"	f	signature:(byte *sbp, word32 *ap, int32 blen, word32 stval)
__asl_movsb_fr_wstad	./v_aslib.s	/^__asl_movsb_fr_wstad:$/;"	l
__asl_movw_fr_r	./v_aslib.c	/^extern void __asl_movw_fr_r(word32 *resap, double d)$/;"	f	signature:(word32 *resap, double d)
__asl_movw_fr_r	./v_aslib.s	/^__asl_movw_fr_r:$/;"	l
__asl_movw_fr_r_2state	./v_aslib.c	/^extern word32 __asl_movw_fr_r_2state(double d)$/;"	f	signature:(double d)
__asl_movw_fr_r_2state	./v_aslib.s	/^__asl_movw_fr_r_2state:$/;"	l
__asl_nb_trigger_ectrl	./v_aslib.c	/^extern void __asl_nb_trigger_ectrl(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__asl_nb_trigger_ectrl	./v_aslib.s	/^__asl_nb_trigger_ectrl:$/;"	l
__asl_new_auto_idp_area	./v_aslib.c	/^extern t_midat *__asl_new_auto_idp_area(t_midat *idp)$/;"	f	signature:(t_midat *idp)
__asl_new_auto_idp_area	./v_aslib.s	/^__asl_new_auto_idp_area:$/;"	l
__asl_pend_chg_1gev	./v_aslib.c	/^extern void __asl_pend_chg_1gev(struct gate_t *gp, struct tev_t *tevp)$/;"	f	signature:(struct gate_t *gp, struct tev_t *tevp)
__asl_pend_chg_1gev	./v_aslib.s	/^__asl_pend_chg_1gev:$/;"	l
__asl_pend_chg_1gev_const	./v_aslib.c	/^extern void __asl_pend_chg_1gev_const(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__asl_pend_chg_1gev_const	./v_aslib.s	/^__asl_pend_chg_1gev_const:$/;"	l
__asl_pend_nochg_1gev	./v_aslib.c	/^extern void __asl_pend_nochg_1gev(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__asl_pend_nochg_1gev	./v_aslib.s	/^__asl_pend_nochg_1gev:$/;"	l
__asl_per_bit_xprop_accum	./v_aslib.c	/^extern int32 __asl_per_bit_xprop_accum(struct st_t *stp, int32 ndx, word32 *wp)$/;"	f	signature:(struct st_t *stp, int32 ndx, word32 *wp)
__asl_per_bit_xprop_accum	./v_aslib.s	/^__asl_per_bit_xprop_accum:$/;"	l
__asl_pop_xstk	./v_aslib.c	/^extern void __asl_pop_xstk(int32 num)$/;"	f	signature:(int32 num)
__asl_pop_xstk	./v_aslib.s	/^__asl_pop_xstk:$/;"	l
__asl_popcount_tab	./v_aslib.c	/^const word32 __asl_popcount_tab[256] =$/;"	v
__asl_popcount_tab	./v_aslib.s	/^__asl_popcount_tab:$/;"	l
__asl_popcount_wide	./v_aslib.c	/^extern int32 __asl_popcount_wide(word32 *wp, int32 wlen)$/;"	f	signature:(word32 *wp, int32 wlen)
__asl_popcount_wide	./v_aslib.s	/^__asl_popcount_wide:$/;"	l
__asl_process_alloced_nchg	./v_aslib.c	/^extern void __asl_process_alloced_nchg(void)$/;"	f	signature:(void)
__asl_process_alloced_nchg	./v_aslib.s	/^__asl_process_alloced_nchg:$/;"	l
__asl_process_mipd_nchg_ev	./v_aslib.c	/^extern void __asl_process_mipd_nchg_ev(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__asl_process_mipd_nchg_ev	./v_aslib.s	/^__asl_process_mipd_nchg_ev:$/;"	l
__asl_process_mipd_scalar_nchg_ev	./v_aslib.c	/^extern void __asl_process_mipd_scalar_nchg_ev(struct nchglst_t *nchglp)$/;"	f	signature:(struct nchglst_t *nchglp)
__asl_process_mipd_scalar_nchg_ev	./v_aslib.s	/^__asl_process_mipd_scalar_nchg_ev:$/;"	l
__asl_psel_correct_frc	./v_aslib.c	/^extern int32 __asl_psel_correct_frc(word32 *ap, struct net_t *np, int32 ri1,$/;"	f	signature:(word32 *ap, struct net_t *np, int32 ri1, int32 ri2)
__asl_psel_correct_frc	./v_aslib.s	/^__asl_psel_correct_frc:$/;"	l
__asl_qc_active	./v_aslib.c	/^extern int32 __asl_qc_active(struct net_t *np, int32 bi)$/;"	f	signature:(struct net_t *np, int32 bi)
__asl_qc_active	./v_aslib.s	/^__asl_qc_active:$/;"	l
__asl_random	./v_aslib.c	/^extern int32 __asl_random(void)$/;"	f	signature:(void)
__asl_random	./v_aslib.s	/^__asl_random:$/;"	l
__asl_random_with_seed	./v_aslib.c	/^extern int32 __asl_random_with_seed(int32 *localseed)$/;"	f	signature:(int32 *localseed)
__asl_random_with_seed	./v_aslib.s	/^__asl_random_with_seed:$/;"	l
__asl_real_div0_warning	./v_aslib.c	/^extern void __asl_real_div0_warning(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__asl_real_div0_warning	./v_aslib.s	/^__asl_real_div0_warning:$/;"	l
__asl_real_qcol_warning	./v_aslib.c	/^extern void __asl_real_qcol_warning(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__asl_real_qcol_warning	./v_aslib.s	/^__asl_real_qcol_warning:$/;"	l
__asl_record_array_net_change	./v_aslib.c	/^extern void __asl_record_array_net_change(struct net_t *np, $/;"	f	signature:(struct net_t *np, struct nchglst_t *nchglp, int32 arri)
__asl_record_array_net_change	./v_aslib.s	/^__asl_record_array_net_change:$/;"	l
__asl_reg_qcaf_inhibit	./v_aslib.c	/^extern int32 __asl_reg_qcaf_inhibit(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__asl_reg_qcaf_inhibit	./v_aslib.s	/^__asl_reg_qcaf_inhibit:$/;"	l
__asl_repcnt_jmp	./v_aslib.c	/^extern int32 __asl_repcnt_jmp(word32 *wp, int32 has_sign)$/;"	f	signature:(word32 *wp, int32 has_sign)
__asl_repcnt_jmp	./v_aslib.s	/^__asl_repcnt_jmp:$/;"	l
__asl_repl_curth_itp	./v_aslib.c	/^extern void __asl_repl_curth_itp(void)$/;"	f	signature:(void)
__asl_repl_curth_itp	./v_aslib.s	/^__asl_repl_curth_itp:$/;"	l
__asl_repl_itstk_top	./v_aslib.c	/^extern void *__asl_repl_itstk_top(void)$/;"	f	signature:(void)
__asl_repl_itstk_top	./v_aslib.s	/^__asl_repl_itstk_top:$/;"	l
__asl_reschd_1wev	./v_aslib.c	/^extern void __asl_reschd_1wev(struct tev_t *tevp, word64 newtim)$/;"	f	signature:(struct tev_t *tevp, word64 newtim)
__asl_reschd_1wev	./v_aslib.s	/^__asl_reschd_1wev:$/;"	l
__asl_reschd_caev	./v_aslib.c	/^extern void __asl_reschd_caev(struct conta_t *cap, struct tev_t *tevp)$/;"	f	signature:(struct conta_t *cap, struct tev_t *tevp)
__asl_reschd_caev	./v_aslib.s	/^__asl_reschd_caev:$/;"	l
__asl_reschd_caev_const	./v_aslib.c	/^extern void __asl_reschd_caev_const(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__asl_reschd_caev_const	./v_aslib.s	/^__asl_reschd_caev_const:$/;"	l
__asl_rhs_conta_stren	./v_aslib.c	/^extern void __asl_rhs_conta_stren(byte *sbp, int32 new_st, int32 bytlen)$/;"	f	signature:(byte *sbp, int32 new_st, int32 bytlen)
__asl_rhs_conta_stren	./v_aslib.s	/^__asl_rhs_conta_stren:$/;"	l
__asl_rhs_psel	./v_aslib.c	/^extern word32 __asl_rhs_psel(word32 *swp, word32 *sbwp, int32 sbit1, $/;"	f	signature:(word32 *swp, word32 *sbwp, int32 sbit1, int32 numbits)
__asl_rhs_psel	./v_aslib.s	/^__asl_rhs_psel:$/;"	l
__asl_rhs_psel_2state	./v_aslib.c	/^extern word32 __asl_rhs_psel_2state(word32 *swp, int32 sbit1, int32 numbits)$/;"	f	signature:(word32 *swp, int32 sbit1, int32 numbits)
__asl_rhs_psel_2state	./v_aslib.s	/^__asl_rhs_psel_2state:$/;"	l
__asl_rhs_psel_wide	./v_aslib.c	/^extern void  __asl_rhs_psel_wide(word32 *dwp, word32 *dbwp, word32 *swp, $/;"	f	signature:(word32 *dwp, word32 *dbwp, word32 *swp, word32 *sbwp, int32 sbit1, int32 numbits)
__asl_rhs_psel_wide	./v_aslib.s	/^__asl_rhs_psel_wide:$/;"	l
__asl_rhs_psel_wide_2state	./v_aslib.c	/^extern void  __asl_rhs_psel_wide_2state(word32 *dwp, word32 *swp, int32 sbit1, $/;"	f	signature:(word32 *dwp, word32 *swp, int32 sbit1, int32 numbits)
__asl_rhs_psel_wide_2state	./v_aslib.s	/^__asl_rhs_psel_wide_2state:$/;"	l
__asl_rhs_st_psel	./v_aslib.c	/^extern void __asl_rhs_st_psel(word32 *rgap, byte *sbp, int32 blen)$/;"	f	signature:(word32 *rgap, byte *sbp, int32 blen)
__asl_rhs_st_psel	./v_aslib.s	/^__asl_rhs_st_psel:$/;"	l
__asl_scalar_wire_inhibit	./v_aslib.c	/^extern int32 __asl_scalar_wire_inhibit(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__asl_scalar_wire_inhibit	./v_aslib.s	/^__asl_scalar_wire_inhibit:$/;"	l
__asl_schd_1gev	./v_aslib.c	/^extern void __asl_schd_1gev(struct gate_t *gp, struct tev_t *tevp)$/;"	f	signature:(struct gate_t *gp, struct tev_t *tevp)
__asl_schd_1gev	./v_aslib.s	/^__asl_schd_1gev:$/;"	l
__asl_schd_1gev_const	./v_aslib.c	/^extern void __asl_schd_1gev_const(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__asl_schd_1gev_const	./v_aslib.s	/^__asl_schd_1gev_const:$/;"	l
__asl_schd_1gev_pnd0	./v_aslib.c	/^extern void __asl_schd_1gev_pnd0(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__asl_schd_1gev_pnd0	./v_aslib.s	/^__asl_schd_1gev_pnd0:$/;"	l
__asl_schd_1pthwirebit	./v_aslib.c	/^extern void __asl_schd_1pthwirebit(struct net_t *np, int32 biti, word32 nval,$/;"	f	signature:(struct net_t *np, int32 biti, word32 nval, word32 oval, struct nchglst_t *nchglp, struct tev_t *ptevp)
__asl_schd_1pthwirebit	./v_aslib.s	/^__asl_schd_1pthwirebit:$/;"	l
__asl_schd_1pthwirebit_nomsg	./v_aslib.c	/^extern void __asl_schd_1pthwirebit_nomsg(struct net_t *np, int32 biti, $/;"	f	signature:(struct net_t *np, int32 biti, word32 nval, word32 oval, struct nchglst_t *nchglp, struct tev_t *ptevp)
__asl_schd_1pthwirebit_nomsg	./v_aslib.s	/^__asl_schd_1pthwirebit_nomsg:$/;"	l
__asl_schd_1wev	./v_aslib.c	/^extern void __asl_schd_1wev(struct tev_t *tevp, int32 bi)$/;"	f	signature:(struct tev_t *tevp, int32 bi)
__asl_schd_1wev	./v_aslib.s	/^__asl_schd_1wev:$/;"	l
__asl_schd_bidpthdrvrs	./v_aslib.c	/^extern int32 __asl_schd_bidpthdrvrs(struct net_t *np, word32 *drv_wp,$/;"	f	signature:(struct net_t *np, word32 *drv_wp, word32 *trnva_wp, int32 bi, struct tev_t *tevp)
__asl_schd_bidpthdrvrs	./v_aslib.s	/^__asl_schd_bidpthdrvrs:$/;"	l
__asl_schd_caev	./v_aslib.c	/^extern void __asl_schd_caev(struct conta_t *cap, struct tev_t *tevp)$/;"	f	signature:(struct conta_t *cap, struct tev_t *tevp)
__asl_schd_caev	./v_aslib.s	/^__asl_schd_caev:$/;"	l
__asl_schd_caev_const	./v_aslib.c	/^extern void __asl_schd_caev_const(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__asl_schd_caev_const	./v_aslib.s	/^__asl_schd_caev_const:$/;"	l
__asl_schd_caev_const0	./v_aslib.c	/^extern void __asl_schd_caev_const0(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__asl_schd_caev_const0	./v_aslib.s	/^__asl_schd_caev_const0:$/;"	l
__asl_schd_nb_vardel_rhsconst_dctrl	./v_aslib.c	/^extern void __asl_schd_nb_vardel_rhsconst_dctrl(struct st_t *del_stp, $/;"	f	signature:(struct st_t *del_stp, struct tev_t *tevp)
__asl_schd_nb_vardel_rhsconst_dctrl	./v_aslib.s	/^__asl_schd_nb_vardel_rhsconst_dctrl:$/;"	l
__asl_schd_scalar_1pthwirebit	./v_aslib.c	/^extern void __asl_schd_scalar_1pthwirebit(struct net_t *np, word32 nval, $/;"	f	signature:(struct net_t *np, word32 nval, word32 oval, struct nchglst_t *nchglp, struct tev_t *ptevp)
__asl_schd_scalar_1pthwirebit	./v_aslib.s	/^__asl_schd_scalar_1pthwirebit:$/;"	l
__asl_schd_scalar_1wev	./v_aslib.c	/^extern void __asl_schd_scalar_1wev(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__asl_schd_scalar_1wev	./v_aslib.s	/^__asl_schd_scalar_1wev:$/;"	l
__asl_schd_scalar_bidpthdrvrs	./v_aslib.c	/^extern int32 __asl_schd_scalar_bidpthdrvrs(struct net_t *np, byte *drv_wp,$/;"	f	signature:(struct net_t *np, byte *drv_wp, byte *trnva_wp, int32 bi, struct tev_t *tevp)
__asl_schd_scalar_bidpthdrvrs	./v_aslib.s	/^__asl_schd_scalar_bidpthdrvrs:$/;"	l
__asl_schd_st_1pthwirebit	./v_aslib.c	/^extern void __asl_schd_st_1pthwirebit(struct net_t *np, $/;"	f	signature:(struct net_t *np, int32 biti, word32 nval, word32 oval, struct nchglst_t *nchglp, struct tev_t *ptevp)
__asl_schd_st_1pthwirebit	./v_aslib.s	/^__asl_schd_st_1pthwirebit:$/;"	l
__asl_schd_st_scalar_1pthwirebit	./v_aslib.c	/^extern void __asl_schd_st_scalar_1pthwirebit(struct net_t *np, $/;"	f	signature:(struct net_t *np, word32 nval, word32 oval, struct nchglst_t *nchglp, struct tev_t *ptevp)
__asl_schd_st_scalar_1pthwirebit	./v_aslib.s	/^__asl_schd_st_scalar_1pthwirebit:$/;"	l
__asl_sched_fork	./v_aslib.c	/^extern void __asl_sched_fork(struct st_t *stp, struct st_t *nxtstp)$/;"	f	signature:(struct st_t *stp, struct st_t *nxtstp)
__asl_sched_fork	./v_aslib.s	/^__asl_sched_fork:$/;"	l
__asl_sched_namblk_thd	./v_aslib.c	/^extern void __asl_sched_namblk_thd(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__asl_sched_namblk_thd	./v_aslib.s	/^__asl_sched_namblk_thd:$/;"	l
__asl_sched_nb_pnd0_lhs_varndx	./v_aslib.c	/^extern word32 *__asl_sched_nb_pnd0_lhs_varndx(int32 bi, int32 nbytes, $/;"	f	signature:(int32 bi, int32 nbytes, struct tev_t *tevp)
__asl_sched_nb_pnd0_lhs_varndx	./v_aslib.s	/^__asl_sched_nb_pnd0_lhs_varndx:$/;"	l
__asl_sched_nb_pnd0_lhs_varndx_concat	./v_aslib.c	/^extern word32 *__asl_sched_nb_pnd0_lhs_varndx_concat(struct net_t *np, int32 bi,$/;"	f	signature:(struct net_t *np, int32 bi, int32 nbytes, struct tev_t *tevp, struct nchglst_t *nchglp)
__asl_sched_nb_pnd0_lhs_varndx_concat	./v_aslib.s	/^__asl_sched_nb_pnd0_lhs_varndx_concat:$/;"	l
__asl_sched_nb_pnd0_lhs_varndx_sel	./v_aslib.c	/^extern word32 *__asl_sched_nb_pnd0_lhs_varndx_sel(int32 bi, int32 nbytes, $/;"	f	signature:(int32 bi, int32 nbytes, struct tev_t *tevp, int32 sel_ndx)
__asl_sched_nb_pnd0_lhs_varndx_sel	./v_aslib.s	/^__asl_sched_nb_pnd0_lhs_varndx_sel:$/;"	l
__asl_sched_nbrhs_dctrl	./v_aslib.c	/^extern word32 *__asl_sched_nbrhs_dctrl(struct st_t *stp, struct tev_t *tevp,$/;"	f	signature:(struct st_t *stp, struct tev_t *tevp, int32 nbytes)
__asl_sched_nbrhs_dctrl	./v_aslib.s	/^__asl_sched_nbrhs_dctrl:$/;"	l
__asl_sched_nbrhs_dctrl_const	./v_aslib.c	/^extern word32 *__asl_sched_nbrhs_dctrl_const(struct tev_t *tevp, int32 nbytes)$/;"	f	signature:(struct tev_t *tevp, int32 nbytes)
__asl_sched_nbrhs_dctrl_const	./v_aslib.s	/^__asl_sched_nbrhs_dctrl_const:$/;"	l
__asl_sched_nbrhs_dctrl_const_last	./v_aslib.c	/^extern word32 *__asl_sched_nbrhs_dctrl_const_last(struct tev_t *tevp, $/;"	f	signature:(struct tev_t *tevp, int32 nbytes)
__asl_sched_nbrhs_dctrl_const_last	./v_aslib.s	/^__asl_sched_nbrhs_dctrl_const_last:$/;"	l
__asl_sched_nbrhs_dctrl_const_t	./v_aslib.c	/^extern word32 *__asl_sched_nbrhs_dctrl_const_t(struct tev_t *tevp, int32 nbytes)$/;"	f	signature:(struct tev_t *tevp, int32 nbytes)
__asl_sched_nbrhs_dctrl_const_t	./v_aslib.s	/^__asl_sched_nbrhs_dctrl_const_t:$/;"	l
__asl_sched_nbrhs_nomem_dctrl_const	./v_aslib.c	/^extern void __asl_sched_nbrhs_nomem_dctrl_const(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__asl_sched_nbrhs_nomem_dctrl_const	./v_aslib.s	/^__asl_sched_nbrhs_nomem_dctrl_const:$/;"	l
__asl_sched_nbrhs_nomem_dctrl_const_last	./v_aslib.c	/^extern void __asl_sched_nbrhs_nomem_dctrl_const_last(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__asl_sched_nbrhs_nomem_dctrl_const_last	./v_aslib.s	/^__asl_sched_nbrhs_nomem_dctrl_const_last:$/;"	l
__asl_sched_nbrhs_nomem_dctrl_const_t	./v_aslib.c	/^extern void __asl_sched_nbrhs_nomem_dctrl_const_t(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__asl_sched_nbrhs_nomem_dctrl_const_t	./v_aslib.s	/^__asl_sched_nbrhs_nomem_dctrl_const_t:$/;"	l
__asl_sched_nbrhs_scalar_dctrl	./v_aslib.c	/^extern void __asl_sched_nbrhs_scalar_dctrl(struct tev_t *tevp, $/;"	f	signature:(struct tev_t *tevp, struct st_t *del_stp, word32 rhsval)
__asl_sched_nbrhs_scalar_dctrl	./v_aslib.s	/^__asl_sched_nbrhs_scalar_dctrl:$/;"	l
__asl_sched_nbrhs_scalar_dctrl_const	./v_aslib.c	/^extern void __asl_sched_nbrhs_scalar_dctrl_const(struct tev_t *tevp, $/;"	f	signature:(struct tev_t *tevp, word32 rhsval)
__asl_sched_nbrhs_scalar_dctrl_const	./v_aslib.s	/^__asl_sched_nbrhs_scalar_dctrl_const:$/;"	l
__asl_sched_nbrhs_scalar_dctrl_const_last	./v_aslib.c	/^extern void __asl_sched_nbrhs_scalar_dctrl_const_last(struct tev_t *tevp, $/;"	f	signature:(struct tev_t *tevp, word32 rhsval)
__asl_sched_nbrhs_scalar_dctrl_const_last	./v_aslib.s	/^__asl_sched_nbrhs_scalar_dctrl_const_last:$/;"	l
__asl_sched_nbrhs_scalar_dctrl_const_t	./v_aslib.c	/^extern void __asl_sched_nbrhs_scalar_dctrl_const_t(struct tev_t *tevp, $/;"	f	signature:(struct tev_t *tevp, word32 rhsval)
__asl_sched_nbrhs_scalar_dctrl_const_t	./v_aslib.s	/^__asl_sched_nbrhs_scalar_dctrl_const_t:$/;"	l
__asl_sched_nbrhs_varndx_dctrl	./v_aslib.c	/^extern word32 *__asl_sched_nbrhs_varndx_dctrl(struct st_t *stp, $/;"	f	signature:(struct st_t *stp, int32 bi, int32 nbytes, struct tev_t *tevp)
__asl_sched_nbrhs_varndx_dctrl	./v_aslib.s	/^__asl_sched_nbrhs_varndx_dctrl:$/;"	l
__asl_sched_nbrhs_varndx_dctrl_concat	./v_aslib.c	/^extern word32 *__asl_sched_nbrhs_varndx_dctrl_concat(struct st_t *stp, $/;"	f	signature:(struct st_t *stp, struct net_t *np, int32 bi, int32 nbytes, struct tev_t *tevp, struct nchglst_t *nchglp)
__asl_sched_nbrhs_varndx_dctrl_concat	./v_aslib.s	/^__asl_sched_nbrhs_varndx_dctrl_concat:$/;"	l
__asl_sched_nbrhs_varndx_dctrl_const	./v_aslib.c	/^extern word32 *__asl_sched_nbrhs_varndx_dctrl_const(int32 bi, int32 nbytes, $/;"	f	signature:(int32 bi, int32 nbytes, struct tev_t *tevp)
__asl_sched_nbrhs_varndx_dctrl_const	./v_aslib.s	/^__asl_sched_nbrhs_varndx_dctrl_const:$/;"	l
__asl_sched_nbrhs_varndx_dctrl_const_concat	./v_aslib.c	/^extern word32 *__asl_sched_nbrhs_varndx_dctrl_const_concat(struct net_t *np,$/;"	f	signature:(struct net_t *np, int32 bi, int32 nbytes, struct tev_t *tevp, struct nchglst_t *nchglp)
__asl_sched_nbrhs_varndx_dctrl_const_concat	./v_aslib.s	/^__asl_sched_nbrhs_varndx_dctrl_const_concat:$/;"	l
__asl_sched_nbrhs_varndx_dctrl_const_concat_t	./v_aslib.c	/^extern word32 *__asl_sched_nbrhs_varndx_dctrl_const_concat_t(struct net_t *np,$/;"	f	signature:(struct net_t *np, int32 bi, int32 nbytes, struct tev_t *tevp, struct nchglst_t *nchglp)
__asl_sched_nbrhs_varndx_dctrl_const_concat_t	./v_aslib.s	/^__asl_sched_nbrhs_varndx_dctrl_const_concat_t:$/;"	l
__asl_sched_nbrhs_varndx_dctrl_const_sel_t	./v_aslib.c	/^extern word32 *__asl_sched_nbrhs_varndx_dctrl_const_sel_t(int32 bi, $/;"	f	signature:(int32 bi, int32 nbytes, struct tev_t *tevp, int32 sel_ndx)
__asl_sched_nbrhs_varndx_dctrl_const_sel_t	./v_aslib.s	/^__asl_sched_nbrhs_varndx_dctrl_const_sel_t:$/;"	l
__asl_sched_nbrhs_varndx_dctrl_const_t	./v_aslib.c	/^extern word32 *__asl_sched_nbrhs_varndx_dctrl_const_t(int32 bi, int32 nbytes, $/;"	f	signature:(int32 bi, int32 nbytes, struct tev_t *tevp)
__asl_sched_nbrhs_varndx_dctrl_const_t	./v_aslib.s	/^__asl_sched_nbrhs_varndx_dctrl_const_t:$/;"	l
__asl_sched_nbrhs_varndx_dctrl_sel_const	./v_aslib.c	/^extern word32 *__asl_sched_nbrhs_varndx_dctrl_sel_const(int32 bi, int32 nbytes, $/;"	f	signature:(int32 bi, int32 nbytes, struct tev_t *tevp, int32 sel_ndx)
__asl_sched_nbrhs_varndx_dctrl_sel_const	./v_aslib.s	/^__asl_sched_nbrhs_varndx_dctrl_sel_const:$/;"	l
__asl_sched_nbrhs_varndx_sel_dctrl	./v_aslib.c	/^extern word32 *__asl_sched_nbrhs_varndx_sel_dctrl(struct st_t *stp, $/;"	f	signature:(struct st_t *stp, int32 bi, int32 nbytes, struct tev_t *tevp, int32 sel_ndx)
__asl_sched_nbrhs_varndx_sel_dctrl	./v_aslib.s	/^__asl_sched_nbrhs_varndx_sel_dctrl:$/;"	l
__asl_sched_proc_delay	./v_aslib.c	/^extern void __asl_sched_proc_delay(struct st_t *stp, struct tev_t *tevp)$/;"	f	signature:(struct st_t *stp, struct tev_t *tevp)
__asl_sched_proc_delay	./v_aslib.s	/^__asl_sched_proc_delay:$/;"	l
__asl_sched_proc_delay_const	./v_aslib.c	/^extern void __asl_sched_proc_delay_const(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__asl_sched_proc_delay_const	./v_aslib.s	/^__asl_sched_proc_delay_const:$/;"	l
__asl_sched_proc_delay_const_nt	./v_aslib.c	/^extern void __asl_sched_proc_delay_const_nt(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__asl_sched_proc_delay_const_nt	./v_aslib.s	/^__asl_sched_proc_delay_const_nt:$/;"	l
__asl_sched_proc_delay_nt	./v_aslib.c	/^extern void __asl_sched_proc_delay_nt(struct st_t *stp, struct tev_t *tevp)$/;"	f	signature:(struct st_t *stp, struct tev_t *tevp)
__asl_sched_proc_delay_nt	./v_aslib.s	/^__asl_sched_proc_delay_nt:$/;"	l
__asl_sched_proc_delay_pnd0	./v_aslib.c	/^extern void __asl_sched_proc_delay_pnd0(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__asl_sched_proc_delay_pnd0	./v_aslib.s	/^__asl_sched_proc_delay_pnd0:$/;"	l
__asl_sched_proc_delay_pnd0_nt	./v_aslib.c	/^extern void __asl_sched_proc_delay_pnd0_nt(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__asl_sched_proc_delay_pnd0_nt	./v_aslib.s	/^__asl_sched_proc_delay_pnd0_nt:$/;"	l
__asl_sched_proc_delay_task_const	./v_aslib.c	/^extern void __asl_sched_proc_delay_task_const(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__asl_sched_proc_delay_task_const	./v_aslib.s	/^__asl_sched_proc_delay_task_const:$/;"	l
__asl_sched_proc_delay_task_pnd0	./v_aslib.c	/^extern void __asl_sched_proc_delay_task_pnd0(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__asl_sched_proc_delay_task_pnd0	./v_aslib.s	/^__asl_sched_proc_delay_task_pnd0:$/;"	l
__asl_sched_scalar_mipd_16v	./v_aslib.c	/^extern void __asl_sched_scalar_mipd_16v(struct net_t *np, struct tev_t *ptevp)$/;"	f	signature:(struct net_t *np, struct tev_t *ptevp)
__asl_sched_scalar_mipd_16v	./v_aslib.s	/^__asl_sched_scalar_mipd_16v:$/;"	l
__asl_sched_scalar_mipd_const	./v_aslib.c	/^extern void __asl_sched_scalar_mipd_const(struct tev_t *ptevp)$/;"	f	signature:(struct tev_t *ptevp)
__asl_sched_scalar_mipd_const	./v_aslib.s	/^__asl_sched_scalar_mipd_const:$/;"	l
__asl_sched_scalar_mipd_is16v	./v_aslib.c	/^extern void __asl_sched_scalar_mipd_is16v(struct net_t *np, struct tev_t *ptevp)$/;"	f	signature:(struct net_t *np, struct tev_t *ptevp)
__asl_sched_scalar_mipd_is16v	./v_aslib.s	/^__asl_sched_scalar_mipd_is16v:$/;"	l
__asl_sched_scalar_mipd_is16v1	./v_aslib.c	/^extern void __asl_sched_scalar_mipd_is16v1(struct net_t *np, $/;"	f	signature:(struct net_t *np, struct tev_t *ptevp)
__asl_sched_scalar_mipd_is16v1	./v_aslib.s	/^__asl_sched_scalar_mipd_is16v1:$/;"	l
__asl_sched_scalar_mipd_is16v2	./v_aslib.c	/^extern void __asl_sched_scalar_mipd_is16v2(struct net_t *np, $/;"	f	signature:(struct net_t *np, struct tev_t *ptevp)
__asl_sched_scalar_mipd_is16v2	./v_aslib.s	/^__asl_sched_scalar_mipd_is16v2:$/;"	l
__asl_sched_scalar_mipd_is1v	./v_aslib.c	/^extern void __asl_sched_scalar_mipd_is1v(struct tev_t *ptevp)$/;"	f	signature:(struct tev_t *ptevp)
__asl_sched_scalar_mipd_is1v	./v_aslib.s	/^__asl_sched_scalar_mipd_is1v:$/;"	l
__asl_sched_scalar_mipd_path	./v_aslib.c	/^extern void __asl_sched_scalar_mipd_path(struct net_t *np, struct tev_t *ptevp)$/;"	f	signature:(struct net_t *np, struct tev_t *ptevp)
__asl_sched_scalar_mipd_path	./v_aslib.s	/^__asl_sched_scalar_mipd_path:$/;"	l
__asl_sched_scalar_mipd_pnd0	./v_aslib.c	/^extern void __asl_sched_scalar_mipd_pnd0(struct tev_t *ptevp)$/;"	f	signature:(struct tev_t *ptevp)
__asl_sched_scalar_mipd_pnd0	./v_aslib.s	/^__asl_sched_scalar_mipd_pnd0:$/;"	l
__asl_sched_unknown_bit	./v_aslib.c	/^extern void __asl_sched_unknown_bit(struct net_t *np, word32 *rhsap)$/;"	f	signature:(struct net_t *np, word32 *rhsap)
__asl_sched_unknown_bit	./v_aslib.s	/^__asl_sched_unknown_bit:$/;"	l
__asl_sched_vec_mipd_bit	./v_aslib.c	/^extern void __asl_sched_vec_mipd_bit(struct net_t *np, struct tev_t *ptevp,$/;"	f	signature:(struct net_t *np, struct tev_t *ptevp, int32 bi)
__asl_sched_vec_mipd_bit	./v_aslib.s	/^__asl_sched_vec_mipd_bit:$/;"	l
__asl_set_byteval	./v_aslib.c	/^extern void __asl_set_byteval(byte *sbp, byte stval, int32 blen)$/;"	f	signature:(byte *sbp, byte stval, int32 blen)
__asl_set_byteval	./v_aslib.s	/^__asl_set_byteval:$/;"	l
__asl_set_restore_xprop_accum_block	./v_aslib.c	/^extern void __asl_set_restore_xprop_accum_block(struct st_t *stp,$/;"	f	signature:(struct st_t *stp, int32 xblocks)
__asl_set_restore_xprop_accum_block	./v_aslib.s	/^__asl_set_restore_xprop_accum_block:$/;"	l
__asl_set_restore_xprop_accum_block_nodefault	./v_aslib.c	/^extern void __asl_set_restore_xprop_accum_block_nodefault(struct st_t *stp,$/;"	f	signature:(struct st_t *stp, int32 num_matched, int32 xcount)
__asl_set_restore_xprop_accum_block_nodefault	./v_aslib.s	/^__asl_set_restore_xprop_accum_block_nodefault:$/;"	l
__asl_set_restore_xprop_accum_toself	./v_aslib.c	/^extern void __asl_set_restore_xprop_accum_toself(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__asl_set_restore_xprop_accum_toself	./v_aslib.s	/^__asl_set_restore_xprop_accum_toself:$/;"	l
__asl_set_rhs_new_gateval	./v_aslib.c	/^extern void __asl_set_rhs_new_gateval(word32 *rhs_wp, int32 rhswid)$/;"	f	signature:(word32 *rhs_wp, int32 rhswid)
__asl_set_rhs_new_gateval	./v_aslib.s	/^__asl_set_rhs_new_gateval:$/;"	l
__asl_set_xprop_accum_block_case	./v_aslib.c	/^extern void __asl_set_xprop_accum_block_case(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__asl_set_xprop_accum_block_case	./v_aslib.s	/^__asl_set_xprop_accum_block_case:$/;"	l
__asl_set_xprop_accum_block_if	./v_aslib.c	/^extern void __asl_set_xprop_accum_block_if(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__asl_set_xprop_accum_block_if	./v_aslib.s	/^__asl_set_xprop_accum_block_if:$/;"	l
__asl_set_xprop_accum_init	./v_aslib.c	/^extern void __asl_set_xprop_accum_init(struct net_t *np, word32 aw, word32 bw)$/;"	f	signature:(struct net_t *np, word32 aw, word32 bw)
__asl_set_xprop_accum_init	./v_aslib.s	/^__asl_set_xprop_accum_init:$/;"	l
__asl_set_xprop_accum_init_wide	./v_aslib.c	/^extern void __asl_set_xprop_accum_init_wide(struct net_t *np, word32 *rhswp)$/;"	f	signature:(struct net_t *np, word32 *rhswp)
__asl_set_xprop_accum_init_wide	./v_aslib.s	/^__asl_set_xprop_accum_init_wide:$/;"	l
__asl_setsav_assoc_tsk	./v_aslib.c	/^extern void *__asl_setsav_assoc_tsk(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__asl_setsav_assoc_tsk	./v_aslib.s	/^__asl_setsav_assoc_tsk:$/;"	l
__asl_setup_task_thd	./v_aslib.c	/^extern void __asl_setup_task_thd(struct st_t *stp, struct st_t *nxtstp)$/;"	f	signature:(struct st_t *stp, struct st_t *nxtstp)
__asl_setup_task_thd	./v_aslib.s	/^__asl_setup_task_thd:$/;"	l
__asl_setup_task_thd_auto	./v_aslib.c	/^extern void __asl_setup_task_thd_auto(struct st_t *stp, struct st_t *nxtstp,$/;"	f	signature:(struct st_t *stp, struct st_t *nxtstp, t_midat *saved_idp)
__asl_setup_task_thd_auto	./v_aslib.s	/^__asl_setup_task_thd_auto:$/;"	l
__asl_sgn_lpow_2state	./v_aslib.c	/^extern int32 __asl_sgn_lpow_2state(word32 *res, word32 *op1, word32 *op2, $/;"	f	signature:(word32 *res, word32 *op1, word32 *op2, int32 blen)
__asl_sgn_lpow_2state	./v_aslib.s	/^__asl_sgn_lpow_2state:$/;"	l
__asl_sgn_wide_cmp	./v_aslib.c	/^extern int32 __asl_sgn_wide_cmp(word32 *op1ap, word32 *op2ap, int32 opwid, $/;"	f	signature:(word32 *op1ap, word32 *op2ap, int32 opwid, int32 cc)
__asl_sgn_wide_cmp	./v_aslib.s	/^__asl_sgn_wide_cmp:$/;"	l
__asl_sgn_xtnd_widen	./v_aslib.c	/^extern void __asl_sgn_xtnd_widen(word32 *dst_ap, word32 *src_ap,$/;"	f	signature:(word32 *dst_ap, word32 *src_ap, int32 oblen, int32 nblen)
__asl_sgn_xtnd_widen	./v_aslib.s	/^__asl_sgn_xtnd_widen:$/;"	l
__asl_sgn_xtnd_widen_2state	./v_aslib.c	/^extern void __asl_sgn_xtnd_widen_2state(word32 *dst_ap, word32 *src_ap,$/;"	f	signature:(word32 *dst_ap, word32 *src_ap, int32 oblen, int32 nblen)
__asl_sgn_xtnd_widen_2state	./v_aslib.s	/^__asl_sgn_xtnd_widen_2state:$/;"	l
__asl_sgnbit_on	./v_aslib.c	/^extern int32 __asl_sgnbit_on(word32 *wp, int32 blen)$/;"	f	signature:(word32 *wp, int32 blen)
__asl_sgnbit_on	./v_aslib.s	/^__asl_sgnbit_on:$/;"	l
__asl_sgnmask	./v_aslib.c	/^extern void __asl_sgnmask(word32 *valwp, word32 shiftval, int32 blen)$/;"	f	signature:(word32 *valwp, word32 shiftval, int32 blen)
__asl_sgnmask	./v_aslib.s	/^__asl_sgnmask:$/;"	l
__asl_st_string_array_const	./v_aslib.c	/^extern void __asl_st_string_array_const(struct net_t *np, int32 arri, $/;"	f	signature:(struct net_t *np, int32 arri, word32 *wp, int32 nchars)
__asl_st_string_array_const	./v_aslib.s	/^__asl_st_string_array_const:$/;"	l
__asl_st_string_array_rhsx	./v_aslib.c	/^extern void __asl_st_string_array_rhsx(struct net_t *lhs_np, $/;"	f	signature:(struct net_t *lhs_np, struct expr_t *rhsx, int32 arri)
__asl_st_string_array_rhsx	./v_aslib.s	/^__asl_st_string_array_rhsx:$/;"	l
__asl_st_string_array_var	./v_aslib.c	/^extern void __asl_st_string_array_var(struct net_t *lhs_np, $/;"	f	signature:(struct net_t *lhs_np, struct net_t *rhs_np, int32 arri)
__asl_st_string_array_var	./v_aslib.s	/^__asl_st_string_array_var:$/;"	l
__asl_st_string_byte	./v_aslib.c	/^extern void __asl_st_string_byte(struct net_t *np, int32 bi, word32 *wp)$/;"	f	signature:(struct net_t *np, int32 bi, word32 *wp)
__asl_st_string_byte	./v_aslib.s	/^__asl_st_string_byte:$/;"	l
__asl_st_string_const	./v_aslib.c	/^extern void __asl_st_string_const(struct net_t *np, word32 *rgap, int32 nchars)$/;"	f	signature:(struct net_t *np, word32 *rgap, int32 nchars)
__asl_st_string_const	./v_aslib.s	/^__asl_st_string_const:$/;"	l
__asl_st_string_rhsx	./v_aslib.c	/^extern void __asl_st_string_rhsx(struct net_t *lhs_np, struct expr_t *rhsx)$/;"	f	signature:(struct net_t *lhs_np, struct expr_t *rhsx)
__asl_st_string_rhsx	./v_aslib.s	/^__asl_st_string_rhsx:$/;"	l
__asl_st_string_var	./v_aslib.c	/^extern void __asl_st_string_var(struct net_t *lhs_np, struct net_t *rhs_np)$/;"	f	signature:(struct net_t *lhs_np, struct net_t *rhs_np)
__asl_st_string_var	./v_aslib.s	/^__asl_st_string_var:$/;"	l
__asl_stmt_assign_to_accum_1w	./v_aslib.c	/^extern void __asl_stmt_assign_to_accum_1w(struct st_t *astp, $/;"	f	signature:(struct st_t *astp, struct st_t *xstp, word32 aval, word32 bval)
__asl_stmt_assign_to_accum_1w	./v_aslib.s	/^__asl_stmt_assign_to_accum_1w:$/;"	l
__asl_stmt_assign_to_accum_1w_case_id	./v_aslib.c	/^extern void __asl_stmt_assign_to_accum_1w_case_id(struct net_t *np, $/;"	f	signature:(struct net_t *np, struct st_t *xstp, word32 aval, word32 bval)
__asl_stmt_assign_to_accum_1w_case_id	./v_aslib.s	/^__asl_stmt_assign_to_accum_1w_case_id:$/;"	l
__asl_stmt_assign_to_accum_1w_if_id	./v_aslib.c	/^extern void __asl_stmt_assign_to_accum_1w_if_id(struct net_t *np, $/;"	f	signature:(struct net_t *np, struct st_t *xstp, word32 aval, word32 bval)
__asl_stmt_assign_to_accum_1w_if_id	./v_aslib.s	/^__asl_stmt_assign_to_accum_1w_if_id:$/;"	l
__asl_stmt_assign_to_accum_wide	./v_aslib.c	/^extern void __asl_stmt_assign_to_accum_wide(struct st_t *astp, $/;"	f	signature:(struct st_t *astp, struct st_t *xstp, word32 *ap, word32 *bp)
__asl_stmt_assign_to_accum_wide	./v_aslib.s	/^__asl_stmt_assign_to_accum_wide:$/;"	l
__asl_stmt_assign_to_accum_wide_case_id	./v_aslib.c	/^extern void __asl_stmt_assign_to_accum_wide_case_id(struct net_t *np, $/;"	f	signature:(struct net_t *np, struct st_t *xstp, word32 *ap, word32 *bp)
__asl_stmt_assign_to_accum_wide_case_id	./v_aslib.s	/^__asl_stmt_assign_to_accum_wide_case_id:$/;"	l
__asl_stmt_assign_to_accum_wide_if_id	./v_aslib.c	/^extern void __asl_stmt_assign_to_accum_wide_if_id(struct net_t *np, $/;"	f	signature:(struct net_t *np, struct st_t *xstp, word32 *ap, word32 *bp)
__asl_stmt_assign_to_accum_wide_if_id	./v_aslib.s	/^__asl_stmt_assign_to_accum_wide_if_id:$/;"	l
__asl_store_bidpthdrvrs	./v_aslib.c	/^extern void __asl_store_bidpthdrvrs(struct net_t *np, word32 *trnva_wp, $/;"	f	signature:(struct net_t *np, word32 *trnva_wp, int32 bi)
__asl_store_bidpthdrvrs	./v_aslib.s	/^__asl_store_bidpthdrvrs:$/;"	l
__asl_stren_correct_frc	./v_aslib.c	/^extern int32 __asl_stren_correct_frc(byte *sbp, struct net_t *np)$/;"	f	signature:(byte *sbp, struct net_t *np)
__asl_stren_correct_frc	./v_aslib.s	/^__asl_stren_correct_frc:$/;"	l
__asl_stren_map_tab	./v_aslib.c	/^const word32 __asl_stren_map_tab[] = {$/;"	v
__asl_stren_map_tab	./v_aslib.s	/^__asl_stren_map_tab:$/;"	l
__asl_stren_pend_chg_1gev	./v_aslib.c	/^extern void __asl_stren_pend_chg_1gev(struct gate_t *gp, struct tev_t *tevp)$/;"	f	signature:(struct gate_t *gp, struct tev_t *tevp)
__asl_stren_pend_chg_1gev	./v_aslib.s	/^__asl_stren_pend_chg_1gev:$/;"	l
__asl_stren_pend_nochg_1gev	./v_aslib.c	/^extern void __asl_stren_pend_nochg_1gev(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__asl_stren_pend_nochg_1gev	./v_aslib.s	/^__asl_stren_pend_nochg_1gev:$/;"	l
__asl_stren_psel_correct_frc	./v_aslib.c	/^extern int32 __asl_stren_psel_correct_frc(byte *sbp, struct net_t *np,$/;"	f	signature:(byte *sbp, struct net_t *np, int32 ri1, int32 ri2)
__asl_stren_psel_correct_frc	./v_aslib.s	/^__asl_stren_psel_correct_frc:$/;"	l
__asl_stren_schd_1gev	./v_aslib.c	/^extern void __asl_stren_schd_1gev(struct gate_t *gp, struct tev_t *tevp)$/;"	f	signature:(struct gate_t *gp, struct tev_t *tevp)
__asl_stren_schd_1gev	./v_aslib.s	/^__asl_stren_schd_1gev:$/;"	l
__asl_stren_schd_bidpthdrvrs	./v_aslib.c	/^extern int32 __asl_stren_schd_bidpthdrvrs(struct net_t *np, byte *drv_sbp, $/;"	f	signature:(struct net_t *np, byte *drv_sbp, byte *trnva_sbp, int32 bi, struct tev_t *tevp)
__asl_stren_schd_bidpthdrvrs	./v_aslib.s	/^__asl_stren_schd_bidpthdrvrs:$/;"	l
__asl_stren_sched_unknown_bit	./v_aslib.c	/^extern void __asl_stren_sched_unknown_bit(struct net_t *np, word32 nscal,$/;"	f	signature:(struct net_t *np, word32 nscal, byte *osbp, struct nchglst_t *nchglp, struct tev_t *tevp)
__asl_stren_sched_unknown_bit	./v_aslib.s	/^__asl_stren_sched_unknown_bit:$/;"	l
__asl_string_binop	./v_aslib.c	/^extern int32 __asl_string_binop(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__asl_string_binop	./v_aslib.s	/^__asl_string_binop:$/;"	l
__asl_sv_dpi_string	./v_aslib.c	/^extern char *__asl_sv_dpi_string(struct expr_t *xp)$/;"	f	signature:(struct expr_t *xp)
__asl_sv_dpi_string	./v_aslib.s	/^__asl_sv_dpi_string:$/;"	l
__asl_sv_dpi_string_store	./v_aslib.c	/^extern void __asl_sv_dpi_string_store(struct net_t *np, char **iicp)$/;"	f	signature:(struct net_t *np, char **iicp)
__asl_sv_dpi_string_store	./v_aslib.s	/^__asl_sv_dpi_string_store:$/;"	l
__asl_thread_auto_cleanup	./v_aslib.c	/^extern t_midat *__asl_thread_auto_cleanup(void)$/;"	f	signature:(void)
__asl_thread_auto_cleanup	./v_aslib.s	/^__asl_thread_auto_cleanup:$/;"	l
__asl_timing_check_record	./v_aslib.c	/^extern void __asl_timing_check_record(struct chktchg_t *chkchgp)$/;"	f	signature:(struct chktchg_t *chkchgp)
__asl_timing_check_record	./v_aslib.s	/^__asl_timing_check_record:$/;"	l
__asl_to_noztab	./v_aslib.c	/^const word32 __asl_to_noztab[] = {0, 1, 3, 3 };$/;"	v
__asl_to_noztab	./v_aslib.s	/^__asl_to_noztab:$/;"	l
__asl_to_uvaltab	./v_aslib.c	/^const word32 __asl_to_uvaltab[] = {0, 1, 2, 2 };$/;"	v
__asl_to_uvaltab	./v_aslib.s	/^__asl_to_uvaltab:$/;"	l
__asl_trace_xprop_write	./v_aslib.c	/^extern void __asl_trace_xprop_write(struct st_t *stp, word32 aval,$/;"	f	signature:(struct st_t *stp, word32 aval, word32 bval, int32 blen)
__asl_trace_xprop_write	./v_aslib.s	/^__asl_trace_xprop_write:$/;"	l
__asl_trace_xprop_write_wide	./v_aslib.c	/^extern void __asl_trace_xprop_write_wide(struct st_t *stp, word32 *ap,$/;"	f	signature:(struct st_t *stp, word32 *ap, word32 *bp, int32 blen)
__asl_trace_xprop_write_wide	./v_aslib.s	/^__asl_trace_xprop_write_wide:$/;"	l
__asl_tran_addr	./v_aslib.c	/^extern byte *__asl_tran_addr(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__asl_tran_addr	./v_aslib.s	/^__asl_tran_addr:$/;"	l
__asl_trigger_ectrl	./v_aslib.c	/^extern void __asl_trigger_ectrl(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__asl_trigger_ectrl	./v_aslib.s	/^__asl_trigger_ectrl:$/;"	l
__asl_trigger_ectrl_xprop	./v_aslib.c	/^extern void __asl_trigger_ectrl_xprop(struct tev_t *tevp, void *ep)$/;"	f	signature:(struct tev_t *tevp, void *ep)
__asl_trigger_ectrl_xprop	./v_aslib.s	/^__asl_trigger_ectrl_xprop:$/;"	l
__asl_trpath_scalar_store	./v_aslib.c	/^extern int32 __asl_trpath_scalar_store(struct net_t *np, word32 nval)$/;"	f	signature:(struct net_t *np, word32 nval)
__asl_trpath_scalar_store	./v_aslib.s	/^__asl_trpath_scalar_store:$/;"	l
__asl_trpath_store	./v_aslib.c	/^extern int32 __asl_trpath_store(struct net_t *np, word32 nval, int32 bi)$/;"	f	signature:(struct net_t *np, word32 nval, int32 bi)
__asl_trpath_store	./v_aslib.s	/^__asl_trpath_store:$/;"	l
__asl_tskdone_cleanup_ret	./v_aslib.c	/^extern int32 __asl_tskdone_cleanup_ret(void)$/;"	f	signature:(void)
__asl_tskdone_cleanup_ret	./v_aslib.s	/^__asl_tskdone_cleanup_ret:$/;"	l
__asl_tskdone_cleanup_ret_auto	./v_aslib.c	/^extern int32 __asl_tskdone_cleanup_ret_auto(void)$/;"	f	signature:(void)
__asl_tskdone_cleanup_ret_auto	./v_aslib.s	/^__asl_tskdone_cleanup_ret_auto:$/;"	l
__asl_udp_wide_adjstate	./v_aslib.c	/^extern word32 __asl_udp_wide_adjstate(word32 *gwp, int32 nins)$/;"	f	signature:(word32 *gwp, int32 nins)
__asl_udp_wide_adjstate	./v_aslib.s	/^__asl_udp_wide_adjstate:$/;"	l
__asl_update_tran_harddrvs	./v_aslib.c	/^extern int32 __asl_update_tran_harddrvs(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__asl_update_tran_harddrvs	./v_aslib.s	/^__asl_update_tran_harddrvs:$/;"	l
__asl_uprel_targ_to_ref	./v_aslib.c	/^extern void *__asl_uprel_targ_to_ref(struct gref_t *grp)$/;"	f	signature:(struct gref_t *grp)
__asl_uprel_targ_to_ref	./v_aslib.s	/^__asl_uprel_targ_to_ref:$/;"	l
__asl_wdel_schd_1wirebit	./v_aslib.c	/^extern void __asl_wdel_schd_1wirebit(struct net_t *np, int32 biti, $/;"	f	signature:(struct net_t *np, int32 biti, word32 nval, word32 oval, struct tev_t *ptevp)
__asl_wdel_schd_1wirebit	./v_aslib.s	/^__asl_wdel_schd_1wirebit:$/;"	l
__asl_wdel_trireg_sched_hiz	./v_aslib.c	/^extern void __asl_wdel_trireg_sched_hiz(struct net_t *np, byte *nsbp, $/;"	f	signature:(struct net_t *np, byte *nsbp, word32 oval, int32 biti, struct tev_t *ptevp)
__asl_wdel_trireg_sched_hiz	./v_aslib.s	/^__asl_wdel_trireg_sched_hiz:$/;"	l
__asl_wid_bin_bitor	./v_aslib.c	/^extern void __asl_wid_bin_bitor(word32 *resap, word32 *op1ap, word32 *op2ap,$/;"	f	signature:(word32 *resap, word32 *op1ap, word32 *op2ap, int32 blen)
__asl_wid_bin_bitor	./v_aslib.s	/^__asl_wid_bin_bitor:$/;"	l
__asl_wid_bin_bitor_x	./v_aslib.c	/^extern void __asl_wid_bin_bitor_x(word32 *resap, word32 *op1ap, word32 *op2ap,$/;"	f	signature:(word32 *resap, word32 *op1ap, word32 *op2ap, int32 blen)
__asl_wid_bin_bitor_x	./v_aslib.s	/^__asl_wid_bin_bitor_x:$/;"	l
__asl_wid_bin_bitxnor	./v_aslib.c	/^extern void __asl_wid_bin_bitxnor(word32 *resap, word32 *op1ap, word32 *op2ap,$/;"	f	signature:(word32 *resap, word32 *op1ap, word32 *op2ap, int32 blen)
__asl_wid_bin_bitxnor	./v_aslib.s	/^__asl_wid_bin_bitxnor:$/;"	l
__asl_wid_bin_bitxnor_2state	./v_aslib.c	/^extern void __asl_wid_bin_bitxnor_2state(word32 *resap, word32 *op1ap, $/;"	f	signature:(word32 *resap, word32 *op1ap, word32 *op2ap, int32 blen)
__asl_wid_bin_bitxnor_2state	./v_aslib.s	/^__asl_wid_bin_bitxnor_2state:$/;"	l
__asl_wid_un_redor	./v_aslib.c	/^extern int32 __asl_wid_un_redor(word32 *op1ap, int32 blen)$/;"	f	signature:(word32 *op1ap, int32 blen)
__asl_wid_un_redor	./v_aslib.s	/^__asl_wid_un_redor:$/;"	l
__asl_wid_un_redor_x	./v_aslib.c	/^extern int32 __asl_wid_un_redor_x(word32 *op1ap, int32 blen)$/;"	f	signature:(word32 *op1ap, int32 blen)
__asl_wid_un_redor_x	./v_aslib.s	/^__asl_wid_un_redor_x:$/;"	l
__asl_wid_unbitnot	./v_aslib.c	/^extern void __asl_wid_unbitnot(word32 *res, word32 *op1ap, int32 blen)$/;"	f	signature:(word32 *res, word32 *op1ap, int32 blen)
__asl_wid_unbitnot	./v_aslib.s	/^__asl_wid_unbitnot:$/;"	l
__asl_wid_unbitnot_2state	./v_aslib.c	/^extern void __asl_wid_unbitnot_2state(word32 *res, word32 *op1ap, int32 blen)$/;"	f	signature:(word32 *res, word32 *op1ap, int32 blen)
__asl_wid_unbitnot_2state	./v_aslib.s	/^__asl_wid_unbitnot_2state:$/;"	l
__asl_widcas_eval	./v_aslib.c	/^extern int32 __asl_widcas_eval(word32 *awp1, word32 *awp2, int32 wlen)$/;"	f	signature:(word32 *awp1, word32 *awp2, int32 wlen)
__asl_widcas_eval	./v_aslib.s	/^__asl_widcas_eval:$/;"	l
__asl_widcasx_eval	./v_aslib.c	/^extern int32 __asl_widcasx_eval(word32 *awp1, word32 *awp2, int32 wlen)$/;"	f	signature:(word32 *awp1, word32 *awp2, int32 wlen)
__asl_widcasx_eval	./v_aslib.s	/^__asl_widcasx_eval:$/;"	l
__asl_widcasz_eval	./v_aslib.c	/^extern int32 __asl_widcasz_eval(word32 *awp1, word32 *awp2, int32 wlen)$/;"	f	signature:(word32 *awp1, word32 *awp2, int32 wlen)
__asl_widcasz_eval	./v_aslib.s	/^__asl_widcasz_eval:$/;"	l
__asl_wide_any1	./v_aslib.c	/^extern int32 __asl_wide_any1(word32 *opap, word32 *opbp, int32 wlen)$/;"	f	signature:(word32 *opap, word32 *opbp, int32 wlen)
__asl_wide_any1	./v_aslib.s	/^__asl_wide_any1:$/;"	l
__asl_wide_bitand	./v_aslib.c	/^extern void __asl_wide_bitand(word32 *res, word32 *op1, word32 *op2,$/;"	f	signature:(word32 *res, word32 *op1, word32 *op2, int32 wlen)
__asl_wide_bitand	./v_aslib.s	/^__asl_wide_bitand:$/;"	l
__asl_wide_bitor	./v_aslib.c	/^extern void __asl_wide_bitor(word32 *res, word32 *op1, word32 *op2,$/;"	f	signature:(word32 *res, word32 *op1, word32 *op2, int32 wlen)
__asl_wide_bitor	./v_aslib.s	/^__asl_wide_bitor:$/;"	l
__asl_wide_bitxor	./v_aslib.c	/^extern void __asl_wide_bitxor(word32 *res, word32 *op1, word32 *op2,$/;"	f	signature:(word32 *res, word32 *op1, word32 *op2, int32 wlen)
__asl_wide_bitxor	./v_aslib.s	/^__asl_wide_bitxor:$/;"	l
__asl_wide_cmp	./v_aslib.c	/^extern int32 __asl_wide_cmp(word32 *op1p, word32 *op2p, int32 wlen, int32 cc)$/;"	f	signature:(word32 *op1p, word32 *op2p, int32 wlen, int32 cc)
__asl_wide_cmp	./v_aslib.s	/^__asl_wide_cmp:$/;"	l
__asl_wide_cmp_eq	./v_aslib.c	/^extern int32 __asl_wide_cmp_eq(word32 *op1p, word32 *op2p, int32 wlen)$/;"	f	signature:(word32 *op1p, word32 *op2p, int32 wlen)
__asl_wide_cmp_eq	./v_aslib.s	/^__asl_wide_cmp_eq:$/;"	l
__asl_wide_cmp_neq	./v_aslib.c	/^extern int32 __asl_wide_cmp_neq(word32 *op1p, word32 *op2p, int32 wlen)$/;"	f	signature:(word32 *op1p, word32 *op2p, int32 wlen)
__asl_wide_cmp_neq	./v_aslib.s	/^__asl_wide_cmp_neq:$/;"	l
__asl_wide_jmp_eq	./v_aslib.c	/^extern int32 __asl_wide_jmp_eq(word32 *op1p, word32 *op2p, int32 wlen)$/;"	f	signature:(word32 *op1p, word32 *op2p, int32 wlen)
__asl_wide_jmp_eq	./v_aslib.s	/^__asl_wide_jmp_eq:$/;"	l
__asl_wide_jmpor_0	./v_aslib.c	/^extern int32 __asl_wide_jmpor_0(word32 *op1p, word32 *op2p, int32 wlen)$/;"	f	signature:(word32 *op1p, word32 *op2p, int32 wlen)
__asl_wide_jmpor_0	./v_aslib.s	/^__asl_wide_jmpor_0:$/;"	l
__asl_wide_notl	./v_aslib.c	/^extern void __asl_wide_notl(word32 *res, word32 *op1, int32 wlen)$/;"	f	signature:(word32 *res, word32 *op1, int32 wlen)
__asl_wide_notl	./v_aslib.s	/^__asl_wide_notl:$/;"	l
__asl_wide_qcol_comb_opands	./v_aslib.c	/^extern void __asl_wide_qcol_comb_opands(word32 *resap, word32 *op1ap, $/;"	f	signature:(word32 *resap, word32 *op1ap, word32 *op2ap, int32 wlen)
__asl_wide_qcol_comb_opands	./v_aslib.s	/^__asl_wide_qcol_comb_opands:$/;"	l
__asl_wide_redxor	./v_aslib.c	/^extern word32 __asl_wide_redxor(word32 *op1ap, int32 wlen)$/;"	f	signature:(word32 *op1ap, int32 wlen)
__asl_wide_redxor	./v_aslib.s	/^__asl_wide_redxor:$/;"	l
__asl_wide_sgnword_cmp	./v_aslib.c	/^extern int32 __asl_wide_sgnword_cmp(int32 op1, word32 *op2ap, int32 opwid, $/;"	f	signature:(int32 op1, word32 *op2ap, int32 opwid, int32 cc)
__asl_wide_sgnword_cmp	./v_aslib.s	/^__asl_wide_sgnword_cmp:$/;"	l
__asl_wide_word_cmp	./v_aslib.c	/^extern int32 __asl_wide_word_cmp(word32 *op1p, word32 op2w, int32 wlen, $/;"	f	signature:(word32 *op1p, word32 op2w, int32 wlen, int32 cc)
__asl_wide_word_cmp	./v_aslib.s	/^__asl_wide_word_cmp:$/;"	l
__asl_widomitxz_ne	./v_aslib.c	/^extern int32 __asl_widomitxz_ne(word32 *op1ap, word32 *op2ap, int32 wlen)$/;"	f	signature:(word32 *op1ap, word32 *op2ap, int32 wlen)
__asl_widomitxz_ne	./v_aslib.s	/^__asl_widomitxz_ne:$/;"	l
__asl_wordcmp	./v_aslib.c	/^extern int32 __asl_wordcmp(word32 *w1, word32 *w2, int32 wlen) $/;"	f	signature:(word32 *w1, word32 *w2, int32 wlen)
__asl_wordcmp	./v_aslib.s	/^__asl_wordcmp:$/;"	l
__asl_xprop_accum_to_self	./v_aslib.c	/^extern void __asl_xprop_accum_to_self(struct net_t *np, word32 aw, word32 bw)$/;"	f	signature:(struct net_t *np, word32 aw, word32 bw)
__asl_xprop_accum_to_self	./v_aslib.s	/^__asl_xprop_accum_to_self:$/;"	l
__asl_xprop_accum_to_self_wide	./v_aslib.c	/^extern void __asl_xprop_accum_to_self_wide(struct net_t *np, word32 *rhswp)$/;"	f	signature:(struct net_t *np, word32 *rhswp)
__asl_xprop_accum_to_self_wide	./v_aslib.s	/^__asl_xprop_accum_to_self_wide:$/;"	l
__asl_xprop_check_case_net_set	./v_aslib.c	/^extern void __asl_xprop_check_case_net_set(struct st_t *stp, int32 matched)$/;"	f	signature:(struct st_t *stp, int32 matched)
__asl_xprop_check_case_net_set	./v_aslib.s	/^__asl_xprop_check_case_net_set:$/;"	l
__asl_xprop_set_xedge_net	./v_aslib.c	/^extern void __asl_xprop_set_xedge_net(struct st_t *stp, struct net_t *np, $/;"	f	signature:(struct st_t *stp, struct net_t *np, word32 e_val)
__asl_xprop_set_xedge_net	./v_aslib.s	/^__asl_xprop_set_xedge_net:$/;"	l
__asl_xprop_xedge_net	./v_aslib.c	/^extern word32 *__asl_xprop_xedge_net(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__asl_xprop_xedge_net	./v_aslib.s	/^__asl_xprop_xedge_net:$/;"	l
__aslinfo	./v_cvcms.c	/^struct asl_info_t __aslinfo[] = {$/;"	v	typeref:struct:asl_info_t
__asm_and_link_dsgn_so_lib	./v_asmlnk.c	/^extern int32 __asm_and_link_dsgn_so_lib()$/;"	f
__asm_emit_loc	./cvc.c	/^int32 __asm_emit_loc;  \/* val controls asm out printed location info *\/$/;"	v
__asm_file_name	./v_bbgen.c	/^char __asm_file_name[RECLEN];\/* assembly file name *\/$/;"	v
__asm_insn_tostr	./v_asmlnk.c	/^extern char *__asm_insn_tostr(char *s, struct insn_t *ip, int32 dbg_fmt,$/;"	f	signature:(char *s, struct insn_t *ip, int32 dbg_fmt, struct flowg_t *fgp)
__asm_pid	./v_bbgen.c	/^pid_t __asm_pid;             \/* assembly pipe pid *\/$/;"	v
__asm_pipefd	./v_bbgen.c	/^int32 __asm_pipefd[2];       \/* assembly pipe fds *\/$/;"	v
__asm_stack	./v_bbgen.c	/^void  *__asm_stack;          \/* assembly clone pipe stack *\/$/;"	v
__assgn_2005_nonis_param	./v_genfx.c	/^extern void __assgn_2005_nonis_param(struct net_t *np, struct expr_t *xrhs,$/;"	f	signature:(struct net_t *np, struct expr_t *xrhs, struct xstk_t *xsp)
__assign_1mdrwire	./v_ex4.c	/^extern void __assign_1mdrwire(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__assign_1specparam	./v_src3.c	/^extern void __assign_1specparam(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__assign_active	./cvc.c	/^int32 __assign_active; \/* T => for trace release activates assgn *\/$/;"	v
__assign_lhsx_to_accum	./v_xprop.c	/^extern void __assign_lhsx_to_accum(struct expr_t *lhsx, word32 *ap, word32 *bp,$/;"	f	signature:(struct expr_t *lhsx, word32 *ap, word32 *bp, struct xprop_t *xprop)
__assign_qcaf	./v_ex3.c	/^extern void __assign_qcaf(struct dcevnt_t *dcep)$/;"	f	signature:(struct dcevnt_t *dcep)
__assign_regs_and_wides_adjacent	./v_regasn.c	/^extern void __assign_regs_and_wides_adjacent(struct flowg_t *fgp)$/;"	f	signature:(struct flowg_t *fgp)
__assign_to_arr	./v_ex3.c	/^extern void __assign_to_arr(struct net_t *np, struct expr_t *idndp,$/;"	f	signature:(struct net_t *np, struct expr_t *idndp, struct expr_t *ndx1, word32 *ap, word32 *bp, int32 rhswid)
__assign_to_bit	./v_ex3.c	/^extern void __assign_to_bit(struct net_t *np, struct expr_t *idndp,$/;"	f	signature:(struct net_t *np, struct expr_t *idndp, struct expr_t *ndx1, word32 *ap, word32 *bp)
__assign_to_psel	./v_ex3.c	/^extern void __assign_to_psel(struct expr_t *idndp, int32 ri1, int32 ri2,$/;"	f	signature:(struct expr_t *idndp, int32 ri1, int32 ri2, struct net_t *np, word32 *ap, word32 *bp)
__assign_xprop_accum_values	./v_xprop.c	/^extern void __assign_xprop_accum_values(struct xprop_t *xprop)$/;"	f	signature:(struct xprop_t *xprop)
__attr_fnam_ind	./cvc.c	/^int32 __attr_fnam_ind; \/* location of attr inst. *\/$/;"	v
__attr_lin_cnt	./cvc.c	/^int32 __attr_lin_cnt;  \/* location of attr inst. *\/$/;"	v
__attr_line_len	./cvc.c	/^int32 __attr_line_len; \/* actual length of attribute string *\/ $/;"	v
__attr_prefix	./cvc.c	/^int32 __attr_prefix;   \/* T => token has attribute prefix *\/$/;"	v
__attrparsestr	./cvc.c	/^char *__attrparsestr;  \/* string to parse attr out of *\/$/;"	v
__attrparsestrlen	./cvc.c	/^int32 __attrparsestrlen; \/* string to parse attr out of *\/$/;"	v
__attrwrklen	./cvc.c	/^int32 __attrwrklen;    \/* alloced len of attr work string - grows *\/$/;"	v
__attrwrkstr	./cvc.c	/^char *__attrwrkstr;    \/* work string for attributes *\/$/;"	v
__avl_lasti	./v_cvcrt.c	/^int32 __avl_lasti;     \/* last allocated *\/$/;"	v
__avl_node_is_new	./v_cvcrt.c	/^int32 __avl_node_is_new; \/* T avl tree find added the node *\/$/;"	v
__avltab	./v_cvcrt.c	/^struct avlnode_t **__avltab; \/* array for linearized avl tree *\/$/;"	v	typeref:struct:avlnode_t
__avltabsiz	./v_cvcrt.c	/^int32 __avltabsiz;     \/* current malloced work tab size *\/ $/;"	v
__avltfind	./v_cvcrt.c	/^extern struct avlnode_t *__avltfind(void *valp, struct avlhd_t *tree_rec)$/;"	f	signature:(void *valp, struct avlhd_t *tree_rec)
__bad_rosync_err	./v_vpi3.c	/^extern void __bad_rosync_err(char *rnam)$/;"	f	signature:(char *rnam)
__badind_a	./cvc.c	/^word32 __badind_a;     \/* place for a part of in error index value *\/$/;"	v
__badind_b	./cvc.c	/^word32 __badind_b;     \/* and for b part *\/$/;"	v
__badind_wid	./cvc.c	/^int32 __badind_wid;    \/* width for bad ind (<32 expr can eval to x) *\/$/;"	v
__bblk_lasti	./v_bbgen.c	/^int32 __bblk_lasti;    \/* last used bblk index *\/ $/;"	v
__bblk_seq_no	./v_bbgen.c	/^int32 __bblk_seq_no;   \/* counter for creating basic block nums *\/ $/;"	v
__bblktab	./v_bbgen.c	/^struct bblk_t **__bblktab; \/* work array of ptrs to bblks *\/$/;"	v	typeref:struct:bblk_t
__bblktabsiz	./v_bbgen.c	/^size_t __bblktabsiz;    \/* current size *\/$/;"	v
__bcwrk	./cvc.c	/^word32 *__bcwrk;       \/* b value work string for scanning number *\/$/;"	v
__bin_trim_abval	./v_cnv.c	/^extern int32 __bin_trim_abval(word32 *ap, word32 *bp, int32 blen)$/;"	f	signature:(word32 *ap, word32 *bp, int32 blen)
__bind_inam_comptab	./cvc.c	/^char **__bind_inam_comptab;\/* during cfg binding, comp descent comps *\/ $/;"	v
__bit1_vpi_or_tran_wireforce	./v_vpi3.c	/^extern void __bit1_vpi_or_tran_wireforce(struct net_t *np, word32 *ap, word32 *bp,$/;"	f	signature:(struct net_t *np, word32 *ap, word32 *bp, int32 ibase, int32 lhsbi, int32 rhsbi, char *msg)
__bitand_svals	./v_aslib.c	/^const word32 __bitand_svals[16] = {0,0,0,0,0,1,3,3,0,3,3,3,0,3,3,3};$/;"	v
__bitand_svals	./v_aslib.s	/^__bitand_svals:$/;"	l
__bitor_x_svals	./v_aslib.c	/^const word32 __bitor_x_svals[16] = {0,1,3,3,1,1,3,3,3,3,3,3,3,3,3,3};$/;"	v
__bitor_x_svals	./v_aslib.s	/^__bitor_x_svals:$/;"	l
__bld_allcbs_iter	./v_vpi2.c	/^extern vpiHandle __bld_allcbs_iter(struct h_t *hp)$/;"	f	signature:(struct h_t *hp)
__bld_ambiguous_list	./v_dbg.c	/^extern char *__bld_ambiguous_list(char *s, char *aval, struct namlst_t *cmdtab,$/;"	f	signature:(char *s, char *aval, struct namlst_t *cmdtab, int32 cmdnum)
__bld_amods	./v_asmlnk.c	/^extern char *__bld_amods(char *amods, struct insn_t *ip, int32 opcode,$/;"	f	signature:(char *amods, struct insn_t *ip, int32 opcode, struct amode_t *amp, int32 dbg_fmt, struct flowg_t *fgp)
__bld_arrwrd_iterator	./v_vpi2.c	/^extern vpiHandle __bld_arrwrd_iterator(struct h_t *hp)$/;"	f	signature:(struct h_t *hp)
__bld_asm_comm_fnam_stem	./v_asmlnk.c	/^extern char *__bld_asm_comm_fnam_stem(char *s)$/;"	f	signature:(char *s)
__bld_asm_fnam_stem	./v_asmlnk.c	/^extern char *__bld_asm_fnam_stem(char *fnam, struct mod_t *mdp)$/;"	f	signature:(char *fnam, struct mod_t *mdp)
__bld_bidandtran_graph	./v_trch.c	/^extern void __bld_bidandtran_graph(void)$/;"	f	signature:(void)
__bld_bitof_iterator	./v_vpi2.c	/^extern vpiHandle __bld_bitof_iterator(struct h_t *hp)$/;"	f	signature:(struct h_t *hp)
__bld_caseitems_iter	./v_vpi2.c	/^extern vpiHandle __bld_caseitems_iter(struct h_t *hp)$/;"	f	signature:(struct h_t *hp)
__bld_casi_exprs_iter	./v_vpi2.c	/^extern vpiHandle __bld_casi_exprs_iter(struct h_t *hp)$/;"	f	signature:(struct h_t *hp)
__bld_delay_expr_iter	./v_vpi2.c	/^extern vpiHandle __bld_delay_expr_iter(struct h_t *rhp)$/;"	f	signature:(struct h_t *rhp)
__bld_delay_str	./v_del.c	/^extern char *__bld_delay_str(char *s, union del_u du, word32 drep)$/;"	f	signature:(char *s, union del_u du, word32 drep)
__bld_dig_attr_iter	./v_vpi2.c	/^extern vpiHandle __bld_dig_attr_iter(struct h_t *hp)$/;"	f	signature:(struct h_t *hp)
__bld_drvs_iterator	./v_vpi2.c	/^extern vpiHandle __bld_drvs_iterator(struct h_t *hp, int32 otype)$/;"	f	signature:(struct h_t *hp, int32 otype)
__bld_evxtree	./v_src2.c	/^extern void __bld_evxtree(void)$/;"	f	signature:(void)
__bld_expnode	./v_src2.c	/^extern int32 __bld_expnode(void)$/;"	f	signature:(void)
__bld_flat_itree	./v_genfx.c	/^extern void __bld_flat_itree(void)$/;"	f	signature:(void)
__bld_forcedbits_mask	./v_ex3.c	/^extern void __bld_forcedbits_mask(word32 *ap, struct net_t *np)$/;"	f	signature:(word32 *ap, struct net_t *np)
__bld_gen_labnam	./v_src.c	/^extern char *__bld_gen_labnam(char *s, char *lbnam, struct genblk_t *gblkp)$/;"	f	signature:(char *s, char *lbnam, struct genblk_t *gblkp)
__bld_gen_scope_nam	./v_genfx.c	/^extern char *__bld_gen_scope_nam(char *s, struct genblk_t *gblkp)$/;"	f	signature:(char *s, struct genblk_t *gblkp)
__bld_glbcmp_ginam	./v_cnv.c	/^extern char *__bld_glbcmp_ginam(char *s, struct expr_t *gi_ndp)$/;"	f	signature:(char *s, struct expr_t *gi_ndp)
__bld_glbref	./v_src2.c	/^extern struct gref_t *__bld_glbref(struct expr_t *glbndp, int32 gfnam_ind,$/;"	f	signature:(struct expr_t *glbndp, int32 gfnam_ind, int32 glin_cnt)
__bld_iinfo_tabs	./v_cvcms.c	/^extern void __bld_iinfo_tabs(void)$/;"	f	signature:(void)
__bld_iodecl_stmt_iter	./v_vpi2.c	/^extern vpiHandle __bld_iodecl_stmt_iter(struct h_t *hp)$/;"	f	signature:(struct h_t *hp)
__bld_lds_iterator	./v_vpi2.c	/^extern vpiHandle __bld_lds_iterator(struct h_t *hp, int32 otype)$/;"	f	signature:(struct h_t *hp, int32 otype)
__bld_lineloc	./v_ms.c	/^extern char *__bld_lineloc(char *s, word32 fnind, int32 fnlcnt)$/;"	f	signature:(char *s, word32 fnind, int32 fnlcnt)
__bld_loc_drvs_iterator	./v_vpi2.c	/^extern vpiHandle __bld_loc_drvs_iterator(struct h_t *hp, int32 otype)$/;"	f	signature:(struct h_t *hp, int32 otype)
__bld_loc_lds_iterator	./v_vpi2.c	/^extern vpiHandle __bld_loc_lds_iterator(struct h_t *hp, int32 otype)$/;"	f	signature:(struct h_t *hp, int32 otype)
__bld_loc_symbol	./v_src3.c	/^extern struct sy_t *__bld_loc_symbol(int32 num, struct symtab_t *sytp,$/;"	f	signature:(int32 num, struct symtab_t *sytp, char *pref, char *emsgnam)
__bld_mlevel_lists	./v_fx2.c	/^extern void __bld_mlevel_lists(void)$/;"	f	signature:(void)
__bld_mod_decl_flowgraphs	./v_bbgen2.c	/^extern void __bld_mod_decl_flowgraphs(struct mod_t *mdp)$/;"	f	signature:(struct mod_t *mdp)
__bld_mod_flowg_ndx	./v_bbopt.c	/^extern void __bld_mod_flowg_ndx(struct mod_t *mdp)$/;"	f	signature:(struct mod_t *mdp)
__bld_moditps	./v_genfx.c	/^extern void __bld_moditps(void)$/;"	f	signature:(void)
__bld_ndxjmp_lab_set	./v_bbgen3.c	/^extern void __bld_ndxjmp_lab_set(struct bblk_t **bbtab, int32 jtabsiz)$/;"	f	signature:(struct bblk_t **bbtab, int32 jtabsiz)
__bld_neticonn_iter	./v_vpi2.c	/^extern vpiHandle __bld_neticonn_iter(struct h_t *hp)$/;"	f	signature:(struct h_t *hp)
__bld_netin_pthterms	./v_vpi2.c	/^extern vpiHandle __bld_netin_pthterms(struct h_t *hp)$/;"	f	signature:(struct h_t *hp)
__bld_netin_tchkterms	./v_vpi2.c	/^extern vpiHandle __bld_netin_tchkterms(struct h_t *hp)$/;"	f	signature:(struct h_t *hp)
__bld_nlo_lab_nam	./v_asmlnk.c	/^extern char *__bld_nlo_lab_nam(char *s, int32 nlotyp)$/;"	f	signature:(char *s, int32 nlotyp)
__bld_operands_iter	./v_vpi2.c	/^extern vpiHandle __bld_operands_iter(struct h_t *hp)$/;"	f	signature:(struct h_t *hp)
__bld_paramassign_stmt_iter	./v_vpi2.c	/^extern vpiHandle __bld_paramassign_stmt_iter(struct h_t *hp)$/;"	f	signature:(struct h_t *hp)
__bld_pb_expr_map	./v_prp.c	/^extern struct pbexpr_t *__bld_pb_expr_map(struct expr_t *xp, int32 xwid)$/;"	f	signature:(struct expr_t *xp, int32 xwid)
__bld_pb_fifo	./v_prp2.c	/^extern void __bld_pb_fifo(struct net_t *np, int32 *pbfi, int32 *pbfo,$/;"	f	signature:(struct net_t *np, int32 *pbfi, int32 *pbfo, int32 *pbtcfo, int32 ii)
__bld_port_iterator	./v_vpi2.c	/^extern vpiHandle __bld_port_iterator(struct h_t *hp)$/;"	f	signature:(struct h_t *hp)
__bld_portbit_netbit_map	./v_prp2.c	/^extern struct tenp_t *__bld_portbit_netbit_map(struct mod_pin_t *mpp)$/;"	f	signature:(struct mod_pin_t *mpp)
__bld_primterm_iterator	./v_vpi2.c	/^extern vpiHandle __bld_primterm_iterator(struct h_t *hp)$/;"	f	signature:(struct h_t *hp)
__bld_provisional_mstabs	./v_prp2.c	/^extern void __bld_provisional_mstabs(void)$/;"	f	signature:(void)
__bld_pthterm_iterator	./v_vpi2.c	/^extern vpiHandle __bld_pthterm_iterator(struct h_t *hp, word32 itype)$/;"	f	signature:(struct h_t *hp, word32 itype)
__bld_rng_numxpr	./v_src.c	/^extern struct expr_t *__bld_rng_numxpr(word32 av, word32 bv, int32 siz)$/;"	f	signature:(word32 av, word32 bv, int32 siz)
__bld_showvars_prefix	./v_ex4.c	/^extern char *__bld_showvars_prefix(char *s, struct net_t *np,$/;"	f	signature:(char *s, struct net_t *np, struct gref_t *grp)
__bld_stmt_iterator	./v_vpi2.c	/^extern vpiHandle __bld_stmt_iterator(struct h_t *hp)$/;"	f	signature:(struct h_t *hp)
__bld_systf_iterator	./v_vpi2.c	/^extern vpiHandle __bld_systf_iterator(struct h_t *hp)$/;"	f	signature:(struct h_t *hp)
__bld_tfargexpr_iterator	./v_vpi2.c	/^extern vpiHandle __bld_tfargexpr_iterator(struct h_t *hp)$/;"	f	signature:(struct h_t *hp)
__bld_tsk	./v_src.c	/^extern int32 __bld_tsk(char *tnam, int32 tsktok, int32 auto_generated,$/;"	f	signature:(char *tnam, int32 tsktok, int32 auto_generated, int32 is_void_func)
__bld_udpline_iter	./v_vpi2.c	/^extern vpiHandle __bld_udpline_iter(struct h_t *rhp)$/;"	f	signature:(struct h_t *rhp)
__bld_unc_expr	./v_src2.c	/^extern void __bld_unc_expr(void)$/;"	f	signature:(void)
__bld_valofsched	./v_ex4.c	/^extern char *__bld_valofsched(char *s, struct tev_t *tevp)$/;"	f	signature:(char *s, struct tev_t *tevp)
__bld_var_comm_nam	./v_cvcms.c	/^extern char *__bld_var_comm_nam(char *s, struct mod_t *mdp,$/;"	f	signature:(char *s, struct mod_t *mdp, struct task_t *tskp, struct net_t *np)
__bld_var_comm_ref	./v_cvcms.c	/^extern char *__bld_var_comm_ref(char *s, struct net_t *np)$/;"	f	signature:(char *s, struct net_t *np)
__bld_vpi_argv	./v_cnv.c	/^extern void __bld_vpi_argv(void)$/;"	f	signature:(void)
__bld_xl_drvld_vtxtab	./v_trch.c	/^extern int32 __bld_xl_drvld_vtxtab(struct net_t *np, int32 bi,$/;"	f	signature:(struct net_t *np, int32 bi, struct itree_t *itp, int32 is_load)
__bld_xtree	./v_src2.c	/^extern void __bld_xtree(int32 start_xndi)$/;"	f	signature:(int32 start_xndi)
__bldchk_var_comm_ref	./v_cvcms.c	/^extern char *__bldchk_var_comm_ref(char *s, struct net_t *np,$/;"	f	signature:(char *s, struct net_t *np, struct mod_t *mdp, struct task_t *tskp)
__blklast_stp	./cvc.c	/^struct st_t *__blklast_stp; \/* stmt loc. saved last stmt in block *\/$/;"	v	typeref:struct:st_t
__blnkline	./cvc.c	/^char *__blnkline;      \/* work blank line *\/$/;"	v
__bphdr	./cvc.c	/^struct brkpt_t *__bphdr;\/* header of breakpoint list *\/ $/;"	v	typeref:struct:brkpt_t
__bqline_emptytail	./v_ms.c	/^extern int32 __bqline_emptytail(char *cp)$/;"	f	signature:(char *cp)
__brktr_exec_1stmt	./v_ex.c	/^extern struct st_t *__brktr_exec_1stmt(struct st_t *stp, int32  *dowhile,$/;"	f	signature:(struct st_t *stp, int32 *dowhile, int32 is_do_while)
__buffer_empty	./cvc.c	/^pthread_cond_t __buffer_empty;   \/* buffer is empty *\/$/;"	v
__bufif0_hiz_tab	./v_aslib.c	/^const word32 __bufif0_hiz_tab[16] = {2,73,11,11,2,2,2,2,0,11,11,11,0,11,11,11};$/;"	v
__bufif0_hiz_tab	./v_aslib.s	/^__bufif0_hiz_tab:$/;"	l
__bufif0_pull0_tab	./v_aslib.c	/^const word32 __bufif0_pull0_tab[16] = {216,145,211,211,2,2,2,2,195,19,211,211,195,19,211,211};$/;"	v
__bufif0_pull0_tab	./v_aslib.s	/^__bufif0_pull0_tab:$/;"	l
__bufif0_pull1_tab	./v_aslib.c	/^const word32 __bufif0_pull1_tab[16] = {216,181,215,215,2,2,2,2,195,23,215,215,195,23,215,215};$/;"	v
__bufif0_pull1_tab	./v_aslib.s	/^__bufif0_pull1_tab:$/;"	l
__bufif0_strongx_tab	./v_aslib.c	/^const word32 __bufif0_strongx_tab[16] = {108,109,111,111,2,2,2,2,99,15,111,111,99,15,111,111};$/;"	v
__bufif0_strongx_tab	./v_aslib.s	/^__bufif0_strongx_tab:$/;"	l
__bufif0_strval_tab	./v_aslib.c	/^const word32 __bufif0_strval_tab[16] = {216,217,219,219,2,2,2,2,195,27,219,219,195,27,219,219};$/;"	v
__bufif0_strval_tab	./v_aslib.s	/^__bufif0_strval_tab:$/;"	l
__bufif0_supply0_tab	./v_aslib.c	/^const word32 __bufif0_supply0_tab[16] = {252,145,243,243,2,2,2,2,227,19,243,243,227,19,243,243};$/;"	v
__bufif0_supply0_tab	./v_aslib.s	/^__bufif0_supply0_tab:$/;"	l
__bufif0_supply1_tab	./v_aslib.c	/^const word32 __bufif0_supply1_tab[16] = {252,181,247,247,2,2,2,2,227,23,247,247,227,23,247,247};$/;"	v
__bufif0_supply1_tab	./v_aslib.s	/^__bufif0_supply1_tab:$/;"	l
__bufif1_hiz_tab	./v_aslib.c	/^const word32 __bufif1_hiz_tab[16] = {2,2,2,2,2,73,11,11,0,11,11,11,0,11,11,11,};$/;"	v
__bufif1_hiz_tab	./v_aslib.s	/^__bufif1_hiz_tab:$/;"	l
__bufif1_pull0_tab	./v_aslib.c	/^const word32 __bufif1_pull0_tab[16] = {2,2,2,2,216,145,211,211,195,19,211,211,195,19,211,211,};$/;"	v
__bufif1_pull0_tab	./v_aslib.s	/^__bufif1_pull0_tab:$/;"	l
__bufif1_pull1_tab	./v_aslib.c	/^const word32 __bufif1_pull1_tab[16] = {2,2,2,2,216,181,215,215,195,23,215,215,195,23,215,215,};$/;"	v
__bufif1_pull1_tab	./v_aslib.s	/^__bufif1_pull1_tab:$/;"	l
__bufif1_strongx_tab	./v_aslib.c	/^const word32 __bufif1_strongx_tab[16] = {2,2,2,2,108,109,111,111,99,15,111,111,99,15,111,111,};$/;"	v
__bufif1_strongx_tab	./v_aslib.s	/^__bufif1_strongx_tab:$/;"	l
__bufif1_strval_tab	./v_aslib.c	/^const word32 __bufif1_strval_tab[16] = {2,2,2,2,216,217,219,219,195,27,219,219,195,27,219,219,};$/;"	v
__bufif1_strval_tab	./v_aslib.s	/^__bufif1_strval_tab:$/;"	l
__bufif1_supply0_tab	./v_aslib.c	/^const word32 __bufif1_supply0_tab[16] = {2,2,2,2,252,145,243,243,227,19,243,243,227,19,243,243,};$/;"	v
__bufif1_supply0_tab	./v_aslib.s	/^__bufif1_supply0_tab:$/;"	l
__bufif1_supply1_tab	./v_aslib.c	/^const word32 __bufif1_supply1_tab[16] = {2,2,2,2,252,181,247,247,227,23,247,247,227,23,247,247,};$/;"	v
__bufif1_supply1_tab	./v_aslib.s	/^__bufif1_supply1_tab:$/;"	l
__bufif_and_tab	./v_ex3.c	/^const byte __bufif_and_tab[] = {  $/;"	v
__bufif_base_tab	./v_ex3.c	/^const int32 __bufif_base_tab[] = {$/;"	v
__bufif_or_tab	./v_ex3.c	/^const byte __bufif_or_tab[] = {  $/;"	v
__by16_ldivmod	./v_ex2.c	/^extern void __by16_ldivmod(word32 *quot, word32 *r0, word32 *u, word32 v0, $/;"	f	signature:(word32 *quot, word32 *r0, word32 *u, word32 v0, int32 ublen)
__by16_ldivmod	./v_ex2.c	/^extern void __by16_ldivmod(word32 *quot, word32 *r0, word32 *u, word32 v0, int32 ublen)$/;"	f	signature:(word32 *quot, word32 *r0, word32 *u, word32 v0, int32 ublen)
__ca1bit_syp	./cvc.c	/^struct sy_t *__ca1bit_syp; \/* gmsym for 1 bit conta converted gate *\/$/;"	v	typeref:struct:sy_t
__calc_ebp_spill_offset	./v_bbopt.c	/^extern size_t __calc_ebp_spill_offset(int32 tni, size_t area_ofs)$/;"	f	signature:(int32 tni, size_t area_ofs)
__call_export_tf_wrapper	./v_dpi.c	/^extern void __call_export_tf_wrapper(char *export_tf_nam,$/;"	f	signature:(char *export_tf_nam, union adpi_u *cside_a_u_tab)
__call_vlog_startup_procs	./v_vpi.c	/^extern void __call_vlog_startup_procs(void)$/;"	f	signature:(void)
__can_exec	./cvc.c	/^int32 __can_exec;      \/* T => for vpi sim ctrl - can now exec *\/$/;"	v
__can_have_array_on_rhs	./cvc.c	/^int32 __can_have_array_on_rhs; \/* DPI can pass array to DPI calls *\/$/;"	v
__canbe_dst_mem_label	./v_bbopt.c	/^extern int32 __canbe_dst_mem_label(int32 par_tni)$/;"	f	signature:(int32 par_tni)
__canbe_impl_evctrl	./cvc.c	/^int32 __canbe_impl_evctrl; \/* glb switch to allow @(*) as ev ctrl *\/$/;"	v
__cancel_1wev	./v_ex3.c	/^extern void __cancel_1wev(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__cap_seq_no	./cvc.c	/^int32 __cap_seq_no;    \/* counter for conta enter points *\/$/;"	v
__cap_to_stren	./v_ex3.c	/^const word32 __cap_to_stren[] = { 0, 0x24, 0x48, 0x90 }; $/;"	v
__case_terr	./v_ms.c	/^extern void __case_terr(char *fnam, int32 lno)$/;"	f	signature:(char *fnam, int32 lno)
__cb_all_rfs	./v_vpi.c	/^extern void __cb_all_rfs(struct net_t *np, int32 bi, int32 is_force)$/;"	f	signature:(struct net_t *np, int32 bi, int32 is_force)
__cb_reason_to_nam	./v_vpi.c	/^extern char *__cb_reason_to_nam(char *s, int32 reason)$/;"	f	signature:(char *s, int32 reason)
__cberror_fill_einfo	./v_vpi3.c	/^extern void __cberror_fill_einfo(int32 esev, int32 ernum, char *emsg,$/;"	f	signature:(int32 esev, int32 ernum, char *emsg, char *efnam, int32 elcnt)
__cbvc_callback	./v_vpi.c	/^extern void __cbvc_callback(struct dcevnt_t *dcep, struct cbrec_t *cbp,$/;"	f	signature:(struct dcevnt_t *dcep, struct cbrec_t *cbp, struct h_t *hp)
__cbvc_causing_dcep	./cvc.c	/^struct dcevnt_t *__cbvc_causing_dcep; \/* glb for vc cb if it is remed *\/$/;"	v	typeref:struct:dcevnt_t
__cbvc_dcehdr	./cvc.c	/^struct dceauxlst_t *__cbvc_dcehdr; \/* header of current vc cb dces *\/$/;"	v	typeref:struct:dceauxlst_t
__cfg_hd	./cvc.c	/^struct cfg_t *__cfg_hd;\/* head of list of cfgs *\/$/;"	v	typeref:struct:cfg_t
__cfg_lineloc	./v_src3.c	/^extern char *__cfg_lineloc(char *s, char *fnam, int32 fnlcnt)$/;"	f	signature:(char *s, char *fnam, int32 fnlcnt)
__cfg_mdp	./cvc.c	/^struct mod_t *__cfg_mdp;\/* SJM - remove me - why global *\/$/;"	v	typeref:struct:mod_t
__cfg_verbose	./cvc.c	/^int32 __cfg_verbose;   \/* T => emit cfg reading verbose messages *\/ $/;"	v
__cfglib_hd	./cvc.c	/^struct cfglib_t *__cfglib_hd; \/* head of list of libs for cfg *\/$/;"	v	typeref:struct:cfglib_t
__cfglib_tail	./cvc.c	/^struct cfglib_t *__cfglib_tail; \/* and tail *\/$/;"	v	typeref:struct:cfglib_t
__chanallocsize	./cvc.c	/^size_t __chanallocsize; \/* size of allocated chan tables *\/$/;"	v
__change_gate_outwire	./v_sim.c	/^extern void __change_gate_outwire(struct gate_t *gp)$/;"	f	signature:(struct gate_t *gp)
__chantab	./cvc.c	/^struct chanrec_t *__chantab;\/* tab of channel records (one per id) *\/$/;"	v	typeref:struct:chanrec_t
__check_delay_constant	./v_cvcrt.c	/^extern int32 __check_delay_constant(union del_u dc_du, int32 dc_delrep, $/;"	f	signature:(union del_u dc_du, int32 dc_delrep, word64 *del)
__checking_only	./cvc.c	/^int32 __checking_only; \/* T => no error msg, looking for something *\/ $/;"	v
__chg_1inst_del	./v_del.c	/^extern void __chg_1inst_del(struct gate_t *mgp, struct itree_t *mastitp,$/;"	f	signature:(struct gate_t *mgp, struct itree_t *mastitp, struct gate_t *ngp)
__chg_lhspsel	./v_ex3.c	/^extern void __chg_lhspsel(word32 *dwp, int32 dbi, word32 *swp, int32 numbits)$/;"	f	signature:(word32 *dwp, int32 dbi, word32 *swp, int32 numbits)
__chg_param_tois	./v_sdf.c	/^extern void __chg_param_tois(struct net_t *np, struct mod_t *imdp)$/;"	f	signature:(struct net_t *np, struct mod_t *imdp)
__chg_portdir	./cvc.c	/^int32 __chg_portdir;   \/* T => chg port dir to bid. for XL compat *\/$/;"	v
__chg_rng_direct	./cvc.c	/^int32 __chg_rng_direct;\/* T => change rng dir. for implicitly decl *\/$/;"	v
__chg_st_arr_val	./v_ex3.c	/^extern void __chg_st_arr_val(struct net_t *np, struct expr_t *ndx1, int32 arri, $/;"	f	signature:(struct net_t *np, struct expr_t *ndx1, int32 arri, word32 *ap, word32 *bp)
__chg_st_bit	./v_ex3.c	/^extern void __chg_st_bit(struct net_t *np, int32 biti, word32 av, word32 bv)$/;"	f	signature:(struct net_t *np, int32 biti, word32 av, word32 bv)
__chg_st_val	./v_ex3.c	/^extern void __chg_st_val(struct net_t *np, word32 *rgap, word32 *rgbp)$/;"	f	signature:(struct net_t *np, word32 *rgap, word32 *rgbp)
__chg_task_prms_to_tab	./v_fx.c	/^extern void __chg_task_prms_to_tab(struct task_t *tskp)$/;"	f	signature:(struct task_t *tskp)
__chg_vtxlst_end	./cvc.c	/^struct vtxlst_t *__chg_vtxlst_end; \/* and ptr to end *\/$/;"	v	typeref:struct:vtxlst_t
__chg_vtxlst_hdr	./cvc.c	/^struct vtxlst_t *__chg_vtxlst_hdr; \/* list of chged vertices to store *\/$/;"	v	typeref:struct:vtxlst_t
__chg_xprline_size	./v_cnv.c	/^extern void __chg_xprline_size(int32 slen)$/;"	f	signature:(int32 slen)
__chg_xstk_width	./v_ex2.c	/^extern void __chg_xstk_width(struct xstk_t *xsp, int32 wlen)$/;"	f	signature:(struct xstk_t *xsp, int32 wlen)
__chk_0del	./v_prp2.c	/^extern int32 __chk_0del(word32 drep, union del_u du, struct mod_t *mdp)$/;"	f	signature:(word32 drep, union del_u du, struct mod_t *mdp)
__chk_1mdecls	./v_fx2.c	/^extern void __chk_1mdecls(void)$/;"	f	signature:(void)
__chk_1mod_cpins	./v_fx.c	/^extern void __chk_1mod_cpins(struct mod_t *mdp)$/;"	f	signature:(struct mod_t *mdp)
__chk_1tsk_dpi	./v_dpi.c	/^extern void __chk_1tsk_dpi(struct task_t *tskp)$/;"	f	signature:(struct task_t *tskp)
__chk_bblk_bedges	./v_cvcms.c	/^extern void __chk_bblk_bedges(struct bblk_t *bbp, struct flowg_t *fgp,$/;"	f	signature:(struct bblk_t *bbp, struct flowg_t *fgp, struct mod_t *mdp)
__chk_beg_line	./v_ms.c	/^extern int32 __chk_beg_line(int32 cdtyp)$/;"	f	signature:(int32 cdtyp)
__chk_chg_port_dir	./v_fx2.c	/^extern void __chk_chg_port_dir(int32 nd_chg)$/;"	f	signature:(int32 nd_chg)
__chk_copied_xpr	./v_fx.c	/^extern void __chk_copied_xpr(struct expr_t *xp, struct mod_t *mdp)$/;"	f	signature:(struct expr_t *xp, struct mod_t *mdp)
__chk_delparams	./v_fx2.c	/^extern int32 __chk_delparams(struct paramlst_t *pmp2, char *emsg,$/;"	f	signature:(struct paramlst_t *pmp2, char *emsg, int32 mustbeconst)
__chk_dsgn_cpins	./v_fx.c	/^extern void __chk_dsgn_cpins(struct mod_t *mhdrp)$/;"	f	signature:(struct mod_t *mhdrp)
__chk_dsgn_ipins	./v_fx.c	/^extern void __chk_dsgn_ipins(struct mod_t *mhdrp)$/;"	f	signature:(struct mod_t *mhdrp)
__chk_evxpr	./v_fx3.c	/^extern void __chk_evxpr(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__chk_extra_atend	./v_dbg.c	/^extern int32 __chk_extra_atend(int32 emit_err)$/;"	f	signature:(int32 emit_err)
__chk_fdef_args	./v_fx2.c	/^extern void __chk_fdef_args(struct task_t *tskp)$/;"	f	signature:(struct task_t *tskp)
__chk_fmt	./v_cnv.c	/^extern void __chk_fmt(struct expr_t *axp, byte *argnonvtab) $/;"	f	signature:(struct expr_t *axp, byte *argnonvtab)
__chk_funcdef	./v_fx2.c	/^extern void __chk_funcdef(struct task_t *tskp)$/;"	f	signature:(struct task_t *tskp)
__chk_funcdef_dpi	./v_dpi.c	/^extern void __chk_funcdef_dpi(struct task_t *tskp)$/;"	f	signature:(struct task_t *tskp)
__chk_jmp_cmp_ops	./v_bbgen3.c	/^extern int32 __chk_jmp_cmp_ops(int32 op1_ti, int32 op2_ti, int32 cc)$/;"	f	signature:(int32 op1_ti, int32 op2_ti, int32 cc)
__chk_lhsdecl_scalared	./v_fx3.c	/^extern int32 __chk_lhsdecl_scalared(struct expr_t *idndp)$/;"	f	signature:(struct expr_t *idndp)
__chk_lhsexpr	./v_fx3.c	/^extern int32 __chk_lhsexpr(struct expr_t *ndp, int32 lhstyp)$/;"	f	signature:(struct expr_t *ndp, int32 lhstyp)
__chk_lstofsts	./v_fx2.c	/^extern void __chk_lstofsts(struct st_t *hdstp)$/;"	f	signature:(struct st_t *hdstp)
__chk_mod	./v_fx2.c	/^extern void __chk_mod(void)$/;"	f	signature:(void)
__chk_nodel_lstofsts	./v_fx2.c	/^extern void __chk_nodel_lstofsts(struct st_t *fhdstp)$/;"	f	signature:(struct st_t *fhdstp)
__chk_numdelay	./v_fx2.c	/^extern int32 __chk_numdelay(struct expr_t *ndp, char *emsg)$/;"	f	signature:(struct expr_t *ndp, char *emsg)
__chk_one_bblk_connectivity	./v_bbopt.c	/^extern void __chk_one_bblk_connectivity(struct bblk_t *bbp)$/;"	f	signature:(struct bblk_t *bbp)
__chk_paramexpr	./v_fx3.c	/^extern int32 __chk_paramexpr(struct expr_t *ndp, int32 xwid)$/;"	f	signature:(struct expr_t *ndp, int32 xwid)
__chk_redef_err	./v_src.c	/^extern int32 __chk_redef_err(char *nam, struct sy_t *syp,$/;"	f	signature:(char *nam, struct sy_t *syp, char *newtnam, word32 styp)
__chk_repl_wire_arr_selects	./v_fx3.c	/^extern void __chk_repl_wire_arr_selects(struct expr_t *ndp, int32 is_chk_lhs)$/;"	f	signature:(struct expr_t *ndp, int32 is_chk_lhs)
__chk_rhsexpr	./v_fx3.c	/^extern int32 __chk_rhsexpr(struct expr_t *ndp, int32 csiz)$/;"	f	signature:(struct expr_t *ndp, int32 csiz)
__chk_shorted_bids	./v_fx2.c	/^extern void __chk_shorted_bids(void)$/;"	f	signature:(void)
__chk_showobj	./v_vpi3.c	/^extern int32 __chk_showobj(struct h_t *hp, int32 *bad_inst, int32 *bad_task)$/;"	f	signature:(struct h_t *hp, int32 *bad_inst, int32 *bad_task)
__chk_spec_delay	./v_fx3.c	/^extern void __chk_spec_delay(struct expr_t *ndp, char *emsg)$/;"	f	signature:(struct expr_t *ndp, char *emsg)
__chk_sv_dpi_lib	./v_dpi.c	/^extern int32 __chk_sv_dpi_lib(void)$/;"	f	signature:(void)
__chk_task_thread_needed	./v_fx2.c	/^extern void __chk_task_thread_needed(struct mod_t *mdp)$/;"	f	signature:(struct mod_t *mdp)
__chk_taskvars	./v_fx2.c	/^extern void __chk_taskvars(struct task_t *tskp, int32 tregbasi)$/;"	f	signature:(struct task_t *tskp, int32 tregbasi)
__chk_tskenable	./v_fx3.c	/^extern void __chk_tskenable(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__chkbld_vpi_systf_func	./v_vpi.c	/^extern void __chkbld_vpi_systf_func(struct expr_t *fcallx)$/;"	f	signature:(struct expr_t *fcallx)
__chkbld_vpi_systf_task	./v_vpi.c	/^extern void __chkbld_vpi_systf_task(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__chkfix_spfy	./v_fx3.c	/^extern void __chkfix_spfy(void)$/;"	f	signature:(void)
__chking_conta	./cvc.c	/^int32 __chking_conta;  \/* T => checking a continuous assignment *\/$/;"	v
__chkndx_expr	./v_fx2.c	/^extern int32 __chkndx_expr(struct expr_t *ndp, char *emsg)$/;"	f	signature:(struct expr_t *ndp, char *emsg)
__cint_dup_tn_tree	./v_bbgen.c	/^struct avlhd_t *__cint_dup_tn_tree;$/;"	v	typeref:struct:avlhd_t
__cleanup_dpi_interp_wrap_lib	./v_dpi.c	/^extern void __cleanup_dpi_interp_wrap_lib(void)$/;"	f	signature:(void)
__cleanup_dumpports	./v_ex4.c	/^extern void __cleanup_dumpports(void) $/;"	f	signature:(void)
__clear_wrk_einfo	./v_vpi3.c	/^extern void __clear_wrk_einfo(void)$/;"	f	signature:(void)
__close_mcd	./v_ex.c	/^extern word32 __close_mcd(word32 mcd, int32 from_vpi)$/;"	f	signature:(word32 mcd, int32 from_vpi)
__cmd_fnam	./cvc.c	/^char *__cmd_fnam;      \/* command interact. input file name *\/$/;"	v
__cmd_ifi	./cvc.c	/^int32 __cmd_ifi;       \/* constant command in_fils index *\/$/;"	v
__cmd_s	./cvc.c	/^FILE *__cmd_s;         \/* command file source or null for tty *\/ $/;"	v
__cmd_start_fnam	./cvc.c	/^char *__cmd_start_fnam;\/* -i startup interactive input file name *\/$/;"	v
__cmdl_library	./cvc.c	/^char *__cmdl_library;  \/* library name to file off the command line *\/$/;"	v
__cmp_amodes	./v_bbgen3.c	/^extern int32 __cmp_amodes(struct amode_t *amp1, struct amode_t *amp2)$/;"	f	signature:(struct amode_t *amp1, struct amode_t *amp2)
__cmp_xpr	./v_src.c	/^extern int32 __cmp_xpr(struct expr_t *nx, struct expr_t *ox, int32 *has_xmr)$/;"	f	signature:(struct expr_t *nx, struct expr_t *ox, int32 *has_xmr)
__cnt_cat_size	./v_prp.c	/^extern int32 __cnt_cat_size(struct expr_t *xp)$/;"	f	signature:(struct expr_t *xp)
__cnt_dcelstels	./v_cnv.c	/^extern int32 __cnt_dcelstels(struct dcevnt_t *dcep)$/;"	f	signature:(struct dcevnt_t *dcep)
__cnt_tfargs	./v_fx3.c	/^extern int32 __cnt_tfargs(struct expr_t *argndp)$/;"	f	signature:(struct expr_t *argndp)
__cnv_stk_fromreal_toreg32	./v_cnv.c	/^extern void __cnv_stk_fromreal_toreg32(struct xstk_t *xsp)$/;"	f	signature:(struct xstk_t *xsp)
__cnv_stk_fromreg_toreal	./v_cnv.c	/^extern void __cnv_stk_fromreg_toreal(struct xstk_t *xsp, int32 src_signed)$/;"	f	signature:(struct xstk_t *xsp, int32 src_signed)
__cnv_ticks_tonum64	./v_del.c	/^extern void __cnv_ticks_tonum64(word64 *usertim, word64 tickstim,$/;"	f	signature:(word64 *usertim, word64 tickstim, struct mod_t *mdp)
__cnvt_decl_param_stkval	./v_genfx.c	/^static void __cnvt_decl_param_stkval(struct xstk_t *xsp, struct expr_t *xrhs,$/;"	f	file:	signature:(struct xstk_t *xsp, struct expr_t *xrhs, struct net_t *np)
__cnvt_stk_to_real	./v_cnv.c	/^extern double __cnvt_stk_to_real(struct xstk_t *xsp, int32 is_signed)$/;"	f	signature:(struct xstk_t *xsp, int32 is_signed)
__cnvt_xzs_to_2state	./v_ex3.c	/^extern void __cnvt_xzs_to_2state(word32 *ap, word32 *bp, int32 xsiz)$/;"	f	signature:(word32 *ap, word32 *bp, int32 xsiz)
__coalesce_count	./cvc.c	/^int32 __coalesce_count;        \/* coalesce insn count *\/$/;"	v
__col_caseexpr	./v_src2.c	/^extern int32 __col_caseexpr(void)$/;"	f	signature:(void)
__col_comsemi	./v_src2.c	/^extern int32 __col_comsemi(int32 last_xti)$/;"	f	signature:(int32 last_xti)
__col_connexpr	./v_src2.c	/^extern int32 __col_connexpr(int32 start_xtk)$/;"	f	signature:(int32 start_xtk)
__col_count	./v_src2.c	/^static int32 __col_count[HASHTABSIZ];$/;"	v	file:
__col_delexpr	./v_src2.c	/^extern int32 __col_delexpr(int32 allow_omit)$/;"	f	signature:(int32 allow_omit)
__col_lofp_paramrhsexpr	./v_src2.c	/^extern int32 __col_lofp_paramrhsexpr(void)$/;"	f	signature:(void)
__col_lval	./v_src2.c	/^extern int32 __col_lval(void)$/;"	f	signature:(void)
__col_newparamrhsexpr	./v_src2.c	/^extern int32 __col_newparamrhsexpr(void)$/;"	f	signature:(void)
__col_paramrhsexpr	./v_src2.c	/^extern int32 __col_paramrhsexpr(void)$/;"	f	signature:(void)
__col_parenexpr	./v_src2.c	/^extern int32 __col_parenexpr(int32 start_xtk, int32 ret_on_comma, $/;"	f	signature:(int32 start_xtk, int32 ret_on_comma, int32 parse_return)
__col_rangeexpr	./v_src2.c	/^extern int32 __col_rangeexpr(void)$/;"	f	signature:(void)
__collect_line	./v_ms.c	/^extern void __collect_line(void)$/;"	f	signature:(void)
__collision_count	./cvc.c	/^int32 __collision_count;$/;"	v
__colto_eol	./v_dbg.c	/^extern int32 __colto_eol(void)$/;"	f	signature:(void)
__comb_1bitsts	./v_ex4.c	/^extern word32 __comb_1bitsts(word32 wtyp, word32 acc, word32 op)$/;"	f	signature:(word32 wtyp, word32 acc, word32 op)
__comm_file_name	./v_bbgen.c	/^char *__comm_file_name;    \/* comm file name *\/$/;"	v
__comm_nt_file_names	./v_bbgen.c	/^char **__comm_nt_file_names; \/* comm init file names - one per module *\/$/;"	v
__comp_mda_dim_ndx	./v_ex3.c	/^extern int32 __comp_mda_dim_ndx(struct mda_t *mdap, struct expr_t *ndx, $/;"	f	signature:(struct mda_t *mdap, struct expr_t *ndx, int32 i)
__comp_ndx	./v_ex2.c	/^extern int32 __comp_ndx(struct net_t *np, struct expr_t *ndx)$/;"	f	signature:(struct net_t *np, struct expr_t *ndx)
__comp_rt_ndx	./v_ex2.c	/^extern int32 __comp_rt_ndx(struct net_t *np, struct expr_t *ndx)$/;"	f	signature:(struct net_t *np, struct expr_t *ndx)
__comp_sigint_handler	./v_dbg.c	/^extern void __comp_sigint_handler(void)$/;"	f	signature:(void)
__compile_only	./cvc.c	/^int32 __compile_only;  \/* T => check syntax (inc. lib.) no quads *\/$/;"	v
__compiled_sim	./cvc.c	/^int32 __compiled_sim;  \/* generate asm, compile and dl link *\/$/;"	v
__compute_mda_index	./v_ex3.c	/^extern int32 __compute_mda_index(struct mda_t *mdap, struct net_t *np, $/;"	f	signature:(struct mda_t *mdap, struct net_t *np, struct expr_t *ndx1, int32 arri, struct expr_t **sel_ndx)
__con_adradd_insn	./v_bbgen3.c	/^extern int32 __con_adradd_insn(int32 srep, int32 blen, int32 op1_ti,$/;"	f	signature:(int32 srep, int32 blen, int32 op1_ti, size_t bytofs)
__confunc_copying	./cvc.c	/^int32 __confunc_copying; \/* T => expr copy is conf func copy *\/$/;"	v
__conn_npin	./v_prp.c	/^extern void __conn_npin(struct net_t *np, int32 ni1, int32 ni2, int32 islhs,$/;"	f	signature:(struct net_t *np, int32 ni1, int32 ni2, int32 islhs, int32 npctyp, struct gref_t *grp, int32 chgtyp, char *chgp)
__const_expr_has_isnums	./cvc.c	/^int32 __const_expr_has_isnums; \/* flag to control is IS nums constant *\/$/;"	v
__conta_num	./cvc.c	/^int32 __conta_num;     \/* counter for building symbol for conta *\/$/;"	v
__contab	./cvc.c	/^word32 *__contab;      \/* design wide constant table *\/$/;"	v
__contab_dup_tn_tree	./v_bbgen.c	/^struct avlhd_t *__contab_dup_tn_tree;$/;"	v	typeref:struct:avlhd_t
__contab_hash	./cvc.c	/^struct contab_info_t **__contab_hash; \/* contab hash information *\/$/;"	v	typeref:struct:contab_info_t
__contabwi	./cvc.c	/^int32 __contabwi;      \/* next free word32 slot in const tab *\/$/;"	v
__contabwsiz	./cvc.c	/^int32 __contabwsiz;    \/* currrent size of const tab in words *\/$/;"	v
__contas_removable	./cvc.c	/^int32 __contas_removable; \/* removabale static cont. assigns *\/$/;"	v
__convert_mipd_val_inumdels_to_const	./v_del.c	/^extern void __convert_mipd_val_inumdels_to_const(void)$/;"	f	signature:(void)
__copy1_defparam	./v_fx.c	/^extern struct dfparam_t *__copy1_defparam(struct dfparam_t *odfpp)$/;"	f	signature:(struct dfparam_t *odfpp)
__copy1_gate_gia_rec	./v_fx.c	/^extern void __copy1_gate_gia_rec(struct gate_t *ngp, struct gia_aux_t *ogiap)$/;"	f	signature:(struct gate_t *ngp, struct gia_aux_t *ogiap)
__copy1_inst_gia_rec	./v_fx.c	/^extern void __copy1_inst_gia_rec(struct inst_t *nip, struct gia_aux_t *ogiap)$/;"	f	signature:(struct inst_t *nip, struct gia_aux_t *ogiap)
__copy_amode	./v_cvcms.c	/^extern void __copy_amode(struct amode_t *dstp, struct amode_t *srcp)$/;"	f	signature:(struct amode_t *dstp, struct amode_t *srcp)
__copy_arg	./v_bbgen3.c	/^extern void __copy_arg(int32 nbytes, int32 op1, int32 op2)$/;"	f	signature:(int32 nbytes, int32 op1, int32 op2)
__copy_auto_idp_area	./v_ex.c	/^extern void __copy_auto_idp_area(t_midat *dst_idp, t_midat *src_idp, $/;"	f	signature:(t_midat *dst_idp, t_midat *src_idp, int32 free_it)
__copy_dellst	./v_src.c	/^extern struct paramlst_t *__copy_dellst(struct paramlst_t *oplp)$/;"	f	signature:(struct paramlst_t *oplp)
__copy_expr	./v_fx.c	/^extern struct expr_t *__copy_expr(struct expr_t *src)$/;"	f	signature:(struct expr_t *src)
__copy_fixup_prep_exec_const_func	./v_prp.c	/^extern void __copy_fixup_prep_exec_const_func(struct task_t *tskp)$/;"	f	signature:(struct task_t *tskp)
__copy_ip	./v_bbgen.c	/^struct insn_t *__copy_ip; \/* the current copy insn to xpnd from *\/$/;"	v	typeref:struct:insn_t
__copy_lstofsts	./v_fx.c	/^extern struct st_t *__copy_lstofsts(struct st_t *ostp)$/;"	f	signature:(struct st_t *ostp)
__copy_pndxtab	./v_fx.c	/^extern struct expr_t **__copy_pndxtab(struct inst_t *oip)$/;"	f	signature:(struct inst_t *oip)
__copy_stmt	./v_fx.c	/^extern struct st_t *__copy_stmt(struct st_t *ostp)$/;"	f	signature:(struct st_t *ostp)
__copy_wire_from_wire_array	./v_fx.c	/^extern void __copy_wire_from_wire_array(struct net_t *nnp, struct net_t *onp)$/;"	f	signature:(struct net_t *nnp, struct net_t *onp)
__correct_forced_newwireval	./v_ex3.c	/^extern int32 __correct_forced_newwireval(struct net_t *np, word32 *ap,$/;"	f	signature:(struct net_t *np, word32 *ap, word32 *bp)
__count_ndxjmp_lab_setsiz	./v_bbgen3.c	/^extern int32 __count_ndxjmp_lab_setsiz(struct bblk_t **bbtab, int32 jtabsiz)$/;"	f	signature:(struct bblk_t **bbtab, int32 jtabsiz)
__cp_lnegate	./v_ex2.c	/^extern word32 __cp_lnegate(word32 *u, word32 *v, int32 blen)$/;"	f	signature:(word32 *u, word32 *v, int32 blen)
__cp_num	./cvc.c	/^int32 __cp_num;          \/* counter for unnamed gate\/inst pos. *\/ $/;"	v
__cp_sofs_wval	./v_ex3.c	/^extern void __cp_sofs_wval(word32 *dwp, word32 *swp, int32 sbit1,$/;"	f	signature:(word32 *dwp, word32 *swp, int32 sbit1, int32 numbits)
__cpblk_nxti	./cvc.c	/^int32 __cpblk_nxti;    \/* index of next free pos. *\/$/;"	v
__cphdr	./cvc.c	/^struct cell_pin_t *__cphdr;   \/* header of temp. cell pin list *\/$/;"	v	typeref:struct:cell_pin_t
__cpp_last	./cvc.c	/^struct cell_pin_t *__cpp_last;\/* current last cell pin*\/$/;"	v	typeref:struct:cell_pin_t
__cppblk_nxti	./cvc.c	/^int32 __cppblk_nxti;   \/* index of next free pos. *\/$/;"	v
__crit_msg	./v_ms.c	/^extern void __crit_msg(char *s, ...)$/;"	f	signature:(char *s, ...)
__cstr_to_vval	./v_ms.c	/^extern struct xstk_t *__cstr_to_vval(char *s)$/;"	f	signature:(char *s)
__ctev_ndx	./cvc.c	/^int32 __ctev_ndx; \/* tev index counter (identifier) *\/$/;"	v
__cur_bbp	./v_bbgen.c	/^struct bblk_t *__cur_bbp; \/* cur being filled basic block ptr *\/  $/;"	v	typeref:struct:bblk_t
__cur_cfg	./cvc.c	/^struct cfg_t *__cur_cfg;\/* current cfg *\/$/;"	v	typeref:struct:cfg_t
__cur_cntxt_gblk	./cvc.c	/^struct genblk_t *__cur_cntxt_gblk;\/* if rd src in gen blk, the cur blk *\/$/;"	v	typeref:struct:genblk_t
__cur_dce_expr	./cvc.c	/^struct dce_expr_t *__cur_dce_expr; \/* glb for edge events eval expr *\/$/;"	v	typeref:struct:dce_expr_t
__cur_declobj	./cvc.c	/^int32 __cur_declobj;   \/* token type of declared mod or task *\/$/;"	v
__cur_dom_fron_tail	./v_bbgen.c	/^struct bblklst_t *__cur_dom_fron_tail; \/* and tail for add to end *\/$/;"	v	typeref:struct:bblklst_t
__cur_dom_fron_todos	./v_bbgen.c	/^struct bblklst_t *__cur_dom_fron_todos; \/* dom frontier wrd list hd *\/$/;"	v	typeref:struct:bblklst_t
__cur_dpip	./cvc.c	/^struct dpi_t *__cur_dpip;     \/* currently scanning dpi *\/$/;"	v	typeref:struct:dpi_t
__cur_flowg	./v_bbgen.c	/^struct flowg_t *__cur_flowg;  \/* current being gened flow graph *\/$/;"	v	typeref:struct:flowg_t
__cur_fmon	./cvc.c	/^struct fmonlst_t *__cur_fmon; \/* current fmon list entry *\/$/;"	v	typeref:struct:fmonlst_t
__cur_fnam	./cvc.c	/^char *__cur_fnam;      \/* being read file name for errors *\/$/;"	v
__cur_fnam_ind	./cvc.c	/^int32 __cur_fnam_ind;  \/* index in in_fils of cur_fnam *\/$/;"	v
__cur_ifrom_u	./v_bbgen.c	/^union ifrom_u __cur_ifrom_u; \/* statement or net v insn from *\/ $/;"	v	typeref:union:ifrom_u
__cur_infi	./cvc.c	/^int32 __cur_infi;      \/* index in in_fils of current file *\/$/;"	v
__cur_ip	./v_bbgen.c	/^struct insn_t *__cur_ip;   \/* cur being lowered to insn ip *\/$/;"	v	typeref:struct:insn_t
__cur_lhscati1	./cvc.c	/^int32 __cur_lhscati1;  \/* if lhs concat, high rhs psel index *\/$/;"	v
__cur_lhscati2	./cvc.c	/^int32 __cur_lhscati2;  \/* if lhs concat, low rhs psel index *\/$/;"	v
__cur_mark	./v_bbgen.c	/^int32 __cur_mark;      \/* for keeping track of current marking step *\/$/;"	v
__cur_npcap	./cvc.c	/^struct conta_t *__cur_npcap; \/* current net pin proc. conta *\/$/;"	v	typeref:struct:conta_t
__cur_npgp	./cvc.c	/^struct gate_t *__cur_npgp;\/* current net-pin processing gate *\/$/;"	v	typeref:struct:gate_t
__cur_npii	./cvc.c	/^int32 __cur_npii;      \/* current index of inst. in cur. mod *\/$/;"	v
__cur_npmdp	./cvc.c	/^struct mod_t *__cur_npmdp;\/* current net-pin processing module *\/$/;"	v	typeref:struct:mod_t
__cur_npnp	./cvc.c	/^struct net_t *__cur_npnp; \/* current net pin net for vpi putv driver *\/$/;"	v	typeref:struct:net_t
__cur_npnum	./cvc.c	/^int32 __cur_npnum;     \/* current port number (from 0) *\/$/;"	v
__cur_npp	./v_cvcrt.c	/^struct net_pin_t *__cur_npp; \/* cur runtime net pin *\/$/;"	v	typeref:struct:net_pin_t
__cur_nptfrp	./cvc.c	/^struct tfrec_t *__cur_nptfrp; \/* current net pin tf arg drvr rec *\/$/;"	v	typeref:struct:tfrec_t
__cur_optcfg_cntxt_str	./cvc.c	/^char __cur_optcfg_cntxt_str[RECLEN]; \/* cntxt name for optcfg warns *\/ $/;"	v
__cur_passres	./cvc.c	/^int32 __cur_passres;   \/* num mods resolved in current pass *\/$/;"	v
__cur_pbi	./cvc.c	/^int32 __cur_pbi;       \/* current bit number for PB ICONN npp *\/$/;"	v
__cur_prec	./cvc.c	/^word32 __cur_prec;     \/* current digits of precision (0-15) *\/$/;"	v
__cur_sofs	./cvc.c	/^int32 __cur_sofs;      \/* ndx of next ofs (position) in expr line *\/$/;"	v
__cur_spfy	./cvc.c	/^struct spfy_t *__cur_spfy;\/* current specify block *\/$/;"	v	typeref:struct:spfy_t
__cur_sysf_expr	./cvc.c	/^struct expr_t *__cur_sysf_expr;\/* tmp calling expr. for vpi sysf*\/$/;"	v	typeref:struct:expr_t
__cur_sysf_xsp	./cvc.c	/^struct xstk_t *__cur_sysf_xsp; \/* tmp stk_t for vpi sysf ret val *\/$/;"	v	typeref:struct:xstk_t
__cur_syst_stp	./cvc.c	/^struct st_t *__cur_syst_stp; \/* tmp stmt for vpi syst*\/$/;"	v	typeref:struct:st_t
__cur_tchk	./cvc.c	/^struct tchk_t *__cur_tchk;$/;"	v	typeref:struct:tchk_t
__cur_te_endp	./cvc.c	/^struct tev_t *__cur_te_endp;$/;"	v	typeref:struct:tev_t
__cur_te_hdrp	./cvc.c	/^struct tev_t *__cur_te_hdrp;$/;"	v	typeref:struct:tev_t
__cur_tevp	./cvc.c	/^struct tev_t *__cur_tevp; \/* ptr to event list for adding to front *\/$/;"	v	typeref:struct:tev_t
__cur_thd	./cvc.c	/^struct thread_t *__cur_thd;  \/* currently executing thread addr. *\/$/;"	v	typeref:struct:thread_t
__cur_timehdr	./cvc.c	/^struct telhdr_t *__cur_timehdr;$/;"	v	typeref:struct:telhdr_t
__cur_tsk	./cvc.c	/^struct task_t *__cur_tsk;\/* ptr. to current task *\/$/;"	v	typeref:struct:task_t
__cur_udp	./cvc.c	/^struct udp_t *__cur_udp; \/* current udp struct *\/$/;"	v	typeref:struct:udp_t
__cur_ueipnum	./cvc.c	/^int32 __cur_ueipnum;   \/* cur. input pos. num of edge (NO_VAL none) *\/$/;"	v
__cur_units	./cvc.c	/^word32 __cur_units;    \/* current units (0 (1s) - 15 (1ft) *\/ $/;"	v
__cur_unochange	./cvc.c	/^int32 __cur_unochange; \/* T => cur line has '-' no change output *\/$/;"	v
__cur_uoval	./cvc.c	/^word32 __cur_uoval;    \/* current udp line output value *\/$/;"	v
__cur_upstate	./cvc.c	/^word32 __cur_upstate;  \/* current last input (state) for wide *\/$/;"	v
__cur_utab	./cvc.c	/^word32 *__cur_utab;    \/* current udp table *\/$/;"	v
__cur_utabsel	./cvc.c	/^int32 __cur_utabsel;   \/* current edge 1st char - 2nd in state line *\/$/;"	v
__cur_utlp	./cvc.c	/^struct utline_t *__cur_utlp; \/* current line info struct *\/$/;"	v	typeref:struct:utline_t
__cur_valnum	./v_bbgen.c	/^int32 __cur_valnum; \/* current highest used value number *\/$/;"	v
__cur_vpi_inst	./cvc.c	/^struct h_t *__cur_vpi_inst;$/;"	v	typeref:struct:h_t
__cur_vpi_obj	./cvc.c	/^struct hrec_t *__cur_vpi_obj;$/;"	v	typeref:struct:hrec_t
__current_xprop	./cvc.c	/^struct xprop_t *__current_xprop;   \/* last xprop struct *\/$/;"	v	typeref:struct:xprop_t
__cv_msg	./v_ms.c	/^extern void __cv_msg(char *s, ...)$/;"	f	signature:(char *s, ...)
__cvc_acc_evchg_gate_outwire	./v_sim.c	/^extern void __cvc_acc_evchg_gate_outwire(void)$/;"	f	signature:(void)
__cvc_change_gate_outwire	./v_sim.c	/^extern void __cvc_change_gate_outwire(void)$/;"	f	signature:(void)
__cvc_driver	./v_bbgen.c	/^extern int32 __cvc_driver(void)$/;"	f	signature:(void)
__cvc_eval_update_1w_tranchan	./v_trch.c	/^extern void __cvc_eval_update_1w_tranchan(struct vtx_t *vtxp)$/;"	f	signature:(struct vtx_t *vtxp)
__cvc_immed_eval_trifchan	./v_trch.c	/^extern void __cvc_immed_eval_trifchan(struct gate_t *gp)$/;"	f	signature:(struct gate_t *gp)
__cvc_is_const_expr	./v_bbgen.c	/^extern int32 __cvc_is_const_expr(struct expr_t *ndp) $/;"	f	signature:(struct expr_t *ndp)
__cvc_nd_old_gate_store	./cvc.c	/^int32 __cvc_nd_old_gate_store; \/* nd to store gate_out_ofs value *\/$/;"	v
__cvc_slotend_action	./v_bbgen.c	/^word32 __cvc_slotend_action; \/* switches for possbile slot end action *\/$/;"	v
__cvc_use_large_model	./cvc.c	/^int32 __cvc_use_large_model;   \/* large model needs to be used *\/$/;"	v
__cvclib_file_name	./v_bbgen.c	/^char *__cvclib_file_name;  \/* cvclib file name *\/$/;"	v
__cvclib_size	./cvclib_str.s	/^__cvclib_size:$/;"	l
__cvclib_str	./cvclib_str.s	/^__cvclib_str:$/;"	l
__cvsim2_msg	./v_ms.c	/^extern void __cvsim2_msg(char *s, ...)$/;"	f	signature:(char *s, ...)
__cvsim3_msg	./v_ms.c	/^extern void __cvsim3_msg(char *s, ...)$/;"	f	signature:(char *s, ...)
__cvsim_msg	./v_ms.c	/^extern void __cvsim_msg(char *s, ...)$/;"	f	signature:(char *s, ...)
__cvt_lngbool	./v_ex2.c	/^extern int32 __cvt_lngbool(word32 *ap, word32 *bp, int32 wlen)$/;"	f	signature:(word32 *ap, word32 *bp, int32 wlen)
__cxf_fixup_lstofsts_gotos	./v_prp2.c	/^extern void __cxf_fixup_lstofsts_gotos(struct st_t *hdrstp, int32 has_endgoto)$/;"	f	signature:(struct st_t *hdrstp, int32 has_endgoto)
__dagmaxdist	./cvc.c	/^int32 __dagmaxdist;    \/* max. nested mod. inst. level *\/$/;"	v
__dbg_brk_cond	./v_dbg2.c	/^extern void __dbg_brk_cond(void)$/;"	f	signature:(void)
__dbg_brk_ignore	./v_dbg2.c	/^extern void __dbg_brk_ignore(void)$/;"	f	signature:(void)
__dbg_chk_modhdr_list_linking	./v_fx.c	/^extern void __dbg_chk_modhdr_list_linking(struct mod_t *mhdrp)$/;"	f	signature:(struct mod_t *mhdrp)
__dbg_dflt_base	./cvc.c	/^int32 __dbg_dflt_base; \/* :print debugger default base *\/ $/;"	v
__dbg_dmp_1mod_defparams	./v_genfx.c	/^extern void __dbg_dmp_1mod_defparams(struct mod_t *mdp, int32 itree_built)$/;"	f	signature:(struct mod_t *mdp, int32 itree_built)
__dbg_dmp_avl_sytab	./v_genfx.c	/^extern void __dbg_dmp_avl_sytab(struct symtab_t *sytp)$/;"	f	signature:(struct symtab_t *sytp)
__dbg_dmp_bad_tgl_ofs	./v_cvr.c	/^extern void __dbg_dmp_bad_tgl_ofs(struct mod_t *mdp, t_midat *idp,$/;"	f	signature:(struct mod_t *mdp, t_midat *idp, struct net_t *np, struct net_toggle_t *ntgp, char *locmsg)
__dbg_dmp_gia_rec	./v_genfx.c	/^extern void __dbg_dmp_gia_rec(struct gia_aux_t *giap, int32 is_gate)$/;"	f	signature:(struct gia_aux_t *giap, int32 is_gate)
__dbg_dmp_gref	./v_genfx.c	/^extern void __dbg_dmp_gref(struct gref_t *grp)$/;"	f	signature:(struct gref_t *grp)
__dbg_dmp_mod_gia_recs	./v_genfx.c	/^static void __dbg_dmp_mod_gia_recs(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
__dbg_dmpall_nets	./v_fx2.c	/^extern void __dbg_dmpall_nets(void)$/;"	f	signature:(void)
__dbg_msg	./v_ms.c	/^extern void __dbg_msg(char *s, ...)$/;"	f	signature:(char *s, ...)
__dbg_stop_before	./cvc.c	/^int32 __dbg_stop_before; \/* if >100, T (-100) stop before sim *\/ $/;"	v
__dbg_undisplay	./v_dbg2.c	/^extern void __dbg_undisplay(void)$/;"	f	signature:(void)
__dbl_toticks_tab	./v_del.c	/^double const __dbl_toticks_tab[] = { 1.0, 1.0e1, 1.0e2, 1.0e3, 1.0e4,$/;"	v
__dc_id_ndx	./cvc.c	/^int32 __dc_id_ndx;    \/* design wide delay control index *\/$/;"	v
__dce_needs_prevval	./v_prp2.c	/^extern int32 __dce_needs_prevval(struct dcevnt_t *dcep, struct mod_t *mdp)$/;"	f	signature:(struct dcevnt_t *dcep, struct mod_t *mdp)
__dce_no	./v_bbgen.c	/^int32 __dce_no;        \/* counter for creating dce numbers *\/$/;"	v
__dce_turn_chg_store_on	./v_prp2.c	/^extern void __dce_turn_chg_store_on(struct mod_t *in_mdp,$/;"	f	signature:(struct mod_t *in_mdp, struct dcevnt_t *dcep, int32 all_insts)
__dcelst_off	./v_ex2.c	/^extern void __dcelst_off(struct dceauxlst_t *dcehdr)$/;"	f	signature:(struct dceauxlst_t *dcehdr)
__dcelst_on	./v_ex2.c	/^extern void __dcelst_on(struct dceauxlst_t *dcehdr)$/;"	f	signature:(struct dceauxlst_t *dcehdr)
__dctrl_depth	./cvc.c	/^int32 __dctrl_depth;   \/* design delay ctrl depth - for marking *\/$/;"	v
__dctrl_seq_no	./cvc.c	/^int32 __dctrl_seq_no;  \/* counter for merged dlctrl *\/$/;"	v
__debug_flg	./cvc.c	/^int32 __debug_flg;     \/* T => turn on debugging output *\/$/;"	v
__decl_sym	./v_ms.c	/^extern struct sy_t *__decl_sym(char *nam, struct symtab_t *sytp)$/;"	f	signature:(char *nam, struct symtab_t *sytp)
__declcnv_tostr	./v_cnv.c	/^extern void __declcnv_tostr(char *s, word32 *wp, int32 trimblen, int32 widnumlen)$/;"	f	signature:(char *s, word32 *wp, int32 trimblen, int32 widnumlen)
__decompile	./cvc.c	/^int32 __decompile;     \/* T => decompile and print Verilog source *\/$/;"	v
__decomposed_tn_nums	./v_bbgen.c	/^int32 **__decomposed_tn_nums; \/* decompose wide tmps into word tmps wrk area *\/$/;"	v
__defparam_splits	./cvc.c	/^int32 __defparam_splits; \/* T => at least one split from def params *\/$/;"	v
__delay_callback	./v_vpi.c	/^extern void __delay_callback(void)$/;"	f	signature:(void)
__delay_callback_enterp	./cvc.c	/^void *__delay_callback_enterp;  \/* delay call back event *\/$/;"	v
__des_has_timescales	./cvc.c	/^int32 __des_has_timescales;\/* T => design has at least one timescale *\/$/;"	v
__des_timeprec	./cvc.c	/^word32 __des_timeprec; \/* assume -, 0-15 design sim. tick prec. *\/$/;"	v
__design_gi_arrays	./cvc.c	/^int32 __design_gi_arrays;  \/* T => design has arrays of g\/i *\/ $/;"	v
__design_gia_pndparams	./cvc.c	/^int32 __design_gia_pndparams;\/* T => at least one gia range pnd params *\/$/;"	v
__design_has_auto_task	./cvc.c	/^int32 __design_has_auto_task;  \/* T => design has auto task\/func *\/$/;"	v
__design_has_cells	./cvc.c	/^int32 __design_has_cells;\/* T => cells somewhere in design *\/$/;"	v
__design_has_ld_pli_libs	./cvc.c	/^int32 __design_has_ld_pli_libs;  \/* design has +pli\/+vpi on cmmnd ln*\/$/;"	v
__design_has_nb_del_events	./v_bbgen.c	/^int32 __design_has_nb_del_events; \/* design has nb with delay events *\/$/;"	v
__design_has_nb_events	./v_bbgen.c	/^int32 __design_has_nb_events; \/* design has nb events *\/$/;"	v
__design_no_strens	./cvc.c	/^int32 __design_no_strens;\/* T => no strengths used in design *\/$/;"	v
__dflt_ntyp	./cvc.c	/^int32 __dflt_ntyp;     \/* Verilog wire type for normal nets *\/$/;"	v
__dflt_ntyp_is_none	./cvc.c	/^int32 __dflt_ntyp_is_none;  \/* '`defaul_nettype none' - no implicit *\/$/;"	v
__dfp_gitems_hd	./cvc.c	/^struct genitem_t *__dfp_gitems_hd; \/* lst of dfp gen items (sep list) *\/$/;"	v	typeref:struct:genitem_t
__dfp_gitems_tail	./cvc.c	/^struct genitem_t *__dfp_gitems_tail; $/;"	v	typeref:struct:genitem_t
__dfp_grwrknum	./cvc.c	/^int32 __dfp_grwrknum;           \/* current num of glbs in table *\/ $/;"	v
__dfp_grwrktab	./cvc.c	/^struct gref_t *__dfp_grwrktab;  \/* wrk tab for building mod dfp glbs *\/$/;"	v	typeref:struct:gref_t
__dfp_grwrktabsiz	./cvc.c	/^int32 __dfp_grwrktabsiz;        \/* its size *\/$/;"	v
__dfphdr	./cvc.c	/^struct dfparam_t *__dfphdr; \/* design wide defparam list header *\/$/;"	v	typeref:struct:dfparam_t
__dig_main	./cvc.c	/^extern int32 __dig_main(int32 argc, char **argv)$/;"	f	signature:(int32 argc, char **argv)
__disp_1fmt_to_exprline	./v_cnv.c	/^extern struct expr_t *__disp_1fmt_to_exprline(char *chp, struct expr_t *axp)$/;"	f	signature:(char *chp, struct expr_t *axp)
__disp_itree_idp_path	./v_cnv.c	/^extern void __disp_itree_idp_path(t_midat *idp, struct task_t *tskp)$/;"	f	signature:(t_midat *idp, struct task_t *tskp)
__disp_uses_scope	./cvc.c	/^int32 __disp_uses_scope;\/* T => $display fam of functions uses %m *\/$/;"	v
__disp_var	./v_cnv.c	/^extern void __disp_var(struct net_t *np, int32 i1, int32 i2, int32 base,$/;"	f	signature:(struct net_t *np, int32 i1, int32 i2, int32 base, char vsign_ovride)
__dispxhdr	./cvc.c	/^struct dispx_t *__dispxhdr;\/* header of display list *\/ $/;"	v	typeref:struct:dispx_t
__div_svals	./v_aslib.c	/^const word32 __div_svals[16] = {3,3,3,3,0,1,3,3,3,3,3,3,3,3,3,3};$/;"	v
__div_svals	./v_aslib.s	/^__div_svals:$/;"	l
__dltevfreelst	./cvc.c	/^struct dltevlst_t *__dltevfreelst; \/* pend double event free list *\/$/;"	v	typeref:struct:dltevlst_t
__dmp1_dcelstel	./v_cnv.c	/^extern void __dmp1_dcelstel(struct mod_t *mdp, struct dcevnt_t *dcep)$/;"	f	signature:(struct mod_t *mdp, struct dcevnt_t *dcep)
__dmp1_nplstel	./v_cnv.c	/^extern void __dmp1_nplstel(struct mod_t *mdp, struct net_t *np,$/;"	f	signature:(struct mod_t *mdp, struct net_t *np, struct net_pin_t *npp)
__dmp_1defparam	./v_cnv.c	/^extern void __dmp_1defparam(FILE *f, struct dfparam_t *dfpp,$/;"	f	signature:(FILE *f, struct dfparam_t *dfpp, int32 itree_built)
__dmp_1minst	./v_genfx.c	/^extern void __dmp_1minst(struct inst_t *ip)$/;"	f	signature:(struct inst_t *ip)
__dmp_all_param_exprs	./v_genfx.c	/^extern void __dmp_all_param_exprs(void)$/;"	f	signature:(void)
__dmp_all_thrds	./v_dbg2.c	/^extern void __dmp_all_thrds()$/;"	f
__dmp_arr_all	./v_cnv.c	/^extern void __dmp_arr_all(struct net_t *np, int32 ifr, int32 ito)$/;"	f	signature:(struct net_t *np, int32 ifr, int32 ito)
__dmp_bblk_backelst	./v_cvcms.c	/^extern void __dmp_bblk_backelst(struct bblk_t *bbp, struct flowg_t *fgp,$/;"	f	signature:(struct bblk_t *bbp, struct flowg_t *fgp, struct mod_t *mdp)
__dmp_bidchan	./v_trch.c	/^extern void __dmp_bidchan(struct chanrec_t *chanp, int32 sortid)$/;"	f	signature:(struct chanrec_t *chanp, int32 sortid)
__dmp_bidnet_drvs	./v_trch.c	/^extern void __dmp_bidnet_drvs(struct net_t *np, struct mod_t *mdp)$/;"	f	signature:(struct net_t *np, struct mod_t *mdp)
__dmp_dcemsg	./v_ex.c	/^extern void __dmp_dcemsg(struct delctrl_t *dctp, char *dcemsg)$/;"	f	signature:(struct delctrl_t *dctp, char *dcemsg)
__dmp_dctrl	./v_cnv.c	/^extern void __dmp_dctrl(FILE *f, struct delctrl_t *dctp)$/;"	f	signature:(FILE *f, struct delctrl_t *dctp)
__dmp_dcxpr	./v_cnv.c	/^extern void __dmp_dcxpr(FILE *f, struct delctrl_t *dctp)$/;"	f	signature:(FILE *f, struct delctrl_t *dctp)
__dmp_dsgn_minst	./v_genfx.c	/^extern void __dmp_dsgn_minst(char *hdr_s)$/;"	f	signature:(char *hdr_s)
__dmp_flowg_insns	./v_cvcms.c	/^extern void __dmp_flowg_insns(struct flowg_t *fgp, struct mod_t *mdp)$/;"	f	signature:(struct flowg_t *fgp, struct mod_t *mdp)
__dmp_forhdr	./v_cnv.c	/^extern void __dmp_forhdr(FILE *f, struct for_t *frs)$/;"	f	signature:(FILE *f, struct for_t *frs)
__dmp_idp_info	./v_ex3.c	/^extern void __dmp_idp_info(t_midat *idp, char *hdrs)$/;"	f	signature:(t_midat *idp, char *hdrs)
__dmp_initalw_thrd_tree	./v_dbg2.c	/^extern void __dmp_initalw_thrd_tree(void)$/;"	f	signature:(void)
__dmp_itree	./v_genfx.c	/^extern void __dmp_itree(struct itree_t *itp) $/;"	f	signature:(struct itree_t *itp)
__dmp_mda_arr_all	./v_cnv.c	/^extern void __dmp_mda_arr_all(struct net_t *np, int32 ifr, int32 ito,$/;"	f	signature:(struct net_t *np, int32 ifr, int32 ito, int32 base)
__dmp_mod	./v_cnv.c	/^extern void __dmp_mod(FILE *f, struct mod_t *mdp, int32 also_dmp_gen)$/;"	f	signature:(FILE *f, struct mod_t *mdp, int32 also_dmp_gen)
__dmp_mod_insns	./v_cvcms.c	/^extern void __dmp_mod_insns(struct mod_t *mdp)$/;"	f	signature:(struct mod_t *mdp)
__dmp_mod_tmp_table	./v_cvcms.c	/^extern void __dmp_mod_tmp_table(struct mod_t *mdp)$/;"	f	signature:(struct mod_t *mdp)
__dmp_modhdr_list	./v_genfx.c	/^extern void __dmp_modhdr_list(struct mod_t *mhdrp, char *label)$/;"	f	signature:(struct mod_t *mhdrp, char *label)
__dmp_modtrans	./v_trch.c	/^extern void __dmp_modtrans(struct mod_t *mdp)$/;"	f	signature:(struct mod_t *mdp)
__dmp_msttab	./v_prp2.c	/^extern void __dmp_msttab(struct mod_t *mdp, int32 snum)$/;"	f	signature:(struct mod_t *mdp, int32 snum)
__dmp_nbproc_assgn	./v_cnv.c	/^extern void __dmp_nbproc_assgn(FILE *f, struct st_t *stp,$/;"	f	signature:(FILE *f, struct st_t *stp, struct delctrl_t *dctp)
__dmp_proc_assgn	./v_cnv.c	/^extern void __dmp_proc_assgn(FILE *f, struct st_t *stp, struct delctrl_t *dctp,$/;"	f	signature:(FILE *f, struct st_t *stp, struct delctrl_t *dctp, int32 force_for, int32 print_semi_colon)
__dmp_stmt	./v_cnv.c	/^extern void __dmp_stmt(FILE *f, struct st_t *stp, int32 nd_nl)$/;"	f	signature:(FILE *f, struct st_t *stp, int32 nd_nl)
__dmp_thrd_info	./v_dbg2.c	/^extern void __dmp_thrd_info(struct thread_t *thp)$/;"	f	signature:(struct thread_t *thp)
__dmp_thrd_tree	./v_dbg2.c	/^extern void __dmp_thrd_tree(struct thread_t *thp)$/;"	f	signature:(struct thread_t *thp)
__dmp_trchan	./v_trch.c	/^extern void __dmp_trchan(struct vtx_t *vtxp)$/;"	f	signature:(struct vtx_t *vtxp)
__dmp_tskcall	./v_cnv.c	/^extern void __dmp_tskcall(FILE *f, struct st_t *stp)$/;"	f	signature:(FILE *f, struct st_t *stp)
__dmp_tskthd	./v_dbg2.c	/^extern void __dmp_tskthd(struct task_t *tskp, struct mod_t *mdp)$/;"	f	signature:(struct task_t *tskp, struct mod_t *mdp)
__dmp_tskthrds	./v_dbg2.c	/^extern void __dmp_tskthrds(void)$/;"	f	signature:(void)
__dmp_udp	./v_src3.c	/^extern void __dmp_udp(FILE *f, struct udp_t *udpp)$/;"	f	signature:(FILE *f, struct udp_t *udpp)
__dmpmod_nplst	./v_cnv.c	/^extern void __dmpmod_nplst(struct mod_t *mdp, int32 dces_only)$/;"	f	signature:(struct mod_t *mdp, int32 dces_only)
__dmpvars_all	./cvc.c	/^int32 __dmpvars_all;   \/* T => dumpvars all variables *\/$/;"	v
__do_dbg_brkpt	./v_dbg2.c	/^extern void __do_dbg_brkpt(int32 is_tmp)$/;"	f	signature:(int32 is_tmp)
__do_dbg_delbrkdis	./v_dbg2.c	/^extern void __do_dbg_delbrkdis(void)$/;"	f	signature:(void)
__do_dbg_dis_enable	./v_dbg2.c	/^extern void __do_dbg_dis_enable(int32 do_enable)$/;"	f	signature:(int32 do_enable)
__do_dbg_emptyhistory	./v_dbg2.c	/^extern void __do_dbg_emptyhistory(void)$/;"	f	signature:(void)
__do_dbg_history	./v_dbg2.c	/^extern void __do_dbg_history(void)$/;"	f	signature:(void)
__do_dbg_ibrkpt	./v_dbg2.c	/^extern void __do_dbg_ibrkpt(int32 is_tmp)$/;"	f	signature:(int32 is_tmp)
__do_dbg_info	./v_dbg2.c	/^extern void __do_dbg_info(void)$/;"	f	signature:(void)
__do_dbg_list	./v_dbg2.c	/^extern void __do_dbg_list(void)$/;"	f	signature:(void)
__do_dbg_nextb	./v_dbg2.c	/^extern int32 __do_dbg_nextb(void)$/;"	f	signature:(void)
__do_dbg_scope	./v_dbg2.c	/^extern void __do_dbg_scope(void)$/;"	f	signature:(void)
__do_dbg_set	./v_dbg2.c	/^extern void __do_dbg_set(void)$/;"	f	signature:(void)
__do_decompile	./cvc.c	/^extern void __do_decompile(void)$/;"	f	signature:(void)
__do_disp	./v_cnv.c	/^extern void __do_disp(struct expr_t *axp, int32 dflt_fmt)$/;"	f	signature:(struct expr_t *axp, int32 dflt_fmt)
__do_dmpports_baseline	./v_ex4.c	/^extern void __do_dmpports_baseline(struct dp_fildesc_t *fdescp, char *keyws)$/;"	f	signature:(struct dp_fildesc_t *fdescp, char *keyws)
__do_dmpports_chg	./v_ex4.c	/^extern void __do_dmpports_chg(struct dp_fildesc_t *fdescp)$/;"	f	signature:(struct dp_fildesc_t *fdescp)
__do_dmpvars_baseline	./v_ex4.c	/^extern void __do_dmpvars_baseline(char *keyws)$/;"	f	signature:(char *keyws)
__do_dmpvars_chg	./v_ex4.c	/^extern void __do_dmpvars_chg()$/;"	f
__do_iact_disable	./v_dbg.c	/^extern void __do_iact_disable(struct hctrl_t *hcp, int32 lv_ctrl)$/;"	f	signature:(struct hctrl_t *hcp, int32 lv_ctrl)
__do_include	./v_ms.c	/^extern void __do_include(void)$/;"	f	signature:(void)
__do_interactive_loop	./v_dbg.c	/^extern void __do_interactive_loop(void)$/;"	f	signature:(void)
__do_macdefine	./v_ms.c	/^extern void __do_macdefine(char *dnam, char *dval)$/;"	f	signature:(char *dnam, char *dval)
__do_mdsplit	./v_fx.c	/^extern void __do_mdsplit(struct mod_t *smdp)$/;"	f	signature:(struct mod_t *smdp)
__do_not_fold_mda	./v_fx3.c	/^static int32 __do_not_fold_mda = FALSE;$/;"	v	file:
__do_qc_store	./v_ex3.c	/^extern void __do_qc_store(struct net_t *np, struct qcval_t *qcvalp,$/;"	f	signature:(struct net_t *np, struct qcval_t *qcvalp, int32 is_reg)
__do_safe_coal	./v_regasn.c	/^static int32 __do_safe_coal;$/;"	v	file:
__do_scope_list	./v_dbg2.c	/^extern void __do_scope_list(void)$/;"	f	signature:(void)
__do_severity_disp	./v_cnv.c	/^extern void __do_severity_disp(struct expr_t *axp)$/;"	f	signature:(struct expr_t *axp)
__do_sign_widecmp	./v_ex2.c	/^extern int32 __do_sign_widecmp(int32 *isx, word32 *op1ap, word32 *op1bp,$/;"	f	signature:(int32 *isx, word32 *op1ap, word32 *op1bp, word32 *op2ap, word32 *op2bp, int32 opwid)
__do_vpi_reset	./v_dbg.c	/^extern void __do_vpi_reset(int32 stop_val, int32 reset_val, int32 diag_level)$/;"	f	signature:(int32 stop_val, int32 reset_val, int32 diag_level)
__do_vpi_stop	./v_dbg.c	/^extern int32 __do_vpi_stop(int32 diag_level)$/;"	f	signature:(int32 diag_level)
__do_widecmp	./v_ex2.c	/^extern int32 __do_widecmp(int32 *isx, word32 *op1ap, word32 *op1bp,$/;"	f	signature:(int32 *isx, word32 *op1ap, word32 *op1bp, word32 *op2ap, word32 *op2bp, int32 opwid)
__do_xmr_resolve	./v_genfx.c	/^extern int32 __do_xmr_resolve(struct gref_t *grp)$/;"	f	signature:(struct gref_t *grp)
__do_xprop_xedge_vectors	./cvc.c	/^int32 __do_xprop_xedge_vectors;\/* T => need to calc xprop vectors *\/$/;"	v
__do_xzwidecmp	./v_ex2.c	/^extern int32 __do_xzwidecmp(word32 *op1ap, word32 *op1bp, word32 *op2ap,$/;"	f	signature:(word32 *op1ap, word32 *op1bp, word32 *op2ap, word32 *op2bp, int32 opbits)
__done_sim	./cvc.c	/^extern void __done_sim(void)$/;"	f	signature:(void)
__dp_calltime	./cvc.c	/^word64 __dp_calltime;  \/* time dump ports first (and only) called *\/$/;"	v
__dp_fildesc_nxti	./cvc.c	/^int32 __dp_fildesc_nxti; \/* next free open file slot *\/$/;"	v
__dp_fildesc_tab	./cvc.c	/^struct dp_fildesc_t *__dp_fildesc_tab; \/* table of dumpports open files *\/$/;"	v	typeref:struct:dp_fildesc_t
__dp_seen	./cvc.c	/^int32 __dp_seen;       \/* glb flag to insure dp all at same tick *\/$/;"	v
__dpi_endp	./cvc.c	/^struct dpi_t *__dpi_endp;     \/* DPI end structs *\/$/;"	v	typeref:struct:dpi_t
__dpi_file_writing	./cvc.c	/^int32 __dpi_file_writing; \/* T => wrap puts with only fp wr *\/$/;"	v
__dpi_hdrp	./cvc.c	/^struct dpi_t *__dpi_hdrp;     \/* DPI hdr structs *\/$/;"	v	typeref:struct:dpi_t
__dpi_imp_interp_routp	./v_dpi.c	/^void (*__dpi_imp_interp_routp)(int, union adpi_u *);$/;"	v
__dpi_interp_wrapper_fnam	./cvc.c	/^char *__dpi_interp_wrapper_fnam; \/* file name of interp wrapper *\/$/;"	v
__dpi_verbose	./cvc.c	/^int32 __dpi_verbose;  \/* T => trace dpi -sv_lib finding checking *\/$/;"	v
__drvn_const_as_tgled	./cvc.c	/^int32 __drvn_const_as_tgled;       \/* T => driven const made tgled *\/$/;"	v
__drvn_const_rpt_concise	./cvc.c	/^int32 __drvn_const_rpt_concise;    \/* T => output rpt drvn const bits *\/$/;"	v
__dsgn_has_generate	./v_genfx.c	/^extern int32 __dsgn_has_generate(void)$/;"	f	signature:(void)
__dsgn_initp	./cvc.c	/^void (*__dsgn_initp)(void) = NULL;$/;"	v
__dsgn_mod_ndx	./cvc.c	/^struct mod_t **__dsgn_mod_ndx; \/* dsgn per mod ndx number index array *\/$/;"	v	typeref:struct:mod_t
__dsgn_num_mods	./cvc.c	/^int32 __dsgn_num_mods; \/* num of module in modhdr list for ndxing *\/$/;"	v
__dsgn_num_udps	./cvc.c	/^int32 __dsgn_num_udps; \/* num of upds in udp list *\/ $/;"	v
__dsgn_udp_ndx	./cvc.c	/^struct udp_t **__dsgn_udp_ndx; \/* dsgn all udp tab index array *\/$/;"	v	typeref:struct:udp_t
__dsgn_uses_generate	./cvc.c	/^int32 __dsgn_uses_generate; \/* T => some use of generate in design *\/$/;"	v
__dsnmemp	./cvc.c	/^long *__dsnmemp;       \/* ptr for load lib option size validation *\/$/;"	v
__dum_fg_ent_bbp	./v_bbgen.c	/^struct bblk_t *__dum_fg_ent_bbp;\/* dummy bblk for fg enter back edges *\/$/;"	v	typeref:struct:bblk_t
__dump_array_cells	./cvc.c	/^int32 __dump_array_cells; \/* T => dump array values per element *\/$/;"	v
__dump_arrays	./cvc.c	/^int32 __dump_arrays;   \/* T => dump array values (vcd,fst,fsdb) *\/$/;"	v
__dump_buffer	./cvc.c	/^struct dmp_buf_t *__dump_buffer; \/* dump buffer *\/$/;"	v	typeref:struct:dmp_buf_t
__dump_buffer_size	./cvc.c	/^int32 __dump_buffer_size;        \/* size of dump buffer *\/$/;"	v
__dump_flowg	./cvc.c	/^int32 __dump_flowg;    \/* dump flow graph for debugging *\/$/;"	v
__dump_mutex	./cvc.c	/^pthread_mutex_t __dump_mutex;    \/* dump mutex *\/$/;"	v
__dump_next_ndx	./cvc.c	/^int32 __dump_next_ndx;           \/* next index *\/$/;"	v
__dump_thread	./cvc.c	/^pthread_t __dump_thread;      \/* dumping thread *\/$/;"	v
__dup_concat	./v_fx3.c	/^extern struct expr_t *__dup_concat(int32 repcnt, struct expr_t *catndp)$/;"	f	signature:(int32 repcnt, struct expr_t *catndp)
__dup_xp	./v_xprop.c	/^static struct expr_t *__dup_xp;$/;"	v	typeref:struct:expr_t	file:
__dv_allform_insrc	./cvc.c	/^int32 __dv_allform_insrc;\/* T dumpvars all form in source *\/$/;"	v
__dv_buffer	./cvc.c	/^char *__dv_buffer;     \/* buffer to speed up dumpvars output *\/$/;"	v
__dv_calltime	./cvc.c	/^word64 __dv_calltime;  \/* time dump var. first (and only) called *\/$/;"	v
__dv_chgnethdr	./cvc.c	/^struct dvchgnets_t *__dv_chgnethdr;  \/* curr. time var chg list hdr *\/$/;"	v	typeref:struct:dvchgnets_t
__dv_dumplimit_size	./cvc.c	/^int32 __dv_dumplimit_size; \/* user set limit of dv file size (0 none) *\/$/;"	v
__dv_end	./cvc.c	/^struct mdvmast_t *__dv_end; \/* end of dumpvar rec. list *\/$/;"	v	typeref:struct:mdvmast_t
__dv_fd	./cvc.c	/^int32 __dv_fd;         \/* file number of dmpvars fd *\/$/;"	v
__dv_file_size	./cvc.c	/^int32 __dv_file_size;  \/* current size of dumpvars file *\/$/;"	v
__dv_fnam	./cvc.c	/^char *__dv_fnam;       \/* name of dumpvars output file *\/$/;"	v
__dv_func	./cvc.c	/^int32 __dv_func;       \/* global set with type of dumpvar dumping *\/$/;"	v
__dv_hdr	./cvc.c	/^struct mdvmast_t *__dv_hdr; \/* hdr of mast dumpvar rec. list *\/$/;"	v	typeref:struct:mdvmast_t
__dv_isall_form	./cvc.c	/^int32 __dv_isall_form; \/* T doing all of design dumpvar setup *\/$/;"	v
__dv_nxti	./cvc.c	/^int32 __dv_nxti;       \/* next free location *\/$/;"	v
__dv_outlinpos	./cvc.c	/^int32 __dv_outlinpos;  \/* line postion in dump vars file *\/ $/;"	v
__dv_seen	./cvc.c	/^int32 __dv_seen;       \/* dumpvars seen but not yet setup *\/$/;"	v
__dv_state	./cvc.c	/^int32 __dv_state;      \/* processing state of dumpvars *\/$/;"	v
__dv_time_emitted	./cvc.c	/^int32 __dv_time_emitted; \/* flag to stop repeated same #[time] *\/$/;"	v
__dvars_array_ndx	./v_ex4.c	/^static int32 __dvars_array_ndx = -1; \/* the local dumpvars array index *\/$/;"	v	file:
__ebp	./v_cvcrt.c	/^word32 *__ebp;         \/* dummy asm stack base for gdb debugging *\/$/;"	v
__echo_iactcmds_tolog	./cvc.c	/^int32 __echo_iactcmds_tolog; \/* T => echo interactive cmds to log file *\/$/;"	v
__edge_freelst	./cvc.c	/^struct edge_t *__edge_freelst; \/* free list for re-using edges *\/$/;"	v	typeref:struct:edge_t
__edge_freelst	./v.h	/^struct edge_t *__edge_freelst; \/* free list for re-using edges *\/$/;"	v	typeref:struct:edge_t
__eligible_xprop_stofsts	./v_xprop.c	/^extern void __eligible_xprop_stofsts(struct st_t *hdstp, int32 *not_eligible)$/;"	f	signature:(struct st_t *hdstp, int32 *not_eligible)
__em_suppr	./v_ms.c	/^extern int32 __em_suppr(int32 id)$/;"	f	signature:(int32 id)
__emit_1arg_transcendental	./v_bbgen3.c	/^extern int32 __emit_1arg_transcendental(int32 dbl_ti, int32 asl_typ)$/;"	f	signature:(int32 dbl_ti, int32 asl_typ)
__emit_1mod_x86_asm	./v_asmlnk.c	/^extern void __emit_1mod_x86_asm(struct mod_t *mdp)$/;"	f	signature:(struct mod_t *mdp)
__emit_1showvar	./v_ex4.c	/^extern void __emit_1showvar(struct net_t *np, struct gref_t *grp)$/;"	f	signature:(struct net_t *np, struct gref_t *grp)
__emit_4state_vec_to_2state_wide	./v_bbgen3.c	/^extern void __emit_4state_vec_to_2state_wide(int32 new_ti, int32 rhs_ti, $/;"	f	signature:(int32 new_ti, int32 rhs_ti, int32 wlen)
__emit_adc	./v_bbgen3.c	/^extern int32 __emit_adc(int32 op1, int32 op2)$/;"	f	signature:(int32 op1, int32 op2)
__emit_add	./v_bbgen3.c	/^extern int32 __emit_add(int32 blen, int32 op1, int32 op2)$/;"	f	signature:(int32 blen, int32 op1, int32 op2)
__emit_add_dmpportlst	./v_bbgen3.c	/^extern void __emit_add_dmpportlst(int32 np_ti)$/;"	f	signature:(int32 np_ti)
__emit_add_dmpportlst_mdprt	./v_bbgen3.c	/^extern void __emit_add_dmpportlst_mdprt(int32 np_ti)$/;"	f	signature:(int32 np_ti)
__emit_add_dmpvlst	./v_bbgen3.c	/^extern void __emit_add_dmpvlst(int32 np_ti)$/;"	f	signature:(int32 np_ti)
__emit_add_dmpvlst_array	./v_bbgen3.c	/^extern void __emit_add_dmpvlst_array(int32 np_ti, int32 biti_ti)$/;"	f	signature:(int32 np_ti, int32 biti_ti)
__emit_add_dmpvlst_mdprt	./v_bbgen3.c	/^extern void __emit_add_dmpvlst_mdprt(int32 np_ti)$/;"	f	signature:(int32 np_ti)
__emit_add_real	./v_bbgen3.c	/^extern int32 __emit_add_real(int32 op1_ti, int32 op2_ti)$/;"	f	signature:(int32 op1_ti, int32 op2_ti)
__emit_add_static_nchglst_sel	./v_bbgen3.c	/^extern void __emit_add_static_nchglst_sel(int32 dat_ti, int32 i1_ti, $/;"	f	signature:(int32 dat_ti, int32 i1_ti, int32 i2_ti)
__emit_add_togglelst_el	./v_bbgen3.c	/^extern void __emit_add_togglelst_el(int32 np_ti)$/;"	f	signature:(int32 np_ti)
__emit_add_togglelst_el_port	./v_bbgen3.c	/^extern void __emit_add_togglelst_el_port(int32 np_ti)$/;"	f	signature:(int32 np_ti)
__emit_adjust_trireg	./v_bbgen3.c	/^extern void __emit_adjust_trireg(int32 sbp_ti, int32 lhs_sbpti, int32 blen, $/;"	f	signature:(int32 sbp_ti, int32 lhs_sbpti, int32 blen, int32 stval)
__emit_arm_ectrl	./v_bbgen3.c	/^extern void __emit_arm_ectrl(int32 tevp_ti, int32 schd_tev_ofs)$/;"	f	signature:(int32 tevp_ti, int32 schd_tev_ofs)
__emit_arm_nb_ectrl	./v_bbgen3.c	/^extern int32 __emit_arm_nb_ectrl(int32 stp_ti, int32 tevp_ti) $/;"	f	signature:(int32 stp_ti, int32 tevp_ti)
__emit_arm_nb_varndx_ectrl	./v_bbgen3.c	/^extern int32 __emit_arm_nb_varndx_ectrl(int32 stp_ti, int32 tevp_ti, $/;"	f	signature:(int32 stp_ti, int32 tevp_ti, int32 bi_ti)
__emit_assign_qcaf	./v_bbgen3.c	/^extern void __emit_assign_qcaf(int32 dcep_ti, int32 nchg_ti, $/;"	f	signature:(int32 dcep_ti, int32 nchg_ti, int32 nchg_idp_ofs_ti)
__emit_assign_qcaf_concat	./v_bbgen3.c	/^extern void __emit_assign_qcaf_concat(int32 stp_ti)$/;"	f	signature:(int32 stp_ti)
__emit_assign_qcaf_regform	./v_bbgen3.c	/^extern void __emit_assign_qcaf_regform(int32 dcep_ti, int32 nchg_ti, $/;"	f	signature:(int32 dcep_ti, int32 nchg_ti, int32 nchg_idp_ofs_ti)
__emit_assign_qcaf_regform_concat	./v_bbgen3.c	/^extern void __emit_assign_qcaf_regform_concat(int32 stp_ti)$/;"	f	signature:(int32 stp_ti)
__emit_assign_scalar_qcaf	./v_bbgen3.c	/^extern void __emit_assign_scalar_qcaf(int32 dcep_ti, int32 nchg_ti, $/;"	f	signature:(int32 dcep_ti, int32 nchg_ti, int32 nchg_idp_ofs_ti)
__emit_bin_bitand	./v_bbgen3.c	/^extern int32 __emit_bin_bitand(int32 blen, int32 op1, int32 op2)$/;"	f	signature:(int32 blen, int32 op1, int32 op2)
__emit_bin_bitor	./v_bbgen3.c	/^extern int32 __emit_bin_bitor(int32 blen, int32 op1_ti, int32 op2_ti)$/;"	f	signature:(int32 blen, int32 op1_ti, int32 op2_ti)
__emit_bin_bitxor	./v_bbgen3.c	/^extern int32 __emit_bin_bitxor(int32 blen, int32 op1_ti, int32 op2_ti)$/;"	f	signature:(int32 blen, int32 op1_ti, int32 op2_ti)
__emit_binop_string	./v_bbgen3.c	/^extern int32 __emit_binop_string(struct expr_t *xp)$/;"	f	signature:(struct expr_t *xp)
__emit_bitnot	./v_bbgen3.c	/^extern int32 __emit_bitnot(int32 blen, int32 op1_ti)$/;"	f	signature:(int32 blen, int32 op1_ti)
__emit_bld_nb_nodelay_tev	./v_bbgen3.c	/^extern void __emit_bld_nb_nodelay_tev(int32 tevp_ti) $/;"	f	signature:(int32 tevp_ti)
__emit_bldsched_proc_del	./v_bbgen3.c	/^extern void __emit_bldsched_proc_del(int32 stp_ti, int32 tevp_ti)$/;"	f	signature:(int32 stp_ti, int32 tevp_ti)
__emit_bldsched_proc_del_const	./v_bbgen3.c	/^extern void __emit_bldsched_proc_del_const(int32 tevp_ti, word64 del)$/;"	f	signature:(int32 tevp_ti, word64 del)
__emit_bldsched_proc_del_const_nt	./v_bbgen3.c	/^extern void __emit_bldsched_proc_del_const_nt(int32 tevp_ti, word64 del)$/;"	f	signature:(int32 tevp_ti, word64 del)
__emit_bldsched_proc_del_nt	./v_bbgen3.c	/^extern void __emit_bldsched_proc_del_nt(int32 stp_ti, int32 tevp_ti)$/;"	f	signature:(int32 stp_ti, int32 tevp_ti)
__emit_bldsched_proc_del_task_const	./v_bbgen3.c	/^extern void __emit_bldsched_proc_del_task_const(int32 tevp_ti, word64 del)$/;"	f	signature:(int32 tevp_ti, word64 del)
__emit_block_label	./v_bbgen3.c	/^extern void __emit_block_label(struct bblk_t *bbp)$/;"	f	signature:(struct bblk_t *bbp)
__emit_bpart_of_tran	./v_bbgen3.c	/^extern int32 __emit_bpart_of_tran(void)$/;"	f	signature:(void)
__emit_bsel_wirfrc_inhibit	./v_bbgen3.c	/^extern int32 __emit_bsel_wirfrc_inhibit(int32 np_ti, int32 bi_ti)$/;"	f	signature:(int32 np_ti, int32 bi_ti)
__emit_bytecmp	./v_bbgen3.c	/^extern int32 __emit_bytecmp(int32 bytsiz, int32 op1_ti, int32 op2_ti)$/;"	f	signature:(int32 bytsiz, int32 op1_ti, int32 op2_ti)
__emit_calc_bufif_newstate	./v_bbgen3.c	/^extern int32 __emit_calc_bufif_newstate(int32 gwrd_ti, int32 base_ti,$/;"	f	signature:(int32 gwrd_ti, int32 base_ti, int32 stval_ti)
__emit_call_conta	./v_bbgen3.c	/^extern void __emit_call_conta(struct conta_t *cap)$/;"	f	signature:(struct conta_t *cap)
__emit_call_func	./v_bbgen3.c	/^extern void __emit_call_func(struct task_t *tskp)$/;"	f	signature:(struct task_t *tskp)
__emit_call_func_arg_dpi	./v_bbgen3.c	/^extern int32 __emit_call_func_arg_dpi(struct net_t *np, int32 offset, $/;"	f	signature:(struct net_t *np, int32 offset, int32 val_ti, int32 pass_as_addr, int32 io_typ)
__emit_call_func_arg_dpi	./v_bbgen3.c	/^extern void __emit_call_func_arg_dpi(struct net_t *np,$/;"	f	signature:(struct net_t *np, int32 val_ti, int32 pass_as_addr, int32 io_typ, int32 *inreg_argnop, int32 *onstk_argnop, int32 *inreal_xmm_argnop)
__emit_call_func_dpi	./v_bbgen3.c	/^extern void __emit_call_func_dpi(struct task_t *tskp)$/;"	f	signature:(struct task_t *tskp)
__emit_call_gate_conta	./v_bbgen3.c	/^extern void __emit_call_gate_conta(int32 gc_ndx)$/;"	f	signature:(int32 gc_ndx)
__emit_call_iconn	./v_bbgen3.c	/^extern void __emit_call_iconn(int32 iconn_ndx)$/;"	f	signature:(int32 iconn_ndx)
__emit_call_ldcomb_drvrs	./v_bbgen3.c	/^extern int32 __emit_call_ldcomb_drvrs(struct net_t *np, int32 srep,$/;"	f	signature:(struct net_t *np, int32 srep, struct mod_t *in_mdp)
__emit_call_mdprt_bsel	./v_bbgen3.c	/^extern void __emit_call_mdprt_bsel(int32 up_lhsx_ti, int32 lhs_ti,$/;"	f	signature:(int32 up_lhsx_ti, int32 lhs_ti, int32 new_val_ti, int32 all_bsel_1w)
__emit_call_mdprt_bsel_dmpv	./v_bbgen3.c	/^extern void __emit_call_mdprt_bsel_dmpv(int32 up_lhsx_ti, int32 lhs_ti,$/;"	f	signature:(int32 up_lhsx_ti, int32 lhs_ti, int32 new_val_ti, int32 all_bsel_1w, int32 is_dump_ports, int32 np_ti)
__emit_call_mdprt_bsel_nchg	./v_bbgen3.c	/^extern void __emit_call_mdprt_bsel_nchg(int32 up_lhsx_ti, int32 lhs_ti,$/;"	f	signature:(int32 up_lhsx_ti, int32 lhs_ti, int32 new_val_ti, int32 nchg_ti, int32 all_bsel_1w)
__emit_call_mdprt_bsel_nchg_dmpv	./v_bbgen3.c	/^extern void __emit_call_mdprt_bsel_nchg_dmpv(int32 up_lhsx_ti, int32 lhs_ti,$/;"	f	signature:(int32 up_lhsx_ti, int32 lhs_ti, int32 new_val_ti, int32 nchg_ti, int32 all_bsel_1w, int32 is_dump_ports, int32 np_ti)
__emit_call_tsk	./v_bbgen3.c	/^extern void __emit_call_tsk(struct task_t *tskp, struct sy_t *msym)$/;"	f	signature:(struct task_t *tskp, struct sy_t *msym)
__emit_cancel_ev	./v_bbgen3.c	/^extern void __emit_cancel_ev(int32 tevp_ti)$/;"	f	signature:(int32 tevp_ti)
__emit_cancele_pend_chg_1gev	./v_bbgen3.c	/^extern int32 __emit_cancele_pend_chg_1gev(int32 gp_ti, int32 tevp_ti)$/;"	f	signature:(int32 gp_ti, int32 tevp_ti)
__emit_cancele_pend_nochg_1gev	./v_bbgen3.c	/^extern int32 __emit_cancele_pend_nochg_1gev(int32 gp_ti, int32 tevp_ti)$/;"	f	signature:(int32 gp_ti, int32 tevp_ti)
__emit_chg_gate_outwire	./v_bbgen3.c	/^extern void __emit_chg_gate_outwire(int32 tevp_ti)$/;"	f	signature:(int32 tevp_ti)
__emit_chk_dce_cbvc	./v_bbgen3.c	/^extern void __emit_chk_dce_cbvc(int32 np_ti)$/;"	f	signature:(int32 np_ti)
__emit_chk_gate_vpi_chg	./v_bbgen3.c	/^extern void __emit_chk_gate_vpi_chg(int32 gndx)$/;"	f	signature:(int32 gndx)
__emit_chk_ld_vpiputv_driver	./v_bbgen3.c	/^extern void __emit_chk_ld_vpiputv_driver(int32 np_ti, int32 drv_apti)$/;"	f	signature:(int32 np_ti, int32 drv_apti)
__emit_cmp	./v_bbgen3.c	/^extern void __emit_cmp(int32 op1_ti, int32 op2_ti)$/;"	f	signature:(int32 op1_ti, int32 op2_ti)
__emit_cmp_set_type	./v_bbgen3.c	/^extern void __emit_cmp_set_type(int32 op1_ti, int32 op2_ti, int32 cc, $/;"	f	signature:(int32 op1_ti, int32 op2_ti, int32 cc, int32 sgn_jmp, int32 res_ti)
__emit_cmp_widall1	./v_bbgen3.c	/^extern int32 __emit_cmp_widall1(int32 op_ti)$/;"	f	signature:(int32 op_ti)
__emit_cmp_wide	./v_bbgen3.c	/^extern int32 __emit_cmp_wide(int32 op1_ti, int32 op2_ti, int32 wlen, $/;"	f	signature:(int32 op1_ti, int32 op2_ti, int32 wlen, int32 is_ne, int32 srtyp)
__emit_cmp_widomitxz_ne	./v_bbgen3.c	/^extern int32 __emit_cmp_widomitxz_ne(int32 op1_ti, int32 op2_ti)$/;"	f	signature:(int32 op1_ti, int32 op2_ti)
__emit_comb_1w_nonstren	./v_bbgen3.c	/^extern void __emit_comb_1w_nonstren(int32 a_apti, int32 d_apti, int32 d_bpti,$/;"	f	signature:(int32 a_apti, int32 d_apti, int32 d_bpti, int32 ntyp)
__emit_comb_wide_nonstren	./v_bbgen3.c	/^extern void __emit_comb_wide_nonstren(int32 a_apti, int32 d_apti, $/;"	f	signature:(int32 a_apti, int32 d_apti, int32 d_bpti, struct net_t *np, int32 blen)
__emit_complete	./v_bbgen3.c	/^extern void __emit_complete(void)$/;"	f	signature:(void)
__emit_compute_emask	./v_bbgen3.c	/^extern int32 __emit_compute_emask(struct net_t *np, int32 oval_ti, $/;"	f	signature:(struct net_t *np, int32 oval_ti, int32 nval_ti, int32 eval, int32 *set_ndx_ti)
__emit_copy	./v_bbgen3.c	/^extern void __emit_copy(int32 nbytes, int32 op1, int32 op2)$/;"	f	signature:(int32 nbytes, int32 op1, int32 op2)
__emit_correct_frc	./v_bbgen3.c	/^extern int32 __emit_correct_frc(int32 np_ti, int32 rhs_apti)$/;"	f	signature:(int32 np_ti, int32 rhs_apti)
__emit_cp_auto_idp_area_func	./v_bbgen3.c	/^extern void __emit_cp_auto_idp_area_func(int32 dst_ti, int32 src_ti)$/;"	f	signature:(int32 dst_ti, int32 src_ti)
__emit_dbg_inum	./v_bbgen3.c	/^extern int32 __emit_dbg_inum(void)$/;"	f	signature:(void)
__emit_div	./v_bbgen3.c	/^extern int32 __emit_div(int32 blen, int32 op1_ti, int32 op2_ti, int32 srtyp)$/;"	f	signature:(int32 blen, int32 op1_ti, int32 op2_ti, int32 srtyp)
__emit_div_real	./v_bbgen3.c	/^extern int32 __emit_div_real(int32 op1_ti, int32 op2_ti)$/;"	f	signature:(int32 op1_ti, int32 op2_ti)
__emit_downrel_targ_to_ref	./v_bbgen3.c	/^extern int32 __emit_downrel_targ_to_ref(int32 gref_ti)$/;"	f	signature:(int32 gref_ti)
__emit_enter_bblk_dbgmsg	./v_bbgen3.c	/^extern void __emit_enter_bblk_dbgmsg(void)$/;"	f	signature:(void)
__emit_enter_conta	./v_bbgen3.c	/^extern void __emit_enter_conta(int32 ndx)$/;"	f	signature:(int32 ndx)
__emit_enter_decl	./v_bbgen3.c	/^extern void __emit_enter_decl(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__emit_enter_gate_conta	./v_bbgen3.c	/^extern void __emit_enter_gate_conta(int32 gc_ndx)$/;"	f	signature:(int32 gc_ndx)
__emit_enter_gate_delay_assign	./v_bbgen3.c	/^extern void __emit_enter_gate_delay_assign(int32 gndx)$/;"	f	signature:(int32 gndx)
__emit_enter_iconn	./v_bbgen3.c	/^extern void __emit_enter_iconn(int32 ndx)$/;"	f	signature:(int32 ndx)
__emit_enter_mdc	./v_bbgen3.c	/^extern void __emit_enter_mdc(int32 ndx) $/;"	f	signature:(int32 ndx)
__emit_enter_mipd	./v_bbgen3.c	/^extern void __emit_enter_mipd(int32 ndx)$/;"	f	signature:(int32 ndx)
__emit_enter_nb_proc	./v_bbgen3.c	/^extern void __emit_enter_nb_proc(struct st_t *stp) $/;"	f	signature:(struct st_t *stp)
__emit_enter_nb_proc_free	./v_bbgen3.c	/^extern void __emit_enter_nb_proc_free(struct st_t *stp) $/;"	f	signature:(struct st_t *stp)
__emit_enter_net_chg	./v_bbgen3.c	/^extern void __emit_enter_net_chg(int32 ndx)$/;"	f	signature:(int32 ndx)
__emit_enter_npp	./v_bbgen3.c	/^extern void __emit_enter_npp(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__emit_enter_port	./v_bbgen3.c	/^extern void __emit_enter_port(int32 ndx)$/;"	f	signature:(int32 ndx)
__emit_enter_proc	./v_bbgen3.c	/^extern void __emit_enter_proc(struct st_t *stp) $/;"	f	signature:(struct st_t *stp)
__emit_enter_task	./v_bbgen3.c	/^extern void __emit_enter_task(struct task_t *tskp)$/;"	f	signature:(struct task_t *tskp)
__emit_enter_task_dpi	./v_bbgen3.c	/^extern void __emit_enter_task_dpi(struct task_t *tskp)$/;"	f	signature:(struct task_t *tskp)
__emit_enter_thd_ret	./v_bbgen3.c	/^extern void __emit_enter_thd_ret(int32 ndx) $/;"	f	signature:(int32 ndx)
__emit_eval_cmos_gate	./v_bbgen3.c	/^extern int32 __emit_eval_cmos_gate(int32 nmos_gwrd_ti, int32 pmos_gwrd_ti,$/;"	f	signature:(int32 nmos_gwrd_ti, int32 pmos_gwrd_ti, int32 old_gateval_ti, int32 wtyp)
__emit_eval_htran_stwire_1bit	./v_bbgen3.c	/^extern void __emit_eval_htran_stwire_1bit(int32 np_ti, int32 bi_ti)$/;"	f	signature:(int32 np_ti, int32 bi_ti)
__emit_eval_htran_stwire_1bit_nchg	./v_bbgen3.c	/^extern void __emit_eval_htran_stwire_1bit_nchg(int32 np_ti, int32 nchg_ti, $/;"	f	signature:(int32 np_ti, int32 nchg_ti, int32 bi_ti)
__emit_eval_htran_wire_1bit	./v_bbgen3.c	/^extern void __emit_eval_htran_wire_1bit(int32 np_ti, int32 bi_ti)$/;"	f	signature:(int32 np_ti, int32 bi_ti)
__emit_eval_htran_wire_1bit_nchg	./v_bbgen3.c	/^extern void __emit_eval_htran_wire_1bit_nchg(int32 np_ti, int32 nchg_ti, $/;"	f	signature:(int32 np_ti, int32 nchg_ti, int32 bi_ti)
__emit_eval_nmos_gate	./v_bbgen3.c	/^extern void __emit_eval_nmos_gate(int32 uwrd_ti)$/;"	f	signature:(int32 uwrd_ti)
__emit_eval_pmos_gate	./v_bbgen3.c	/^extern void __emit_eval_pmos_gate(int32 uwrd_ti)$/;"	f	signature:(int32 uwrd_ti)
__emit_eval_rcmos_gate	./v_bbgen3.c	/^extern int32 __emit_eval_rcmos_gate(int32 nmos_gwrd_ti, int32 pmos_gwrd_ti,$/;"	f	signature:(int32 nmos_gwrd_ti, int32 pmos_gwrd_ti, int32 old_gateval_ti, int32 wtyp)
__emit_eval_rnmos_gate	./v_bbgen3.c	/^extern void __emit_eval_rnmos_gate(int32 uwrd_ti)$/;"	f	signature:(int32 uwrd_ti)
__emit_eval_rpmos_gate	./v_bbgen3.c	/^extern void __emit_eval_rpmos_gate(int32 uwrd_ti)$/;"	f	signature:(int32 uwrd_ti)
__emit_eval_tran_bidchan_1bit	./v_bbgen3.c	/^extern int32 __emit_eval_tran_bidchan_1bit(int32 chanid_ti)$/;"	f	signature:(int32 chanid_ti)
__emit_eval_tran_bidchan_1bit_assign	./v_bbgen3.c	/^extern void __emit_eval_tran_bidchan_1bit_assign(int32 chanid_ti)$/;"	f	signature:(int32 chanid_ti)
__emit_eval_tran_bidchan_vectored_assign	./v_bbgen3.c	/^extern void __emit_eval_tran_bidchan_vectored_assign(int32 np_ti)$/;"	f	signature:(int32 np_ti)
__emit_eval_tran_drvr_1bit	./v_bbgen3.c	/^extern void __emit_eval_tran_drvr_1bit(int32 np_ti, int32 bi_ti)$/;"	f	signature:(int32 np_ti, int32 bi_ti)
__emit_eval_tran_drvr_vector	./v_bbgen3.c	/^extern void __emit_eval_tran_drvr_vector(int32 np_ti)$/;"	f	signature:(int32 np_ti)
__emit_eval_tran_scalar_bidchan_1bit	./v_bbgen3.c	/^extern int32 __emit_eval_tran_scalar_bidchan_1bit(int32 chanid_ti)$/;"	f	signature:(int32 chanid_ti)
__emit_eval_tran_stbidchan_1bit	./v_bbgen3.c	/^extern int32 __emit_eval_tran_stbidchan_1bit(int32 chanid_ti)$/;"	f	signature:(int32 chanid_ti)
__emit_eval_tran_stbidchan_1bit_assign	./v_bbgen3.c	/^extern void __emit_eval_tran_stbidchan_1bit_assign(int32 chanid_ti)$/;"	f	signature:(int32 chanid_ti)
__emit_eval_tran_stbidchan_vectored_assign	./v_bbgen3.c	/^extern void __emit_eval_tran_stbidchan_vectored_assign(int32 np_ti)$/;"	f	signature:(int32 np_ti)
__emit_event_coverage	./v_bbgen3.c	/^extern void __emit_event_coverage(struct delctrl_t *dctp) $/;"	f	signature:(struct delctrl_t *dctp)
__emit_exec_call_nchg_fg	./v_bbgen3.c	/^extern void __emit_exec_call_nchg_fg(int32 ndx, int32 var_ti)$/;"	f	signature:(int32 ndx, int32 var_ti)
__emit_exec_cause	./v_bbgen3.c	/^extern void __emit_exec_cause(int32 stp_ti, int32 nchg_ti)$/;"	f	signature:(int32 stp_ti, int32 nchg_ti)
__emit_exec_display	./v_bbgen3.c	/^extern void __emit_exec_display(int32 stp_ti)$/;"	f	signature:(int32 stp_ti)
__emit_exec_dsable	./v_bbgen3.c	/^extern int32 __emit_exec_dsable(int32 stp_ti)$/;"	f	signature:(int32 stp_ti)
__emit_exec_enter_dce	./v_bbgen3.c	/^extern void __emit_exec_enter_dce(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__emit_exec_enter_npp	./v_bbgen3.c	/^extern void __emit_exec_enter_npp(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__emit_exec_np_tranif	./v_bbgen3.c	/^extern int32 __emit_exec_np_tranif(int32 gp_ti)$/;"	f	signature:(int32 gp_ti)
__emit_exec_qc_assign	./v_bbgen3.c	/^extern void __emit_exec_qc_assign(int32 stp_ti, int32 rhsbi_ti, int32 nchg_ti, $/;"	f	signature:(int32 stp_ti, int32 rhsbi_ti, int32 nchg_ti, int32 nchg_idp_ofs_ti, int32 lhsx_ti)
__emit_exec_qc_deassign	./v_bbgen3.c	/^extern void __emit_exec_qc_deassign(int32 stp_ti)$/;"	f	signature:(int32 stp_ti)
__emit_exec_qc_deassign_concat	./v_bbgen3.c	/^extern void __emit_exec_qc_deassign_concat(int32 lhsx_ti)$/;"	f	signature:(int32 lhsx_ti)
__emit_exec_qc_deassign_force	./v_bbgen3.c	/^extern void __emit_exec_qc_deassign_force(int32 stp_ti, int32 lhsx_ti, $/;"	f	signature:(int32 stp_ti, int32 lhsx_ti, int32 nchg_ti, int32 nchg_idp_ofs_ti)
__emit_exec_qc_force	./v_bbgen3.c	/^extern void __emit_exec_qc_force(int32 stp_ti, int32 rhsbi_ti, int32 nchg_ti, $/;"	f	signature:(int32 stp_ti, int32 rhsbi_ti, int32 nchg_ti, int32 nchg_idp_ofs_ti, int32 lhsx_ti)
__emit_exec_qc_tran_wireforce	./v_bbgen3.c	/^extern void __emit_exec_qc_tran_wireforce(int32 stp_ti, int32 lhsx_ti, $/;"	f	signature:(int32 stp_ti, int32 lhsx_ti, int32 bi_ti, int32 nchg_ti, int32 nchg_idp_ofs_ti)
__emit_exec_qc_tran_wirerelease	./v_bbgen3.c	/^extern void __emit_exec_qc_tran_wirerelease(int32 stp_ti, int32 lhsx_ti, $/;"	f	signature:(int32 stp_ti, int32 lhsx_ti, int32 nchg_ti, int32 nchg_idp_ofs_ti)
__emit_exec_qc_wireforce	./v_bbgen3.c	/^extern void __emit_exec_qc_wireforce(int32 stp_ti, int32 lhsx_ti, int32 bi_ti,$/;"	f	signature:(int32 stp_ti, int32 lhsx_ti, int32 bi_ti, int32 nchg_ti, int32 nchg_idp_ofs_ti)
__emit_exec_qc_wirerelease	./v_bbgen3.c	/^extern void __emit_exec_qc_wirerelease(int32 stp_ti, int32 lhsx_ti,$/;"	f	signature:(int32 stp_ti, int32 lhsx_ti, int32 nchg_ti, int32 nchg_idp_ofs_ti)
__emit_exec_wide_logic_gate	./v_bbgen3.c	/^extern int32 __emit_exec_wide_logic_gate(int32 gp_ti, int32 obnum,$/;"	f	signature:(int32 gp_ti, int32 obnum, int32 out_chg_ti)
__emit_fmonit_trigger	./v_bbgen3.c	/^extern void __emit_fmonit_trigger(int32 dcep_ti)$/;"	f	signature:(int32 dcep_ti)
__emit_force_active	./v_bbgen3.c	/^extern int32 __emit_force_active(int32 np_ti, int32 biti_ti)$/;"	f	signature:(int32 np_ti, int32 biti_ti)
__emit_func_brk_jmp	./v_bbgen3.c	/^extern void __emit_func_brk_jmp(int32 ndx)$/;"	f	signature:(int32 ndx)
__emit_func_subr	./v_bbgen3.c	/^extern void __emit_func_subr(struct task_t *tskp)$/;"	f	signature:(struct task_t *tskp)
__emit_get_del32	./v_bbgen3.c	/^extern void __emit_get_del32(int32 call, int32 *low_val_ti, int32 *high_val_ti, $/;"	f	signature:(int32 call, int32 *low_val_ti, int32 *high_val_ti, int32 del_du_ti)
__emit_get_del64	./v_bbgen3.c	/^extern void __emit_get_del64(int32 call, int32 *val_ti, int32 del_du_ti)$/;"	f	signature:(int32 call, int32 *val_ti, int32 del_du_ti)
__emit_get_export_arg_dpi	./v_bbgen3.c	/^extern int32 __emit_get_export_arg_dpi(struct net_t *np, int32 *argnop, $/;"	f	signature:(struct net_t *np, int32 *argnop, int32 *ofsp)
__emit_get_export_arg_dpi	./v_bbgen3.c	/^extern int32 __emit_get_export_arg_dpi(struct net_t *np, int32 *offset)$/;"	f	signature:(struct net_t *np, int32 *offset)
__emit_get_perinst_val	./v_bbgen3.c	/^extern void __emit_get_perinst_val(int32 cadrv_apti, int32 cadrvadr_ti, $/;"	f	signature:(int32 cadrv_apti, int32 cadrvadr_ti, int32 blen)
__emit_get_string_byte	./v_bbgen3.c	/^extern int32 __emit_get_string_byte(struct net_t *np, int32 bi_ti)$/;"	f	signature:(struct net_t *np, int32 bi_ti)
__emit_get_xprop_accum	./v_bbgen3.c	/^extern int32 __emit_get_xprop_accum(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__emit_get_xprop_accum_init	./v_bbgen3.c	/^extern void __emit_get_xprop_accum_init(struct net_t *np, int32 rhs_ti,$/;"	f	signature:(struct net_t *np, int32 rhs_ti, int32 rhs_bpti)
__emit_get_xprop_accum_init_wide	./v_bbgen3.c	/^extern void __emit_get_xprop_accum_init_wide(struct net_t *np, int32 rhs_ti)$/;"	f	signature:(struct net_t *np, int32 rhs_ti)
__emit_get_xprop_accum_to_self	./v_bbgen3.c	/^extern void __emit_get_xprop_accum_to_self(struct net_t *np, int32 rhs_ti,$/;"	f	signature:(struct net_t *np, int32 rhs_ti, int32 rhs_bpti)
__emit_get_xprop_accum_to_self_wide	./v_bbgen3.c	/^extern void __emit_get_xprop_accum_to_self_wide(struct net_t *np, int32 rhs_ti)$/;"	f	signature:(struct net_t *np, int32 rhs_ti)
__emit_has_xedge_wide	./v_bbgen3.c	/^extern int32 __emit_has_xedge_wide(int32 op1_ti, int32 op2_ti, int32 blen)$/;"	f	signature:(int32 op1_ti, int32 op2_ti, int32 blen)
__emit_has_xedge_wide_st	./v_bbgen3.c	/^extern int32 __emit_has_xedge_wide_st(int32 op1_ti, int32 op2_ti, int32 blen)$/;"	f	signature:(int32 op1_ti, int32 op2_ti, int32 blen)
__emit_immed_eval_trifchan	./v_bbgen3.c	/^extern void __emit_immed_eval_trifchan(int32 gp_ti)$/;"	f	signature:(int32 gp_ti)
__emit_inum	./v_bbgen3.c	/^extern int32 __emit_inum(void)$/;"	f	signature:(void)
__emit_jmp	./v_bbgen3.c	/^extern void __emit_jmp(struct bblk_t *bbp)$/;"	f	signature:(struct bblk_t *bbp)
__emit_jmp_0	./v_bbgen3.c	/^extern void __emit_jmp_0(struct bblk_t *t_bbp, struct bblk_t *f_bbp, $/;"	f	signature:(struct bblk_t *t_bbp, struct bblk_t *f_bbp, int32 op_ti)
__emit_jmp_byte_eq	./v_bbgen3.c	/^extern void __emit_jmp_byte_eq(struct bblk_t *t_bbp, struct bblk_t *f_bbp,$/;"	f	signature:(struct bblk_t *t_bbp, struct bblk_t *f_bbp, int32 op1_ti, int32 op2_ti)
__emit_jmp_cmp	./v_bbgen3.c	/^extern void __emit_jmp_cmp(struct bblk_t *t_bbp, struct bblk_t *f_bbp,$/;"	f	signature:(struct bblk_t *t_bbp, struct bblk_t *f_bbp, int32 op1_ti, int32 op2_ti, int32 cc)
__emit_jmp_cmp64_gt_pdmindel	./v_bbgen3.c	/^extern void __emit_jmp_cmp64_gt_pdmindel(struct bblk_t *t_bbp, $/;"	f	signature:(struct bblk_t *t_bbp, struct bblk_t *f_bbp, int32 newdel_low_ti, int32 newdel_high_ti)
__emit_jmp_cmp64_gt_pdmindel_const	./v_bbgen3.c	/^extern void __emit_jmp_cmp64_gt_pdmindel_const(struct bblk_t *t_bbp, $/;"	f	signature:(struct bblk_t *t_bbp, struct bblk_t *f_bbp, int32 newdel_low_ti, int32 newdel_high_ti)
__emit_jmp_cmp64_idp_lessthan	./v_bbgen3.c	/^extern void  __emit_jmp_cmp64_idp_lessthan(struct bblk_t *t_bbp, $/;"	f	signature:(struct bblk_t *t_bbp, struct bblk_t *f_bbp, int32 a_low_ti, int32 a_high_ti, int32 b_low_ti, int32 b_high_ti)
__emit_jmp_cmp64_newdel_lte_simtim	./v_bbgen3.c	/^extern void __emit_jmp_cmp64_newdel_lte_simtim(struct bblk_t *t_bbp,$/;"	f	signature:(struct bblk_t *t_bbp, struct bblk_t *f_bbp, int32 new_low_ti, int32 new_high_ti)
__emit_jmp_dce_off	./v_bbgen3.c	/^extern void __emit_jmp_dce_off(struct bblk_t *t_bbp, struct bblk_t *f_bbp,$/;"	f	signature:(struct bblk_t *t_bbp, struct bblk_t *f_bbp, int32 dce_ti)
__emit_jmp_eq	./v_bbgen3.c	/^extern void __emit_jmp_eq(struct bblk_t *t_bbp, struct bblk_t *f_bbp,$/;"	f	signature:(struct bblk_t *t_bbp, struct bblk_t *f_bbp, int32 op1_ti, int32 op2_ti)
__emit_jmp_eq_ab_wide_varmask	./v_bbgen3.c	/^extern void __emit_jmp_eq_ab_wide_varmask(struct bblk_t *t_bbp, $/;"	f	signature:(struct bblk_t *t_bbp, struct bblk_t *f_bbp, int32 op1_ti, int32 op2_ti, int32 width_ti)
__emit_jmp_eq_abpart	./v_bbgen3.c	/^extern void __emit_jmp_eq_abpart(struct bblk_t *t_bbp, struct bblk_t *f_bbp,$/;"	f	signature:(struct bblk_t *t_bbp, struct bblk_t *f_bbp, int32 op1_ti, int32 op2_ti)
__emit_jmp_eq_stmask	./v_bbgen3.c	/^extern void __emit_jmp_eq_stmask(struct bblk_t *t_bbp,$/;"	f	signature:(struct bblk_t *t_bbp, struct bblk_t *f_bbp, int32 oval_apti, int32 nval2_ti)
__emit_jmp_idp_eq	./v_bbgen3.c	/^extern void __emit_jmp_idp_eq(struct bblk_t *t_bbp, struct bblk_t *f_bbp,$/;"	f	signature:(struct bblk_t *t_bbp, struct bblk_t *f_bbp, int32 op1_ti)
__emit_jmp_ptr_eq	./v_bbgen3.c	/^extern void __emit_jmp_ptr_eq(struct bblk_t *t_bbp, struct bblk_t *f_bbp,$/;"	f	signature:(struct bblk_t *t_bbp, struct bblk_t *f_bbp, int32 op1_ti, int32 op2_ti)
__emit_jmp_real0	./v_bbgen3.c	/^extern void __emit_jmp_real0(struct bblk_t *t_bbp, struct bblk_t *f_bbp,$/;"	f	signature:(struct bblk_t *t_bbp, struct bblk_t *f_bbp, int32 op_ti)
__emit_jmp_real_cmp	./v_bbgen3.c	/^extern void __emit_jmp_real_cmp(struct bblk_t *t_bbp, struct bblk_t *f_bbp,$/;"	f	signature:(struct bblk_t *t_bbp, struct bblk_t *f_bbp, int32 op1_ti, int32 op2_ti, int32 cc)
__emit_jmp_real_eps_cmp	./v_bbgen3.c	/^extern void __emit_jmp_real_eps_cmp(struct bblk_t *t_bbp, $/;"	f	signature:(struct bblk_t *t_bbp, struct bblk_t *f_bbp, int32 op_ti)
__emit_jmp_sgn_cmp	./v_bbgen3.c	/^extern void __emit_jmp_sgn_cmp(struct bblk_t *t_bbp, struct bblk_t *f_bbp,$/;"	f	signature:(struct bblk_t *t_bbp, struct bblk_t *f_bbp, int32 op1_ti, int32 op2_ti, int32 cc)
__emit_jmpor_0	./v_bbgen3.c	/^extern void __emit_jmpor_0(struct bblk_t *t_bbp, struct bblk_t *f_bbp,$/;"	f	signature:(struct bblk_t *t_bbp, struct bblk_t *f_bbp, int32 op1_ti, int32 op2_ti)
__emit_jmpto_tsk	./v_bbgen3.c	/^extern void __emit_jmpto_tsk(struct task_t *tskp, struct sy_t *msym)$/;"	f	signature:(struct task_t *tskp, struct sy_t *msym)
__emit_ld_bsel	./v_bbgen3.c	/^extern void __emit_ld_bsel(int32 rhs_apti, int32 bi_ti, int32 res_apti) $/;"	f	signature:(int32 rhs_apti, int32 bi_ti, int32 res_apti)
__emit_ld_downrel_idp	./v_bbgen3.c	/^extern int32 __emit_ld_downrel_idp(int32 gref_ti)$/;"	f	signature:(int32 gref_ti)
__emit_ld_gate_val_from_tev	./v_bbgen3.c	/^extern int32 __emit_ld_gate_val_from_tev(int32 tevp_ti, int32 is_2state)$/;"	f	signature:(int32 tevp_ti, int32 is_2state)
__emit_ld_logic_wide_driver	./v_bbgen3.c	/^extern int32 __emit_ld_logic_wide_driver(int32 gp_ti, int32 nins)$/;"	f	signature:(int32 gp_ti, int32 nins)
__emit_ld_nbrhs_scalar_val	./v_bbgen3.c	/^extern int32 __emit_ld_nbrhs_scalar_val(int32 tevp_reg_ti, int32 srtyp)$/;"	f	signature:(int32 tevp_reg_ti, int32 srtyp)
__emit_ld_nbrhs_valwp	./v_bbgen3.c	/^extern int32 __emit_ld_nbrhs_valwp(int32 tevp_reg_ti, int32 blen, int32 srtyp,$/;"	f	signature:(int32 tevp_reg_ti, int32 blen, int32 srtyp, int32 is_real)
__emit_ld_nchg_bptr	./v_bbgen3.c	/^extern int32 __emit_ld_nchg_bptr(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__emit_ld_psel	./v_bbgen3.c	/^extern void __emit_ld_psel(int32 src_ti, int32 sbit1, int32 numbits,$/;"	f	signature:(int32 src_ti, int32 sbit1, int32 numbits, int32 val_ti)
__emit_ld_tfwarg_drvp	./v_bbgen3.c	/^extern int32 __emit_ld_tfwarg_drvp(int32 npp_ti, int32 blen, int32 srep)$/;"	f	signature:(int32 npp_ti, int32 blen, int32 srep)
__emit_ld_uprel_idp	./v_bbgen3.c	/^extern int32 __emit_ld_uprel_idp(int32 gref_ti)$/;"	f	signature:(int32 gref_ti)
__emit_leave	./v_bbgen3.c	/^extern void __emit_leave(void)$/;"	f	signature:(void)
__emit_lognot	./v_bbgen3.c	/^extern void __emit_lognot(int32 op1_ti, int32 res_ti)$/;"	f	signature:(int32 op1_ti, int32 res_ti)
__emit_mask_and	./v_bbgen3.c	/^extern int32 __emit_mask_and(int32 wadr_ti, int32 mask_ti)$/;"	f	signature:(int32 wadr_ti, int32 mask_ti)
__emit_mask_or	./v_bbgen3.c	/^extern int32 __emit_mask_or(int32 wadr_ti, int32 mask_ti)$/;"	f	signature:(int32 wadr_ti, int32 mask_ti)
__emit_misc_terr	./v_bbgen3.c	/^extern void __emit_misc_terr(void)$/;"	f	signature:(void)
__emit_mod	./v_bbgen3.c	/^extern int32 __emit_mod(int32 blen, int32 op1_ti, int32 op2_ti, int32 srtyp)$/;"	f	signature:(int32 blen, int32 op1_ti, int32 op2_ti, int32 srtyp)
__emit_monit_trigger	./v_bbgen3.c	/^extern void __emit_monit_trigger(void)$/;"	f	signature:(void)
__emit_movabw_fr_sgnsv	./v_bbgen3.c	/^extern int32 __emit_movabw_fr_sgnsv(int32 svec_pti, int32 blen)$/;"	f	signature:(int32 svec_pti, int32 blen)
__emit_movabw_fr_svec	./v_bbgen3.c	/^extern int32 __emit_movabw_fr_svec(int32 svec_pti, int32 blen)$/;"	f	signature:(int32 svec_pti, int32 blen)
__emit_movint_fr_svec	./v_bbgen3.c	/^extern int32 __emit_movint_fr_svec(int32 svecadr_ti)$/;"	f	signature:(int32 svecadr_ti)
__emit_movr_fr_sgnw	./v_bbgen3.c	/^extern int32 __emit_movr_fr_sgnw(int32 rhs_ti)$/;"	f	signature:(int32 rhs_ti)
__emit_movr_fr_w	./v_bbgen3.c	/^extern int32 __emit_movr_fr_w(int32 rhs_ti)$/;"	f	signature:(int32 rhs_ti)
__emit_movsb_fr_scalstad	./v_bbgen3.c	/^extern int32 __emit_movsb_fr_scalstad(int32 apti, int32 new_st)$/;"	f	signature:(int32 apti, int32 new_st)
__emit_movsb_fr_widestad	./v_bbgen3.c	/^extern int32 __emit_movsb_fr_widestad(int32 blen, int32 apti, int32 new_st)$/;"	f	signature:(int32 blen, int32 apti, int32 new_st)
__emit_movsb_fr_wstad	./v_bbgen3.c	/^extern int32 __emit_movsb_fr_wstad(int32 blen, int32 apti, int32 new_st)$/;"	f	signature:(int32 blen, int32 apti, int32 new_st)
__emit_movw_2s_fr_scal	./v_bbgen3.c	/^extern int32 __emit_movw_2s_fr_scal(int32 blen, int32 rhs_ti, int32 is_stren)$/;"	f	signature:(int32 blen, int32 rhs_ti, int32 is_stren)
__emit_movw_fr_r	./v_bbgen3.c	/^extern int32 __emit_movw_fr_r(int32 dbl_ti)$/;"	f	signature:(int32 dbl_ti)
__emit_movw_fr_r_2state	./v_bbgen3.c	/^extern int32 __emit_movw_fr_r_2state(int32 dbl_ti)$/;"	f	signature:(int32 dbl_ti)
__emit_movw_fr_scal	./v_bbgen3.c	/^extern int32 __emit_movw_fr_scal(int32 blen, int32 rhs_ti, int32 is_stren)$/;"	f	signature:(int32 blen, int32 rhs_ti, int32 is_stren)
__emit_mult	./v_bbgen3.c	/^extern int32 __emit_mult(int32 blen, int32 op1, int32 op2)$/;"	f	signature:(int32 blen, int32 op1, int32 op2)
__emit_mult_real	./v_bbgen3.c	/^extern int32 __emit_mult_real(int32 op1_ti, int32 op2_ti)$/;"	f	signature:(int32 op1_ti, int32 op2_ti)
__emit_multfi_subr	./v_bbgen3.c	/^extern void __emit_multfi_subr(int32 ndx, struct net_t *np,$/;"	f	signature:(int32 ndx, struct net_t *np, struct mod_t *in_mdp)
__emit_narrow_byte_eq	./v_bbgen3.c	/^extern void __emit_narrow_byte_eq(int32 bytsiz, struct bblk_t *t_bbp, $/;"	f	signature:(int32 bytsiz, struct bblk_t *t_bbp, struct bblk_t *f_bbp, int32 op1_ti, int32 op2_ti)
__emit_nb_cur_tev_reg	./v_bbgen3.c	/^extern int32 __emit_nb_cur_tev_reg(void)$/;"	f	signature:(void)
__emit_nb_next_event	./v_bbgen3.c	/^extern void __emit_nb_next_event(int32 cur_tevp_reg_ti)$/;"	f	signature:(int32 cur_tevp_reg_ti)
__emit_nb_trigger_ectrl	./v_bbgen3.c	/^extern void __emit_nb_trigger_ectrl(int32 tevp_ti)$/;"	f	signature:(int32 tevp_ti)
__emit_ndx_jmp	./v_bbgen3.c	/^extern void __emit_ndx_jmp(int32 ndx_ti, struct bblk_t **bbtab, size_t jtabsiz)$/;"	f	signature:(int32 ndx_ti, struct bblk_t **bbtab, size_t jtabsiz)
__emit_new_auto_idp_area	./v_bbgen3.c	/^extern int32 __emit_new_auto_idp_area(int32 idp_ti)$/;"	f	signature:(int32 idp_ti)
__emit_new_narrow_word	./v_bbgen3.c	/^extern int32 __emit_new_narrow_word(int32 newwid, int32 rhs_ti, int32 is_2state)$/;"	f	signature:(int32 newwid, int32 rhs_ti, int32 is_2state)
__emit_next_event	./v_bbgen3.c	/^extern void __emit_next_event(void)$/;"	f	signature:(void)
__emit_next_nchg_event	./v_bbgen3.c	/^extern void __emit_next_nchg_event(void)$/;"	f	signature:(void)
__emit_param_informs	./v_fx3.c	/^extern void __emit_param_informs(void)$/;"	f	signature:(void)
__emit_path_distinform	./v_ex3.c	/^extern void __emit_path_distinform(struct net_t *np, struct pthdst_t *pdp,$/;"	f	signature:(struct net_t *np, struct pthdst_t *pdp, word64 *pdmindel)
__emit_path_pulsewarn	./v_ex3.c	/^extern void __emit_path_pulsewarn(struct pthdst_t *pdp, struct tev_t *tevp,$/;"	f	signature:(struct pthdst_t *pdp, struct tev_t *tevp, word64 *etim, word64 *newetim, char *sptnam, word32 is_stren)
__emit_path_samewarn	./v_ex3.c	/^extern void __emit_path_samewarn(struct net_t *np, int32 biti,$/;"	f	signature:(struct net_t *np, int32 biti, struct tev_t *tevp, word64 *etim, char *sptnam, word32 is_stren)
__emit_pend_chg_1gev	./v_bbgen3.c	/^extern void __emit_pend_chg_1gev(int32 gp_ti, int32 tevp_ti)$/;"	f	signature:(int32 gp_ti, int32 tevp_ti)
__emit_pend_chg_1gev_const	./v_bbgen3.c	/^extern void __emit_pend_chg_1gev_const(int32 tevp_ti)$/;"	f	signature:(int32 tevp_ti)
__emit_pend_nochg_1gev	./v_bbgen3.c	/^extern void __emit_pend_nochg_1gev(int32 tevp_ti)$/;"	f	signature:(int32 tevp_ti)
__emit_per_bit_xprop_accum	./v_bbgen3.c	/^extern int32 __emit_per_bit_xprop_accum(struct st_t *stp, int32 ndx,$/;"	f	signature:(struct st_t *stp, int32 ndx, int32 accum_ti)
__emit_pop_xstk	./v_bbgen3.c	/^extern void __emit_pop_xstk(int32 num_to_pop)$/;"	f	signature:(int32 num_to_pop)
__emit_power_real	./v_bbgen3.c	/^extern int32 __emit_power_real(int32 op1_ti, int32 op2_ti)$/;"	f	signature:(int32 op1_ti, int32 op2_ti)
__emit_process_enter_net_chg	./v_bbgen3.c	/^extern void __emit_process_enter_net_chg(int32 ndx)$/;"	f	signature:(int32 ndx)
__emit_process_enter_wire_ev	./v_bbgen3.c	/^extern void __emit_process_enter_wire_ev(int32 ndx)$/;"	f	signature:(int32 ndx)
__emit_process_mipd_nchg_ev	./v_bbgen3.c	/^extern void __emit_process_mipd_nchg_ev(int32 np_ti)$/;"	f	signature:(int32 np_ti)
__emit_process_mipd_scalar_nchg_ev	./v_bbgen3.c	/^extern void __emit_process_mipd_scalar_nchg_ev(int32 nchg_ti)$/;"	f	signature:(int32 nchg_ti)
__emit_process_trpthdst_enter	./v_bbgen3.c	/^extern void __emit_process_trpthdst_enter(int32 ndx)$/;"	f	signature:(int32 ndx)
__emit_psel_correct_frc	./v_bbgen3.c	/^extern int32 __emit_psel_correct_frc(int32 np_ti, int32 rhs_apti, int32 ri1,$/;"	f	signature:(int32 np_ti, int32 rhs_apti, int32 ri1, int32 ri2)
__emit_pulsewarn	./v_sim.c	/^extern void __emit_pulsewarn(struct gate_t *gp, struct tev_t *tevp,$/;"	f	signature:(struct gate_t *gp, struct tev_t *tevp, word64 *etim, word64 *newetim, char *sptnam)
__emit_qc_active	./v_bbgen3.c	/^extern int32 __emit_qc_active(int32 np_ti, int32 cint_ti)$/;"	f	signature:(int32 np_ti, int32 cint_ti)
__emit_qcol_comb_opands	./v_bbgen3.c	/^extern int32 __emit_qcol_comb_opands(int32 x1_apti, int32 x2_apti,$/;"	f	signature:(int32 x1_apti, int32 x2_apti, int32 opbits)
__emit_qcol_jmp_any1	./v_bbgen3.c	/^extern void __emit_qcol_jmp_any1(struct bblk_t *t_bbp, struct bblk_t *f_bbp,$/;"	f	signature:(struct bblk_t *t_bbp, struct bblk_t *f_bbp, int32 sel_apti, int32 sel_bpti, int32 blen)
__emit_random	./v_bbgen3.c	/^extern int32 __emit_random(void)$/;"	f	signature:(void)
__emit_random_with_seed	./v_bbgen3.c	/^extern int32 __emit_random_with_seed(int32 seed_ti)$/;"	f	signature:(int32 seed_ti)
__emit_real_abs	./v_bbgen3.c	/^extern int32 __emit_real_abs(int32 op1_ti)$/;"	f	signature:(int32 op1_ti)
__emit_real_div0_warning	./v_bbgen3.c	/^extern void __emit_real_div0_warning(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__emit_real_qcol_warning	./v_bbgen3.c	/^extern void __emit_real_qcol_warning(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__emit_realneg	./v_bbgen3.c	/^extern int32 __emit_realneg(int32 op1_ti)$/;"	f	signature:(int32 op1_ti)
__emit_reg_qcaf_inhibit	./v_bbgen3.c	/^extern int32 __emit_reg_qcaf_inhibit(int32 np_ti)$/;"	f	signature:(int32 np_ti)
__emit_repcnt_jmp	./v_bbgen3.c	/^extern void __emit_repcnt_jmp(struct bblk_t *t_bbp, struct bblk_t *f_bbp,$/;"	f	signature:(struct bblk_t *t_bbp, struct bblk_t *f_bbp, int32 rep_ti, int32 cnt_ti, int32 sign_ti)
__emit_reschd_caev	./v_bbgen3.c	/^extern void __emit_reschd_caev(int32 cap_ti, int32 tevp_ti) $/;"	f	signature:(int32 cap_ti, int32 tevp_ti)
__emit_reschd_caev_const	./v_bbgen3.c	/^extern void __emit_reschd_caev_const(int32 tevp_ti, word64 cadel)$/;"	f	signature:(int32 tevp_ti, word64 cadel)
__emit_reschedule_1wev32	./v_bbgen3.c	/^extern void __emit_reschedule_1wev32(int32 tevp_ti, int32 time_low_ti, $/;"	f	signature:(int32 tevp_ti, int32 time_low_ti, int32 time_high_ti)
__emit_reschedule_1wev64	./v_bbgen3.c	/^extern void __emit_reschedule_1wev64(int32 tevp_ti, int32 time_ti)$/;"	f	signature:(int32 tevp_ti, int32 time_ti)
__emit_restore_assoc_tsk	./v_bbgen3.c	/^extern void __emit_restore_assoc_tsk(int32 tsk_ti)$/;"	f	signature:(int32 tsk_ti)
__emit_restore_thd_idp	./v_bbgen3.c	/^extern int32 __emit_restore_thd_idp(void)$/;"	f	signature:(void)
__emit_return	./v_bbgen3.c	/^extern void __emit_return(void)$/;"	f	signature:(void)
__emit_rhs_conta_stren	./v_bbgen3.c	/^extern void __emit_rhs_conta_stren(int32 rhs_ti, int32 val, int32 bytlen)$/;"	f	signature:(int32 rhs_ti, int32 val, int32 bytlen)
__emit_rhs_psel	./v_bbgen3.c	/^extern int32 __emit_rhs_psel(int32 nadr_ti, int32 nadr_bpti, int32 bitl_ti, $/;"	f	signature:(int32 nadr_ti, int32 nadr_bpti, int32 bitl_ti, int32 numbits_ti)
__emit_rhs_psel_2state	./v_bbgen3.c	/^extern int32 __emit_rhs_psel_2state(int32 nadr_ti, int32 bitl_ti, $/;"	f	signature:(int32 nadr_ti, int32 bitl_ti, int32 numbits_ti)
__emit_rhs_psel_wide	./v_bbgen3.c	/^extern void __emit_rhs_psel_wide(int32 resadr_ti, int32 resadr_bpti, $/;"	f	signature:(int32 resadr_ti, int32 resadr_bpti, int32 nadr_ti, int32 nadr_bpti, int32 bitl_ti, int32 numbits_ti)
__emit_rhs_psel_wide_2state	./v_bbgen3.c	/^extern void __emit_rhs_psel_wide_2state(int32 resadr_ti, int32 nadr_ti, $/;"	f	signature:(int32 resadr_ti, int32 nadr_ti, int32 bitl_ti, int32 numbits_ti)
__emit_rhs_st_psel	./v_bbgen3.c	/^extern void __emit_rhs_st_psel(int32 res_apti, int32 addr_ti, int32 numbits_ti)$/;"	f	signature:(int32 res_apti, int32 addr_ti, int32 numbits_ti)
__emit_save_arg	./v_bbgen3.c	/^extern int32 __emit_save_arg(void)$/;"	f	signature:(void)
__emit_save_cur_idp	./v_bbgen3.c	/^extern int32 __emit_save_cur_idp(void)$/;"	f	signature:(void)
__emit_save_curthd_idp	./v_bbgen3.c	/^extern void __emit_save_curthd_idp(void)$/;"	f	signature:(void)
__emit_save_downidp	./v_bbgen3.c	/^extern int32 __emit_save_downidp(int32 idp_ti)$/;"	f	signature:(int32 idp_ti)
__emit_save_idp	./v_bbgen3.c	/^extern int32 __emit_save_idp(int32 idp_ti)$/;"	f	signature:(int32 idp_ti)
__emit_save_tevp_to_schd	./v_bbgen3.c	/^extern void __emit_save_tevp_to_schd(int32 tevp_ti, int32 schd_tev_ti)$/;"	f	signature:(int32 tevp_ti, int32 schd_tev_ti)
__emit_scalar_wire_inhibit	./v_bbgen3.c	/^extern int32 __emit_scalar_wire_inhibit(int32 np_ti)$/;"	f	signature:(int32 np_ti)
__emit_schd_1gev	./v_bbgen3.c	/^extern void __emit_schd_1gev(int32 gp_ti, int32 tevp_ti)$/;"	f	signature:(int32 gp_ti, int32 tevp_ti)
__emit_schd_1gev_const	./v_bbgen3.c	/^extern void __emit_schd_1gev_const(int32 tevp_ti)$/;"	f	signature:(int32 tevp_ti)
__emit_schd_1gev_pnd0	./v_bbgen3.c	/^extern void __emit_schd_1gev_pnd0(int32 tevp_ti)$/;"	f	signature:(int32 tevp_ti)
__emit_schd_bidpthdrvrs	./v_bbgen3.c	/^extern int32 __emit_schd_bidpthdrvrs(int32 np_ti, int32 drv_ti, int32 tran_ti,$/;"	f	signature:(int32 np_ti, int32 drv_ti, int32 tran_ti, int32 bi_ti, int32 tevp_ti)
__emit_schd_caev	./v_bbgen3.c	/^extern void __emit_schd_caev(int32 cap_ti, int32 tevp_ti)$/;"	f	signature:(int32 cap_ti, int32 tevp_ti)
__emit_schd_caev_const	./v_bbgen3.c	/^extern void __emit_schd_caev_const(int32 tevp_ti, word64 cadel)$/;"	f	signature:(int32 tevp_ti, word64 cadel)
__emit_schd_fork	./v_bbgen3.c	/^extern void __emit_schd_fork(int32 stp_ti, int32 nxt_stp_ti)$/;"	f	signature:(int32 stp_ti, int32 nxt_stp_ti)
__emit_schd_nb_vardel_rhsconst_dctrl	./v_bbgen3.c	/^extern void __emit_schd_nb_vardel_rhsconst_dctrl(int32 stp_ti, int32 enter_ti)$/;"	f	signature:(int32 stp_ti, int32 enter_ti)
__emit_schd_nbrhs_dctrl	./v_bbgen3.c	/^extern int32 __emit_schd_nbrhs_dctrl(int32 stp_ti, int32 tevp_ti, int32 nbytes)$/;"	f	signature:(int32 stp_ti, int32 tevp_ti, int32 nbytes)
__emit_schd_nbrhs_dctrl_const	./v_bbgen3.c	/^extern int32 __emit_schd_nbrhs_dctrl_const(int32 tevp_ti, int32 nbytes,$/;"	f	signature:(int32 tevp_ti, int32 nbytes, int32 is_last)
__emit_schd_nbrhs_nomem_dctrl_const	./v_bbgen3.c	/^extern void __emit_schd_nbrhs_nomem_dctrl_const(int32 tevp_ti, int32 is_last)$/;"	f	signature:(int32 tevp_ti, int32 is_last)
__emit_schd_nbrhs_scalar_dctrl	./v_bbgen3.c	/^extern void __emit_schd_nbrhs_scalar_dctrl(int32 tevp_ti, int32 stp_ti, $/;"	f	signature:(int32 tevp_ti, int32 stp_ti, int32 rhs_ti)
__emit_schd_nbrhs_scalar_dctrl_const	./v_bbgen3.c	/^extern void __emit_schd_nbrhs_scalar_dctrl_const(int32 tevp_ti, int32 rhs_ti,$/;"	f	signature:(int32 tevp_ti, int32 rhs_ti, int32 is_last)
__emit_schd_nbrhs_varndx_dctrl	./v_bbgen3.c	/^extern int32 __emit_schd_nbrhs_varndx_dctrl(int32 stp_ti, int32 bi_ti, $/;"	f	signature:(int32 stp_ti, int32 bi_ti, int32 nbytes, int32 tevp_ti, int32 sel_ti)
__emit_schd_nbrhs_varndx_dctrl_concat	./v_bbgen3.c	/^extern int32 __emit_schd_nbrhs_varndx_dctrl_concat(int32 stp_ti, int32 np_ti,$/;"	f	signature:(int32 stp_ti, int32 np_ti, int32 bi_ti, int32 nbytes, int32 tevp_ti, int32 nchg_ti)
__emit_schd_nbrhs_varndx_dctrl_const	./v_bbgen3.c	/^extern int32 __emit_schd_nbrhs_varndx_dctrl_const(int32 bi_ti, int32 nbytes, $/;"	f	signature:(int32 bi_ti, int32 nbytes, int32 tevp_ti, int32 sel_ti)
__emit_schd_nbrhs_varndx_dctrl_const_concat	./v_bbgen3.c	/^extern int32 __emit_schd_nbrhs_varndx_dctrl_const_concat(int32 np_ti, $/;"	f	signature:(int32 np_ti, int32 bi_ti, int32 nbytes, int32 tevp_ti, int32 nchg_ti)
__emit_schd_scalar_bidpthdrvrs	./v_bbgen3.c	/^extern int32 __emit_schd_scalar_bidpthdrvrs(int32 np_ti, int32 drv_ti, $/;"	f	signature:(int32 np_ti, int32 drv_ti, int32 tran_ti, int32 bi_ti, int32 tevp_ti)
__emit_sched_1pthbit	./v_bbgen3.c	/^extern void __emit_sched_1pthbit(int32 np_ti, int32 bi_ti, int32 nscalw_ti,$/;"	f	signature:(int32 np_ti, int32 bi_ti, int32 nscalw_ti, int32 oscalw_ti, int32 nchg_ti, int32 enter_ti, int32 has_stren)
__emit_sched_1pthbit_nomsg	./v_bbgen3.c	/^extern void __emit_sched_1pthbit_nomsg(int32 np_ti, int32 bi_ti, $/;"	f	signature:(int32 np_ti, int32 bi_ti, int32 nscalw_ti, int32 oscalw_ti, int32 nchg_ti, int32 enter_ti)
__emit_sched_1wirbit	./v_bbgen3.c	/^extern void __emit_sched_1wirbit(int32 np_ti, int32 bi_ti, int32 nscalw_ti, $/;"	f	signature:(int32 np_ti, int32 bi_ti, int32 nscalw_ti, int32 oscalw_ti, int32 tevp_ti)
__emit_sched_nb_pnd0_lhs_varndx	./v_bbgen3.c	/^extern int32 __emit_sched_nb_pnd0_lhs_varndx(int32 bi_ti, int32 nbytes, $/;"	f	signature:(int32 bi_ti, int32 nbytes, int32 tevp_ti, int32 sel_ti)
__emit_sched_nb_pnd0_lhs_varndx_concat	./v_bbgen3.c	/^extern int32 __emit_sched_nb_pnd0_lhs_varndx_concat(int32 np_ti, int32 bi_ti, $/;"	f	signature:(int32 np_ti, int32 bi_ti, int32 nbytes, int32 tevp_ti, int32 nchg_ti)
__emit_sched_scalar_1pthbit	./v_bbgen3.c	/^extern void __emit_sched_scalar_1pthbit(int32 np_ti, int32 nscalw_ti,$/;"	f	signature:(int32 np_ti, int32 nscalw_ti, int32 oscalw_ti, int32 nchg_ti, int32 tevp_ti, int32 has_stren)
__emit_sched_scalar_mipd	./v_bbgen3.c	/^extern void __emit_sched_scalar_mipd(int32 np_ti, int32 tevp_ti,$/;"	f	signature:(int32 np_ti, int32 tevp_ti, struct net_pin_t *npp)
__emit_sched_unknown_bit	./v_bbgen3.c	/^extern void __emit_sched_unknown_bit(int32 np_ti, int32 rhs_apti, $/;"	f	signature:(int32 np_ti, int32 rhs_apti, int32 tevp_ti)
__emit_sched_vec_mipd_bit	./v_bbgen3.c	/^extern void __emit_sched_vec_mipd_bit(int32 np_ti, int32 tevp_ti, int32 bi)$/;"	f	signature:(int32 np_ti, int32 tevp_ti, int32 bi)
__emit_schedule_1wev	./v_bbgen3.c	/^extern void __emit_schedule_1wev(int32 tevp_ti, int32 biti_ti)$/;"	f	signature:(int32 tevp_ti, int32 biti_ti)
__emit_schedule_scalar_1wev	./v_bbgen3.c	/^extern void __emit_schedule_scalar_1wev(int32 tevp_ti)$/;"	f	signature:(int32 tevp_ti)
__emit_set_dce_rng	./v_bbgen3.c	/^extern void __emit_set_dce_rng(int32 ri1, int32 ri2, int32 is_const)$/;"	f	signature:(int32 ri1, int32 ri2, int32 is_const)
__emit_set_new_gateval	./v_bbgen3.c	/^extern void __emit_set_new_gateval(int32 op1_ti)$/;"	f	signature:(int32 op1_ti)
__emit_set_new_inval	./v_bbgen3.c	/^extern void __emit_set_new_inval(int32 op1_ti)$/;"	f	signature:(int32 op1_ti)
__emit_set_old_gateval	./v_bbgen3.c	/^extern void __emit_set_old_gateval(int32 op1_ti)$/;"	f	signature:(int32 op1_ti)
__emit_set_restore_xprop_accum_block	./v_bbgen3.c	/^extern void __emit_set_restore_xprop_accum_block(struct st_t *stp, $/;"	f	signature:(struct st_t *stp, int32 xblock_ti)
__emit_set_restore_xprop_accum_block_nodefault	./v_bbgen3.c	/^extern void __emit_set_restore_xprop_accum_block_nodefault(struct st_t *stp, $/;"	f	signature:(struct st_t *stp, int32 num_matched_ti, int32 xcount_ti)
__emit_set_restore_xprop_accum_block_toself	./v_bbgen3.c	/^extern void __emit_set_restore_xprop_accum_block_toself(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__emit_set_tev_enter_adr_xprop	./v_bbgen3.c	/^extern void __emit_set_tev_enter_adr_xprop(int32 tevp_ti, int32 enter_ti)$/;"	f	signature:(int32 tevp_ti, int32 enter_ti)
__emit_set_tev_gate_val	./v_bbgen3.c	/^extern void __emit_set_tev_gate_val(int32 tevp_reg_ti, int32 new_gateval_ti)$/;"	f	signature:(int32 tevp_reg_ti, int32 new_gateval_ti)
__emit_set_tevp_trigger_off	./v_bbgen3.c	/^extern void __emit_set_tevp_trigger_off(int32 tevp_reg_ti)$/;"	f	signature:(int32 tevp_reg_ti)
__emit_set_thd_actionst	./v_bbgen3.c	/^extern void __emit_set_thd_actionst(struct st_t *nxtstp)$/;"	f	signature:(struct st_t *nxtstp)
__emit_set_thd_nxtst	./v_bbgen3.c	/^extern int32 __emit_set_thd_nxtst(struct st_t *nxtstp)$/;"	f	signature:(struct st_t *nxtstp)
__emit_set_xprop_accum_block	./v_bbgen3.c	/^extern void __emit_set_xprop_accum_block(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__emit_setall1	./v_bbgen3.c	/^extern void __emit_setall1(int32 op1_ti, int32 nbytes)$/;"	f	signature:(int32 op1_ti, int32 nbytes)
__emit_setr0	./v_bbgen3.c	/^extern void __emit_setr0(int32 r_ti)$/;"	f	signature:(int32 r_ti)
__emit_setsave_assoc_tsk	./v_bbgen3.c	/^extern int32 __emit_setsave_assoc_tsk(int32 stp_ti)$/;"	f	signature:(int32 stp_ti)
__emit_setstren	./v_bbgen3.c	/^extern void __emit_setstren(int32 sbp_ti, int32 sval, int32 blen)$/;"	f	signature:(int32 sbp_ti, int32 sval, int32 blen)
__emit_setup_namblk	./v_bbgen3.c	/^extern void __emit_setup_namblk(int32 stp_ti)$/;"	f	signature:(int32 stp_ti)
__emit_setup_task_thd	./v_bbgen3.c	/^extern void __emit_setup_task_thd(int32 stp_ti, int32 nxt_stp_ti)$/;"	f	signature:(int32 stp_ti, int32 nxt_stp_ti)
__emit_setup_task_thd_auto	./v_bbgen3.c	/^extern void __emit_setup_task_thd_auto(int32 stp_ti, int32 nxt_stp_ti, $/;"	f	signature:(int32 stp_ti, int32 nxt_stp_ti, int32 saved_idp_ti)
__emit_sgn_arshift	./v_bbgen3.c	/^extern int32 __emit_sgn_arshift(int32 blen, int32 op1_ti, int32 op2_ti)$/;"	f	signature:(int32 blen, int32 op1_ti, int32 op2_ti)
__emit_sgn_div	./v_bbgen3.c	/^extern int32 __emit_sgn_div(int32 blen, int32 op1_ti, int32 op2_ti, $/;"	f	signature:(int32 blen, int32 op1_ti, int32 op2_ti, int32 is_2state)
__emit_sgn_mod	./v_bbgen3.c	/^extern int32 __emit_sgn_mod(int32 blen, int32 op1_ti, int32 op2_ti, $/;"	f	signature:(int32 blen, int32 op1_ti, int32 op2_ti, int32 is_2state)
__emit_sgn_mult	./v_bbgen3.c	/^extern int32 __emit_sgn_mult(int32 blen, int32 op1, int32 op2)$/;"	f	signature:(int32 blen, int32 op1, int32 op2)
__emit_sgnbit_on_jmp	./v_bbgen3.c	/^extern void __emit_sgnbit_on_jmp(struct bblk_t *t_bbp, struct bblk_t *f_bbp,$/;"	f	signature:(struct bblk_t *t_bbp, struct bblk_t *f_bbp, int32 op_ti)
__emit_sgnmask	./v_bbgen3.c	/^extern void __emit_sgnmask(int32 res_ti, int32 op1_ti, int32 blen)$/;"	f	signature:(int32 res_ti, int32 op1_ti, int32 blen)
__emit_shiftl	./v_bbgen3.c	/^extern int32 __emit_shiftl(int32 blen, int32 op1_ti, int32 op2_ti)$/;"	f	signature:(int32 blen, int32 op1_ti, int32 op2_ti)
__emit_shiftr	./v_bbgen3.c	/^extern int32 __emit_shiftr(int32 blen, int32 op1_ti, int32 op2_ti)$/;"	f	signature:(int32 blen, int32 op1_ti, int32 op2_ti)
__emit_srep_mask_and	./v_bbgen3.c	/^extern int32 __emit_srep_mask_and(int32 srep, int32 blen, int32 wadr_ti, $/;"	f	signature:(int32 srep, int32 blen, int32 wadr_ti, int32 mask_ti)
__emit_st_const_bsel	./v_bbgen3.c	/^extern void __emit_st_const_bsel(int32 lhs_ti, int32 rhs_ti, int32 bi1)$/;"	f	signature:(int32 lhs_ti, int32 rhs_ti, int32 bi1)
__emit_st_psel	./v_bbgen3.c	/^extern void __emit_st_psel(int32 dst_ti, int32 val_ti, int32 lowbi_ti,$/;"	f	signature:(int32 dst_ti, int32 val_ti, int32 lowbi_ti, int32 numbits_ti)
__emit_st_sete	./v_bbgen3.c	/^extern void __emit_st_sete(int32 jmptyp, int32 st_into)$/;"	f	signature:(int32 jmptyp, int32 st_into)
__emit_st_string_array_const	./v_bbgen3.c	/^extern void __emit_st_string_array_const(struct net_t *lhs_np, int32 arri_ti,$/;"	f	signature:(struct net_t *lhs_np, int32 arri_ti, int32 rhs_ti, int32 width_ti)
__emit_st_string_array_rhsx	./v_bbgen3.c	/^extern void __emit_st_string_array_rhsx(struct net_t *lhs_np, $/;"	f	signature:(struct net_t *lhs_np, struct expr_t *rhsx, int32 arri_ti)
__emit_st_string_array_var	./v_bbgen3.c	/^extern void __emit_st_string_array_var(struct net_t *lhs_np, $/;"	f	signature:(struct net_t *lhs_np, struct net_t *rhs_np, int32 arri_ti)
__emit_st_string_byte	./v_bbgen3.c	/^extern void __emit_st_string_byte(struct net_t *lhs_np, int32 bi_ti,$/;"	f	signature:(struct net_t *lhs_np, int32 bi_ti, int32 rhs_ti)
__emit_st_thd_ret_lab_ndx	./v_bbgen3.c	/^extern void __emit_st_thd_ret_lab_ndx(int32 thdjmp_ndx_ti)$/;"	f	signature:(int32 thdjmp_ndx_ti)
__emit_stmt_assign_to_accum_1w	./v_bbgen3.c	/^extern void __emit_stmt_assign_to_accum_1w(struct st_t *stp, $/;"	f	signature:(struct st_t *stp, struct st_t *xprop_stp, int32 rhs_ti, int32 rhs_bpti)
__emit_stmt_assign_to_accum_id_1w	./v_bbgen3.c	/^extern void __emit_stmt_assign_to_accum_id_1w(struct net_t *np, $/;"	f	signature:(struct net_t *np, struct st_t *xprop_stp, int32 rhs_ti, int32 rhs_bpti)
__emit_stmt_assign_to_accum_id_wide	./v_bbgen3.c	/^extern void __emit_stmt_assign_to_accum_id_wide(struct net_t *np, $/;"	f	signature:(struct net_t *np, struct st_t *xprop_stp, int32 rhs_ti, int32 rhs_bpti)
__emit_stmt_assign_to_accum_wide	./v_bbgen3.c	/^extern void __emit_stmt_assign_to_accum_wide(struct st_t *stp, $/;"	f	signature:(struct st_t *stp, struct st_t *xprop_stp, int32 rhs_ti, int32 rhs_bpti)
__emit_stmt_coverage	./v_bbgen3.c	/^extern void __emit_stmt_coverage(struct st_t *stp) $/;"	f	signature:(struct st_t *stp)
__emit_store_bidpthdrvrs	./v_bbgen3.c	/^extern void __emit_store_bidpthdrvrs(int32 np_ti, int32 tran_ti, int32 bi_ti)$/;"	f	signature:(int32 np_ti, int32 tran_ti, int32 bi_ti)
__emit_store_cint	./v_bbgen3.c	/^extern void __emit_store_cint(int32 op1_ti, int32 val, int32 bytsiz)$/;"	f	signature:(int32 op1_ti, int32 val, int32 bytsiz)
__emit_stren_comb_bits	./v_bbgen3.c	/^extern void __emit_stren_comb_bits(int32 ntyp, int32 accum_sbpti, int32 abi1, $/;"	f	signature:(int32 ntyp, int32 accum_sbpti, int32 abi1, int32 abi2, int32 res_sbpti, int32 is_const)
__emit_stren_correct_frc	./v_bbgen3.c	/^extern int32 __emit_stren_correct_frc(int32 np_ti, int32 rhs_apti)$/;"	f	signature:(int32 np_ti, int32 rhs_apti)
__emit_stren_map_tab	./v_bbgen3.c	/^extern int32 __emit_stren_map_tab(int32 t_ti)$/;"	f	signature:(int32 t_ti)
__emit_stren_pend_chg_1gev	./v_bbgen3.c	/^extern void __emit_stren_pend_chg_1gev(int32 gp_ti, int32 tevp_ti)$/;"	f	signature:(int32 gp_ti, int32 tevp_ti)
__emit_stren_psel_correct_frc	./v_bbgen3.c	/^extern int32 __emit_stren_psel_correct_frc(int32 np_ti, int32 sbp_ti,$/;"	f	signature:(int32 np_ti, int32 sbp_ti, int32 ri1, int32 ri2)
__emit_stren_schd_1gev	./v_bbgen3.c	/^extern void __emit_stren_schd_1gev(int32 gp_ti, int32 tevp_ti)$/;"	f	signature:(int32 gp_ti, int32 tevp_ti)
__emit_stren_schd_bidpthdrvrs	./v_bbgen3.c	/^extern int32 __emit_stren_schd_bidpthdrvrs(int32 np_ti, int32 drv_ti,$/;"	f	signature:(int32 np_ti, int32 drv_ti, int32 tran_ti, int32 bi_ti, int32 tevp_ti)
__emit_stren_sched_1pthbit	./v_bbgen3.c	/^extern void __emit_stren_sched_1pthbit(int32 np_ti, int32 bi_ti,$/;"	f	signature:(int32 np_ti, int32 bi_ti, int32 nscalw_ti, int32 oscalw_ti, int32 nchg_ti, int32 tevp_ti)
__emit_stren_sched_1wirbit	./v_bbgen3.c	/^extern void __emit_stren_sched_1wirbit(int32 np_ti, int32 bi_ti,$/;"	f	signature:(int32 np_ti, int32 bi_ti, int32 nscalw_ti, int32 oscalw_ti, int32 tevp_ti)
__emit_stren_sched_unknown_bit	./v_bbgen3.c	/^extern void __emit_stren_sched_unknown_bit(int32 np_ti, int32 rhs_apti, $/;"	f	signature:(int32 np_ti, int32 rhs_apti, int32 oldsbp_ti, int32 nchg_ti, int32 tevp_ti)
__emit_stsk_endmsg	./v_ex.c	/^extern void __emit_stsk_endmsg(void)$/;"	f	signature:(void)
__emit_stskcall	./v_bbgen3.c	/^extern void __emit_stskcall(int32 stp_ti)$/;"	f	signature:(int32 stp_ti)
__emit_sub	./v_bbgen3.c	/^extern int32 __emit_sub(int32 blen, int32 op1, int32 op2)$/;"	f	signature:(int32 blen, int32 op1, int32 op2)
__emit_sub_real	./v_bbgen3.c	/^extern int32 __emit_sub_real(int32 op1_ti, int32 op2_ti)$/;"	f	signature:(int32 op1_ti, int32 op2_ti)
__emit_suspend	./v_bbgen3.c	/^extern void __emit_suspend(void)$/;"	f	signature:(void)
__emit_sv_dpi_string	./v_bbgen3.c	/^extern int32 __emit_sv_dpi_string(struct expr_t *lhsx, int32 nchars_ti)$/;"	f	signature:(struct expr_t *lhsx, int32 nchars_ti)
__emit_sv_dpi_string_store	./v_bbgen3.c	/^extern void __emit_sv_dpi_string_store(struct net_t *np, int32 cp_ti)$/;"	f	signature:(struct net_t *np, int32 cp_ti)
__emit_sv_string_st_const	./v_bbgen3.c	/^extern void __emit_sv_string_st_const(struct net_t *np, int32 rhs_apti)$/;"	f	signature:(struct net_t *np, int32 rhs_apti)
__emit_sv_string_st_eval_rhsx	./v_bbgen3.c	/^extern void __emit_sv_string_st_eval_rhsx(struct net_t *lhs_np, $/;"	f	signature:(struct net_t *lhs_np, struct expr_t *rhsx)
__emit_sv_string_st_var	./v_bbgen3.c	/^extern void __emit_sv_string_st_var(struct net_t *lhs_np, struct net_t *rhs_np)$/;"	f	signature:(struct net_t *lhs_np, struct net_t *rhs_np)
__emit_swap_sign	./v_bbgen3.c	/^extern int32 __emit_swap_sign(int32 blen, int32 op1_ti)$/;"	f	signature:(int32 blen, int32 op1_ti)
__emit_sxtnd_widwdn	./v_bbgen3.c	/^extern void __emit_sxtnd_widwdn(int32 op1_ti, int32 op2_ti, int32 rhswid,$/;"	f	signature:(int32 op1_ti, int32 op2_ti, int32 rhswid, int32 dstwid, int32 is_2state)
__emit_sysfcall	./v_bbgen3.c	/^extern void __emit_sysfcall(int32 fcallx_ti, int32 xstk_apti)$/;"	f	signature:(int32 fcallx_ti, int32 xstk_apti)
__emit_sysfcall_stmtloc	./v_bbgen3.c	/^extern void __emit_sysfcall_stmtloc(int32 fcallx_ti, int32 xstk_apti, $/;"	f	signature:(int32 fcallx_ti, int32 xstk_apti, struct st_t *stp)
__emit_testl	./v_bbgen3.c	/^extern void __emit_testl(int32 op1_ti)$/;"	f	signature:(int32 op1_ti)
__emit_thread_auto_cleanup	./v_bbgen3.c	/^extern int32 __emit_thread_auto_cleanup(void)$/;"	f	signature:(void)
__emit_timing_check_record	./v_bbgen3.c	/^extern void __emit_timing_check_record(int32 tchg_adr_ti)$/;"	f	signature:(int32 tchg_adr_ti)
__emit_todowniconn_inst	./v_bbgen3.c	/^extern int32 __emit_todowniconn_inst(int32 inum)$/;"	f	signature:(int32 inum)
__emit_toscal_2s_fr_scal_4s	./v_bbgen3.c	/^extern int32 __emit_toscal_2s_fr_scal_4s(int32 rhs_ti, int32 is_stren)$/;"	f	signature:(int32 rhs_ti, int32 is_stren)
__emit_toupmdprt_inst	./v_bbgen3.c	/^extern int32 __emit_toupmdprt_inst(void)$/;"	f	signature:(void)
__emit_trace_xprop_write	./v_bbgen3.c	/^extern void __emit_trace_xprop_write(struct st_t *stp, int32 aval_ti, $/;"	f	signature:(struct st_t *stp, int32 aval_ti, int32 bval_ti, int32 blen)
__emit_trace_xprop_write_wide	./v_bbgen3.c	/^extern void __emit_trace_xprop_write_wide(struct st_t *stp, int32 aval_ti, $/;"	f	signature:(struct st_t *stp, int32 aval_ti, int32 bval_ti, int32 blen)
__emit_tran_addr	./v_bbgen3.c	/^extern int32 __emit_tran_addr(int32 np_ti) $/;"	f	signature:(int32 np_ti)
__emit_trigger_ectrl	./v_bbgen3.c	/^extern void __emit_trigger_ectrl(int32 tevp_ti, struct delctrl_t *dctp) $/;"	f	signature:(int32 tevp_ti, struct delctrl_t *dctp)
__emit_trigger_ectrl_xprop	./v_bbgen3.c	/^extern void __emit_trigger_ectrl_xprop(int32 tevp_ti, struct delctrl_t *dctp,$/;"	f	signature:(int32 tevp_ti, struct delctrl_t *dctp, int32 stp_ti)
__emit_trpath_scalar_store	./v_bbgen3.c	/^extern int32 __emit_trpath_scalar_store(int32 np_ti, int32 new_ti)$/;"	f	signature:(int32 np_ti, int32 new_ti)
__emit_trpath_store	./v_bbgen3.c	/^extern int32 __emit_trpath_store(int32 np_ti, int32 new_ti, int32 bi_ti)$/;"	f	signature:(int32 np_ti, int32 new_ti, int32 bi_ti)
__emit_tsk_return	./v_bbgen3.c	/^extern void __emit_tsk_return(void)$/;"	f	signature:(void)
__emit_tskdone_cleanup	./v_bbgen3.c	/^extern void __emit_tskdone_cleanup(void)$/;"	f	signature:(void)
__emit_tskdone_cleanup_auto	./v_bbgen3.c	/^extern void __emit_tskdone_cleanup_auto(void)$/;"	f	signature:(void)
__emit_udp_wide_adjust_state	./v_bbgen3.c	/^extern int32 __emit_udp_wide_adjust_state(int32 gstate_ti, int32 nins_ti)$/;"	f	signature:(int32 gstate_ti, int32 nins_ti)
__emit_update_tran_harddrvs	./v_bbgen3.c	/^extern int32 __emit_update_tran_harddrvs(int32 np_ti)$/;"	f	signature:(int32 np_ti)
__emit_uprel_targ_to_ref	./v_bbgen3.c	/^extern int32 __emit_uprel_targ_to_ref(int32 gref_ti)$/;"	f	signature:(int32 gref_ti)
__emit_uredxor	./v_bbgen3.c	/^extern int32 __emit_uredxor(int32 op1_ti)$/;"	f	signature:(int32 op1_ti)
__emit_vpi_iniact_warn	./v_vpi3.c	/^extern void __emit_vpi_iniact_warn(void)$/;"	f	signature:(void)
__emit_vpi_noiact_warn	./v_vpi3.c	/^extern void __emit_vpi_noiact_warn(void)$/;"	f	signature:(void)
__emit_wdel_trireg_hiz	./v_bbgen3.c	/^extern void __emit_wdel_trireg_hiz(int32 np_ti, $/;"	f	signature:(int32 np_ti, int32 oldval_ti, int32 newsbp_ti, int32 biti_ti, int32 ctevp_ti)
__emit_wid_bin_redor	./v_bbgen3.c	/^extern int32 __emit_wid_bin_redor(int32 blen, int32 op1_ti, int32 op2_ti)$/;"	f	signature:(int32 blen, int32 op1_ti, int32 op2_ti)
__emit_wid_bin_redxnor	./v_bbgen3.c	/^extern int32 __emit_wid_bin_redxnor(int32 blen, int32 op1_ti, int32 op2_ti,$/;"	f	signature:(int32 blen, int32 op1_ti, int32 op2_ti, int32 is_2state)
__emit_wid_un_redor	./v_bbgen3.c	/^extern int32 __emit_wid_un_redor(int32 op1_ti, int32 blen, int32 need_xprop)$/;"	f	signature:(int32 op1_ti, int32 blen, int32 need_xprop)
__emit_wid_unbitnot	./v_bbgen3.c	/^extern void __emit_wid_unbitnot(int32 blen, int32 res_ti, int32 op1_ti,$/;"	f	signature:(int32 blen, int32 res_ti, int32 op1_ti, int32 is_2state)
__emit_widcas	./v_bbgen3.c	/^extern int32 __emit_widcas(int32 sel_ti, int32 match_ti, int32 wlen)$/;"	f	signature:(int32 sel_ti, int32 match_ti, int32 wlen)
__emit_widcasx	./v_bbgen3.c	/^extern int32 __emit_widcasx(int32 sel_ti, int32 match_ti, int32 wlen)$/;"	f	signature:(int32 sel_ti, int32 match_ti, int32 wlen)
__emit_widcasz	./v_bbgen3.c	/^extern int32 __emit_widcasz(int32 sel_ti, int32 match_ti, int32 wlen)$/;"	f	signature:(int32 sel_ti, int32 match_ti, int32 wlen)
__emit_wide_cvt_bool	./v_bbgen3.c	/^extern int32 __emit_wide_cvt_bool(int32 op1_ti, int32 op2_ti)$/;"	f	signature:(int32 op1_ti, int32 op2_ti)
__emit_wide_lpow	./v_bbgen3.c	/^extern int32 __emit_wide_lpow(int32 op1, int32 op2, int32 blen)$/;"	f	signature:(int32 op1, int32 op2, int32 blen)
__emit_wide_sgn_lpow	./v_bbgen3.c	/^extern int32 __emit_wide_sgn_lpow(int32 op1, int32 op2, int32 blen, $/;"	f	signature:(int32 op1, int32 op2, int32 blen, int32 is_2state)
__emit_wordcmp	./v_bbgen3.c	/^extern int32 __emit_wordcmp(int32 wlen, int32 op1_ti, int32 op2_ti)$/;"	f	signature:(int32 wlen, int32 op1_ti, int32 op2_ti)
__emit_xmr_rooted_base	./v_bbgen3.c	/^extern int32 __emit_xmr_rooted_base(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__emit_xprop_check_case_net_set	./v_bbgen3.c	/^extern void __emit_xprop_check_case_net_set(struct st_t *stp, int32 matched_ti)$/;"	f	signature:(struct st_t *stp, int32 matched_ti)
__emit_xprop_set_xedge_net	./v_bbgen3.c	/^extern void __emit_xprop_set_xedge_net(struct st_t *stp, struct net_t *np,$/;"	f	signature:(struct st_t *stp, struct net_t *np, int32 setval_ti)
__emit_xprop_xcount	./v_bbgen3.c	/^extern int32 __emit_xprop_xcount(int32 op_ti)$/;"	f	signature:(int32 op_ti)
__emit_xprop_xedge_net	./v_bbgen3.c	/^extern int32 __emit_xprop_xedge_net(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__end_ca	./cvc.c	/^struct conta_t *__end_ca; \/* end of module conta list *\/$/;"	v	typeref:struct:conta_t
__end_comp_mstime	./cvc.c	/^time_t __end_comp_mstime;$/;"	v
__end_comp_time	./cvc.c	/^time_t __end_comp_time;\/* end of compilation time *\/$/;"	v
__end_cp	./cvc.c	/^struct cell_t *__end_cp; \/* end of module inst. list *\/$/;"	v	typeref:struct:cell_t
__end_dfp	./cvc.c	/^struct dfparam_t *__end_dfp;\/* module current end of defparam list *\/$/;"	v	typeref:struct:dfparam_t
__end_glbparamnp	./cvc.c	/^struct net_t *__end_glbparamnp; \/* end of ordered glb parm decl. lst *\/$/;"	v	typeref:struct:net_t
__end_ialst	./cvc.c	/^struct ialst_t *__end_ialst; \/* end of module initial\/always list *\/$/;"	v	typeref:struct:ialst_t
__end_impparamnp	./cvc.c	/^struct net_t *__end_impparamnp; \/* end of ordered imprt parm decl lst *\/$/;"	v	typeref:struct:net_t
__end_loc_paramnp	./cvc.c	/^struct net_t *__end_loc_paramnp; \/* end of ordered parm loc decl. list *\/$/;"	v	typeref:struct:net_t
__end_mdp	./cvc.c	/^struct mod_t *__end_mdp; \/* end of module def. list *\/$/;"	v	typeref:struct:mod_t
__end_mod_varinitlst	./cvc.c	/^struct varinitlst_t *__end_mod_varinitlst; \/* end of mod var inits *\/$/;"	v	typeref:struct:varinitlst_t
__end_msprms	./cvc.c	/^struct net_t *__end_msprms;\/* end of specify specparam net list *\/$/;"	v	typeref:struct:net_t
__end_mstime	./cvc.c	/^time_t __end_mstime;   \/* start and end wall clock times *\/$/;"	v
__end_paramnp	./cvc.c	/^struct net_t *__end_paramnp; \/* end of ordered parm decl. list *\/$/;"	v	typeref:struct:net_t
__end_prep_mstime	./cvc.c	/^time_t __end_prep_mstime;$/;"	v
__end_prep_time	./cvc.c	/^time_t __end_prep_time;\/* end of preparation time *\/$/;"	v
__end_sp	./cvc.c	/^char *__start_sp, *__end_sp;\/* pointer for "big" memory allocator *\/$/;"	v
__end_spcpths	./cvc.c	/^struct spcpth_t *__end_spcpths; \/* end of specify path st. list *\/$/;"	v	typeref:struct:spcpth_t
__end_tbp	./cvc.c	/^struct task_t *__end_tbp;\/* end of top level task\/functions\/blocks *\/$/;"	v	typeref:struct:task_t
__end_tchks	./cvc.c	/^struct tchk_t *__end_tchks;\/* end of specify time check st. list *\/$/;"	v	typeref:struct:tchk_t
__end_time	./cvc.c	/^time_t __end_time;     \/* start and end wall clock times *\/$/;"	v
__end_tpp	./cvc.c	/^struct task_pin_t *__end_tpp; \/* end of task port list *\/$/;"	v	typeref:struct:task_pin_t
__end_tsk_loc_paramnp	./cvc.c	/^struct net_t *__end_tsk_loc_paramnp; \/* end of task param decl. list *\/$/;"	v	typeref:struct:net_t
__end_tskparamnp	./cvc.c	/^struct net_t *__end_tskparamnp; \/* end of task param decl. list *\/$/;"	v	typeref:struct:net_t
__end_vy	./cvc.c	/^struct vylib_t *__end_vy;\/* last entry on vy lib. list *\/$/;"	v	typeref:struct:vylib_t
__enter_bblk_valnum	./v_bbgen.c	/^int32 __enter_bblk_valnum; \/* value number at start of cur bblk *\/$/;"	v
__enter_bbp	./v_bbgen.c	/^struct bblk_t *__enter_bbp;\/* entry (1st) bblk in flow graph *\/$/;"	v	typeref:struct:bblk_t
__enter_dce_seq_no	./v_bbgen.c	/^int32 __enter_dce_seq_no; \/* counter for creating enter dce numbers *\/$/;"	v
__enter_seq_no	./v_bbgen.c	/^int32 __enter_seq_no;  \/* counter for creating lab numbers *\/$/;"	v
__enum_is_suppressable	./cvc.c	/^extern int32 __enum_is_suppressable(int32 errnum)$/;"	f	signature:(int32 errnum)
__epair_neg_tab	./v_aslib.c	/^const word32 __epair_neg_tab[] = { 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, $/;"	v
__epair_neg_tab	./v_aslib.s	/^__epair_neg_tab:$/;"	l
__epair_pos_tab	./v_aslib.c	/^const word32 __epair_pos_tab[] = { 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, $/;"	v
__epair_pos_tab	./v_aslib.s	/^__epair_pos_tab:$/;"	l
__epair_tab	./v_sim.c	/^const byte __epair_tab[] =$/;"	v
__errorcb_suppress_msg	./cvc.c	/^int32 __errorcb_suppress_msg; \/* T => sim control suppress error msg *\/$/;"	v
__escape_to_shell	./v_dbg.c	/^extern void __escape_to_shell(char *argchp)$/;"	f	signature:(char *argchp)
__eudptab_ndx	./cvc.c	/^int32 __eudptab_ndx;  \/* design wide e udp index (identifier) *\/$/;"	v
__ev_tracing	./cvc.c	/^int32 __ev_tracing;    \/* T => trace event schedules and processes *\/$/;"	v
__eval2_xpr	./v_ex2.c	/^extern struct xstk_t *__eval2_xpr(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__eval_1w_nonstren	./v_ex4.c	/^extern void __eval_1w_nonstren(word32 *resa, word32 *resb, word32 op2a,$/;"	f	signature:(word32 *resa, word32 *resb, word32 op2a, word32 op2b, word32 wtyp)
__eval_1wide_gate	./v_ex3.c	/^extern int32 __eval_1wide_gate(struct gate_t *gp, int32 gwid)$/;"	f	signature:(struct gate_t *gp, int32 gwid)
__eval_assign_rhsexpr	./v_ex.c	/^extern struct xstk_t *__eval_assign_rhsexpr(struct expr_t *xrhs,$/;"	f	signature:(struct expr_t *xrhs, struct expr_t *xlhs)
__eval_bufif_gate	./v_ex3.c	/^extern int32 __eval_bufif_gate(struct gate_t *gp, word32 i, int32 *out_chg)$/;"	f	signature:(struct gate_t *gp, word32 i, int32 *out_chg)
__eval_cmos_gate	./v_ex3.c	/^extern void __eval_cmos_gate(struct gate_t *gp)$/;"	f	signature:(struct gate_t *gp)
__eval_conta_rhs_ld	./v_sim.c	/^extern void __eval_conta_rhs_ld(struct net_pin_t *npp)$/;"	f	signature:(struct net_pin_t *npp)
__eval_lhsexpr_var_ndxes	./v_ex.c	/^extern void __eval_lhsexpr_var_ndxes(struct expr_t *xp)$/;"	f	signature:(struct expr_t *xp)
__eval_logic_gate	./v_ex3.c	/^extern int32 __eval_logic_gate(struct gate_t *gp, word32 i, int32 *out_chg)$/;"	f	signature:(struct gate_t *gp, word32 i, int32 *out_chg)
__eval_nmos_gate	./v_ex3.c	/^extern void __eval_nmos_gate(word32 gwrd)$/;"	f	signature:(word32 gwrd)
__eval_param_rhs_tonum	./v_src.c	/^extern void __eval_param_rhs_tonum(struct expr_t *ndp, int32 sfnind,$/;"	f	signature:(struct expr_t *ndp, int32 sfnind, int32 slcnt)
__eval_pmos_gate	./v_ex3.c	/^extern void __eval_pmos_gate(word32 gwrd)$/;"	f	signature:(word32 gwrd)
__eval_qcol	./v_ex2.c	/^extern void __eval_qcol(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__eval_realrealqcol	./v_ex2.c	/^extern void __eval_realrealqcol(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__eval_realregqcol	./v_ex2.c	/^extern void __eval_realregqcol(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__eval_regrealqcol	./v_ex2.c	/^extern void __eval_regrealqcol(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__eval_rnmos_gate	./v_ex3.c	/^extern void __eval_rnmos_gate(word32 gwrd)$/;"	f	signature:(word32 gwrd)
__eval_rpmos_gate	./v_ex3.c	/^extern void __eval_rpmos_gate(word32 gwrd)$/;"	f	signature:(word32 gwrd)
__eval_stwire	./v_ex4.c	/^extern void __eval_stwire(byte *accsbp, word32 wtyp, int32 abi1, int32 abi2,$/;"	f	signature:(byte *accsbp, word32 wtyp, int32 abi1, int32 abi2, byte *sbp)
__eval_tran_1bit	./v_trch.c	/^extern void __eval_tran_1bit(struct net_t *np, int32 bi)$/;"	f	signature:(struct net_t *np, int32 bi)
__eval_tran_bits	./v_trch.c	/^extern void __eval_tran_bits(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__eval_tranif_ld	./v_sim.c	/^extern void __eval_tranif_ld(struct gate_t *gp, int32 i)$/;"	f	signature:(struct gate_t *gp, int32 i)
__eval_tskassign_rhsexpr	./v_ex.c	/^extern void __eval_tskassign_rhsexpr(struct xstk_t *xsp, int32 lhsreal, $/;"	f	signature:(struct xstk_t *xsp, int32 lhsreal, int32 lhswid, int32 rhsreal, int32 rhssign, int32 is_2state, int32 is_sv_string)
__eval_udp	./v_ex3.c	/^extern int32 __eval_udp(struct gate_t *gp, word32 i, int32 *out_chg,$/;"	f	signature:(struct gate_t *gp, word32 i, int32 *out_chg, int32 is_edge)
__eval_update_1w_tranchan	./v_trch.c	/^extern void __eval_update_1w_tranchan(struct vtx_t *vtxp)$/;"	f	signature:(struct vtx_t *vtxp)
__eval_wide_wire	./v_ex4.c	/^extern void __eval_wide_wire(word32 *acc_ap, word32 *acc_bp,$/;"	f	signature:(word32 *acc_ap, word32 *acc_bp, word32 *drv_ap, word32 *drv_bp, int32 opbits, word32 wtyp)
__eval_wire	./v_ex4.c	/^extern void __eval_wire(word32 *acc_wp, word32 *drv_wp, struct net_t *np,$/;"	f	signature:(word32 *acc_wp, word32 *drv_wp, struct net_t *np, struct net_pin_t *npp)
__eval_xpr	./cvmacros.h	270;"	d
__event_coverage	./cvc.c	/^int32 __event_coverage;           \/* T => report event coverage *\/$/;"	v
__event_coverage_file_name	./cvc.c	/^char *__event_coverage_file_name; \/* name event coverage file *\/$/;"	v
__event_covered	./cvc.c	/^word32 *__event_covered;          \/* marked events array *\/$/;"	v
__evtr_resume_msg	./v_sim.c	/^extern void __evtr_resume_msg(void)$/;"	f	signature:(void)
__exe_file_name	./v_bbgen.c	/^char *__exe_file_name;     \/* exe main file name *\/$/;"	v
__exe_main_size	./exe_main_str.s	/^__exe_main_size:$/;"	l
__exe_main_str	./exe_main_str.s	/^__exe_main_str:$/;"	l
__exe_name	./cvc.c	/^char  *__exe_name;   \/* name of already compiled .so library *\/$/;"	v
__exec2_proc_assign	./v_ex3.c	/^extern void __exec2_proc_assign(struct expr_t *xlhs, word32 *ap, word32 *bp,$/;"	f	signature:(struct expr_t *xlhs, word32 *ap, word32 *bp, int32 blen)
__exec2_proc_concat_assign	./v_ex3.c	/^extern void __exec2_proc_concat_assign(struct expr_t *xlhs, word32 *ap,$/;"	f	signature:(struct expr_t *xlhs, word32 *ap, word32 *bp)
__exec_all_compiletf_routines	./v_vpi.c	/^extern void __exec_all_compiletf_routines(void)$/;"	f	signature:(void)
__exec_ca_concat	./v_ex3.c	/^extern void __exec_ca_concat(struct expr_t *xlhs, word32 *ap, word32 *bp,$/;"	f	signature:(struct expr_t *xlhs, word32 *ap, word32 *bp, int32 must_schedule)
__exec_case	./v_ex.c	/^extern struct st_t *__exec_case(struct st_t *stp, struct xstk_t *selxsp)$/;"	f	signature:(struct st_t *stp, struct xstk_t *selxsp)
__exec_chi_square	./v_ex2.c	/^extern void __exec_chi_square(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__exec_const_func	./v_ex.c	/^extern struct xstk_t *__exec_const_func(struct expr_t *ndp) $/;"	f	signature:(struct expr_t *ndp)
__exec_conta_assign	./v_ex3.c	/^extern void __exec_conta_assign(struct expr_t *xlhs, word32 *ap, word32 *bp,$/;"	f	signature:(struct expr_t *xlhs, word32 *ap, word32 *bp, int32 must_schedule)
__exec_disable	./v_ex.c	/^extern int32 __exec_disable(struct expr_t *dsxndp)$/;"	f	signature:(struct expr_t *dsxndp)
__exec_dist_erlang	./v_ex2.c	/^extern void __exec_dist_erlang(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__exec_dist_exp	./v_ex2.c	/^extern void __exec_dist_exp(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__exec_dist_poisson	./v_ex2.c	/^extern void __exec_dist_poisson(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__exec_dist_stdnorm	./v_ex2.c	/^extern void __exec_dist_stdnorm(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__exec_dist_t	./v_ex2.c	/^extern void __exec_dist_t(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__exec_dist_uniform	./v_ex2.c	/^extern void __exec_dist_uniform(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__exec_dpi_exported_tf	./v_dpi.c	/^extern void __exec_dpi_exported_tf(struct task_t *tskp) $/;"	f	signature:(struct task_t *tskp)
__exec_dpi_imported_tf	./v_dpi.c	/^extern void __exec_dpi_imported_tf(struct task_t *tskp,$/;"	f	signature:(struct task_t *tskp, struct expr_t *arghd_xp)
__exec_dumpports	./v_ex4.c	/^extern void __exec_dumpports(struct expr_t *argx)$/;"	f	signature:(struct expr_t *argx)
__exec_dumpports_on_off	./v_ex4.c	/^extern void __exec_dumpports_on_off(struct expr_t *argx, int32 dump_on)$/;"	f	signature:(struct expr_t *argx, int32 dump_on)
__exec_dumpportsflush	./v_ex4.c	/^extern void __exec_dumpportsflush(struct expr_t *argx)$/;"	f	signature:(struct expr_t *argx)
__exec_dumpportslimit	./v_ex4.c	/^extern void __exec_dumpportslimit(struct expr_t *argx)$/;"	f	signature:(struct expr_t *argx)
__exec_dumpvars	./v_ex4.c	/^extern void __exec_dumpvars(struct expr_t *argx, int32 is_fst)$/;"	f	signature:(struct expr_t *argx, int32 is_fst)
__exec_fmonits	./v_ex2.c	/^extern void __exec_fmonits(void)$/;"	f	signature:(void)
__exec_func	./v_ex.c	/^extern void __exec_func(struct expr_t *ndp, struct st_t *stp) $/;"	f	signature:(struct expr_t *ndp, struct st_t *stp)
__exec_history_list	./v_dbg.c	/^extern void __exec_history_list(int32 num)$/;"	f	signature:(int32 num)
__exec_inc_dec	./v_ex2.c	/^extern void __exec_inc_dec(struct xstk_t *xsp, struct expr_t *ndp,$/;"	f	signature:(struct xstk_t *xsp, struct expr_t *ndp, int32 is_inc)
__exec_input_fnamchg	./v_dbg.c	/^extern void __exec_input_fnamchg(struct expr_t *axp)$/;"	f	signature:(struct expr_t *axp)
__exec_monit	./v_ex2.c	/^extern void __exec_monit(struct dceauxlst_t *monit_hd, int32 force_write)$/;"	f	signature:(struct dceauxlst_t *monit_hd, int32 force_write)
__exec_qc_assign	./v_ex3.c	/^extern void __exec_qc_assign(struct st_t *stp, int32 is_force)$/;"	f	signature:(struct st_t *stp, int32 is_force)
__exec_qc_deassign	./v_ex3.c	/^extern void __exec_qc_deassign(struct st_t *stp, int32 is_force)$/;"	f	signature:(struct st_t *stp, int32 is_force)
__exec_qc_wireforce	./v_ex3.c	/^extern void __exec_qc_wireforce(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__exec_qc_wirerelease	./v_ex3.c	/^extern void __exec_qc_wirerelease(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__exec_readmem	./v_ex2.c	/^extern void __exec_readmem(struct expr_t *argxp, int32 base)$/;"	f	signature:(struct expr_t *argxp, int32 base)
__exec_scale	./v_cnv.c	/^extern void __exec_scale(struct expr_t *fax)$/;"	f	signature:(struct expr_t *fax)
__exec_sdf_annotate_systsk	./v_sdf.c	/^extern void __exec_sdf_annotate_systsk(struct expr_t *axp)$/;"	f	signature:(struct expr_t *axp)
__exec_sfrand	./v_ex2.c	/^extern void __exec_sfrand(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__exec_slotend_dp	./v_sim.c	/^extern void __exec_slotend_dp(void)$/;"	f	signature:(void)
__exec_slotend_dv	./v_sim.c	/^extern void __exec_slotend_dv(void)$/;"	f	signature:(void)
__exec_sreadmem	./v_ex2.c	/^extern void __exec_sreadmem(struct expr_t *argxp, int32 base)$/;"	f	signature:(struct expr_t *argxp, int32 base)
__exec_stmts	./v_ex.c	/^extern void __exec_stmts(struct st_t *stp, int32 *dowhile, int32 is_do_while)$/;"	f	signature:(struct st_t *stp, int32 *dowhile, int32 is_do_while)
__exec_strobes	./v_ex2.c	/^extern void __exec_strobes(void)$/;"	f	signature:(void)
__exec_stsk	./v_ex.c	/^extern struct st_t *__exec_stsk(struct st_t *stp, struct sy_t *tsyp,$/;"	f	signature:(struct st_t *stp, struct sy_t *tsyp, struct tskcall_t *tkcp)
__exec_sysfunc	./v_ex.c	/^extern void __exec_sysfunc(struct expr_t *ndp) $/;"	f	signature:(struct expr_t *ndp)
__exec_tskcall	./v_ex.c	/^extern struct st_t *__exec_tskcall(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__exec_var_decl_init_assigns	./v_ex.c	/^extern void __exec_var_decl_init_assigns(void)$/;"	f	signature:(void)
__exec_vpi_gateoutcbs	./v_vpi.c	/^extern void __exec_vpi_gateoutcbs(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__exec_writemem	./v_ex2.c	/^extern void __exec_writemem(struct expr_t *argxp, int32 base)$/;"	f	signature:(struct expr_t *argxp, int32 base)
__exec_xprop_case	./v_xprop.c	/^extern void __exec_xprop_case(struct st_t *stp, int32 slevel, $/;"	f	signature:(struct st_t *stp, int32 slevel, struct xstk_t *evaled_xsp)
__exec_xprop_dce	./v_xprop.c	/^extern struct st_t *__exec_xprop_dce(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__exec_xprop_if_stmt	./v_xprop.c	/^extern struct st_t *__exec_xprop_if_stmt(struct st_t *stp, int32 slevel,$/;"	f	signature:(struct st_t *stp, int32 slevel, struct xstk_t *evaled_xsp)
__execute_compiled	./cvc.c	/^int32 __execute_compiled; \/* execute compiled executable *\/$/;"	v
__expand_1mod_idp_area	./v_prp2.c	/^extern void __expand_1mod_idp_area(struct mod_t *mdp, int32 add_wrds)$/;"	f	signature:(struct mod_t *mdp, int32 add_wrds)
__expand_copy	./v_bbgen3.c	/^extern void __expand_copy(struct insn_t *ip)$/;"	f	signature:(struct insn_t *ip)
__expand_lib_wildcards	./v_src3.c	/^extern void __expand_lib_wildcards(void)$/;"	f	signature:(void)
__expr_has_glb	./v_src3.c	/^extern int32 __expr_has_glb(struct expr_t *xp)$/;"	f	signature:(struct expr_t *xp)
__expr_has_real	./cvc.c	/^int32 __expr_has_real; \/* T => know some real in expr. *\/$/;"	v
__expr_has_sv_string	./cvc.c	/^int32 __expr_has_sv_string; \/* T => know some SV string in expr. *\/$/;"	v
__expr_idtab	./cvc.c	/^struct expridtab_t **__expr_idtab; \/* expr parse id name info *\/ $/;"	v	typeref:struct:expridtab_t
__expr_is_lval	./cvc.c	/^int32 __expr_is_lval;  \/* T => parsing proc. assign lhs *\/$/;"	v
__expr_is_vpiconst	./v_vpi.c	/^extern int32 __expr_is_vpiconst(struct expr_t *xp)$/;"	f	signature:(struct expr_t *xp)
__expr_optype_get	./v_vpi2.c	/^extern int32 __expr_optype_get(struct expr_t *xp)$/;"	f	signature:(struct expr_t *xp)
__expr_rhs_decl	./cvc.c	/^int32 __expr_rhs_decl; \/* T current expr. is decl. not proc. rhs *\/ $/;"	v
__exprline	./cvc.c	/^char *__exprline;      \/* expr. output line work string *\/$/;"	v
__exprlinelen	./cvc.c	/^int32 __exprlinelen;   \/* expr. line length *\/$/;"	v
__exprtab	./cvc.c	/^struct expr_t **__exprtab;\/* table to collect expressions into *\/$/;"	v	typeref:struct:expr_t
__exprtabsiz	./cvc.c	/^int32 __exprtabsiz;    \/* current operator precedence expr tab siz *\/$/;"	v
__exprtype_get	./v_vpi2.c	/^extern int32 __exprtype_get(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__extract_delval	./v_del.c	/^extern void __extract_delval(word64 *tim, int32 *ndels, union del_u du,$/;"	f	signature:(word64 *tim, int32 *ndels, union del_u du, word32 drep)
__extract_delval_compile_time	./v_del.c	/^extern void __extract_delval_compile_time(word64 *tim, int32 *ndels, $/;"	f	signature:(word64 *tim, int32 *ndels, union del_u du, word32 drep, int32 inum)
__extract_mod_and_tsk	./v_cvcms.c	/^extern struct mod_t *__extract_mod_and_tsk(struct sy_t *tfm_syp,$/;"	f	signature:(struct sy_t *tfm_syp, struct task_t **tskp)
__fcspi	./cvc.c	/^int32 __fcspi;           \/* fcall tos index *\/$/;"	v
__fcstk	./cvc.c	/^struct task_t **__fcstk; \/* function call nesting stack *\/$/;"	v	typeref:struct:task_t
__fd_do_fclose	./v_ex.c	/^extern int32 __fd_do_fclose(int32 fd)$/;"	f	signature:(int32 fd)
__file_just_op	./cvc.c	/^int32 __file_just_op;  \/* T => new file and no token yet returned *\/$/;"	v
__fill_16vconst	./v_del.c	/^extern void __fill_16vconst(word64 *dtab, word64 *xt, int32 nparams)$/;"	f	signature:(word64 *dtab, word64 *xt, int32 nparams)
__fill_4vconst	./v_del.c	/^extern void __fill_4vconst(word64 *dv4, word64 *rise, word64 *fall,$/;"	f	signature:(word64 *dv4, word64 *rise, word64 *fall, word64 *toz, int32 nparams, int32 is_trireg)
__fill_fg_po_bblktab	./v_bbopt.c	/^extern void __fill_fg_po_bblktab(struct flowg_t *fgp)$/;"	f	signature:(struct flowg_t *fgp)
__fill_grp_targu_fld	./v_prp2.c	/^extern void __fill_grp_targu_fld(struct gref_t *grp)$/;"	f	signature:(struct gref_t *grp)
__fill_wire_arr_sym_wrkstab	./v_prp2.c	/^extern void __fill_wire_arr_sym_wrkstab(struct net_t *np, $/;"	f	signature:(struct net_t *np, struct mod_t *decl_mdp)
__filpostab	./cvc.c	/^struct filpos_t *__filpostab; \/* in fils size tab of file line pos. *\/$/;"	v	typeref:struct:filpos_t
__filter_dce_chg	./v_sim.c	/^extern int32 __filter_dce_chg(struct net_t *np, struct dcevnt_t *dcep,$/;"	f	signature:(struct net_t *np, struct dcevnt_t *dcep, word32 *dcewp, word32 *oval, word32 *nval)
__find_add_conflct_tn	./v_bbgen3.c	/^extern struct bblk_t *__find_add_conflct_tn(struct avlhd_t *avlhp, int32 tni)$/;"	f	signature:(struct avlhd_t *avlhp, int32 tni)
__find_add_dup_bblk	./v_bbgen3.c	/^extern struct bblk_t *__find_add_dup_bblk(struct avlhd_t *avlhp,$/;"	f	signature:(struct avlhd_t *avlhp, struct bblk_t *bbp)
__find_add_dup_tn	./v_bbgen3.c	/^extern struct tn_dup_t *__find_add_dup_tn(struct avlhd_t *avlhp, word32 ndx)$/;"	f	signature:(struct avlhd_t *avlhp, word32 ndx)
__find_add_obj	./v_cvcrt.c	/^extern struct prep_obj_t *__find_add_obj(struct avlhd_t *avlhp, void *obj)$/;"	f	signature:(struct avlhd_t *avlhp, void *obj)
__find_after_tsk_nxtstmt	./v_cvcrt.c	/^extern struct st_t *__find_after_tsk_nxtstmt(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__find_attrspec	./v_vpi2.c	/^extern struct attr_t *__find_attrspec(struct h_t *hp)$/;"	f	signature:(struct h_t *hp)
__find_call_force_cbs	./v_vpi.c	/^extern void __find_call_force_cbs(struct net_t *np, int32 i1)$/;"	f	signature:(struct net_t *np, int32 i1)
__find_call_rel_cbs	./v_vpi.c	/^extern void __find_call_rel_cbs(struct net_t *np, int32 i1)$/;"	f	signature:(struct net_t *np, int32 i1)
__find_catend	./v_fx3.c	/^extern struct expr_t *__find_catend(struct expr_t *catndp)$/;"	f	signature:(struct expr_t *catndp)
__find_dfpbot_itp	./v_genfx.c	/^extern struct itree_t *__find_dfpbot_itp(struct dfparam_t *dfpp)$/;"	f	signature:(struct dfparam_t *dfpp)
__find_matchendblk	./v_src2.c	/^extern void __find_matchendblk(int32 btok, int32 endbtok)$/;"	f	signature:(int32 btok, int32 endbtok)
__find_matchendcase	./v_src2.c	/^extern void __find_matchendcase(void)$/;"	f	signature:(void)
__find_mod_task_of_var	./v_cvcms.c	/^extern struct mod_t *__find_mod_task_of_var(struct net_t *np,$/;"	f	signature:(struct net_t *np, struct task_t **net_tskp)
__find_nchg_range	./v_cvcrt.c	/^extern struct net_chg_t *__find_nchg_range(struct net_t *np, int32 i1, int32 i2)$/;"	f	signature:(struct net_t *np, int32 i1, int32 i2)
__find_qualnam_task	./v_vpi.c	/^extern struct task_t *__find_qualnam_task(char *qualnam, struct mod_t *mdp,$/;"	f	signature:(char *qualnam, struct mod_t *mdp, struct task_t *reftskp)
__find_stlst_end	./v_cvcrt.c	/^extern struct st_t *__find_stlst_end(struct st_t *hdstp)$/;"	f	signature:(struct st_t *hdstp)
__find_sym	./v_ms.c	/^extern struct sy_t *__find_sym(char *nam)$/;"	f	signature:(char *nam)
__find_thrdtsk	./v_cnv.c	/^extern struct task_t *__find_thrdtsk(struct thread_t *cur_thp)$/;"	f	signature:(struct thread_t *cur_thp)
__find_tran_conn_np	./v_trch.c	/^extern struct net_t *__find_tran_conn_np(struct expr_t *xp)$/;"	f	signature:(struct expr_t *xp)
__find_unrt_targitp	./v_ex3.c	/^extern struct itree_t *__find_unrt_targitp(struct gref_t *grp,$/;"	f	signature:(struct gref_t *grp, struct itree_t *itp, int32 startii)
__finform	./v_ms.c	/^extern void __finform(int32 id_num, char *s, ...)$/;"	f	signature:(int32 id_num, char *s, ...)
__fio_do_disp	./v_cnv.c	/^extern void __fio_do_disp(struct expr_t *axp, int32 dflt_fmt, int32 nd_nl,$/;"	f	signature:(struct expr_t *axp, int32 dflt_fmt, int32 nd_nl, char *namstsk)
__fio_fdtab	./cvc.c	/^struct fiofd_t **__fio_fdtab; \/* array of ptrs to file io stream *\/$/;"	v	typeref:struct:fiofd_t
__fiofp	./cvc.c	/^char *__fiofp;         \/* fio file input work fmt string ptr *\/$/;"	v
__fiolp	./cvc.c	/^char *__fiolp;         \/* fio file input work string ptr *\/$/;"	v
__first_enterp	./v_cvcrt.c	/^void *__first_enterp; \/* the first sim process entered *\/$/;"	v
__first_linetok	./cvc.c	/^int32 __first_linetok; \/* T => token first on line *\/$/;"	v
__first_num_eol	./cvc.c	/^int32 __first_num_eol; \/* T => first tok because number ended line *\/$/;"	v
__fix_widened_toxs	./v_ex3.c	/^extern void __fix_widened_toxs(struct xstk_t *xsp, int32 oblen)$/;"	f	signature:(struct xstk_t *xsp, int32 oblen)
__fix_widened_tozs	./v_ex3.c	/^extern void __fix_widened_tozs(struct xstk_t *xsp, int32 oblen)$/;"	f	signature:(struct xstk_t *xsp, int32 oblen)
__fixnam_wrap_puts	./v_cnv.c	/^extern void __fixnam_wrap_puts(char *s, FILE *f)$/;"	f	signature:(char *s, FILE *f)
__fixup2_nl	./v_fx.c	/^extern int32 __fixup2_nl(void)$/;"	f	signature:(void)
__fixup_and_gen_nl	./v_genfx.c	/^extern int32 __fixup_and_gen_nl(void)$/;"	f	signature:(void)
__fixup_round	./cvc.c	/^int32 __fixup_round;   \/* counter for fixup nl repeat for generates *\/ $/;"	v
__flcontas_removable	./cvc.c	/^int32 __flcontas_removable; \/* flat no. of deletable cont. assigns *\/$/;"	v
__flgates_removable	./cvc.c	/^int32 __flgates_removable; \/* flat no. of deletable gates *\/$/;"	v
__flnets_removable	./cvc.c	/^int32 __flnets_removable;\/* removable static nets *\/$/;"	v
__flowg_lasti	./v_bbgen.c	/^int32 __flowg_lasti;   \/* next use location *\/       $/;"	v
__flowg_seq_no	./v_bbgen.c	/^word32 __flowg_seq_no;  \/* counter for creating flow graph nums *\/ $/;"	v
__flowgtab	./v_bbgen.c	/^struct flowg_t **__flowgtab; \/* work array of ptrs to flowgs in mod *\/$/;"	v	typeref:struct:flowg_t
__flowgtabsiz	./v_bbgen.c	/^size_t __flowgtabsiz;   \/* current size *\/ $/;"	v
__fmon_end	./cvc.c	/^struct fmonlst_t *__fmon_end;$/;"	v	typeref:struct:fmonlst_t
__fmon_hdr	./cvc.c	/^struct fmonlst_t *__fmon_hdr; \/* list of execed (enabled) fmonitors *\/$/;"	v	typeref:struct:fmonlst_t
__fmonse_end	./cvc.c	/^struct fmselst_t *__fmonse_end;$/;"	v	typeref:struct:fmselst_t
__fmonse_hdr	./cvc.c	/^struct fmselst_t *__fmonse_hdr; \/* this slot end fmon eval list *\/$/;"	v	typeref:struct:fmselst_t
__fmse_freelst	./cvc.c	/^struct fmselst_t *__fmse_freelst; \/* fmon slot end free list head *\/$/;"	v	typeref:struct:fmselst_t
__fnd_chk_fixup_prep_confuncs	./v_src.c	/^extern void __fnd_chk_fixup_prep_confuncs(void) $/;"	f	signature:(void)
__fold_for_value	./cvc.c	/^int32 __fold_for_value; \/* folded for loop index *\/$/;"	v
__folding_for_loop	./cvc.c	/^int32 __folding_for_loop; \/* T => folding for loop *\/$/;"	v
__forblk_index	./cvc.c	/^int32 __forblk_index; \/* foreach\/for(int local block index counter *\/$/;"	v
__force_active	./cvc.c	/^int32 __force_active;  \/* T => for trace deassign while force *\/ $/;"	v
__force_allcb_end	./cvc.c	/^struct rfcblst_t *__force_allcb_end;$/;"	v	typeref:struct:rfcblst_t
__force_allcb_hdr	./cvc.c	/^struct rfcblst_t *__force_allcb_hdr;$/;"	v	typeref:struct:rfcblst_t
__force_base	./cvc.c	/^int32 __force_base;    \/* for output force base if not BASENONE *\/$/;"	v
__force_dmp_fp	./cvc.c	/^FILE *__force_dmp_fp;            \/* when set for dmp_stmt to file *\/$/;"	v
__forced_inhibit_bitassign	./v_ex3.c	/^extern int32 __forced_inhibit_bitassign(struct net_t *np,$/;"	f	signature:(struct net_t *np, struct expr_t *idndp, struct expr_t *ndx1)
__formal_tmptab	./v_bbgen.c	/^struct avlhd_t **__formal_tmptab;\/* array index by vinsn of tmps *\/$/;"	v	typeref:struct:avlhd_t
__fr_cap_size	./v_ms.c	/^extern int32 __fr_cap_size(int32 capsiz)$/;"	f	signature:(int32 capsiz)
__fr_stren_nam	./v_ms.c	/^extern word32 __fr_stren_nam(int32 ttyp)$/;"	f	signature:(int32 ttyp)
__fr_tcnam	./v_ms.c	/^extern int32 __fr_tcnam(char *tcnam)$/;"	f	signature:(char *tcnam)
__fr_wtnam	./v_ms.c	/^extern int32 __fr_wtnam(int32 ttyp)$/;"	f	signature:(int32 ttyp)
__free1_initalw	./v_fx.c	/^extern void __free1_initalw(struct ialst_t *ialp, struct ialst_t *last_ialp)$/;"	f	signature:(struct ialst_t *ialp, struct ialst_t *last_ialp)
__free2_xtree	./v_src2.c	/^extern void __free2_xtree(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__free_1bblk	./v_cvcms.c	/^extern void __free_1bblk(struct bblk_t *rm_bbp, struct flowg_t *fgp, $/;"	f	signature:(struct bblk_t *rm_bbp, struct flowg_t *fgp, int32 free_insns)
__free_1bblk_predoms	./v_cvcms.c	/^extern void __free_1bblk_predoms(struct bblk_t *bbp)$/;"	f	signature:(struct bblk_t *bbp)
__free_1conta	./v_fx.c	/^extern void __free_1conta(struct conta_t *cap, struct conta_t *last_cap)$/;"	f	signature:(struct conta_t *cap, struct conta_t *last_cap)
__free_1dfparam	./v_genfx.c	/^extern void __free_1dfparam(struct dfparam_t *dfpp)$/;"	f	signature:(struct dfparam_t *dfpp)
__free_1gate	./v_fx.c	/^extern void __free_1gate(int32 gi)$/;"	f	signature:(int32 gi)
__free_1glb_flds	./v_genfx.c	/^extern void __free_1glb_flds(struct gref_t *grp)$/;"	f	signature:(struct gref_t *grp)
__free_1insn	./v_cvcms.c	/^extern void __free_1insn(struct insn_t *ip)$/;"	f	signature:(struct insn_t *ip)
__free_1insn_fud	./v_cvcms.c	/^extern void __free_1insn_fud(struct insn_t *ip)$/;"	f	signature:(struct insn_t *ip)
__free_1mod_cvc_mem	./v_cvcms.c	/^extern void __free_1mod_cvc_mem(struct mod_t *mdp)$/;"	f	signature:(struct mod_t *mdp)
__free_1stmt	./v_prp2.c	/^extern void __free_1stmt(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__free_1tev	./v_sim.c	/^extern void __free_1tev(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__free_1thd	./v_ex.c	/^extern void __free_1thd(struct thread_t *thp)$/;"	f	signature:(struct thread_t *thp)
__free_bblk_avltree	./v_cvcms.c	/^extern void __free_bblk_avltree(struct avlhd_t *avlhdp)$/;"	f	signature:(struct avlhd_t *avlhdp)
__free_dce_prevval	./v_dbg.c	/^extern void __free_dce_prevval(struct dcevnt_t * dcep, int32 insts, int32 dcewid)$/;"	f	signature:(struct dcevnt_t * dcep, int32 insts, int32 dcewid)
__free_dceauxlst	./v_dbg.c	/^extern void __free_dceauxlst(struct dceauxlst_t *dcehdr, int32 numinsts)$/;"	f	signature:(struct dceauxlst_t *dcehdr, int32 numinsts)
__free_dceauxs_only	./v_dbg.c	/^extern void __free_dceauxs_only(struct dceauxlst_t *dcehdr)$/;"	f	signature:(struct dceauxlst_t *dcehdr)
__free_del	./v_del.c	/^extern void __free_del(union del_u du, word32 drep, int32 numinsts)$/;"	f	signature:(union del_u du, word32 drep, int32 numinsts)
__free_dellst	./v_del.c	/^extern void __free_dellst(struct paramlst_t *dhdr)$/;"	f	signature:(struct paramlst_t *dhdr)
__free_design_pnps	./v_prp.c	/^extern void __free_design_pnps(void)$/;"	f	signature:(void)
__free_event_pnd0_tevp	./cvc.c	/^struct tev_t *__free_event_pnd0_tevp;   \/* free event pnd0 index *\/$/;"	v	typeref:struct:tev_t
__free_event_tevp	./cvc.c	/^struct tev_t *__free_event_tevp;    \/* free event index *\/$/;"	v	typeref:struct:tev_t
__free_flat_itree	./v_genfx.c	/^extern void __free_flat_itree(void)$/;"	f	signature:(void)
__free_flowg_bblks	./v_cvcms.c	/^extern void __free_flowg_bblks(struct flowg_t *fgp)$/;"	f	signature:(struct flowg_t *fgp)
__free_flowg_doms_and_sets	./v_cvcms.c	/^extern void __free_flowg_doms_and_sets(struct flowg_t *fgp)$/;"	f	signature:(struct flowg_t *fgp)
__free_flowg_fuds	./v_cvcms.c	/^extern void __free_flowg_fuds(struct flowg_t *fgp)$/;"	f	signature:(struct flowg_t *fgp)
__free_flowg_insns	./v_cvcms.c	/^extern void __free_flowg_insns(struct flowg_t *fgp)$/;"	f	signature:(struct flowg_t *fgp)
__free_heap	./cvc.c	/^struct heap_t **__free_heap;$/;"	v	typeref:struct:heap_t
__free_heap_ndx	./cvc.c	/^int32 __free_heap_ndx;        $/;"	v
__free_hp	./v_vpi3.c	/^extern void __free_hp(struct h_t *hp) $/;"	f	signature:(struct h_t *hp)
__free_icptab	./v_fx2.c	/^extern void __free_icptab(void)$/;"	f	signature:(void)
__free_iterator	./v_vpi3.c	/^extern void __free_iterator(vpiHandle ihref)$/;"	f	signature:(vpiHandle ihref)
__free_mod_npp_dce_table	./v_cvcrt.c	/^extern void __free_mod_npp_dce_table(void)$/;"	f	signature:(void)
__free_namedparams	./v_src.c	/^extern void __free_namedparams(struct namparam_t *npmphdr)$/;"	f	signature:(struct namparam_t *npmphdr)
__free_node_ndx	./cvc.c	/^int32 __free_node_ndx;          \/* current freed node index *\/$/;"	v
__free_node_size	./cvc.c	/^int32 __free_node_size;         \/* size of freed node array *\/$/;"	v
__free_nodes	./cvc.c	/^struct tqnode_t **__free_nodes;   \/* nodes freed - available for reuse *\/$/;"	v	typeref:struct:tqnode_t
__free_specify	./v_fx3.c	/^extern void __free_specify(struct mod_t *mdp)$/;"	f	signature:(struct mod_t *mdp)
__free_stlst	./v_prp2.c	/^extern void __free_stlst(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__free_sysfcall_expr	./v_cvcrt.c	/^extern void __free_sysfcall_expr(void)$/;"	f	signature:(void)
__free_tchks	./v_fx3.c	/^extern void __free_tchks(struct tchk_t *tcp)$/;"	f	signature:(struct tchk_t *tcp)
__free_telhdr_tevs	./v_sim.c	/^extern void __free_telhdr_tevs(struct tev_t *hdr_tevp)$/;"	f	signature:(struct tev_t *hdr_tevp)
__free_tev_ndx	./cvc.c	/^int32 __free_tev_ndx;          \/* current freed tev index *\/$/;"	v
__free_tev_size	./cvc.c	/^int32 __free_tev_size;         \/* size of freed tev array *\/$/;"	v
__free_tevs	./cvc.c	/^struct tev_t **__free_tevs;    \/* tevs freed - available for reuse *\/$/;"	v	typeref:struct:tev_t
__free_thd_list	./v_ex.c	/^extern void __free_thd_list(struct thread_t *thp)$/;"	f	signature:(struct thread_t *thp)
__free_tn_avltree	./v_cvcms.c	/^extern void __free_tn_avltree(struct avlhd_t *avlhdp, void (*avl_free)(void *))$/;"	f	signature:(struct avlhd_t *avlhdp, void (*avl_free)(void *))
__free_xprlst	./v_prp2.c	/^extern void __free_xprlst(struct exprlst_t *xplp)$/;"	f	signature:(struct exprlst_t *xplp)
__free_xprop	./v_xprop.c	/^extern void __free_xprop(struct xprop_t *xprop)$/;"	f	signature:(struct xprop_t *xprop)
__free_xtree	./v_src2.c	/^extern void __free_xtree(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__freeze_1symtab	./v_src.c	/^extern void __freeze_1symtab(struct symtab_t *sytp)$/;"	f	signature:(struct symtab_t *sytp)
__freeze_mod_syms	./v_src.c	/^extern void __freeze_mod_syms(struct symtab_t *sytp,$/;"	f	signature:(struct symtab_t *sytp, struct symtab_t *sp_sytp)
__from_vpi_vartyp	./v_vpi2.c	/^extern word32 __from_vpi_vartyp(word32 pval)$/;"	f	signature:(word32 pval)
__fst_close	./v_ex4.c	/^extern void __fst_close(void)$/;"	f	signature:(void)
__fst_convert_dump2fst	./cvc.c	/^int32 __fst_convert_dump2fst; \/* T => convert $dump calls to $fst *\/$/;"	v
__fst_ctx	./cvc.c	/^void *__fst_ctx;  \/* FST format handle *\/$/;"	v
__fst_do_vars_baseline	./v_ex4.c	/^extern void __fst_do_vars_baseline(char *keyws, int32 is_dumpoff)$/;"	f	signature:(char *keyws, int32 is_dumpoff)
__fst_do_vars_chg	./v_ex4.c	/^extern void __fst_do_vars_chg(void)$/;"	f	signature:(void)
__fst_do_vars_chg_parallel	./v_ex4.c	/^extern void __fst_do_vars_chg_parallel(void)$/;"	f	signature:(void)
__fst_max_work_area	./cvc.c	/^int32 __fst_max_work_area; \/* max number of bytes for work area *\/$/;"	v
__fst_next_idcode	./cvc.c	/^int32 __fst_next_idcode; \/* count the number of nets dumping *\/$/;"	v
__fst_parallel	./cvc.c	/^int32 __fst_parallel; \/* T => do FST using multiple threads *\/$/;"	v
__fst_parallel2	./cvc.c	/^int32 __fst_parallel2; \/* T => do FST multiple threads with buffering *\/$/;"	v
__fst_repack	./cvc.c	/^int32 __fst_repack; \/* T => do FST repacking on close *\/$/;"	v
__fst_work_area	./cvc.c	/^byte *__fst_work_area; \/* work area to do the conversions *\/$/;"	v
__fst_work_svec	./cvc.c	/^byte *__fst_work_svec; \/* work area to do stren conversions *\/$/;"	v
__fsusp_tevp	./cvc.c	/^struct tev_t *__fsusp_tevp;\/* in func. step, event to undo(cancel) *\/$/;"	v	typeref:struct:tev_t
__fterr	./v_ms.c	/^extern void __fterr(int32 id_num, char *s, ...)$/;"	f	signature:(int32 id_num, char *s, ...)
__func_complete_bbp	./v_bbgen.c	/^struct bblk_t *__func_complete_bbp; \/* func comp bbp n case of disable *\/$/;"	v	typeref:struct:bblk_t
__func_has_fcall	./cvc.c	/^int32 __func_has_fcall;\/* T => func contains has non sys fcall *\/$/;"	v
__garbage_calls	./v_aslib.c	/^extern void __garbage_calls(void)$/;"	f	signature:(void)
__garbage_calls	./v_aslib.s	/^__garbage_calls:$/;"	l
__gate_conta_dup_node_free	./v_bbgen3.c	/^extern void __gate_conta_dup_node_free(void *gcp)$/;"	f	signature:(void *gcp)
__gate_conta_dup_tn_tree	./v_bbgen.c	/^struct avlhd_t *__gate_conta_dup_tn_tree;$/;"	v	typeref:struct:avlhd_t
__gate_conta_seq_no	./v_bbgen.c	/^int32 __gate_conta_seq_no; \/* counter for creating scalar conta nums *\/ $/;"	v
__gate_is_acc	./v_sim.c	/^extern int32 __gate_is_acc(struct gate_t *gp)$/;"	f	signature:(struct gate_t *gp)
__gate_needs_output_word	./v_cvcrt.c	/^extern int32 __gate_needs_output_word(int32 g_class)$/;"	f	signature:(int32 g_class)
__gate_ormask_2_0	./v_aslib.c	/^const word32 __gate_ormask_2_0[4] = {0, 1, 4, 5};$/;"	v
__gate_ormask_2_0	./v_aslib.s	/^__gate_ormask_2_0:$/;"	l
__gate_ormask_2_1	./v_aslib.c	/^const word32 __gate_ormask_2_1[4] = {0, 2, 8, 10};$/;"	v
__gate_ormask_2_1	./v_aslib.s	/^__gate_ormask_2_1:$/;"	l
__gate_ormask_2_2	./v_aslib.c	/^const word32 __gate_ormask_2_2[4] = {0, 4, 16, 20};$/;"	v
__gate_ormask_2_2	./v_aslib.s	/^__gate_ormask_2_2:$/;"	l
__gate_ormask_2_3	./v_aslib.c	/^const word32 __gate_ormask_2_3[4] = {0, 8, 32, 40};$/;"	v
__gate_ormask_2_3	./v_aslib.s	/^__gate_ormask_2_3:$/;"	l
__gate_ormask_3_0	./v_aslib.c	/^const word32 __gate_ormask_3_0[4] = {0, 1, 8, 9};$/;"	v
__gate_ormask_3_0	./v_aslib.s	/^__gate_ormask_3_0:$/;"	l
__gate_ormask_3_1	./v_aslib.c	/^const word32 __gate_ormask_3_1[4] = {0, 2, 16, 18};$/;"	v
__gate_ormask_3_1	./v_aslib.s	/^__gate_ormask_3_1:$/;"	l
__gate_ormask_3_2	./v_aslib.c	/^const word32 __gate_ormask_3_2[4] = {0, 4, 32, 36};$/;"	v
__gate_ormask_3_2	./v_aslib.s	/^__gate_ormask_3_2:$/;"	l
__gate_ormask_3_3	./v_aslib.c	/^const word32 __gate_ormask_3_3[4] = {0, 8, 64, 72};$/;"	v
__gate_ormask_3_3	./v_aslib.s	/^__gate_ormask_3_3:$/;"	l
__gate_ormask_4_0	./v_aslib.c	/^const word32 __gate_ormask_4_0[4] = {0, 1, 16, 17};$/;"	v
__gate_ormask_4_0	./v_aslib.s	/^__gate_ormask_4_0:$/;"	l
__gate_ormask_4_1	./v_aslib.c	/^const word32 __gate_ormask_4_1[4] = {0, 2, 32, 34};$/;"	v
__gate_ormask_4_1	./v_aslib.s	/^__gate_ormask_4_1:$/;"	l
__gate_ormask_4_2	./v_aslib.c	/^const word32 __gate_ormask_4_2[4] = {0, 4, 64, 68};$/;"	v
__gate_ormask_4_2	./v_aslib.s	/^__gate_ormask_4_2:$/;"	l
__gate_ormask_4_3	./v_aslib.c	/^const word32 __gate_ormask_4_3[4] = {0, 8, 128, 136};$/;"	v
__gate_ormask_4_3	./v_aslib.s	/^__gate_ormask_4_3:$/;"	l
__gate_to_vpiprimtyp	./v_vpi.c	/^extern word32 __gate_to_vpiprimtyp(struct gate_t *gp)$/;"	f	signature:(struct gate_t *gp)
__gateeater_on	./cvc.c	/^int32 __gateeater_on;  \/* T => attempt to remove (disconnect) gates *\/ $/;"	v
__gates_removable	./cvc.c	/^int32 __gates_removable; \/* removable static gates *\/$/;"	v
__gbl_argc	./cvc.c	/^int32 __gbl_argc = -1;       \/* global to hold orig argc num *\/$/;"	v
__gbl_argv	./cvc.c	/^char **__gbl_argv = NULL;    \/* global to hold orig argv addr *\/$/;"	v
__gbuf	./v_aslib.c	/^const word32 __gbuf[4] = {0, 1, 3, 3};$/;"	v
__gbuf	./v_aslib.s	/^__gbuf:$/;"	l
__gen_arrsel_const	./v_bbgen.c	/^extern int32 __gen_arrsel_const(struct net_t *np, int32 bi, int32 twid,$/;"	f	signature:(struct net_t *np, int32 bi, int32 twid, struct gref_t *grp)
__gen_assgn_to_bit_const	./v_bbgen.c	/^extern void __gen_assgn_to_bit_const(struct expr_t *lhsx, int32 bi,$/;"	f	signature:(struct expr_t *lhsx, int32 bi, int32 rhs_apti, int32 xmr_pushed)
__gen_assgn_to_psel	./v_bbgen.c	/^extern void __gen_assgn_to_psel(struct expr_t *lhsx, int32 rhs_ti, $/;"	f	signature:(struct expr_t *lhsx, int32 rhs_ti, int32 xmr_pushed)
__gen_ca_tn	./v_bbgen3.c	/^extern int32 __gen_ca_tn(struct conta_t *cap)$/;"	f	signature:(struct conta_t *cap)
__gen_chg_lhspsel	./v_bbgen.c	/^extern void __gen_chg_lhspsel(struct net_t *np, int32 twid, $/;"	f	signature:(struct net_t *np, int32 twid, int32 addr_apti, int32 rhs_ti, int32 lowbi, int32 numbits, int32 ri1)
__gen_chg_st_svecval	./v_bbgen2.c	/^extern void __gen_chg_st_svecval(struct net_t *np, int32 lhs_apti,$/;"	f	signature:(struct net_t *np, int32 lhs_apti, int32 rhs_apti, int32 lowbi, int32 pselwid)
__gen_chg_st_val	./v_bbgen.c	/^extern void __gen_chg_st_val(struct net_t *np, int32 lhs_apti, int32 apti)$/;"	f	signature:(struct net_t *np, int32 lhs_apti, int32 apti)
__gen_chg_word_lhspsel	./v_bbgen.c	/^extern void __gen_chg_word_lhspsel(struct net_t *np, int32 addr_apti,$/;"	f	signature:(struct net_t *np, int32 addr_apti, int32 rhs_ti, int32 lowbi, int32 numbits, int32 ri1)
__gen_cint_tn	./v_bbgen3.c	/^extern int32 __gen_cint_tn(word32 w)$/;"	f	signature:(word32 w)
__gen_cnvt_ab_vec_to_scalar	./v_bbgen.c	/^extern int32 __gen_cnvt_ab_vec_to_scalar(int32 apti)$/;"	f	signature:(int32 apti)
__gen_cnvt_ab_vec_to_scalar_2state	./v_bbgen.c	/^extern int32 __gen_cnvt_ab_vec_to_scalar_2state(int32 apti)$/;"	f	signature:(int32 apti)
__gen_cnvt_srep_ifneeded	./v_bbgen2.c	/^extern int32 __gen_cnvt_srep_ifneeded(int32 rhs_ti, int32 nd_srep,$/;"	f	signature:(int32 rhs_ti, int32 nd_srep, int32 nd_wid, int32 nd_signed, int32 nd_real, int32 exact_size)
__gen_comm_lab_amods	./v_asmlnk.c	/^extern char *__gen_comm_lab_amods(char *s, struct tn_t *tnp)$/;"	f	signature:(char *s, struct tn_t *tnp)
__gen_comp_ndx	./v_bbgen.c	/^extern int32 __gen_comp_ndx(struct net_t *np, struct expr_t *ndx, $/;"	f	signature:(struct net_t *np, struct expr_t *ndx, struct bblk_t *outofrng_bbp, int32 need_net_width)
__gen_conta_drvbp_tn	./v_bbgen3.c	/^extern int32 __gen_conta_drvbp_tn(struct conta_t *cap, int32 srtyp)$/;"	f	signature:(struct conta_t *cap, int32 srtyp)
__gen_conta_enter_adr_tn	./v_bbgen3.c	/^extern int32 __gen_conta_enter_adr_tn(struct conta_t *cap)$/;"	f	signature:(struct conta_t *cap)
__gen_conta_schbp_tn	./v_bbgen3.c	/^extern int32 __gen_conta_schbp_tn(struct conta_t *cap, int32 srtyp)$/;"	f	signature:(struct conta_t *cap, int32 srtyp)
__gen_contab_tn	./v_bbgen3.c	/^extern int32 __gen_contab_tn(int32 ctab_ndx, int32 blen, int32 is_form,$/;"	f	signature:(int32 ctab_ndx, int32 blen, int32 is_form, int32 is_signed, int32 is_real, int32 srtyp)
__gen_ctevp_adr_tn	./v_bbgen3.c	/^extern int32 __gen_ctevp_adr_tn(struct ctev_t *ctevp)$/;"	f	signature:(struct ctev_t *ctevp)
__gen_ctevp_trigger_flag	./v_bbgen3.c	/^extern int32 __gen_ctevp_trigger_flag(int32 ctevp_reg_ti)$/;"	f	signature:(int32 ctevp_reg_ti)
__gen_dce_adr_tn	./v_bbgen3.c	/^extern int32 __gen_dce_adr_tn(struct dcevnt_t *dcep)$/;"	f	signature:(struct dcevnt_t *dcep)
__gen_dce_expr_bp	./v_bbgen3.c	/^extern int32 __gen_dce_expr_bp(struct dcevnt_t *dcep)$/;"	f	signature:(struct dcevnt_t *dcep)
__gen_dce_prevval_tn	./v_bbgen3.c	/^extern int32 __gen_dce_prevval_tn(struct dcevnt_t *dcep, int32 blen)$/;"	f	signature:(struct dcevnt_t *dcep, int32 blen)
__gen_dce_schd_tev	./v_bbgen3.c	/^extern int32 __gen_dce_schd_tev(struct delctrl_t *dctp)$/;"	f	signature:(struct delctrl_t *dctp)
__gen_dctrl_rep_bp	./v_bbgen3.c	/^extern int32 __gen_dctrl_rep_bp(struct delctrl_t *dctp)$/;"	f	signature:(struct delctrl_t *dctp)
__gen_del_tn	./v_bbgen3.c	/^extern int32 __gen_del_tn(int32 del_id, void *deladr)$/;"	f	signature:(int32 del_id, void *deladr)
__gen_dsgn_dat_asm_file	./v_asmlnk.c	/^extern void __gen_dsgn_dat_asm_file(void)$/;"	f	signature:(void)
__gen_duplicate_tmp	./v_bbgen.c	/^extern int32 __gen_duplicate_tmp(int32 t_ti)$/;"	f	signature:(int32 t_ti)
__gen_e_udp_table	./v_bbgen3.c	/^extern int32 __gen_e_udp_table(struct udp_t *udpp)$/;"	f	signature:(struct udp_t *udpp)
__gen_expr_eval	./v_bbgen.c	/^extern int32 __gen_expr_eval(struct expr_t *ndp, int32 xwid)$/;"	f	signature:(struct expr_t *ndp, int32 xwid)
__gen_fnam_ind	./cvc.c	/^int32 __gen_fnam_ind;  \/* location of most recent generate *\/$/;"	v
__gen_fradr_rhs_psel	./v_bbgen.c	/^extern int32 __gen_fradr_rhs_psel(int32 srtyp, int32 addr_apti, $/;"	f	signature:(int32 srtyp, int32 addr_apti, int32 nwid, int32 i1, int32 i2)
__gen_gate_acc_change_enter_adr_tn	./v_bbgen3.c	/^extern int32 __gen_gate_acc_change_enter_adr_tn(struct gate_t *gp)$/;"	f	signature:(struct gate_t *gp)
__gen_gate_adr_tn	./v_bbgen3.c	/^extern int32 __gen_gate_adr_tn(struct gate_t *gp)$/;"	f	signature:(struct gate_t *gp)
__gen_gate_change_enter_adr_tn	./v_bbgen3.c	/^extern int32 __gen_gate_change_enter_adr_tn(struct gate_t *gp)$/;"	f	signature:(struct gate_t *gp)
__gen_gate_enter_adr_tn	./v_bbgen3.c	/^extern int32 __gen_gate_enter_adr_tn(struct gate_t *gp)$/;"	f	signature:(struct gate_t *gp)
__gen_gate_output_value	./v_bbgen3.c	/^extern int32 __gen_gate_output_value(struct gate_t *gp, int32 is_2state)$/;"	f	signature:(struct gate_t *gp, int32 is_2state)
__gen_gatebp_tn	./v_bbgen3.c	/^extern int32 __gen_gatebp_tn(struct gate_t *gp, int32 blen)$/;"	f	signature:(struct gate_t *gp, int32 blen)
__gen_gref_tn	./v_bbgen3.c	/^extern int32 __gen_gref_tn(struct gref_t *grp)$/;"	f	signature:(struct gref_t *grp)
__gen_idp_storage_area	./v_bbgen3.c	/^extern int32 __gen_idp_storage_area(void)$/;"	f	signature:(void)
__gen_l_udp_table	./v_bbgen3.c	/^extern int32 __gen_l_udp_table(struct udp_t *udpp)$/;"	f	signature:(struct udp_t *udpp)
__gen_ld_con_isptr	./v_bbgen.c	/^extern int32 __gen_ld_con_isptr(void *obj, int32 is_signed, int32 is_real)$/;"	f	signature:(void *obj, int32 is_signed, int32 is_real)
__gen_ld_idp_netbp_addr	./v_bbgen3.c	/^extern int32 __gen_ld_idp_netbp_addr(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__gen_ld_is_svec_varadr	./v_bbgen.c	/^extern int32 __gen_ld_is_svec_varadr(struct net_t *np, struct gref_t *grp)$/;"	f	signature:(struct net_t *np, struct gref_t *grp)
__gen_ld_net_addr	./v_bbgen.c	/^extern int32 __gen_ld_net_addr(struct net_t *np, struct gref_t *grp)$/;"	f	signature:(struct net_t *np, struct gref_t *grp)
__gen_ld_netbp	./v_bbgen3.c	/^extern int32 __gen_ld_netbp(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__gen_ld_return_dpi	./v_bbgen3.c	/^extern int32 __gen_ld_return_dpi(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__gen_ld_return_real_dpi	./v_bbgen3.c	/^extern void __gen_ld_return_real_dpi(int32 st_into_ti)$/;"	f	signature:(int32 st_into_ti)
__gen_ld_task_xmr_idp	./v_bbgen.c	/^extern int32 __gen_ld_task_xmr_idp(struct gref_t *grp)$/;"	f	signature:(struct gref_t *grp)
__gen_ld_xmr_idp	./v_bbgen.c	/^extern int32 __gen_ld_xmr_idp(struct gref_t *grp)$/;"	f	signature:(struct gref_t *grp)
__gen_lhsbsel_const	./v_bbgen.c	/^extern void __gen_lhsbsel_const(struct net_t *np, int32 addr_apti, int32 bi,$/;"	f	signature:(struct net_t *np, int32 addr_apti, int32 bi, int32 rhs_ti)
__gen_lhsbsel_var	./v_bbgen.c	/^extern void __gen_lhsbsel_var(struct net_t *np, int32 addr_apti,$/;"	f	signature:(struct net_t *np, int32 addr_apti, int32 bi_ti, int32 rhs_ti)
__gen_lin_cnt	./cvc.c	/^int32 __gen_lin_cnt;   \/* location of most recent generate *\/$/;"	v
__gen_mdat_storage_area	./v_bbgen3.c	/^extern int32 __gen_mdat_storage_area(struct mod_t *mdp)$/;"	f	signature:(struct mod_t *mdp)
__gen_mdata_value	./v_bbgen3.c	/^extern int32 __gen_mdata_value(struct itree_t *itp)$/;"	f	signature:(struct itree_t *itp)
__gen_mipd_enter_adr_tn	./v_bbgen3.c	/^extern int32 __gen_mipd_enter_adr_tn(int32 offset)$/;"	f	signature:(int32 offset)
__gen_nchg_trigger	./v_bbgen3.c	/^extern int32 __gen_nchg_trigger(int32 nchg_ti)$/;"	f	signature:(int32 nchg_ti)
__gen_netchg_addr_tn	./v_bbgen2.c	/^extern struct net_chg_t *__gen_netchg_addr_tn(struct net_t *np, int32 i1, $/;"	f	signature:(struct net_t *np, int32 i1, int32 i2, int32 is_wire_ev, int32 *rnchg_ti)
__gen_nonblocking_bp_tn	./v_bbgen3.c	/^extern int32 __gen_nonblocking_bp_tn(struct st_t *stp, int32 srep, $/;"	f	signature:(struct st_t *stp, int32 srep, int32 is_real)
__gen_npp_adr_tn	./v_bbgen3.c	/^extern int32 __gen_npp_adr_tn(struct net_pin_t *npp)$/;"	f	signature:(struct net_pin_t *npp)
__gen_pd_rhsbp_tn	./v_bbgen3.c	/^extern int32 __gen_pd_rhsbp_tn(struct st_t *stp, int32 srep, int32 is_real)$/;"	f	signature:(struct st_t *stp, int32 srep, int32 is_real)
__gen_proc_enter_adr_tn	./v_bbgen3.c	/^extern int32 __gen_proc_enter_adr_tn(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__gen_proc_enter_nb_adr_tn	./v_bbgen3.c	/^extern int32 __gen_proc_enter_nb_adr_tn(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__gen_proc_id_assign	./v_bbgen.c	/^extern void __gen_proc_id_assign(struct net_t *np, int32 rhs_apti)$/;"	f	signature:(struct net_t *np, int32 rhs_apti)
__gen_process_nchg	./v_bbgen3.c	/^extern int32 __gen_process_nchg(struct net_chg_t *ncp)$/;"	f	signature:(struct net_chg_t *ncp)
__gen_process_nchg_to_reg_tn	./v_bbgen3.c	/^extern int32 __gen_process_nchg_to_reg_tn(struct net_chg_t *ncp)$/;"	f	signature:(struct net_chg_t *ncp)
__gen_process_wire_enter	./v_bbgen3.c	/^extern int32 __gen_process_wire_enter(int32 offset)$/;"	f	signature:(int32 offset)
__gen_record_const_nchg	./v_bbgen2.c	/^extern void __gen_record_const_nchg(struct net_t *np, int32 i1, int32 i2, $/;"	f	signature:(struct net_t *np, int32 i1, int32 i2, struct bblk_t *after_bbp)
__gen_record_var_nchg	./v_bbgen2.c	/^extern void __gen_record_var_nchg(struct net_t *np, int32 bi_ti, $/;"	f	signature:(struct net_t *np, int32 bi_ti, struct bblk_t *after_bbp)
__gen_repeat_bp_tn	./v_bbgen3.c	/^extern int32 __gen_repeat_bp_tn(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__gen_restore_idp	./v_bbgen.c	/^extern void __gen_restore_idp(int32 save_idp_ti)$/;"	f	signature:(int32 save_idp_ti)
__gen_rhs_bsel_const	./v_bbgen.c	/^extern int32 __gen_rhs_bsel_const(struct net_t *np, int32 var_apti, int32 bi) $/;"	f	signature:(struct net_t *np, int32 var_apti, int32 bi)
__gen_rhs_bsel_scalar_const	./v_bbgen.c	/^extern int32 __gen_rhs_bsel_scalar_const(struct net_t *np, int32 var_apti, $/;"	f	signature:(struct net_t *np, int32 var_apti, int32 bi)
__gen_rhs_bsel_scalar_var	./v_bbgen.c	/^extern int32 __gen_rhs_bsel_scalar_var(struct net_t *np, int32 var_apti, $/;"	f	signature:(struct net_t *np, int32 var_apti, int32 bi_ti)
__gen_rhs_bsel_var	./v_bbgen.c	/^extern int32 __gen_rhs_bsel_var(struct net_t *np, int32 var_apti, int32 bi_ti) $/;"	f	signature:(struct net_t *np, int32 var_apti, int32 bi_ti)
__gen_rhs_strength_scalar_bsel_var	./v_bbgen.c	/^extern int32 __gen_rhs_strength_scalar_bsel_var(int32 var_apti, int32 bi) $/;"	f	signature:(int32 var_apti, int32 bi)
__gen_scalar_operand	./v_bbgen.c	/^extern int32 __gen_scalar_operand(int32 srtyp, int32 op_ti)$/;"	f	signature:(int32 srtyp, int32 op_ti)
__gen_sens_hd	./cvc.c	/^struct gen_sens_t *__gen_sens_hd; \/* hd of gen param sensivity list *\/$/;"	v	typeref:struct:gen_sens_t
__gen_sens_tail	./cvc.c	/^struct gen_sens_t *__gen_sens_tail; \/* and tail of same list *\/$/;"	v	typeref:struct:gen_sens_t
__gen_st_bsel	./v_bbgen.c	/^extern void __gen_st_bsel(int32 srtyp, int32 res_apti, int32 rhs_ti, $/;"	f	signature:(int32 srtyp, int32 res_apti, int32 rhs_ti, int32 bi)
__gen_st_psel	./v_bbgen.c	/^extern void __gen_st_psel(int32 srtyp, int32 addr_apti, int32 rhs_apti, $/;"	f	signature:(int32 srtyp, int32 addr_apti, int32 rhs_apti, int32 lowbi, int32 numbits)
__gen_st_val	./v_bbgen.c	/^extern void __gen_st_val(struct net_t *np, int32 lhs_apti, int32 apti)$/;"	f	signature:(struct net_t *np, int32 lhs_apti, int32 apti)
__gen_stack_adr	./v_bbgen3.c	/^extern int32 __gen_stack_adr(int32 val_ti)$/;"	f	signature:(int32 val_ti)
__gen_stmt_tn	./v_bbgen3.c	/^extern int32 __gen_stmt_tn(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__gen_stren_lhsbsel	./v_bbgen.c	/^extern void __gen_stren_lhsbsel(struct net_t *np, int32 addr_apti, int32 bi, $/;"	f	signature:(struct net_t *np, int32 addr_apti, int32 bi, int32 bi_ti, int32 rhs_ti, int32 is_const)
__gen_taskp_tn	./v_bbgen3.c	/^extern int32 __gen_taskp_tn(struct task_t *tskp)$/;"	f	signature:(struct task_t *tskp)
__gen_tchk_tn	./v_bbgen3.c	/^extern int32 __gen_tchk_tn(struct chktchg_t *chktcp, int32 npp_id)$/;"	f	signature:(struct chktchg_t *chktcp, int32 npp_id)
__gen_tn	./v_bbgen.c	/^extern int32 __gen_tn(int32 srtyp, int32 bsiz)$/;"	f	signature:(int32 srtyp, int32 bsiz)
__gen_to_r_cnvt	./v_bbgen2.c	/^extern int32 __gen_to_r_cnvt(int32 rhs_ti, int32 nd_signed, int32 srtyp)$/;"	f	signature:(int32 rhs_ti, int32 nd_signed, int32 srtyp)
__gen_tran_1net	./v_bbgen2.c	/^extern void __gen_tran_1net(struct net_t *np, int32 np_ti, int32 idp_saved) $/;"	f	signature:(struct net_t *np, int32 np_ti, int32 idp_saved)
__gen_un_bitred_and	./v_bbgen.c	/^extern int32 __gen_un_bitred_and(int32 op_apti, int32 blen, int32 nd_invert,$/;"	f	signature:(int32 op_apti, int32 blen, int32 nd_invert, int32 is_gate_op)
__gen_un_bitred_or	./v_bbgen.c	/^extern int32 __gen_un_bitred_or(int32 op_ti, int32 nd_invert, int32 is_gate_op)$/;"	f	signature:(int32 op_ti, int32 nd_invert, int32 is_gate_op)
__gen_un_bitred_xnor_nor	./v_bbgen.c	/^extern int32 __gen_un_bitred_xnor_nor(int32 op_ti, int32 is_xnor, int32 srtyp)$/;"	f	signature:(int32 op_ti, int32 is_xnor, int32 srtyp)
__gen_wireid_expr	./v_src2.c	/^extern struct expr_t *__gen_wireid_expr(struct sy_t *syp)$/;"	f	signature:(struct sy_t *syp)
__gen_xpr_tn	./v_bbgen3.c	/^extern int32 __gen_xpr_tn(struct expr_t *xp)$/;"	f	signature:(struct expr_t *xp)
__genblk_copying	./cvc.c	/^int32 __genblk_copying; \/* T => expr copy is gen blk copy *\/$/;"	v
__generating_stp	./v_bbgen.c	/^struct st_t *__generating_stp; \/* current genned stp *\/$/;"	v	typeref:struct:st_t
__gening_mdc	./v_bbgen.c	/^int32 __gening_mdc;    \/* gening merged always blocks *\/$/;"	v
__gening_tsk	./v_cvcrt.c	/^int32 __gening_tsk;    \/* T => generating insn inside task body *\/$/;"	v
__gentsk_copying	./cvc.c	/^int32 __gentsk_copying; \/* T => copying gen tsk, complex special case *\/$/;"	v
__get1_vtok	./v_ms.c	/^extern int32 __get1_vtok(FILE *f)$/;"	f	signature:(FILE *f)
__get2_avlnode	./v_cvcms.c	/^extern struct avlnode_t * __get2_avlnode(void *valp, struct avlhd_t *tree_rec) $/;"	f	signature:(void *valp, struct avlhd_t *tree_rec)
__get2_par_tni	./v_cvcms.c	/^extern int32 __get2_par_tni(int32 tni)$/;"	f	signature:(int32 tni)
__get_acc_class	./v_prp.c	/^extern int32 __get_acc_class(struct gate_t *gp)$/;"	f	signature:(struct gate_t *gp)
__get_array_srep_type	./v_prp2.c	/^extern int32 __get_array_srep_type(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__get_arrwide	./v_fx2.c	/^extern int32 __get_arrwide(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__get_asl_insn_retsiz	./v_cvcms.c	/^extern int32 __get_asl_insn_retsiz(struct insn_t *ip, int32 *opand_bytsiz)$/;"	f	signature:(struct insn_t *ip, int32 *opand_bytsiz)
__get_avlnode	./v_cvcms.c	/^extern struct avlnode_t * __get_avlnode(void *valp, struct avlhd_t *tree_rec) $/;"	f	signature:(void *valp, struct avlhd_t *tree_rec)
__get_bidnpp_sect	./v_trch.c	/^extern void __get_bidnpp_sect(struct net_t *np, struct net_pin_t *npp,$/;"	f	signature:(struct net_t *np, struct net_pin_t *npp, int32 *bi1, int32 *bi2)
__get_bpti	./v_bbgen.c	/^extern int32 __get_bpti(int32 apti)$/;"	f	signature:(int32 apti)
__get_cfgtok	./v_ms.c	/^extern int32 __get_cfgtok(FILE *f)$/;"	f	signature:(FILE *f)
__get_cmdtok	./v_ms.c	/^extern int32 __get_cmdtok(FILE *f)$/;"	f	signature:(FILE *f)
__get_comp_num_ndx	./v_bbgen.c	/^extern int32 __get_comp_num_ndx(struct expr_t *ndx)$/;"	f	signature:(struct expr_t *ndx)
__get_con_adradd_xvi	./v_cvcms.c	/^extern int32 __get_con_adradd_xvi(int32 tni)$/;"	f	signature:(int32 tni)
__get_con_wrd_aval_nd0bval	./v_cvcms.c	/^extern word32 __get_con_wrd_aval_nd0bval(int32 tni)$/;"	f	signature:(int32 tni)
__get_cor_range	./v_sim.c	/^extern void __get_cor_range(int32 oi1, union intptr_u oi2, int32 *i1,$/;"	f	signature:(int32 oi1, union intptr_u oi2, int32 *i1, int32 *i2)
__get_dbcmdnum	./v_dbg.c	/^extern int32 __get_dbcmdnum(char *aval, struct namlst_t *cmdtab, int32 cmdnum)$/;"	f	signature:(char *aval, struct namlst_t *cmdtab, int32 cmdnum)
__get_dbg_val	./v_dbg2.c	/^extern int32 __get_dbg_val(void)$/;"	f	signature:(void)
__get_dce_prevval_wsiz	./v_prp2.c	/^extern int32 __get_dce_prevval_wsiz(struct dcevnt_t *dcep, struct net_t *np)$/;"	f	signature:(struct dcevnt_t *dcep, struct net_t *np)
__get_dcewid	./v_ex2.c	/^extern int32 __get_dcewid(struct dcevnt_t *dcep, struct net_t *np)$/;"	f	signature:(struct dcevnt_t *dcep, struct net_t *np)
__get_del	./v_del.c	/^extern word64 __get_del(union del_u du, word32 drep)$/;"	f	signature:(union del_u du, word32 drep)
__get_del_inum	./v_del.c	/^extern word64 __get_del_inum(union del_u du, word32 drep, int32 inum)$/;"	f	signature:(union del_u du, word32 drep, int32 inum)
__get_digattr_parent	./v_vpi2.c	/^extern vpiHandle __get_digattr_parent(struct h_t *hp)$/;"	f	signature:(struct h_t *hp)
__get_eval_cstr	./v_cnv.c	/^extern char *__get_eval_cstr(struct expr_t *xp, int32 *chlen)$/;"	f	signature:(struct expr_t *xp, int32 *chlen)
__get_eval_word	./v_ex.c	/^extern int32 __get_eval_word(struct expr_t *xp, word32 *wval)$/;"	f	signature:(struct expr_t *xp, word32 *wval)
__get_forw_funcdef_sy	./v_src.c	/^extern struct sy_t *__get_forw_funcdef_sy(struct expr_t *xp, int32 conf_only)$/;"	f	signature:(struct expr_t *xp, int32 conf_only)
__get_gia_wide	./v_genfx.c	/^extern int32 __get_gia_wide(struct gia_aux_t *giap)$/;"	f	signature:(struct gia_aux_t *giap)
__get_gref_giarr_ip	./v_ex3.c	/^extern struct inst_t *__get_gref_giarr_ip(struct gref_t *grp, int32 gri,$/;"	f	signature:(struct gref_t *grp, int32 gri, struct itree_t *itp)
__get_hp_from_freelst	./v_vpi.c	/^extern struct h_t *__get_hp_from_freelst(void)$/;"	f	signature:(void)
__get_hrec_from_freelst	./v_vpi.c	/^extern struct hrec_t *__get_hrec_from_freelst(void)$/;"	f	signature:(void)
__get_idp_const_bselndx	./v_ex4.c	/^extern int32 __get_idp_const_bselndx(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__get_indexed_psel_range	./v_ex2.c	/^extern struct net_t *__get_indexed_psel_range(struct expr_t *ndp, int32 *rng1, $/;"	f	signature:(struct expr_t *ndp, int32 *rng1, int32 *rng2)
__get_initval	./v_prp2.c	/^extern int32 __get_initval(struct net_t *np, int32 *stval)$/;"	f	signature:(struct net_t *np, int32 *stval)
__get_itp_const_bselndx	./v_ex4.c	/^extern int32 __get_itp_const_bselndx(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__get_jmp_insn_nam	./v_asmlnk.c	/^extern char *__get_jmp_insn_nam(char *s, struct insn_t *ip) $/;"	f	signature:(char *s, struct insn_t *ip)
__get_lhs_srep	./v_cvcrt.c	/^extern int32 __get_lhs_srep(struct expr_t *lhsx, int32 *bsize)$/;"	f	signature:(struct expr_t *lhsx, int32 *bsize)
__get_lowered_tmp_size	./v_cvcms.c	/^extern int32 __get_lowered_tmp_size(struct tn_t *tnp)$/;"	f	signature:(struct tn_t *tnp)
__get_lvalue_idndp	./v_fx2.c	/^extern struct expr_t *__get_lvalue_idndp(struct expr_t *lhsx)$/;"	f	signature:(struct expr_t *lhsx)
__get_mast_mdp	./v_prp2.c	/^extern struct mod_t *__get_mast_mdp(struct mod_t *mdp)$/;"	f	signature:(struct mod_t *mdp)
__get_mipd_from_port	./v_prp2.c	/^extern struct mipd_t *__get_mipd_from_port(struct mod_pin_t *mpp, int32 ndx)$/;"	f	signature:(struct mod_pin_t *mpp, int32 ndx)
__get_nets_containing_sy	./v_cvcms.c	/^extern struct sy_t *__get_nets_containing_sy(struct net_t *np,$/;"	f	signature:(struct net_t *np, struct mod_t **ret_mdp)
__get_netwide	./v_fx2.c	/^extern int32 __get_netwide(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__get_new_hp_handle	./v_vpi.c	/^extern struct h_t *__get_new_hp_handle(void)$/;"	f	signature:(void)
__get_next_time_header	./v_sim.c	/^extern struct tev_t *__get_next_time_header(void)$/;"	f	signature:(void)
__get_nongia_sym	./v_ms.c	/^extern struct sy_t *__get_nongia_sym(char *nam, struct symtab_t *sytp)$/;"	f	signature:(char *nam, struct symtab_t *sytp)
__get_npprefloc	./v_ex4.c	/^extern struct itree_t *__get_npprefloc(struct net_pin_t *npp)$/;"	f	signature:(struct net_pin_t *npp)
__get_optcfg_prop_typ	./v_src3.c	/^extern int32 __get_optcfg_prop_typ(struct ocfg_stmt_t *ocstmtp)$/;"	f	signature:(struct ocfg_stmt_t *ocstmtp)
__get_path_del	./v_ex3.c	/^extern struct pthdst_t *__get_path_del(struct rngdwir_t *dwirp, int32 biti,$/;"	f	signature:(struct rngdwir_t *dwirp, int32 biti, word64 *pschtim)
__get_pcku_chars	./v_ex2.c	/^extern int32 __get_pcku_chars(int32 blen, int32 insts)$/;"	f	signature:(int32 blen, int32 insts)
__get_prep_indexed_psel_range	./v_fx3.c	/^extern struct net_t *__get_prep_indexed_psel_range(struct expr_t *ndp, $/;"	f	signature:(struct expr_t *ndp, int32 *rng1, int32 *rng2)
__get_qc_wirrng	./v_ex3.c	/^extern t_midat *__get_qc_wirrng(struct expr_t *lhsx, struct net_t **nnp,$/;"	f	signature:(struct expr_t *lhsx, struct net_t **nnp, int32 *biti, int32 *bitj)
__get_qc_wirrng_comptime	./v_bbgen.c	/^extern void __get_qc_wirrng_comptime(struct expr_t *lhsx, $/;"	f	signature:(struct expr_t *lhsx, struct net_t **nnp, int32 *biti, int32 *bitj)
__get_rhswidth	./v_fx3.c	/^extern int32 __get_rhswidth(struct expr_t *rhsx)$/;"	f	signature:(struct expr_t *rhsx)
__get_showcancele_val	./v_sim.c	/^extern word32 __get_showcancele_val(struct gate_t *gp)$/;"	f	signature:(struct gate_t *gp)
__get_stack_size	./v_asmlnk.c	/^extern word32 __get_stack_size(struct flowg_t *fgp, int32 push_count)$/;"	f	signature:(struct flowg_t *fgp, int32 push_count)
__get_sym	./v_ms.c	/^extern struct sy_t *__get_sym(char *nam, struct symtab_t *sytp)$/;"	f	signature:(char *nam, struct symtab_t *sytp)
__get_sym_env	./v_ms.c	/^extern struct sy_t *__get_sym_env(char *nam)$/;"	f	signature:(char *nam)
__get_tmpfnam	./v_cvcrt.c	/^extern int32 __get_tmpfnam(char *fname)$/;"	f	signature:(char *fname)
__get_tmult	./cvc.c	/^extern char *__get_tmult(char *cp, word32 *num_zeros)$/;"	f	signature:(char *cp, word32 *num_zeros)
__get_tn_vec_size	./v_cvcms.c	/^extern int32 __get_tn_vec_size(struct tn_t *tnp)$/;"	f	signature:(struct tn_t *tnp)
__get_tnwid	./v_bbgen.c	/^extern int32 __get_tnwid(int32 tni)$/;"	f	signature:(int32 tni)
__get_unknown_biti_val	./v_ex3.c	/^extern void __get_unknown_biti_val(int32 nwid, word32 *nap,$/;"	f	signature:(int32 nwid, word32 *nap, word32 *nbp, word32 *oap, word32 *obp, word32 newval)
__get_vkeynam	./v_ms.c	/^extern char *__get_vkeynam(char *s, int32 knum)$/;"	f	signature:(char *s, int32 knum)
__get_vpinet_index	./v_vpi3.c	/^extern int32 __get_vpinet_index(struct net_t **pnp, struct h_t *hp)$/;"	f	signature:(struct net_t **pnp, struct h_t *hp)
__get_vtok	./v_ms.c	/^extern void __get_vtok(void)$/;"	f	signature:(void)
__get_widthclass	./v_fx3.c	/^extern int32 __get_widthclass(struct expr_t *rhsx)$/;"	f	signature:(struct expr_t *rhsx)
__get_wrd_amode_con_val	./v_cvcms.c	/^extern word32 __get_wrd_amode_con_val(struct amode_t *amp)$/;"	f	signature:(struct amode_t *amp)
__get_wrd_con_val	./v_cvcms.c	/^extern word32 __get_wrd_con_val(int32 tni)$/;"	f	signature:(int32 tni)
__getarr_range	./v_fx2.c	/^extern void __getarr_range(struct net_t *np, int32 *mr1, int32 *mr2, $/;"	f	signature:(struct net_t *np, int32 *mr1, int32 *mr2, int32 *arrwid)
__getarr_range_mda	./v_fx2.c	/^extern void __getarr_range_mda(struct net_t *np, int32 *mr1, int32 *mr2, $/;"	f	signature:(struct net_t *np, int32 *mr1, int32 *mr2, int32 *arrwid, int32 dim)
__getcur_scope_tsk	./v_cnv.c	/^extern struct task_t *__getcur_scope_tsk(void)$/;"	f	signature:(void)
__getwir_range	./v_fx2.c	/^extern void __getwir_range(struct net_t *np, int32 *xr1, int32 *xr2)$/;"	f	signature:(struct net_t *np, int32 *xr1, int32 *xr2)
__gferr	./v_ms.c	/^extern void __gferr(int32 id_num, word32 gfnam_ind, int32 gflin_cnt,$/;"	f	signature:(int32 id_num, word32 gfnam_ind, int32 gflin_cnt, char *s, ...)
__gfinform	./v_ms.c	/^extern void __gfinform(int32 id_num, word32 gfnam_ind, int32 gflin_cnt,$/;"	f	signature:(int32 id_num, word32 gfnam_ind, int32 gflin_cnt, char *s, ...)
__gfterr	./v_ms.c	/^extern void __gfterr(int32 id_num, word32 gfnam_ind, int32 gflin_cnt,$/;"	f	signature:(int32 id_num, word32 gfnam_ind, int32 gflin_cnt, char *s, ...)
__gfwarn	./v_ms.c	/^extern void __gfwarn(int32 id_num, word32 gfnam_ind, int32 gflin_cnt,$/;"	f	signature:(int32 id_num, word32 gfnam_ind, int32 gflin_cnt, char *s, ...)
__gia_sym_cmp	./v_genfx.c	/^extern int32 __gia_sym_cmp(const void *sy1, const void *sy2)$/;"	f	signature:(const void *sy1, const void *sy2)
__gitems_hd	./cvc.c	/^struct genitem_t *__gitems_hd; \/* list of non meta gen items in mod *\/$/;"	v	typeref:struct:genitem_t
__gitems_tail	./cvc.c	/^struct genitem_t *__gitems_tail; $/;"	v	typeref:struct:genitem_t
__glbnam_to_expr	./v_cnv.c	/^extern struct expr_t *__glbnam_to_expr(char *irefs)$/;"	f	signature:(char *irefs)
__glbsycmps	./cvc.c	/^struct sy_t **__glbsycmps; \/* work global name symbols *\/$/;"	v	typeref:struct:sy_t
__glbxcmps	./cvc.c	/^struct expr_t **__glbxcmps;\/* work glbal exprs *\/$/;"	v	typeref:struct:expr_t
__gnot	./v_aslib.c	/^const word32 __gnot[4] = {1, 0, 3, 3};$/;"	v
__gnot	./v_aslib.s	/^__gnot:$/;"	l
__gref_gitems_hd	./cvc.c	/^struct genitem_t *__gref_gitems_hd; \/* lst of xmr gen items (sep list) *\/$/;"	v	typeref:struct:genitem_t
__gref_gitems_tail	./cvc.c	/^struct genitem_t *__gref_gitems_tail; $/;"	v	typeref:struct:genitem_t
__grow_acc_hptab	./v_acc.c	/^extern void __grow_acc_hptab(int32 addnum)$/;"	f	signature:(int32 addnum)
__grow_acc_hptab2	./v_acc.c	/^extern void __grow_acc_hptab2(int32 addnum)$/;"	f	signature:(int32 addnum)
__grow_avltab	./v_cvcrt.c	/^extern void __grow_avltab(void)$/;"	f	signature:(void)
__grow_contab	./v_src2.c	/^extern void __grow_contab(int32 ndwrds)$/;"	f	signature:(int32 ndwrds)
__grow_fcstk	./v_ex.c	/^extern void __grow_fcstk(void)$/;"	f	signature:(void)
__grow_hptab	./v_vpi2.c	/^extern void __grow_hptab(int32 addnum)$/;"	f	signature:(int32 addnum)
__grow_hptab2	./v_vpi2.c	/^extern void __grow_hptab2(int32 addnum)$/;"	f	signature:(int32 addnum)
__grow_infils	./cvc.c	/^extern void __grow_infils(int32 new_last)$/;"	f	signature:(int32 new_last)
__grow_ndxjmpbbtab	./v_bbgen.c	/^extern void __grow_ndxjmpbbtab(size_t addtabels)$/;"	f	signature:(size_t addtabels)
__grow_xstk	./v_ex2.c	/^extern void __grow_xstk(void)$/;"	f	signature:(void)
__grwrknum	./cvc.c	/^int32 __grwrknum;      \/* current number of glbs in work table *\/ $/;"	v
__grwrktab	./cvc.c	/^struct gref_t *__grwrktab;  \/* work table for building mod glbs *\/$/;"	v	typeref:struct:gref_t
__grwrktabsiz	./cvc.c	/^int32 __grwrktabsiz;        \/* its size *\/$/;"	v
__gstate_tostr	./v_ex4.c	/^extern char *__gstate_tostr(char *s, struct gate_t *gp, int32 fullpath)$/;"	f	signature:(char *s, struct gate_t *gp, int32 fullpath)
__has_dmpv_sys_calls	./cvc.c	/^int32 __has_dmpv_sys_calls; \/* T => design as dumpvar sys calls *\/$/;"	v
__has_dumpports_sys_calls	./cvc.c	/^int32 __has_dumpports_sys_calls; \/* T => design as dumpport sys calls *\/$/;"	v
__has_sdfann_calls	./cvc.c	/^int32 __has_sdfann_calls;\/* T => no sdf annotate systsk calls in src *\/ $/;"	v
__has_tgl_optcfg_stmt	./cvc.c	/^int32 __has_tgl_optcfg_stmt;       \/* T => optconfigfil tgl stmts used *\/$/;"	v
__has_top_mtm	./cvc.c	/^int32 __has_top_mtm;   \/* T => for parameter rhs non () m:t:m *\/$/;"	v
__has_vpi_driver	./v_vpi3.c	/^extern int32 __has_vpi_driver(struct net_t *np, struct net_pin_t *npp)$/;"	f	signature:(struct net_t *np, struct net_pin_t *npp)
__have_t_ignore_elsif	./cvc.c	/^int32 __have_t_ignore_elsif[MAXLEVELS]; \/* T in else(if), seen a T *\/$/;"	v
__have_vpi_actions	./cvc.c	/^int32 __have_vpi_actions;\/* some use of __vpi actions *\/$/;"	v
__have_vpi_gateout_cbs	./cvc.c	/^int32 __have_vpi_gateout_cbs;\/* some use of gate out term cbs *\/$/;"	v
__hctrl_end	./cvc.c	/^struct hctrl_t *__hctrl_end;\/* and end *\/$/;"	v	typeref:struct:hctrl_t
__hctrl_hd	./cvc.c	/^struct hctrl_t *__hctrl_hd; \/* head of active iact stmts *\/$/;"	v	typeref:struct:hctrl_t
__hd_gdap	./v_bbgen.c	/^struct gate_da_list_t *__hd_gdap; \/* head date del assgn struct list *\/$/;"	v	typeref:struct:gate_da_list_t
__hdr_cpblks	./cvc.c	/^struct cpblk_t *__hdr_cpblks; \/* blocks used for cell recs*\/$/;"	v	typeref:struct:cpblk_t
__hdr_cpnblks	./cvc.c	/^struct cpnblk_t *__hdr_cpnblks;  \/* blocks of explicit cell pnames *\/$/;"	v	typeref:struct:cpnblk_t
__hdr_cppblks	./cvc.c	/^struct cppblk_t *__hdr_cppblks; \/* blocks used for cell pin recs*\/$/;"	v	typeref:struct:cppblk_t
__hdr_ncablks	./cvc.c	/^struct ncablk_t *__hdr_ncablks; \/* blocks used for ncomp recs *\/$/;"	v	typeref:struct:ncablk_t
__hdr_tnblks	./cvc.c	/^struct tnblk_t *__hdr_tnblks;  \/* blocks of symb table tree nodes *\/$/;"	v	typeref:struct:tnblk_t
__heap	./cvc.c	/^struct heap_t **__heap;$/;"	v	typeref:struct:heap_t
__heap_maxsize	./cvc.c	/^int32 __heap_maxsize;$/;"	v
__heap_size	./cvc.c	/^int32 __heap_size;$/;"	v
__help_olp	./cvc.c	/^struct optlst_t *__help_olp;  \/* help option, nil if none *\/$/;"	v	typeref:struct:optlst_t
__hist_cur_listnum	./cvc.c	/^int32 __hist_cur_listnum;\/* number to list for :history command *\/$/;"	v
__history_on	./cvc.c	/^int32 __history_on;    \/* collecting and saving history is on *\/$/;"	v
__hizstren_del_tab	./v_ex3.c	/^const byte __hizstren_del_tab[] = {$/;"	v
__hizstrengate_getdel	./v_del.c	/^extern word64 __hizstrengate_getdel(struct gate_t *gp)$/;"	f	signature:(struct gate_t *gp)
__ia_entered	./cvc.c	/^int32 __ia_entered;    \/* F (also for reset) until iact entered *\/$/;"	v
__ia_err	./v_ms.c	/^extern void __ia_err(int32 id_num, char *s, ...)$/;"	f	signature:(int32 id_num, char *s, ...)
__ia_has_vpicall	./cvc.c	/^int32 __ia_has_vpicall;\/* init\/alwasy has a vpi call - needs thread *\/$/;"	v
__ia_warn	./v_ms.c	/^extern void __ia_warn(int32 id_num, char *s, ...)$/;"	f	signature:(int32 id_num, char *s, ...)
__iact_can_free	./cvc.c	/^int32 __iact_can_free; \/* T => non monitor\/strobe, can free *\/$/;"	v
__iact_dcehdr	./cvc.c	/^struct dceauxlst_t *__iact_dcehdr; \/* header of current iact dces *\/$/;"	v	typeref:struct:dceauxlst_t
__iact_jmpbuf	./v_dbg.c	/^jmp_buf __iact_jmpbuf;$/;"	v
__iact_mdp	./cvc.c	/^struct mod_t *__iact_mdp; \/* current iact dummy module *\/$/;"	v	typeref:struct:mod_t
__iact_must_sched	./cvc.c	/^int32 __iact_must_sched; \/* T => iact stmt(s) have $stop or loop *\/$/;"	v
__iact_reason	./cvc.c	/^int32 __iact_reason;   \/* reason for entering interactive state *\/$/;"	v
__iact_scope_chg	./cvc.c	/^int32 __iact_scope_chg;\/* T => always move scope to cur on iact st. *\/$/;"	v
__iact_state	./cvc.c	/^int32 __iact_state;    \/* T => in interactive processing *\/$/;"	v
__iact_stmt_err	./cvc.c	/^int32 __iact_stmt_err; \/* T => syntax error for iact stmt *\/$/;"	v
__iah_lasti	./cvc.c	/^int32 __iah_lasti;     \/* current (latest) command *\/$/;"	v
__iahsiz	./cvc.c	/^int32 __iahsiz;        \/* current size of history cmd table *\/$/;"	v
__iahtab	./cvc.c	/^struct iahist_t *__iahtab;\/* table of history commands *\/$/;"	v	typeref:struct:iahist_t
__iahwrklen	./cvc.c	/^int32 __iahwrklen;     \/* allocated len of iah work string *\/$/;"	v
__iahwrkline	./cvc.c	/^char *__iahwrkline;    \/* interactive command line work area *\/$/;"	v
__iasetup	./cvc.c	/^int32 __iasetup;       \/* F until interactive entered *\/$/;"	v
__iconn_seq_no	./v_bbgen.c	/^int32 __iconn_seq_no;  \/* counter for creating iconn ident nums *\/ $/;"	v
__id_partsel	./v_sdf.c	/^static int32 __id_partsel;$/;"	v	file:
__id_qualpath	./v_sdf.c	/^static int32 __id_qualpath;$/;"	v	file:
__id_select	./v_sdf.c	/^static int32 __id_select;$/;"	v	file:
__idp	./cvc.c	/^t_midat *__idp;        \/* current inst net (for now) data area ptr *\/$/;"	v
__idp_ti	./v_bbgen.c	/^int32 __idp_ti;             \/* per module idp storage area tmp *\/$/;"	v
__idpdat_areasp	./cvc.c	/^t_midat **__idpdat_areasp = NULL;  \/* mod idp area pointers *\/$/;"	v
__ifdef_skipping	./cvc.c	/^int32 __ifdef_skipping;\/* T = skipping not included ifdef section *\/$/;"	v
__iget_lval_sym	./v_bbgen.c	/^extern struct sy_t *__iget_lval_sym(struct expr_t *xp)$/;"	f	signature:(struct expr_t *xp)
__ignore_sdf_iopath_edges	./cvc.c	/^int32 __ignore_sdf_iopath_edges; \/* T => ignore io path edges to match MS *\/$/;"	v
__image_copy_confunc	./v_fx.c	/^extern struct task_t *__image_copy_confunc(struct task_t *otskp)$/;"	f	signature:(struct task_t *otskp)
__immed_assigns	./cvc.c	/^word32 __immed_assigns;\/* num immed assign (not scheduled) *\/ $/;"	v
__immed_eval_trifchan	./v_trch.c	/^extern void __immed_eval_trifchan(struct gate_t *gp)$/;"	f	signature:(struct gate_t *gp)
__impl_evlst_hd	./cvc.c	/^struct exprlst_t *__impl_evlst_hd; \/* hdr of impl @(*) ev expr list *\/$/;"	v	typeref:struct:exprlst_t
__impl_evlst_tail	./cvc.c	/^struct exprlst_t *__impl_evlst_tail; \/* and its tail *\/$/;"	v	typeref:struct:exprlst_t
__in_cell_region	./cvc.c	/^int32 __in_cell_region;\/* T => turn on cell bit for every module *\/$/;"	v
__in_fils	./cvc.c	/^char **__in_fils;      \/* malloced input file list from args *\/$/;"	v
__in_gen_for	./cvc.c	/^int32 __in_gen_for;    \/* T => no task\/func decl in gen for *\/$/;"	v
__in_gen_region	./cvc.c	/^int32 __in_gen_region; \/* T => processing generate mod item *\/$/;"	v
__in_gen_scopes_get_sym_env	./v_ms.c	/^extern struct sy_t *__in_gen_scopes_get_sym_env(char *nam)$/;"	f	signature:(char *nam)
__in_ifdef_level	./cvc.c	/^int32 __in_ifdef_level;\/* current processing `ifdef level *\/ $/;"	v
__in_s	./cvc.c	/^FILE *__in_s;$/;"	v
__in_vpi_errorcb	./cvc.c	/^int32 __in_vpi_errorcb;\/* T => if sim ctrl, suppress error msg error *\/$/;"	v
__in_xpr_markparam	./v_fx2.c	/^extern void __in_xpr_markparam(struct expr_t *xp)$/;"	f	signature:(struct expr_t *xp)
__incdirs	./cvc.c	/^char **__incdirs;      \/* tab of +incdir paths (always \/ end) *\/$/;"	v
__inclst_end	./cvc.c	/^struct incloc_t *__inclst_end; \/* end of included files list *\/$/;"	v	typeref:struct:incloc_t
__inclst_hdr	./cvc.c	/^struct incloc_t *__inclst_hdr; \/* header of included files list *\/$/;"	v	typeref:struct:incloc_t
__inertial_cancels	./cvc.c	/^word32 __inertial_cancels; \/* num resched form later inertial del *\/$/;"	v
__inform	./v_ms.c	/^extern void __inform(int32 id_num, char *s, ...)$/;"	f	signature:(int32 id_num, char *s, ...)
__inform_cnt	./cvc.c	/^int32 __inform_cnt;    \/* number of informs *\/$/;"	v
__init_1instdce_prevval	./v_prp2.c	/^extern void __init_1instdce_prevval(struct dcevnt_t *dcep)$/;"	f	signature:(struct dcevnt_t *dcep)
__init_acc	./v_acc.c	/^extern void __init_acc(void)$/;"	f	signature:(void)
__init_all_inst_conta_drv	./v_prp2.c	/^extern void __init_all_inst_conta_drv(int32 cap_ofs, int32 blen, $/;"	f	signature:(int32 cap_ofs, int32 blen, struct mod_t *mdp)
__init_all_inst_gate_state	./v_prp2.c	/^extern void __init_all_inst_gate_state(struct gate_t *gp, struct mod_t *mdp)$/;"	f	signature:(struct gate_t *gp, struct mod_t *mdp)
__init_all_inst_udp_state	./v_prp2.c	/^extern void __init_all_inst_udp_state(struct gate_t *gp, struct mod_t *mdp)$/;"	f	signature:(struct gate_t *gp, struct mod_t *mdp)
__init_all_trchans	./v_trch.c	/^extern void __init_all_trchans(void) $/;"	f	signature:(void)
__init_amode	./v_cvcms.c	/^extern void __init_amode(struct amode_t *amp)$/;"	f	signature:(struct amode_t *amp)
__init_compiled_sim_storage	./v_prp2.c	/^extern void __init_compiled_sim_storage(void)$/;"	f	signature:(void)
__init_hrec	./v_vpi.c	/^extern void __init_hrec(struct hrec_t *hrp)$/;"	f	signature:(struct hrec_t *hrp)
__init_idp_nchgaction	./v_prp2.c	/^extern void __init_idp_nchgaction(void)$/;"	f	signature:(void)
__init_inst	./v_fx.c	/^extern void __init_inst(struct inst_t *ip)$/;"	f	signature:(struct inst_t *ip)
__init_instdownport_contas	./v_ex4.c	/^extern void __init_instdownport_contas(struct itree_t *up_itp,$/;"	f	signature:(struct itree_t *up_itp, struct itree_t *down_itp)
__init_instupport_contas	./v_ex4.c	/^extern void __init_instupport_contas(struct itree_t *down_itp)$/;"	f	signature:(struct itree_t *down_itp)
__init_interactive	./v_dbg.c	/^extern void __init_interactive(void)$/;"	f	signature:(void)
__init_itree_node	./v_genfx.c	/^extern void __init_itree_node(struct itree_t *itp)$/;"	f	signature:(struct itree_t *itp)
__init_mdp	./v_cvcrt.c	/^struct mod_t *__init_mdp;  \/* module glbl for init code *\/$/;"	v	typeref:struct:mod_t
__init_mod	./v_src.c	/^extern void __init_mod(struct mod_t *mdp, struct sy_t *syp)$/;"	f	signature:(struct mod_t *mdp, struct sy_t *syp)
__init_peri_vec_var	./v_prp2.c	/^extern void __init_peri_vec_var(word32 *wp, int32 insts, int32 wlen,$/;"	f	signature:(word32 *wp, int32 insts, int32 wlen, int32 vecw, word32 maska, word32 maskb)
__init_plidce_prevval	./v_vpi.c	/^extern void __init_plidce_prevval(struct dcevnt_t *dcep)$/;"	f	signature:(struct dcevnt_t *dcep)
__init_seed	./cvc.c	/^int32 __init_seed;     \/* init random seed for +random option *\/$/;"	v
__init_sim	./v_sim.c	/^extern void __init_sim(void)$/;"	f	signature:(void)
__init_sim_storage	./v_prp2.c	/^extern void __init_sim_storage(void)$/;"	f	signature:(void)
__init_stmt	./v_src.c	/^extern void __init_stmt(struct st_t *stp, int32 styp)$/;"	f	signature:(struct st_t *stp, int32 styp)
__init_sy	./v_ms.c	/^extern void __init_sy(struct sy_t *syp)$/;"	f	signature:(struct sy_t *syp)
__init_tchk	./v_src3.c	/^extern void __init_tchk(struct tchk_t *tcp, word32 ttyp)$/;"	f	signature:(struct tchk_t *tcp, word32 ttyp)
__init_tfdrv	./v_prp2.c	/^extern void __init_tfdrv(struct tfarg_t *tfap, struct expr_t *xp,$/;"	f	signature:(struct tfarg_t *tfap, struct expr_t *xp, struct mod_t *mdp)
__init_tn	./v_bbgen.c	/^extern void __init_tn(struct tn_t *tnp)$/;"	f	signature:(struct tn_t *tnp)
__init_tn_dup_trees	./v_bbgen3.c	/^extern void __init_tn_dup_trees(void)$/;"	f	signature:(void)
__init_var	./v_prp2.c	/^extern void __init_var(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__init_xnd	./v_src2.c	/^extern void __init_xnd(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__initalw_thrd_hdr	./cvc.c	/^struct thread_t *__initalw_thrd_hdr; \/* list hd of per inst in\/al thds *\/$/;"	v	typeref:struct:thread_t
__initialize_dces	./v_prp2.c	/^extern void __initialize_dces(struct mod_t *mdp)$/;"	f	signature:(struct mod_t *mdp)
__initialize_dsgn_dces	./v_prp2.c	/^extern void __initialize_dsgn_dces(void)$/;"	f	signature:(void)
__inline_code	./cvc.c	/^int32 __inline_code;   \/* inline generated code *\/$/;"	v
__inplace_lnegate	./v_ex2.c	/^extern word32 __inplace_lnegate(word32 *u, int32 blen)$/;"	f	signature:(word32 *u, int32 blen)
__ins_walign	./v_ex3.c	/^extern void __ins_walign(word32 *dwp, word32 *swp, int32 numbits)$/;"	f	signature:(word32 *dwp, word32 *swp, int32 numbits)
__ins_wval	./v_ex3.c	/^extern void __ins_wval(word32 *dwp, int32 dbi, word32 *swp, int32 numbits)$/;"	f	signature:(word32 *dwp, int32 dbi, word32 *swp, int32 numbits)
__insert_after_insn	./v_cvcms.c	/^extern void __insert_after_insn(struct insn_t *new_ip, struct insn_t *oip)$/;"	f	signature:(struct insn_t *new_ip, struct insn_t *oip)
__insert_before_insn	./v_cvcms.c	/^extern void __insert_before_insn(struct insn_t *new_ip, struct insn_t *oip)$/;"	f	signature:(struct insn_t *new_ip, struct insn_t *oip)
__insert_event	./v_sim.c	/^extern void __insert_event(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__insert_event_nb	./v_sim.c	/^extern void __insert_event_nb(struct tev_t *tevp)$/;"	f	signature:(struct tev_t *tevp)
__insert_insn	./v_cvcms.c	/^extern struct insn_t *__insert_insn(struct insn_t *oip, int32 after,$/;"	f	signature:(struct insn_t *oip, int32 after, int32 opcod, int32 src_amode, ...)
__insert_srcdup_movl	./v_cvcms.c	/^extern void __insert_srcdup_movl(struct insn_t *oip, int32 after,$/;"	f	signature:(struct insn_t *oip, int32 after, struct amode_t *srcp, int32 reg_ti)
__insn_count	./cvc.c	/^int32 __insn_count;            \/* total insn count *\/$/;"	v
__insn_order_ndx	./v_bbgen.c	/^int32 *__insn_order_ndx; \/* bblk rpo index sort tab for ip to bblk map *\/$/;"	v
__insn_print_count	./cvc.c	/^int32 __insn_print_count;      \/* actually printed insn count *\/$/;"	v
__inst_mod	./cvc.c	/^struct mod_t *__inst_mod;   \/* module of current itree inst *\/$/;"	v	typeref:struct:mod_t
__inst_ptr	./cvc.c	/^struct itree_t *__inst_ptr; \/* current if flattened itree place *\/ $/;"	v	typeref:struct:itree_t
__intsig_prt_snapshot	./cvc.c	/^int32 __intsig_prt_snapshot; \/* T => on no iact end, print shapshot *\/$/;"	v
__inum	./cvc.c	/^int32 __inum;          \/* iti num  of current inst (always set) *\/$/;"	v
__invert_cc	./v_bbgen3.c	/^extern int32 __invert_cc(int32 cc)$/;"	f	signature:(int32 cc)
__ip2_msg	./v_ms.c	/^extern void __ip2_msg(char *s, ...)$/;"	f	signature:(char *s, ...)
__ip_indsrch	./v_ms.c	/^extern int32 __ip_indsrch(char *nam)$/;"	f	signature:(char *nam)
__ip_msg	./v_ms.c	/^extern void __ip_msg(char *s, ...)$/;"	f	signature:(char *s, ...)
__is_2state_typ	./v_src.c	/^extern int32 __is_2state_typ(int32 wtyp)$/;"	f	signature:(int32 wtyp)
__is_capstren	./v_ms.c	/^extern int32 __is_capstren(int32 st)$/;"	f	signature:(int32 st)
__is_cint_typ	./v_src.c	/^extern int32 __is_cint_typ(int32 wtyp)$/;"	f	signature:(int32 wtyp)
__is_const_expr	./v_fx2.c	/^extern int32 __is_const_expr(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__is_constant	./v_cvcms.c	/^extern int32 __is_constant(int32 tni)$/;"	f	signature:(int32 tni)
__is_constant_with_zero_bpart	./v_cvcms.c	/^extern int32 __is_constant_with_zero_bpart(int32 tni)$/;"	f	signature:(int32 tni)
__is_constant_zero	./v_cvcms.c	/^extern int32 __is_constant_zero(int32 tni)$/;"	f	signature:(int32 tni)
__is_expr_2state	./v_cvcrt.c	/^extern int32 __is_expr_2state(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__is_fg_enter_insn	./v_cvcms.c	/^extern int32 __is_fg_enter_insn(int32 opcod) $/;"	f	signature:(int32 opcod)
__is_fg_exit_insn	./v_cvcms.c	/^extern int32 __is_fg_exit_insn(int32 opcod) $/;"	f	signature:(int32 opcod)
__is_fst	./cvc.c	/^int32 __is_fst;   \/* T => is FST dumping on *\/$/;"	v
__is_int_atom_typ	./v_src.c	/^extern int32 __is_int_atom_typ(int32 wtyp)$/;"	f	signature:(int32 wtyp)
__is_int_vec_typ	./v_src.c	/^extern int32 __is_int_vec_typ(int32 wtyp)$/;"	f	signature:(int32 wtyp)
__is_jmp_insn	./v_cvcms.c	/^extern int32 __is_jmp_insn(int32 opcod)$/;"	f	signature:(int32 opcod)
__is_lnegative	./v_ex2.c	/^extern int32 __is_lnegative(word32 *u, int32 blen) $/;"	f	signature:(word32 *u, int32 blen)
__is_mem_label	./v_cvcms.c	/^extern int32 __is_mem_label(int32 tni)$/;"	f	signature:(int32 tni)
__is_net_dumped	./v_fx3.c	/^extern int32 __is_net_dumped(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__is_nlptr_comlab	./v_asmlnk.c	/^extern int32 __is_nlptr_comlab(int32 comlabtyp)$/;"	f	signature:(int32 comlabtyp)
__is_non_int_typ	./v_src.c	/^extern int32 __is_non_int_typ(int32 wtyp)$/;"	f	signature:(int32 wtyp)
__is_proc_flowg	./v_cvcms.c	/^extern int32 __is_proc_flowg(int32 fgtyp)$/;"	f	signature:(int32 fgtyp)
__is_scope_sym	./v_fx3.c	/^extern int32 __is_scope_sym(struct sy_t *syp) $/;"	f	signature:(struct sy_t *syp)
__is_stlst_net_on_rhs_assign	./v_xprop.c	/^extern int32 __is_stlst_net_on_rhs_assign(struct st_t *hd_stp, $/;"	f	signature:(struct st_t *hd_stp, struct net_t *lhsnp, struct st_t *top_stp)
__is_upward_dsable_syp	./v_prp2.c	/^extern int32 __is_upward_dsable_syp(struct sy_t *targsyp,$/;"	f	signature:(struct sy_t *targsyp, struct symtab_t *cursytp, int32 *nbonpath)
__is_vdigit	./v_ms.c	/^extern int32 __is_vdigit(int32 c, int32 base)$/;"	f	signature:(int32 c, int32 base)
__is_xedge_tab	./v_sim.c	/^const byte __is_xedge_tab[] =$/;"	v
__isform_bi_xvi	./cvc.c	/^int32 __isform_bi_xvi; \/* glbl for IS net pin bit index in contab *\/$/;"	v
__isleaf	./v_fx3.c	/^extern int32 __isleaf(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__it_roots	./cvc.c	/^struct itree_t **__it_roots; \/* table of root itree entries *\/$/;"	v	typeref:struct:itree_t
__iter_fill_with_empty	./v_vpi.c	/^extern void __iter_fill_with_empty(struct pviter_t *iterp)$/;"	f	signature:(struct pviter_t *iterp)
__ithptab	./cvc.c	/^struct h_t **__ithptab; \/* and the work ld\/drv handle ptr table *\/$/;"	v	typeref:struct:h_t
__ithptab2	./cvc.c	/^struct h_t **__ithptab2; \/* 2nd work for ptrs to in subtree handles *\/$/;"	v	typeref:struct:h_t
__ithtsiz	./cvc.c	/^int32 __ithtsiz;       \/* size of global work ld\/drv handle table *\/$/;"	v
__ithtsiz2	./cvc.c	/^int32 __ithtsiz2;      \/* size of global work ld\/drv handle table *\/$/;"	v
__itok_realval	./cvc.c	/^double __itok_realval; \/* actual scannoer double val *\/$/;"	v
__itok_signed	./cvc.c	/^int32 __itok_signed;   \/* T => token is signed number *\/$/;"	v
__itok_sv_unbas_unsiz	./cvc.c	/^int32 __itok_sv_unbas_unsiz;   \/* T => token is SV '0 number *\/$/;"	v
__itokbase	./cvc.c	/^int32 __itokbase;      \/* base constant for number token *\/$/;"	v
__itoklen	./cvc.c	/^int32 __itoklen;       \/* current number token bit length *\/$/;"	v
__itoksizdflt	./cvc.c	/^int32 __itoksizdflt;   \/* '[base] form with width (uses dflt.) *\/$/;"	v
__itoksized	./cvc.c	/^int32 __itoksized;     \/* T => token is sized *\/$/;"	v
__itoticks_tab	./cvc.c	/^word64 __itoticks_tab[16];\/* table of scales amount from prec. *\/$/;"	v
__itp_xmrget_refgrp_to_targ	./v_ex3.c	/^extern struct itree_t *__itp_xmrget_refgrp_to_targ(struct gref_t *grp,$/;"	f	signature:(struct gref_t *grp, struct itree_t *cur_itp)
__itspi	./cvc.c	/^int32 __itspi;         \/* top of itree stack *\/$/;"	v
__itstk	./cvc.c	/^struct itree_t **__itstk; \/* stack of saved itrees *\/$/;"	v	typeref:struct:itree_t
__jmpbas_tabsiz	./v_bbgen.c	/^size_t __jmpbas_tabsiz; \/* current allocated size of jmp base tab *\/$/;"	v
__jmpbase	./v_bbgen.c	/^int32 *__jmpbase;      \/* tab of jump bases for per inst ndx jumps *\/$/;"	v
__jmplab_nxti	./v_bbgen.c	/^int32 __jmplab_nxti;   \/* current jmp label number *\/$/;"	v
__key_fnam	./cvc.c	/^char *__key_fnam;      \/* key file name and stream *\/$/;"	v
__key_s	./cvc.c	/^FILE *__key_s;         \/* if key_s nil but key_fnam not, must open *\/$/;"	v
__known_inum	./v_bbgen.c	/^int32 __known_inum; \/* for ports to indicate known inum value *\/$/;"	v
__ladd	./v_ex2.c	/^extern void __ladd(word32 *res, word32 *u, word32 *v, int32 blen)$/;"	f	signature:(word32 *res, word32 *u, word32 *v, int32 blen)
__last_aiter	./v_acc.c	/^struct acciter_t *__last_aiter; \/* for count\/collect need last *\/$/;"	v	typeref:struct:acciter_t
__last_alloc_bblst	./v_bbgen.c	/^struct bblklst_t *__last_alloc_bblst; \/* last allocated bblk list el *\/$/;"	v	typeref:struct:bblklst_t
__last_attr_prefix	./cvc.c	/^int32 __last_attr_prefix;\/* push back pending attr prefix state *\/$/;"	v
__last_bind_comp_ndx	./cvc.c	/^int32 __last_bind_comp_ndx;\/* last currently used comp end index *\/ $/;"	v
__last_brktime	./cvc.c	/^word64 __last_brktime; \/* last break or step time *\/$/;"	v
__last_eip	./v_vpi3.c	/^struct t_vpi_error_info *__last_eip;\/* if err, ptr to wrk eifo or nil *\/$/;"	v	typeref:struct:t_vpi_error_info
__last_evtrtime	./cvc.c	/^word64 __last_evtrtime;\/* last event trace time *\/$/;"	v
__last_gip	./cvc.c	/^struct genitem_t *__last_gip;\/* end of cur mod gen item list *\/$/;"	v	typeref:struct:genitem_t
__last_gsc	./cvc.c	/^int32 __last_gsc;$/;"	v
__last_iasytp	./cvc.c	/^struct symtab_t *__last_iasytp; \/* last found symbol symbol table *\/$/;"	v	typeref:struct:symtab_t
__last_incdir	./cvc.c	/^int32 __last_incdir;$/;"	v
__last_inf	./cvc.c	/^int32 __last_inf;      \/* last input file in list *\/$/;"	v
__last_lbf	./cvc.c	/^int32 __last_lbf;      \/* last lib\/inc file (starts last_inf + 1) *\/$/;"	v
__last_lbx	./cvc.c	/^int32 __last_lbx;$/;"	v
__last_libmdp	./cvc.c	/^struct mod_t *__last_libmdp; \/* libary module just read *\/$/;"	v	typeref:struct:mod_t
__last_modsti	./cvc.c	/^int32 __last_modsti;   \/* and counter for statements *\/$/;"	v
__last_mstndx	./cvc.c	/^int32 __last_mstndx;   \/* last used prep tmp stmt tab index *\/$/;"	v
__last_nb_hp	./v_cvcrt.c	/^struct heap_t *__last_nb_hp; \/* last non-blocking heap inserted time *\/$/;"	v	typeref:struct:heap_t
__last_optcfg_fil	./cvc.c	/^struct ocfil_lst_t *__last_optcfg_fil; \/* and tail *\/$/;"	v	typeref:struct:ocfil_lst_t
__last_optf	./cvc.c	/^int32 __last_optf;     \/* last option file *\/$/;"	v
__last_srcf	./cvc.c	/^int32 __last_srcf;     \/* last src containing file for debugger *\/$/;"	v
__last_stepidp	./cvc.c	/^t_midat *__last_stepidp;  \/* last step inst. itree loc. *\/ $/;"	v
__last_stepifi	./cvc.c	/^int32 __last_stepifi;  \/* last step in fils index *\/$/;"	v
__last_steptskp	./cvc.c	/^struct task_t *__last_steptskp;\/* last step task *\/$/;"	v	typeref:struct:task_t
__last_sy	./cvc.c	/^int32 __last_sy;       \/* last symbol in work area *\/$/;"	v
__last_sy2	./cvc.c	/^int32 __last_sy2;      \/* last symbol in work area *\/$/;"	v
__last_systf	./cvc.c	/^int32 __last_systf;    \/* last vpi_ registered sytfs number *\/$/;"	v
__last_tridp	./cvc.c	/^t_midat *__last_tridp; \/* last event traced inst. itree index *\/ $/;"	v
__last_trtime	./cvc.c	/^word64 __last_trtime;  \/* last trace statement time *\/$/;"	v
__last_veriusertf	./cvc.c	/^int32 __last_veriusertf; \/* last user veriusertfs tf number *\/$/;"	v
__last_wci	./cvc.c	/^int32 __last_wci;      \/* last wild card index for line *\/$/;"	v
__last_wevti	./cvc.c	/^int32 __last_wevti;    \/* last filled *\/$/;"	v
__last_xldl	./cvc.c	/^struct xldlnpp_t *__last_xldl;\/* end of list - place to add after *\/$/;"	v	typeref:struct:xldlnpp_t
__last_xtk	./cvc.c	/^int32 __last_xtk;$/;"	v
__lastacwrk	./cvc.c	/^word32 *__lastacwrk;   \/* special malloced push back num value *\/$/;"	v
__lastbcwrk	./cvc.c	/^word32 *__lastbcwrk; $/;"	v
__lastitok_realval	./cvc.c	/^double __lastitok_realval;$/;"	v
__lastitok_signed	./cvc.c	/^int32 __lastitok_signed;$/;"	v
__lastitok_sv_unbas_unsiz	./cvc.c	/^int32 __lastitok_sv_unbas_unsiz;  $/;"	v
__lastitokbase	./cvc.c	/^int32 __lastitokbase;$/;"	v
__lastitoklen	./cvc.c	/^int32 __lastitoklen;$/;"	v
__lastitoksizdflt	./cvc.c	/^int32 __lastitoksizdflt;$/;"	v
__lastitoksized	./cvc.c	/^int32 __lastitoksized;$/;"	v
__lasttoken	./cvc.c	/^char __lasttoken[IDLEN];\/* current last pushed back symbol name *\/$/;"	v
__lasttoktyp	./cvc.c	/^int32 __lasttoktyp;    \/* push back token type (= UNDEF if none) *\/$/;"	v
__lbctab	./v_ms.c	/^static char __lbctab[128] = {$/;"	v	file:
__lbexts	./cvc.c	/^char **__lbexts;       \/* tab of -y library extension suffixes *\/$/;"	v
__lbitand	./v_ex2.c	/^extern void __lbitand(word32 *op1ap, word32 *op1bp, word32 *op2ap,$/;"	f	signature:(word32 *op1ap, word32 *op1bp, word32 *op2ap, word32 *op2bp, int32 opbits)
__lbitor	./v_ex2.c	/^extern void __lbitor(word32 *op1ap, word32 *op1bp, word32 *op2ap,$/;"	f	signature:(word32 *op1ap, word32 *op1bp, word32 *op2ap, word32 *op2bp, int32 opbits)
__lbitxnor	./v_ex2.c	/^extern void __lbitxnor(word32 *op1ap, word32 *op1bp, word32 *op2ap,$/;"	f	signature:(word32 *op1ap, word32 *op1bp, word32 *op2ap, word32 *op2bp, int32 opbits)
__lbitxor	./v_ex2.c	/^extern void __lbitxor(word32 *op1ap, word32 *op1bp, word32 *op2ap,$/;"	f	signature:(word32 *op1ap, word32 *op1bp, word32 *op2ap, word32 *op2bp, int32 opbits)
__ld_addr	./v_ex2.c	/^extern void __ld_addr(word32 **aap, word32 **abp, struct net_t *np)$/;"	f	signature:(word32 **aap, word32 **abp, struct net_t *np)
__ld_arr_val	./v_ex2.c	/^extern void __ld_arr_val(struct xstk_t *xsp, struct expr_t *ndx1, $/;"	f	signature:(struct xstk_t *xsp, struct expr_t *ndx1, struct net_t *np, int32 arri, struct gref_t *grp)
__ld_bit	./v_ex2.c	/^extern void __ld_bit(word32 *rgap, word32 *rgbp, struct net_t *np, int32 biti)$/;"	f	signature:(word32 *rgap, word32 *rgbp, struct net_t *np, int32 biti)
__ld_conta_driver	./v_ex4.c	/^extern struct xstk_t *__ld_conta_driver(struct net_pin_t *npp)$/;"	f	signature:(struct net_pin_t *npp)
__ld_gate_driver	./v_ex4.c	/^extern struct xstk_t *__ld_gate_driver(struct net_pin_t *npp)$/;"	f	signature:(struct net_pin_t *npp)
__ld_gate_in	./v_ex4.c	/^extern word32 __ld_gate_in(struct gate_t *gp, int32 pi, int32 *has_stren)$/;"	f	signature:(struct gate_t *gp, int32 pi, int32 *has_stren)
__ld_gate_out	./v_ex4.c	/^extern word32 __ld_gate_out(struct gate_t *gp, int32 *has_stren)$/;"	f	signature:(struct gate_t *gp, int32 *has_stren)
__ld_gate_wide_val	./v_ex3.c	/^extern void __ld_gate_wide_val(word32 *ap, word32 *bp, word32 *gsp,$/;"	f	signature:(word32 *ap, word32 *bp, word32 *gsp, int32 gwid)
__ld_iconn_up_driver	./v_ex4.c	/^extern struct xstk_t *__ld_iconn_up_driver(struct net_pin_t *npp)$/;"	f	signature:(struct net_pin_t *npp)
__ld_modport_down_driver	./v_ex4.c	/^extern struct xstk_t *__ld_modport_down_driver(struct net_pin_t *npp)$/;"	f	signature:(struct net_pin_t *npp)
__ld_nchg_var_ndx	./v_bbgen3.c	/^extern int32 __ld_nchg_var_ndx(void)$/;"	f	signature:(void)
__ld_netadr_tn	./v_bbgen3.c	/^extern int32 __ld_netadr_tn(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__ld_pb_iconn_up_driver	./v_ex4.c	/^extern struct xstk_t *__ld_pb_iconn_up_driver(struct net_pin_t *npp)$/;"	f	signature:(struct net_pin_t *npp)
__ld_pb_modport_down_driver	./v_ex4.c	/^extern struct xstk_t *__ld_pb_modport_down_driver(struct net_pin_t *npp)$/;"	f	signature:(struct net_pin_t *npp)
__ld_perinst_val	./v_ex2.c	/^extern void __ld_perinst_val(word32 *rgap, word32 *rgbp, union pck_u pckv,$/;"	f	signature:(word32 *rgap, word32 *rgbp, union pck_u pckv, int32 vblen)
__ld_psel	./v_ex2.c	/^extern void __ld_psel(word32 *rgap, word32 *rgbp, struct net_t *np,$/;"	f	signature:(word32 *rgap, word32 *rgbp, struct net_t *np, int32 bith, int32 bitl)
__ld_sttfrwarg_driver	./v_ex4.c	/^extern struct xstk_t *__ld_sttfrwarg_driver(struct net_pin_t *npp)$/;"	f	signature:(struct net_pin_t *npp)
__ld_stval	./v_ex2.c	/^extern void __ld_stval(word32 *rgap, word32 *rgbp, byte *sbp, int32 blen)$/;"	f	signature:(word32 *rgap, word32 *rgbp, byte *sbp, int32 blen)
__ld_stwire_driver	./v_ex4.c	/^extern struct xstk_t *__ld_stwire_driver(struct net_pin_t *npp)$/;"	f	signature:(struct net_pin_t *npp)
__ld_tfrwarg_driver	./v_ex4.c	/^extern struct xstk_t *__ld_tfrwarg_driver(struct net_pin_t *npp)$/;"	f	signature:(struct net_pin_t *npp)
__ld_val	./v_ex2.c	/^extern void __ld_val(word32 *rgap, word32 *rgbp, word32 *wp, int32 vblen)$/;"	f	signature:(word32 *rgap, word32 *rgbp, word32 *wp, int32 vblen)
__ld_vpiputv_driver	./v_ex4.c	/^extern struct xstk_t *__ld_vpiputv_driver(struct net_pin_t *npp)$/;"	f	signature:(struct net_pin_t *npp)
__ld_wire_driver	./v_ex4.c	/^extern struct xstk_t *__ld_wire_driver(struct net_pin_t *npp)$/;"	f	signature:(struct net_pin_t *npp)
__ld_wire_sect	./v_ex2.c	/^extern void __ld_wire_sect(struct xstk_t *xsp, struct net_t *np, int32 i1,$/;"	f	signature:(struct xstk_t *xsp, struct net_t *np, int32 i1, int32 i2)
__ld_wire_val_wrds	./v_ex2.c	/^extern void __ld_wire_val_wrds(word32 *rgap, word32 *rgbp, struct net_t *np)$/;"	f	signature:(word32 *rgap, word32 *rgbp, struct net_t *np)
__ld_wire_val_xstk	./v_ex2.c	/^extern void __ld_wire_val_xstk(struct xstk_t *xsp, struct net_t *np)$/;"	f	signature:(struct xstk_t *xsp, struct net_t *np)
__ldivmod	./v_ex2.c	/^extern void __ldivmod(word32 *res, word32 *u, word32 *v, int32 blen, int32 nd_quot)$/;"	f	signature:(word32 *res, word32 *u, word32 *v, int32 blen, int32 nd_quot)
__ldivmod2	./v_ex2.c	/^extern void __ldivmod2(word32 *quot, word32 *rem, word32 *u, word32 *v, int32 blen)$/;"	f	signature:(word32 *quot, word32 *rem, word32 *u, word32 *v, int32 blen)
__ldvar_addr	./v_bbgen.c	/^extern int32 __ldvar_addr(struct net_t *np, struct gref_t *grp)$/;"	f	signature:(struct net_t *np, struct gref_t *grp)
__leaf_modules_already_merged	./cvc.c	/^int32 __leaf_modules_already_merged; \/* leaf modules already merged *\/$/;"	v
__letendnum_state	./cvc.c	/^int32 __letendnum_state; \/* T => letter can end unsized num. *\/$/;"	v
__lhs_changed	./cvc.c	/^int32 __lhs_changed;   \/* T => assignment changed lhs *\/$/;"	v
__lhs_has_4state	./cvc.c	/^int32 __lhs_has_4state;  \/* T=> lhs has 4-state values *\/ $/;"	v
__lhsbsel	./v_ex3.c	/^extern void __lhsbsel(word32 *dwp, int32 dbit, word32 sw)$/;"	f	signature:(word32 *dwp, int32 dbit, word32 sw)
__lhsexpr_var_ndx	./v_ex.c	/^extern int32 __lhsexpr_var_ndx(struct expr_t *xp)$/;"	f	signature:(struct expr_t *xp)
__lhspsel	./v_ex3.c	/^extern void __lhspsel(word32 *dwp, int32 dbi, word32 *swp, int32 numbits)$/;"	f	signature:(word32 *dwp, int32 dbi, word32 *swp, int32 numbits)
__lhsxpr_has_ndel	./cvc.c	/^int32 __lhsxpr_has_ndel; \/* T => component wire of lhs has wire del *\/$/;"	v
__lib_are_cells	./cvc.c	/^int32 __lib_are_cells; \/* T => if in lib, the mark as cell (dflt.) *\/$/;"	v
__lib_rescan	./cvc.c	/^int32 __lib_rescan;    \/* T => rescan from start after each *\/$/;"	v
__lib_verbose	./cvc.c	/^int32 __lib_verbose;   \/* T => emit src.file\/lib source messages *\/$/;"	v
__lic_path	./cvc.c	/^char *__lic_path;      \/* +licpath [path] if option used *\/$/;"	v
__lin_cnt	./cvc.c	/^int32 __lin_cnt;       \/* line number while reading a file *\/$/;"	v
__linearize_avl_tree	./v_cvcrt.c	/^extern struct avlnode_t **__linearize_avl_tree(struct avlhd_t *avhdp,$/;"	f	signature:(struct avlhd_t *avhdp, int32 *siz_avltab)
__linkout_insn	./v_cvcms.c	/^extern void __linkout_insn(struct insn_t *ip, int32 free_it)$/;"	f	signature:(struct insn_t *ip, int32 free_it)
__list_arg_lini	./cvc.c	/^int32 __list_arg_lini; \/* for :b (:ib), user list argument *\/$/;"	v
__list_cur_fd	./cvc.c	/^int32 __list_cur_fd;   \/* current opened file no. (-1 if none) *\/$/;"	v
__list_cur_ifi	./cvc.c	/^int32 __list_cur_ifi;  \/* index in in fils of current source file *\/$/;"	v
__list_cur_lini	./cvc.c	/^int32 __list_cur_lini; \/* current line no. in current dbg file *\/$/;"	v
__list_cur_listnum	./cvc.c	/^int32 __list_cur_listnum;\/* number of lines to list at once *\/$/;"	v
__lmult	./v_ex2.c	/^extern void __lmult(word32 *res, word32 *u, word32 *v, int32 blen)$/;"	f	signature:(word32 *res, word32 *u, word32 *v, int32 blen)
__load_mdrwire	./v_ex4.c	/^extern struct xstk_t *__load_mdrwire(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__locfnamsyp	./cvc.c	/^struct sy_t *__locfnamsyp; \/* place for func. def. chk func. symbol *\/$/;"	v	typeref:struct:sy_t
__lofp_port_decls	./cvc.c	/^int32 __lofp_port_decls; \/* T => exclusive hdr port decls appeared *\/ $/;"	v
__log_fnam	./cvc.c	/^char *__log_fnam;      \/* log file for all terminal output *\/$/;"	v
__log_olp	./cvc.c	/^struct optlst_t *__log_olp;   \/* log option, nil if none *\/$/;"	v	typeref:struct:optlst_t
__log_s	./cvc.c	/^FILE *__log_s;$/;"	v
__logic_acc_off	./v_sim.c	/^extern void __logic_acc_off(struct gate_t *gp)$/;"	f	signature:(struct gate_t *gp)
__loop_break_bbp	./v_bbgen.c	/^struct bblk_t *__loop_break_bbp;    \/* loop break block *\/$/;"	v	typeref:struct:bblk_t
__loop_continue_bbp	./v_bbgen.c	/^struct bblk_t *__loop_continue_bbp; \/* loop continue block *\/$/;"	v	typeref:struct:bblk_t
__lpow	./v_ex2.c	/^extern void __lpow(word32 *res, word32 *op1, word32 *op2, int32 blen)$/;"	f	signature:(word32 *res, word32 *op1, word32 *op2, int32 blen)
__lsub	./v_ex2.c	/^extern void __lsub(word32 *res, word32 *u, word32 *v, int32 blen)$/;"	f	signature:(word32 *res, word32 *u, word32 *v, int32 blen)
__ltevfreelst	./cvc.c	/^struct tevlst_t *__ltevfreelst; \/* pend event free list *\/$/;"	v	typeref:struct:tevlst_t
__ludptab_ndx	./cvc.c	/^int32 __ludptab_ndx;  \/* design wide l udp index (identifier) *\/$/;"	v
__luminus	./v_ex2.c	/^extern void __luminus(word32 *op1ap, word32 *op1bp, int32 opbits)$/;"	f	signature:(word32 *op1ap, word32 *op1bp, int32 opbits)
__lunbitnot	./v_ex2.c	/^extern void __lunbitnot(word32 *op1ap, word32 *op1bp, int32 opwid)$/;"	f	signature:(word32 *op1ap, word32 *op1bp, int32 opwid)
__lunredand	./v_ex2.c	/^extern void __lunredand(int32 *rta, int32 *rtb, word32 *op1ap, word32 *op1bp,$/;"	f	signature:(int32 *rta, int32 *rtb, word32 *op1ap, word32 *op1bp, int32 opwid)
__lunredor	./v_ex2.c	/^extern void __lunredor(int32 *rta, int32 *rtb, word32 *op1ap, word32 *op1bp,$/;"	f	signature:(int32 *rta, int32 *rtb, word32 *op1ap, word32 *op1bp, int32 opwid)
__lunredxor	./v_ex2.c	/^extern void __lunredxor(int32 *rta, int32 *rtb, word32 *op1ap, word32 *op1bp,$/;"	f	signature:(int32 *rta, int32 *rtb, word32 *op1ap, word32 *op1bp, int32 opwid)
__lwrd_redxor	./v_ex2.c	/^extern word64 __lwrd_redxor(word64 opa)$/;"	f	signature:(word64 opa)
__mac_line_len	./cvc.c	/^int32 __mac_line_len;  \/* actual length of macro line in wrk str *\/   $/;"	v
__macarg_hdr	./cvc.c	/^struct macarg_t *__macarg_hdr; \/* hdr of list of format mac. args *\/$/;"	v	typeref:struct:macarg_t
__macbs_flag	./cvc.c	/^int32 __macbs_flag;    \/* T=> 8'h`DEFINE catch multiple bases errors *\/$/;"	v
__macro_sav_nwid	./cvc.c	/^int32 __macro_sav_nwid;\/* value of saved first tok width *\/$/;"	v
__macro_sep_width	./cvc.c	/^int32 __macro_sep_width; \/* T => possible beginning of macro 2 tok num *\/$/;"	v
__macwrklen	./cvc.c	/^int32 __macwrklen;     \/* allocated len of mac. work string *\/$/;"	v
__macwrkstr	./cvc.c	/^char *__macwrkstr;     \/* work string for macros *\/ $/;"	v
__map_16v_to_12vform	./v_del.c	/^extern void __map_16v_to_12vform(word64 *ntim, word64 *tim)$/;"	f	signature:(word64 *ntim, word64 *tim)
__map_files_hd	./cvc.c	/^struct mapfiles_t *__map_files_hd; \/* hdr of map files from cmd args *\/$/;"	v	typeref:struct:mapfiles_t
__map_files_tail	./cvc.c	/^struct mapfiles_t *__map_files_tail; \/* end of map file list *\/$/;"	v	typeref:struct:mapfiles_t
__map_frvpi_stren	./v_vpi3.c	/^extern int32 __map_frvpi_stren(int32 vpistval)$/;"	f	signature:(int32 vpistval)
__map_tovpi_stren	./v_vpi3.c	/^extern word32 __map_tovpi_stren(word32 stval)$/;"	f	signature:(word32 stval)
__mark_st_wires	./v_fx2.c	/^extern void __mark_st_wires(void)$/;"	f	signature:(void)
__mark_stlst_unreachable	./v_cvcms.c	/^extern void __mark_stlst_unreachable(struct mod_t *mdp, struct st_t *hdstp)$/;"	f	signature:(struct mod_t *mdp, struct st_t *hdstp)
__mark_widdet_params	./v_fx2.c	/^extern void __mark_widdet_params(struct mod_t *pmdp)$/;"	f	signature:(struct mod_t *pmdp)
__masktab	./v_ex.c	/^const word32 __masktab[] = {$/;"	v
__match_targ_to_ref	./v_ex3.c	/^extern struct itree_t *__match_targ_to_ref(word32 xmrtyp, struct gref_t *grp)$/;"	f	signature:(word32 xmrtyp, struct gref_t *grp)
__max_asl_rout_num	./v_cvcrt.c	/^int32 __max_asl_rout_num; \/* max asl routine number *\/$/;"	v
__max_errors	./cvc.c	/^int32 __max_errors;    \/* maximum errors before stopping *\/$/;"	v
__max_net_blen	./cvc.c	/^int32  __max_net_blen; \/* maximum declared net size *\/$/;"	v
__max_time_node	./cvc.c	/^struct tqnode_t *__max_time_node; \/* current maximum node *\/$/;"	v	typeref:struct:tqnode_t
__maxfcnest	./cvc.c	/^int32 __maxfcnest;     \/* size of func. call task stk - must grow *\/$/;"	v
__maxxnest	./cvc.c	/^int32 __maxxnest;      \/* current size of expr. stack - must grow *\/ $/;"	v
__maybe_2tok_sized_num	./cvc.c	/^int32 __maybe_2tok_sized_num; \/* T => seeing number after macro num *\/$/;"	v
__maybe_open_trfile	./v_ex.c	/^extern void __maybe_open_trfile(void)$/;"	f	signature:(void)
__mc1_fopen	./v_ex.c	/^extern word32 __mc1_fopen(char *chp, int32 slen, int32 from_vpi)$/;"	f	signature:(char *chp, int32 slen, int32 from_vpi)
__mda_multiplier	./v_prp.c	/^extern int32 __mda_multiplier(struct net_t *np, int32 di)$/;"	f	signature:(struct net_t *np, int32 di)
__mdlevhdr	./cvc.c	/^struct mod_t **__mdlevhdr; \/* array of ptrs to ith lev linked mods *\/ $/;"	v	typeref:struct:mod_t
__mdr_assign_or_sched	./v_ex4.c	/^extern void __mdr_assign_or_sched(struct expr_t *lhsx)$/;"	f	signature:(struct expr_t *lhsx)
__mem_allocated	./cvc.c	/^long __mem_allocated;  \/* bytes allocated *\/$/;"	v
__mem_cvc_use	./cvc.c	/^long __mem_cvc_use;    \/* counts allocated cvc mem after argmnts read *\/$/;"	v
__mem_freed	./cvc.c	/^long __mem_freed;      \/* bytes freed *\/$/;"	v
__mem_udpuse	./cvc.c	/^long __mem_udpuse;     \/* number of bytes used by udp tables *\/$/;"	v
__mem_use	./cvc.c	/^long __mem_use;        \/* counts allocated mem for debugging *\/$/;"	v
__memloc_emit_set_idp	./v_bbgen3.c	/^extern void __memloc_emit_set_idp(int32 new_idp_ti)$/;"	f	signature:(int32 new_idp_ti)
__memstr_use	./cvc.c	/^long __memstr_use;     \/* counts allocated string mem for debugging *\/$/;"	v
__merge_same_pval_leaf_splitmods	./v_fx.c	/^extern void __merge_same_pval_leaf_splitmods(void)$/;"	f	signature:(void)
__min_time_node	./cvc.c	/^struct tqnode_t *__min_time_node; \/* current minimum node *\/$/;"	v	typeref:struct:tqnode_t
__mintypmax_sel	./cvc.c	/^int32 __mintypmax_sel; \/* for (e:e:e) expressions value to use *\/$/;"	v
__mipd_cycle_pnd0_schd	./cvc.c	/^int32 __mipd_cycle_pnd0_schd; \/* T => MIPD del chg on nchg - pnd0 sched *\/$/;"	v
__misc_fterr	./v_ms.c	/^extern void __misc_fterr(char *fnam, int32 lno)$/;"	f	signature:(char *fnam, int32 lno)
__misc_gfterr	./v_ms.c	/^extern void __misc_gfterr(char *fnam, int32 lno, word32 gfnam_ind,$/;"	f	signature:(char *fnam, int32 lno, word32 gfnam_ind, int32 gflin_cnt)
__misc_sgfterr	./v_ms.c	/^extern void __misc_sgfterr(char *fnam, int32 lno)$/;"	f	signature:(char *fnam, int32 lno)
__misc_terr	./v_ms.c	/^extern void __misc_terr(char *fnam, int32 lno)$/;"	f	signature:(char *fnam, int32 lno)
__missing_nchg_trace	./cvc.c	/^int32 __missing_nchg_trace; \/* undocumented tracing of late nchg add *\/$/;"	v
__mk_exprclass_handle	./v_vpi2.c	/^extern vpiHandle __mk_exprclass_handle(struct expr_t *xp,$/;"	f	signature:(struct expr_t *xp, t_midat *idp, struct task_t *xin_tskp)
__mk_handle	./v_vpi.c	/^extern vpiHandle __mk_handle(word32 typ, void *h_unp, t_midat *idp,$/;"	f	signature:(word32 typ, void *h_unp, t_midat *idp, struct task_t *tskp)
__mk_stmt_handle	./v_vpi.c	/^extern vpiHandle __mk_stmt_handle(word32 sttyp, struct st_t *stp,$/;"	f	signature:(word32 sttyp, struct st_t *stp, t_midat *idp, struct task_t *tskp)
__mod_file_names	./v_bbgen.c	/^char **__mod_file_names;   \/* module tmp file names *\/$/;"	v
__mod_gen_id	./cvc.c	/^int32 __mod_gen_id;    \/* need unique per mod id num for each gen *\/$/;"	v
__mod_specparams	./cvc.c	/^int32 __mod_specparams;\/* number of declared specparams in mod *\/$/;"	v
__mod_svals	./v_aslib.c	/^const word32 __mod_svals[16] = {3,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3};$/;"	v
__mod_svals	./v_aslib.s	/^__mod_svals:$/;"	l
__modhdr	./cvc.c	/^struct mod_t *__modhdr;\/* header of top level module list *\/$/;"	v	typeref:struct:mod_t
__modsyms	./cvc.c	/^struct symtab_t *__modsyms;\/* separate symbol table for type names *\/$/;"	v	typeref:struct:symtab_t
__monit_active	./cvc.c	/^int32 __monit_active;  \/* T => monitor can trigger (default) *\/$/;"	v
__monit_dcehdr	./cvc.c	/^struct dceauxlst_t *__monit_dcehdr; \/* header of current dces *\/$/;"	v	typeref:struct:dceauxlst_t
__monit_idp	./cvc.c	/^t_midat *__monit_idp;    \/* current monitor itree element *\/$/;"	v
__monit_stp	./cvc.c	/^struct st_t *__monit_stp;\/* monit if chg display at slot end stmt *\/$/;"	v	typeref:struct:st_t
__mos_stmap	./v_ex3.c	/^const word32 __mos_stmap[] = { 0, 1, 2, 3, 4, 5, 6, 6 };$/;"	v
__move_compiled_time	./v_sim.c	/^extern struct tev_t *__move_compiled_time(void)$/;"	f	signature:(void)
__move_insn	./v_bbgen3.c	/^extern int32 __move_insn(int32 tntyp, int32 opcod, int32 src_amode, ...)$/;"	f	signature:(int32 tntyp, int32 opcod, int32 src_amode, ...)
__move_srep_insn	./v_bbgen3.c	/^extern int32 __move_srep_insn(int32 tntyp, int32 opcod, int32 srtyp, $/;"	f	signature:(int32 tntyp, int32 opcod, int32 srtyp, int32 blen, int32 src_amode, ...)
__mpref_explicit	./cvc.c	/^int32 __mpref_explicit;\/* T => mod def header port ref explicit *\/$/;"	v
__msg2_blditree	./v_cnv.c	/^extern char *__msg2_blditree(char *s, struct itree_t *itp)$/;"	f	signature:(char *s, struct itree_t *itp)
__msg2_cur_blditree	./v_cnv.c	/^extern char *__msg2_cur_blditree(char *s)$/;"	f	signature:(char *s)
__msg2_idp_blditree	./v_cnv.c	/^extern char *__msg2_idp_blditree(char *s, t_midat *idp)$/;"	f	signature:(char *s, t_midat *idp)
__msg_blditree	./v_cnv.c	/^extern char *__msg_blditree(char *s, struct itree_t *itp, struct task_t *tskp)$/;"	f	signature:(char *s, struct itree_t *itp, struct task_t *tskp)
__msg_cur_blditree	./v_cnv.c	/^extern char *__msg_cur_blditree(char *s, struct task_t *tskp)$/;"	f	signature:(char *s, struct task_t *tskp)
__msg_idp_blditree	./v_cnv.c	/^extern char *__msg_idp_blditree(char *s, t_midat *idp, struct task_t *tskp)$/;"	f	signature:(char *s, t_midat *idp, struct task_t *tskp)
__msgexpr_tostr	./v_cnv.c	/^extern char *__msgexpr_tostr(char *s, struct expr_t *ndp)$/;"	f	signature:(char *s, struct expr_t *ndp)
__msgnumexpr_tostr	./v_cnv.c	/^extern char *__msgnumexpr_tostr(char *s, struct expr_t *ndp, int32 inum)$/;"	f	signature:(char *s, struct expr_t *ndp, int32 inum)
__msgtox_wrange	./v_cnv.c	/^extern char *__msgtox_wrange(char *s, struct expr_t *x1, struct expr_t *x2)$/;"	f	signature:(char *s, struct expr_t *x1, struct expr_t *x2)
__mulchan_tab	./cvc.c	/^struct mcchan_t __mulchan_tab[32];\/* mc desc. tab (32 built in Ver) *\/ $/;"	v	typeref:struct:mcchan_t
__mwlshift	./v_ex2.c	/^extern void __mwlshift(word32 *valwp, word32 shiftval, int32 blen)$/;"	f	signature:(word32 *valwp, word32 shiftval, int32 blen)
__mwrshift	./v_ex2.c	/^extern void __mwrshift(word32 *valwp, word32 shiftval, int32 blen)$/;"	f	signature:(word32 *valwp, word32 shiftval, int32 blen)
__my_close	./v_ms.c	/^extern void __my_close(int32 fd)$/;"	f	signature:(int32 fd)
__my_creat	./v_ms.c	/^extern int32 __my_creat(char *fnam)$/;"	f	signature:(char *fnam)
__my_dp_flush	./v_ex4.c	/^extern void __my_dp_flush(struct dp_fildesc_t *fdescp)$/;"	f	signature:(struct dp_fildesc_t *fdescp)
__my_dv_flush	./v_ex4.c	/^extern void __my_dv_flush(void)$/;"	f	signature:(void)
__my_exit	./v_dbg.c	/^extern void __my_exit(int32 rc, int32 do_exit)$/;"	f	signature:(int32 rc, int32 do_exit)
__my_fclose	./v_ms.c	/^extern void __my_fclose(FILE *f)$/;"	f	signature:(FILE *f)
__my_fopen	./v_ms.c	/^extern FILE *__my_fopen(char *fnam, char *opmod)$/;"	f	signature:(char *fnam, char *opmod)
__my_fprintf	./v_ms.c	/^extern void __my_fprintf(FILE *f, char *s, ...)$/;"	f	signature:(FILE *f, char *s, ...)
__my_free	./v_ms.c	/^extern void __my_free(void *mp, size_t size)$/;"	f	signature:(void *mp, size_t size)
__my_ftime	./cvc.c	/^extern void __my_ftime(time_t *secs, time_t *msecs)$/;"	f	signature:(time_t *secs, time_t *msecs)
__my_getline	./v_cvr.c	/^extern ssize_t __my_getline(char **lineptr, size_t *n, FILE *stream)$/;"	f	signature:(char **lineptr, size_t *n, FILE *stream)
__my_malloc	./v_ms.c	/^extern char *__my_malloc(size_t size)$/;"	f	signature:(size_t size)
__my_popen	./cvc.c	/^int32 __my_popen;      \/* use special faster piping *\/$/;"	v
__my_realloc	./v_ms.c	/^extern char *__my_realloc(void *mp, size_t osize, size_t nsize)$/;"	f	signature:(void *mp, size_t osize, size_t nsize)
__my_rewind	./v_ms.c	/^extern void __my_rewind(FILE *f)$/;"	f	signature:(FILE *f)
__my_strtod	./v_cnv.c	/^extern double __my_strtod(char *nptr, char **endptr, int32 *errnum)$/;"	f	signature:(char *nptr, char **endptr, int32 *errnum)
__my_strtoul	./v_cnv.c	/^extern word32 __my_strtoul(char *nptr, char **endptr, int *errnum)$/;"	f	signature:(char *nptr, char **endptr, int *errnum)
__my_vfprintf	./v_ms.c	/^extern void __my_vfprintf(FILE *f, char *s, va_list args, va_list args2)$/;"	f	signature:(FILE *f, char *s, va_list args, va_list args2)
__my_vpi_chk_error	./v_acc.c	/^extern int32 __my_vpi_chk_error(void)$/;"	f	signature:(void)
__name_assigned_to	./cvc.c	/^int32 __name_assigned_to;\/* glb set if func. def. name assigned to *\/$/;"	v
__name_gen_bad	./v_cnv.c	/^extern int32 __name_gen_bad(char *nam)$/;"	f	signature:(char *nam)
__name_vpi_hasdot	./v_vpi2.c	/^extern int32 __name_vpi_hasdot(const char *nam)$/;"	f	signature:(const char *nam)
__nand	./v_aslib.c	/^const word32 __nand[256] = {$/;"	v
__nand	./v_aslib.s	/^__nand:$/;"	l
__nand_g3	./v_aslib.c	/^const word32 __nand_g3[64] = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,3,3,1,3,3,3,1,3,3,3,1,1,1,1,1,3,3,3,1,3,3,3,1,3,3,3,1,1,1,1,1,3,3,3,1,3,3,3,1,3,3,3};$/;"	v
__nand_g3	./v_aslib.s	/^__nand_g3:$/;"	l
__nand_g4	./v_aslib.c	/^const word32 __nand_g4[256] = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,3,3,1,3,3,3,1,3,3,3,1,1,1,1,1,3,3,3,1,3,3,3,1,3,3,3,1,1,1,1,1,3,3,3,1,3,3,3,1,3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3,1,3,3,3,1,3,3,3,1,1,1,1,1,3,3,3,1,3,3,3,1,3,3,3,1,1,1,1,1,3,3,3,1,3,3,3,1,3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3,1,3,3,3,1,3,3,3,1,1,1,1,1,3,3,3,1,3,3,3,1,3,3,3,1,1,1,1,1,3,3,3,1,3,3,3,1,3,3,3};$/;"	v
__nand_g4	./v_aslib.s	/^__nand_g4:$/;"	l
__nand_svals	./v_aslib.c	/^const word32 __nand_svals[16] = {1,1,1,1,1,0,3,3,1,3,3,3,1,3,3,3};$/;"	v
__nand_svals	./v_aslib.s	/^__nand_svals:$/;"	l
__narrow_sizchg	./v_ex3.c	/^extern void __narrow_sizchg(struct xstk_t *xsp, int32 nblen)$/;"	f	signature:(struct xstk_t *xsp, int32 nblen)
__narrow_to1bit	./v_ex3.c	/^extern void __narrow_to1bit(struct xstk_t *xsp)$/;"	f	signature:(struct xstk_t *xsp)
__narrow_to1wrd	./v_ex3.c	/^extern void __narrow_to1wrd(struct xstk_t *xsp)$/;"	f	signature:(struct xstk_t *xsp)
__nb_const_last_time	./v_cvcrt.c	/^word64 __nb_const_last_time; \/* last nb assign time *\/$/;"	v
__nb_dummy_hd	./v_cvcrt.c	/^struct tev_t __nb_dummy_hd; \/* dummy header for nb events *\/$/;"	v	typeref:struct:tev_t
__nb_stmt_cur	./v_bbgen.c	/^struct nb_stmt_lst_t *__nb_stmt_cur;\/* last non-blocking stmt *\/$/;"	v	typeref:struct:nb_stmt_lst_t
__nb_stmt_hd	./v_bbgen.c	/^struct nb_stmt_lst_t *__nb_stmt_hd; \/* non-blocking stmt head *\/$/;"	v	typeref:struct:nb_stmt_lst_t
__nb_te_endp	./cvc.c	/^struct tev_t *__nb_te_endp; \/* and tail *\/$/;"	v	typeref:struct:tev_t
__nb_te_hdrp	./cvc.c	/^struct tev_t *__nb_te_hdrp; \/* non-blocking new end queue hd *\/ $/;"	v	typeref:struct:tev_t
__nbsti	./cvc.c	/^int32 __nbsti;      $/;"	v
__nbstk	./cvc.c	/^struct st_t **__nbstk; \/* func. nest nblock stack (nxt for exec) *\/$/;"	v	typeref:struct:st_t
__ncablk_nxti	./cvc.c	/^int32 __ncablk_nxti;   \/* index of next free pos. *\/$/;"	v
__nchg_dummy_hd	./v_cvcrt.c	/^struct nchglst_t __nchg_dummy_hd; \/* dummy header for nchgs *\/$/;"	v	typeref:struct:nchglst_t
__nchg_free_ndx	./cvc.c	/^int32 __nchg_free_ndx; \/* nchgs freed ndx *\/$/;"	v
__nchg_free_size	./cvc.c	/^int32 __nchg_free_size;\/* nchgs freed array size *\/$/;"	v
__nchg_freed	./cvc.c	/^struct nchglst_t **__nchg_freed; \/* nchgs freed - available for reuse *\/$/;"	v	typeref:struct:nchglst_t
__nchg_futend	./cvc.c	/^struct nchglst_t *__nchg_futend; \/* end (for add) of future net chgs *\/$/;"	v	typeref:struct:nchglst_t
__nchg_futhdr	./cvc.c	/^struct nchglst_t *__nchg_futhdr; \/* header of future net chg list *\/$/;"	v	typeref:struct:nchglst_t
__nchg_ndx	./cvc.c	/^int32 __nchg_ndx; \/* nchg index counter (identifier) *\/$/;"	v
__nchg_tevpi	./v_cvcrt.c	/^int32 __nchg_tevpi;$/;"	v
__nchged_delayed_mipd	./v_cvcrt.c	/^word32 __nchged_delayed_mipd; \/* and 2nd time thru mipd flag *\/$/;"	v
__nchged_i1	./v_cvcrt.c	/^int32 __nchged_i1;     \/* RT - access to rng form nchg lp *\/$/;"	v
__nchged_i1	./v_cvcrt.c	/^word32 __nchged_i1;     \/* RT - access to rng form nchg lp *\/$/;"	v
__nchged_i2	./v_cvcrt.c	/^int32 __nchged_i2;     \/* and low end of range *\/$/;"	v
__nchged_i2	./v_cvcrt.c	/^word32 __nchged_i2;     \/* and low end of range *\/$/;"	v
__nchgfreelst	./cvc.c	/^struct nchglst_t *__nchgfreelst; \/* change element free list *\/$/;"	v	typeref:struct:nchglst_t
__nchglst_template	./v_aslib.c	/^struct nchglst_t __nchglst_template = { 0, NULL, 0, -1, -1, NULL, NULL, NULL };$/;"	v	typeref:struct:nchglst_t
__nchglst_template	./v_aslib.s	/^__nchglst_template:$/;"	l
__nd_0width_catel_remove	./cvc.c	/^int32 __nd_0width_catel_remove; \/* fx3 file 0 width concat glb *\/$/;"	v
__nd_ndxnum	./v_fx3.c	/^extern int32 __nd_ndxnum(struct expr_t *ndp, char *emsg, int32 emit_err)$/;"	f	signature:(struct expr_t *ndp, char *emsg, int32 emit_err)
__nd_neg_del_warn	./cvc.c	/^int32 __nd_neg_del_warn; \/* T => must emit warn (or err) for <0 del *\/ $/;"	v
__nd_parmpnp_free	./cvc.c	/^int32 __nd_parmpnp_free; \/* T => after 1st parmnpp need copy not orig *\/$/;"	v
__nd_timstr_suf	./cvc.c	/^int32  __nd_timstr_suf;\/* T => need to_timstr units *\/$/;"	v
__nd_wire	./v_fx3.c	/^extern int32 __nd_wire(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__ndst_eval_xpr	./v_ex4.c	/^extern struct xstk_t *__ndst_eval_xpr(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__ndxjmp_bbtab	./v_bbgen.c	/^struct bblk_t **__ndxjmp_bbtab; \/* tab of bblk ptrs for ndx jumps *\/$/;"	v	typeref:struct:bblk_t
__ndxjmp_bbtab_siz	./v_bbgen.c	/^size_t __ndxjmp_bbtab_siz;\/* current table size *\/$/;"	v
__need_net_addr	./v_bbgen.c	/^int32 __need_net_addr;       \/* need to generate net address flag *\/$/;"	v
__need_reg_tns	./v_bbgen.c	/^int32 __need_reg_tns;  \/* T => use x86 reg for tn sets and fuds *\/$/;"	v
__needs_netchg_record	./v_cvcrt.c	/^extern int32 __needs_netchg_record(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__needs_thread_ctrl	./v_cvcrt.c	/^int32 __needs_thread_ctrl; \/* T => block needs thread control *\/$/;"	v
__needs_xedge_net_record	./v_bbgen.c	/^extern int32 __needs_xedge_net_record(struct delctrl_t *dctp)$/;"	f	signature:(struct delctrl_t *dctp)
__nested_dctrl	./cvc.c	/^int32 __nested_dctrl;  \/* has nested delay dctrl *\/$/;"	v
__net_chg_nd_store	./v_cvcrt.c	/^extern int32 __net_chg_nd_store(struct net_t *np, int32 i1, int32 i2)$/;"	f	signature:(struct net_t *np, int32 i1, int32 i2)
__netadr_sydup_tn_tree	./v_bbgen.c	/^struct avlhd_t *__netadr_sydup_tn_tree;$/;"	v	typeref:struct:avlhd_t
__netparambp_sydup_tn_tree	./v_bbgen.c	/^struct avlhd_t *__netparambp_sydup_tn_tree;$/;"	v	typeref:struct:avlhd_t
__nets_removable	./cvc.c	/^int32 __nets_removable;\/* flat no. of deletable nets *\/$/;"	v
__new_gateval	./cvc.c	/^word32 __new_gateval;  \/* new gate out val (st. possible) *\/$/;"	v
__new_inputval	./cvc.c	/^word32 __new_inputval; \/* new input value for tracing message *\/$/;"	v
__new_opt_end	./cvc.c	/^struct optlst_t *__new_opt_end;\/* wrk end of expanded option list *\/$/;"	v	typeref:struct:optlst_t
__new_opt_hdr	./cvc.c	/^struct optlst_t *__new_opt_hdr;\/* header of expanded option list *\/$/;"	v	typeref:struct:optlst_t
__newval_rescheds	./cvc.c	/^word32 __newval_rescheds; \/* num rescheduled for same time *\/$/;"	v
__next_dvnum	./cvc.c	/^int32 __next_dvnum;    \/* highest so far used dumpvars number *\/$/;"	v
__next_nchglp	./v_cvcrt.c	/^struct nchglst_t *__next_nchglp; \/* next processing nchglp *\/$/;"	v	typeref:struct:nchglst_t
__nil_iter_err	./v_vpi.c	/^extern vpiHandle __nil_iter_err(word32 otyp)$/;"	f	signature:(word32 otyp)
__nl_wrap_puts	./v_cnv.c	/^extern void __nl_wrap_puts(char *s, FILE *f)$/;"	f	signature:(char *s, FILE *f)
__nlo_tn_used	./v_bbgen.c	/^int32 *__nlo_tn_used; \/* table so use same NLO tn if num same *\/$/;"	v
__no_errs	./cvc.c	/^int32 __no_errs;       \/* T => don't print error msgs *\/$/;"	v
__no_expand	./cvc.c	/^int32 __no_expand;     \/* T => make all wire vectors vectored *\/$/;"	v
__no_iact	./cvc.c	/^int32 __no_iact;       \/* T => no interactive processing for run *\/$/;"	v
__no_informs	./cvc.c	/^int32 __no_informs;    \/* T => don't print inform msgs (dflt) *\/$/;"	v
__no_specify	./cvc.c	/^int32 __no_specify;    \/* T => check but no simulate with specify *\/$/;"	v
__no_tchks	./cvc.c	/^int32 __no_tchks;      \/* T => check but no simulate with tim chks *\/$/;"	v
__no_tmove_levels	./cvc.c	/^int32 __no_tmove_levels; \/* T => infinite 0 delay loop warn path dist *\/$/;"	v
__no_vec_bid_tran_channels	./cvc.c	/^int32 __no_vec_bid_tran_channels; \/* T => leave bid switch chans scalared *\/ $/;"	v
__no_warns	./cvc.c	/^int32 __no_warns;      \/* T => don't print warning msgs *\/$/;"	v
__no_xprop_edges	./cvc.c	/^int32 __no_xprop_edges;  \/* T => do not include always @ edges *\/$/;"	v
__no_xprop_vectors	./cvc.c	/^int32 __no_xprop_vectors;  \/* T => do not include always @vectored vars *\/$/;"	v
__nokey_seen	./cvc.c	/^int32 __nokey_seen;    \/* $nokey executed and no key *\/$/;"	v
__nor	./v_aslib.c	/^const word32 __nor[256] = {$/;"	v
__nor	./v_aslib.s	/^__nor:$/;"	l
__nor_g3	./v_aslib.c	/^const word32 __nor_g3[64] = {1,0,3,3,0,0,0,0,3,0,3,3,3,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,3,3,0,0,0,0,3,0,3,3,3,0,3,3,3,0,3,3,0,0,0,0,3,0,3,3,3,0,3,3};$/;"	v
__nor_g3	./v_aslib.s	/^__nor_g3:$/;"	l
__nor_g4	./v_aslib.c	/^const word32 __nor_g4[256] = {1,0,3,3,0,0,0,0,3,0,3,3,3,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,3,3,0,0,0,0,3,0,3,3,3,0,3,3,3,0,3,3,0,0,0,0,3,0,3,3,3,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,3,3,0,0,0,0,3,0,3,3,3,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,3,3,0,0,0,0,3,0,3,3,3,0,3,3,3,0,3,3,0,0,0,0,3,0,3,3,3,0,3,3,3,0,3,3,0,0,0,0,3,0,3,3,3,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,3,3,0,0,0,0,3,0,3,3,3,0,3,3,3,0,3,3,0,0,0,0,3,0,3,3,3,0,3,3};$/;"	v
__nor_g4	./v_aslib.s	/^__nor_g4:$/;"	l
__nor_svals	./v_aslib.c	/^const word32 __nor_svals[16] = {1,0,3,3,0,0,0,0,3,0,3,3,3,0,3,3};$/;"	v
__nor_svals	./v_aslib.s	/^__nor_svals:$/;"	l
__notif0_hiz_tab	./v_aslib.c	/^const word32 __notif0_hiz_tab[16] = {73,2,11,11,2,2,2,2,11,0,11,11,11,0,11,11,};$/;"	v
__notif0_hiz_tab	./v_aslib.s	/^__notif0_hiz_tab:$/;"	l
__notif0_pull0_tab	./v_aslib.c	/^const word32 __notif0_pull0_tab[16] = {145,216,211,211,2,2,2,2,19,195,211,211,19,195,211,211,};$/;"	v
__notif0_pull0_tab	./v_aslib.s	/^__notif0_pull0_tab:$/;"	l
__notif0_pull1_tab	./v_aslib.c	/^const word32 __notif0_pull1_tab[16] = {181,216,215,215,2,2,2,2,23,195,215,215,23,195,215,215,};$/;"	v
__notif0_pull1_tab	./v_aslib.s	/^__notif0_pull1_tab:$/;"	l
__notif0_strongx_tab	./v_aslib.c	/^const word32 __notif0_strongx_tab[16] = {109,108,111,111,2,2,2,2,15,99,111,111,15,99,111,111,};$/;"	v
__notif0_strongx_tab	./v_aslib.s	/^__notif0_strongx_tab:$/;"	l
__notif0_strval_tab	./v_aslib.c	/^const word32 __notif0_strval_tab[16] = {217,216,219,219,2,2,2,2,27,195,219,219,27,195,219,219,};$/;"	v
__notif0_strval_tab	./v_aslib.s	/^__notif0_strval_tab:$/;"	l
__notif0_supply0_tab	./v_aslib.c	/^const word32 __notif0_supply0_tab[16] = {145,252,243,243,2,2,2,2,19,227,243,243,19,227,243,243,};$/;"	v
__notif0_supply0_tab	./v_aslib.s	/^__notif0_supply0_tab:$/;"	l
__notif0_supply1_tab	./v_aslib.c	/^const word32 __notif0_supply1_tab[16] = {181,252,247,247,2,2,2,2,23,227,247,247,23,227,247,247,};$/;"	v
__notif0_supply1_tab	./v_aslib.s	/^__notif0_supply1_tab:$/;"	l
__notif1_hiz_tab	./v_aslib.c	/^const word32 __notif1_hiz_tab[16] = {2,2,2,2,73,2,11,11,11,0,11,11,11,0,11,11,};$/;"	v
__notif1_hiz_tab	./v_aslib.s	/^__notif1_hiz_tab:$/;"	l
__notif1_pull0_tab	./v_aslib.c	/^const word32 __notif1_pull0_tab[16] = {2,2,2,2,145,216,211,211,19,195,211,211,19,195,211,211,};$/;"	v
__notif1_pull0_tab	./v_aslib.s	/^__notif1_pull0_tab:$/;"	l
__notif1_pull1_tab	./v_aslib.c	/^const word32 __notif1_pull1_tab[16] = {2,2,2,2,181,216,215,215,23,195,215,215,23,195,215,215,};$/;"	v
__notif1_pull1_tab	./v_aslib.s	/^__notif1_pull1_tab:$/;"	l
__notif1_strongx_tab	./v_aslib.c	/^const word32 __notif1_strongx_tab[16] = {2,2,2,2,109,108,111,111,15,99,111,111,15,99,111,111,};$/;"	v
__notif1_strongx_tab	./v_aslib.s	/^__notif1_strongx_tab:$/;"	l
__notif1_strval_tab	./v_aslib.c	/^const word32 __notif1_strval_tab[16] = {2,2,2,2,217,216,219,219,27,195,219,219,27,195,219,219,};$/;"	v
__notif1_strval_tab	./v_aslib.s	/^__notif1_strval_tab:$/;"	l
__notif1_supply0_tab	./v_aslib.c	/^const word32 __notif1_supply0_tab[16] = {2,2,2,2,145,252,243,243,19,227,243,243,19,227,243,243,};$/;"	v
__notif1_supply0_tab	./v_aslib.s	/^__notif1_supply0_tab:$/;"	l
__notif1_supply1_tab	./v_aslib.c	/^const word32 __notif1_supply1_tab[16] = {2,2,2,2,181,252,247,247,23,227,247,247,23,227,247,247,};$/;"	v
__notif1_supply1_tab	./v_aslib.s	/^__notif1_supply1_tab:$/;"	l
__notstrpropof_err	./v_vpi2.c	/^extern void __notstrpropof_err(word32 typh, int32 prop)$/;"	f	signature:(word32 typh, int32 prop)
__now_resetting	./cvc.c	/^int32 __now_resetting; \/* reset in progress - for cbs and misctf *\/  $/;"	v
__np_iconn_dup_node_free	./v_bbgen3.c	/^extern void __np_iconn_dup_node_free(void *nv)$/;"	f	signature:(void *nv)
__np_iconn_dup_tn_tree	./v_bbgen.c	/^struct avlhd_t *__np_iconn_dup_tn_tree;$/;"	v	typeref:struct:avlhd_t
__ntyp_to_vpivarhtyp	./v_vpi2.c	/^extern word32 __ntyp_to_vpivarhtyp(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__num_addedexec	./cvc.c	/^word32 __num_addedexec;\/* number of executed added statements *\/$/;"	v
__num_asm_insn	./v_bbgen.c	/^int32 __num_asm_insn;  \/* num of asm insn *\/$/;"	v
__num_cancel_tevents	./cvc.c	/^word32 __num_cancel_tevents; \/* total num sim events processed *\/$/;"	v
__num_dfps	./cvc.c	/^int32 __num_dfps;      \/* number of defparams in source *\/$/;"	v
__num_execstmts	./cvc.c	/^word32 __num_execstmts;\/* total number of executed statements *\/$/;"	v
__num_flat_rem_gate_pnd0s	./cvc.c	/^int32 __num_flat_rem_gate_pnd0s; \/* and flat number *\/$/;"	v
__num_glbdfps	./cvc.c	/^int32 __num_glbdfps;   \/* number of defparams in design *\/$/;"	v
__num_glbs	./cvc.c	/^int32 __num_glbs;      \/* total no. of globals in design *\/$/;"	v
__num_init_events	./cvc.c	/^int32 __num_init_events; \/* num of initial events *\/$/;"	v
__num_inmodglbs	./cvc.c	/^int32 __num_inmodglbs; \/* glbs thar resolve to intra module refs. *\/$/;"	v
__num_inout_chans	./cvc.c	/^int32 __num_inout_chans; \/* total num inout switch chans design *\/ $/;"	v
__num_inst_pndparams	./cvc.c	/^int32 __num_inst_pndparams;\/* static number of inst. pound params *\/$/;"	v
__num_locdfps	./cvc.c	/^int32 __num_locdfps;   \/* number of local defparams *\/$/;"	v
__num_netchges	./cvc.c	/^word32 __num_netchges; \/* num of processed net change records *\/$/;"	v
__num_print_asm_insn	./v_bbgen.c	/^int32 __num_print_asm_insn;  \/* number of asm insn printed *\/$/;"	v
__num_proc_tevents	./cvc.c	/^word32 __num_proc_tevents;\/* total num simulation events processed *\/$/;"	v
__num_rem_gate_pnd0s	./cvc.c	/^int32 __num_rem_gate_pnd0s; \/* number of removed source #0 gates *\/$/;"	v
__num_rem_mipds	./cvc.c	/^int32 __num_rem_mipds; \/* number of per bit flat MIPDs 0 delays rmed *\/$/;"	v
__num_repl_scal_chans	./cvc.c	/^int32 __num_repl_scal_chans;\/* number of replaced scalar channels *\/$/;"	v
__num_switch_chans	./cvc.c	/^int32 __num_switch_chans; \/* total num tranif channels in design *\/ $/;"	v
__num_switch_vtxs_processed	./cvc.c	/^int32 __num_switch_vtxs_processed; \/* total num tranif chan vtx done *\/$/;"	v
__num_uprel_glbs	./cvc.c	/^int32 __num_uprel_glbs;\/* number of upward relative globals *\/$/;"	v
__num_vlibs	./cvc.c	/^int32 __num_vlibs;     \/* number of vlibs in options *\/$/;"	v
__num_vpi_force_cbs	./cvc.c	/^int32 __num_vpi_force_cbs; \/* number of registered vpi force cbs *\/$/;"	v
__num_vpi_rel_cbs	./cvc.c	/^int32 __num_vpi_rel_cbs; \/* number of registered vpi rel cbs *\/$/;"	v
__num_xldlvtxs	./cvc.c	/^int32 __num_xldlvtxs;  \/* number of lements in table *\/$/;"	v
__num_ylibs	./cvc.c	/^int32 __num_ylibs;     \/* number of ylibs in options *\/$/;"	v
__num_ys	./cvc.c	/^int32 __num_ys;        \/* number of -y options in lib. *\/$/;"	v
__number_searched	./v_src2.c	/^static int32 __number_searched[HASHTABSIZ];$/;"	v	file:
__numtok_wid	./cvc.c	/^int32 __numtok_wid;    \/* current size of number token *\/    $/;"	v
__numtoken	./cvc.c	/^char *__numtoken;      \/* growable token to hold numbers *\/$/;"	v
__numtopm	./cvc.c	/^int32 __numtopm;       \/* number of uninstanciated top modules *\/$/;"	v
__numused_tevtab	./cvc.c	/^int32 __numused_tevtab;\/* num used at least once in tev tab *\/$/;"	v
__nxt_bidvtx	./cvc.c	/^int32 __nxt_bidvtx;    \/* glb for next bid vtx index tab pos to fill *\/$/;"	v
__nxt_bpnum	./cvc.c	/^int32 __nxt_bpnum;     \/* next breakpoint number to use *\/$/;"	v
__nxt_chan_id	./cvc.c	/^int32 __nxt_chan_id;   \/* cnter and size for assigning chan ids *\/$/;"	v
__nxt_dispxnum	./cvc.c	/^int32 __nxt_dispxnum;  \/* next display number to use *\/$/;"	v
__nxt_lab	./v_bbgen.c	/^int32 __nxt_lab;       \/* counter for creating local insn lab nums *\/$/;"	v
__nxt_maybe_vec	./cvc.c	/^int32 __nxt_maybe_vec; \/* and ndx of next to fill *\/$/;"	v
__nxt_ofs	./cvc.c	/^size_t __nxt_ofs;       \/* next module all nets offset *\/$/;"	v
__nxt_ofs	./v.h	/^size_t __nxt_ofs;       \/* next module all nets offset *\/$/;"	v
__nxtstmt_freq_update	./cvc.c	/^word32 __nxtstmt_freq_update; \/* next ev count for xbig freq upd. *\/ $/;"	v
__o_dbg_msg	./v_ms.c	/^extern void __o_dbg_msg(char *s, ...)$/;"	f	signature:(char *s, ...)
__o_evtr_resume_msg	./v_sim.c	/^extern void __o_evtr_resume_msg(void)$/;"	f	signature:(void)
__o_tr_msg	./v_ms.c	/^extern void __o_tr_msg(char *s, ...)$/;"	f	signature:(char *s, ...)
__obj_dup_node_free	./v_bbgen3.c	/^extern void __obj_dup_node_free(void *obj)$/;"	f	signature:(void *obj)
__objdir_path	./cvc.c	/^char  *__objdir_path;  \/* path to object dir to get compiled .so *\/$/;"	v
__ocfg_stmts	./cvc.c	/^struct ocfg_stmt_t *__ocfg_stmts; \/* o cfg stmts from all opts lst *\/ $/;"	v	typeref:struct:ocfg_stmt_t
__ofdt	./cvc.c	/^char *__ofdt;$/;"	v
__off_vtxlst_end	./cvc.c	/^struct vtxlst_t *__off_vtxlst_end; \/* and ptr to end *\/$/;"	v	typeref:struct:vtxlst_t
__off_vtxlst_hdr	./cvc.c	/^struct vtxlst_t *__off_vtxlst_hdr; \/* bid chan vtx list for marks off *\/$/;"	v	typeref:struct:vtxlst_t
__oinst_mod	./cvc.c	/^struct mod_t *__oinst_mod;\/* ptr. to old current module for copying *\/$/;"	v	typeref:struct:mod_t
__old_gateval	./cvc.c	/^word32 __old_gateval;  \/* before gate change (st. possible) *\/$/;"	v
__old_inputval	./cvc.c	/^word32 __old_inputval; \/* prev. value of input for wide udp eval *\/$/;"	v
__old_int_sig	./cvc.c	/^sighandler *__old_int_sig;  \/* value of quit (^c) signal on entry *\/$/;"	v
__old_toggle_rpt_bits	./cvc.c	/^int32 __old_toggle_rpt_bits;       \/* T => old style report per bit *\/$/;"	v
__old_toggle_rpt_covered	./cvc.c	/^int32 __old_toggle_rpt_covered;    \/* T => old style rpt covered bits *\/$/;"	v
__old_toggle_rpt_instance	./cvc.c	/^int32 __old_toggle_rpt_instance;   \/* T => old report per instance *\/$/;"	v
__old_toggle_rpt_uncovered	./cvc.c	/^int32 __old_toggle_rpt_uncovered;  \/* T => old style rpt uncoverd bits *\/$/;"	v
__old_vpi_obj_after_iter_free_only	./cvc.c	/^int32 __old_vpi_obj_after_iter_free_only; \/* old vpi in iter free *\/$/;"	v
__omitxz_widenoteq	./v_ex2.c	/^extern int32 __omitxz_widenoteq(word32 *op1ap, word32 *op1bp, word32 *op2ap,$/;"	f	signature:(word32 *op1ap, word32 *op1bp, word32 *op2ap, word32 *op2bp, int32 opwid)
__opempty_contabi	./cvc.c	/^int32 __opempty_contabi; \/* special contab ndx for opempty expr leaf *\/$/;"	v
__open_sfil	./cvc.c	/^extern int32 __open_sfil(void)$/;"	f	signature:(void)
__opinfo	./v_src2.c	/^const struct opinfo_t __opinfo[] = {$/;"	v	typeref:struct:opinfo_t
__opt_block_trace	./cvc.c	/^int32 __opt_block_trace; \/* T => block tracing for compiler *\/$/;"	v
__opt_debug_flg	./cvc.c	/^int32 __opt_debug_flg; \/* T => turn on vm compiler debugging output *\/$/;"	v
__opt_emit_var_names	./cvc.c	/^int32 __opt_emit_var_names;\/* T => for debug, emit var name if short *\/$/;"	v
__opt_end	./cvc.c	/^struct optlst_t *__opt_end;   \/* wrk end of expanded option list *\/$/;"	v	typeref:struct:optlst_t
__opt_hdr	./cvc.c	/^struct optlst_t *__opt_hdr;   \/* header of expanded option list *\/$/;"	v	typeref:struct:optlst_t
__opt_nbaopt	./cvc.c	/^int32 __opt_nbaopt;    \/* ignore the time delay for nb <= # *\/$/;"	v
__opt_npptab	./cvc.c	/^struct npopt_t *__opt_npptab; \/* global array for rm\/del of npps *\/$/;"	v	typeref:struct:npopt_t
__opt_prt_stats	./cvc.c	/^int32 __opt_prt_stats; \/* T => print cvc bblk and m insn stats *\/$/;"	v
__opt_reg_alloc	./cvc.c	/^int32 __opt_reg_alloc; \/* optimize reg allocation *\/$/;"	v
__opt_trk_verbose	./cvc.c	/^int32 __opt_trk_verbose; \/* T => value tracking verbose msgs printed *\/$/;"	v
__opt_two_state	./cvc.c	/^int32 __opt_two_state; \/* use two state optimization *\/$/;"	v
__opt_two_state_no_wires	./cvc.c	/^int32 __opt_two_state_no_wires; \/* 2-state does not include wires *\/$/;"	v
__opt_unroll_loops	./cvc.c	/^int32 __opt_unroll_loops;   \/* T => turn on loop unrolling *\/$/;"	v
__opt_valtrk	./cvc.c	/^int32 __opt_valtrk;      \/* T => turn on value tracking optimizing *\/$/;"	v
__optcfg_fils	./cvc.c	/^struct ocfil_lst_t *__optcfg_fils; \/* optconfig file names *\/$/;"	v	typeref:struct:ocfil_lst_t
__optimize_1mod_flowgraphs	./v_bbopt.c	/^extern void __optimize_1mod_flowgraphs(struct mod_t *mdp)$/;"	f	signature:(struct mod_t *mdp)
__optimize_level	./cvc.c	/^int32 __optimize_level;\/* for cvc, optimize leve (now only 2?) *\/$/;"	v
__or_g3	./v_aslib.c	/^const word32 __or_g3[64] = {0,1,3,3,1,1,1,1,3,1,3,3,3,1,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,3,3,1,1,1,1,3,1,3,3,3,1,3,3,3,1,3,3,1,1,1,1,3,1,3,3,3,1,3,3};$/;"	v
__or_g3	./v_aslib.s	/^__or_g3:$/;"	l
__or_g4	./v_aslib.c	/^const word32 __or_g4[256] = {0,1,3,3,1,1,1,1,3,1,3,3,3,1,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,3,3,1,1,1,1,3,1,3,3,3,1,3,3,3,1,3,3,1,1,1,1,3,1,3,3,3,1,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,3,3,1,1,1,1,3,1,3,3,3,1,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,3,3,1,1,1,1,3,1,3,3,3,1,3,3,3,1,3,3,1,1,1,1,3,1,3,3,3,1,3,3,3,1,3,3,1,1,1,1,3,1,3,3,3,1,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,3,3,1,1,1,1,3,1,3,3,3,1,3,3,3,1,3,3,1,1,1,1,3,1,3,3,3,1,3,3};$/;"	v
__or_g4	./v_aslib.s	/^__or_g4:$/;"	l
__os_exit_misc_terr	./v_ms.c	/^extern void __os_exit_misc_terr(char *fnam, int32 lno)$/;"	f	signature:(char *fnam, int32 lno)
__os_exit_pv_terr	./v_ms.c	/^extern void __os_exit_pv_terr(int32 id_num, char *s, ...)$/;"	f	signature:(int32 id_num, char *s, ...)
__outlinpos	./cvc.c	/^int32 __outlinpos;     \/* current trunc. output line pos. *\/$/;"	v
__output_1sig_untgl	./v_cvr.c	/^extern void __output_1sig_untgl(FILE *fp, struct rt_tgl_t *togp, int32 ii)$/;"	f	signature:(FILE *fp, struct rt_tgl_t *togp, int32 ii)
__override_change	./cvc.c	/^int32 __override_change; \/* T => do not check for cvcsim changes *\/$/;"	v
__p0_te_endp	./cvc.c	/^struct tev_t *__p0_te_endp;\/* pound 0 event list end *\/$/;"	v	typeref:struct:tev_t
__p0_te_hdrp	./cvc.c	/^struct tev_t *__p0_te_hdrp;\/* pound 0 event list header *\/$/;"	v	typeref:struct:tev_t
__p1_svals	./v_aslib.c	/^const word32 __p1_svals[16] = {0,1,3,3,1,0,3,3,3,3,3,3,3,3,3,3};$/;"	v
__p1_svals	./v_aslib.s	/^__p1_svals:$/;"	l
__p2_svals	./v_aslib.c	/^const word32 __p2_svals[16] = {1,1,3,3,0,1,3,3,3,3,3,3,3,3,3,3};$/;"	v
__p2_svals	./v_aslib.s	/^__p2_svals:$/;"	l
__p3_svals	./v_aslib.c	/^const word32 __p3_svals[16] = {1,0,3,3,0,1,3,3,3,3,3,3,3,3,3,3};$/;"	v
__p3_svals	./v_aslib.s	/^__p3_svals:$/;"	l
__p4_svals	./v_aslib.c	/^const word32 __p4_svals[16] = {0,1,3,3,1,1,1,1,3,1,3,3,3,1,3,3};$/;"	v
__p4_svals	./v_aslib.s	/^__p4_svals:$/;"	l
__pack_imask1	./v_prp2.c	/^word32 __pack_imask1[17] = {$/;"	v
__pack_imaskx	./v_prp2.c	/^word32 __pack_imaskx[17] = {$/;"	v
__pack_imaskz	./v_prp2.c	/^word32 __pack_imaskz[17] = {$/;"	v
__parse_only	./cvc.c	/^int32 __parse_only;    \/* T => first pass parse only to chk sep mod *\/$/;"	v
__passed_regs_order	./v_bbgen.c	/^int32 __passed_regs_order[6] = {PASS_REG1, PASS_REG2, PASS_REG3, $/;"	v
__path_num	./cvc.c	/^int32 __path_num;      \/* counter for unnamed paths *\/$/;"	v
__pathsep	./v_sdf.c	/^static char __pathsep; $/;"	v	file:
__pd_rhs_stmt_cur	./v_bbgen.c	/^struct pd_rhs_lst_t *__pd_rhs_stmt_cur;\/* proc rhs del stmt cur *\/$/;"	v	typeref:struct:pd_rhs_lst_t
__pd_rhs_stmt_hd	./v_bbgen.c	/^struct pd_rhs_lst_t *__pd_rhs_stmt_hd; \/* proc rhs del stmt head *\/$/;"	v	typeref:struct:pd_rhs_lst_t
__pdlatechgtim	./cvc.c	/^word64 __pdlatechgtim; \/* for path tracing latest path chg time *\/$/;"	v
__pdmindel	./cvc.c	/^word64 __pdmindel;     \/* for path minimum path delay *\/$/;"	v
__pending_enter_iact	./cvc.c	/^int32 __pending_enter_iact;\/* T => enter iact as soon as can *\/$/;"	v
__pipe_dsgn_dat_asm_file	./v_asmlnk.c	/^extern void __pipe_dsgn_dat_asm_file(void)$/;"	f	signature:(void)
__platform	./cvc.c	/^char *__platform;$/;"	v
__pli1_dynlib_end	./cvc.c	/^struct loadpli_t *__pli1_dynlib_end; \/* and its end *\/$/;"	v	typeref:struct:loadpli_t
__pli1_dynlib_hd	./cvc.c	/^struct loadpli_t *__pli1_dynlib_hd; \/* hd of ld pli1 dynamic lb list *\/$/;"	v	typeref:struct:loadpli_t
__pli_access_level	./cvc.c	/^int32 __pli_access_level;    \/* hold pli access value *\/$/;"	v
__pli_keep_src	./cvc.c	/^int32 __pli_keep_src;  \/* T => keep more source stmt info for pli *\/$/;"	v
__pnd0_dummy_hd	./v_cvcrt.c	/^struct tev_t __pnd0_dummy_hd; \/* dummy header for pnd0 events *\/$/;"	v	typeref:struct:tev_t
__pndparam_splits	./cvc.c	/^int32 __pndparam_splits; \/* T => at least one split from pound params *\/$/;"	v
__pop_cc_stmt	./v_cvcrt.c	/^extern void __pop_cc_stmt(void)$/;"	f	signature:(void)
__pop_itstk	./v_ex3.c	/^extern void __pop_itstk(void)$/;"	f	signature:(void)
__pop_nbstk	./v_prp2.c	/^extern void __pop_nbstk(void)$/;"	f	signature:(void)
__pop_prpstmt	./v_prp2.c	/^extern void __pop_prpstmt(void)$/;"	f	signature:(void)
__pop_vifstk	./cvc.c	/^extern int32 __pop_vifstk(void)$/;"	f	signature:(void)
__pop_wrkitstk	./v_ex3.c	/^extern void __pop_wrkitstk(void)$/;"	f	signature:(void)
__pop_xstk	./cvmacros.h	246;"	d
__portnam	./cvc.c	/^char __portnam[IDLEN];$/;"	v
__pow3tab	./v_sim.c	/^const word32 __pow3tab[] = { 1, 3, 9, 27, 81, 243, 729, 2187, 6561, $/;"	v
__pr_iodir	./cvc.c	/^word32 __pr_iodir;     \/* glb. for port ref. expr. I\/O direction *\/$/;"	v
__pr_wid	./cvc.c	/^int32 __pr_wid;        \/* global for total port ref. expr. width *\/$/;"	v
__pre_fixup_nl	./v_fx.c	/^extern int32 __pre_fixup_nl(void)$/;"	f	signature:(void)
__pregab_tostr	./v_cnv.c	/^extern char *__pregab_tostr(char *s, word32 *ap, word32 *bp, struct net_t *np)$/;"	f	signature:(char *s, word32 *ap, word32 *bp, struct net_t *np)
__prep_contas	./v_prp2.c	/^extern void __prep_contas(void)$/;"	f	signature:(void)
__prep_delay	./v_del.c	/^extern void __prep_delay(struct gate_t *gp, struct paramlst_t *dhdr,$/;"	f	signature:(struct gate_t *gp, struct paramlst_t *dhdr, int32 ispath, int32 is_trireg, char *emsg, int32 mustbeconst, struct sy_t *dsym, int32 is_spec)
__prep_dpi	./v_dpi.c	/^extern void __prep_dpi(void)$/;"	f	signature:(void)
__prep_exprs_and_ports	./v_prp2.c	/^extern void __prep_exprs_and_ports(void)$/;"	f	signature:(void)
__prep_insrc_monit	./v_ex2.c	/^extern void __prep_insrc_monit(struct st_t *stp, int32 fmon_type,$/;"	f	signature:(struct st_t *stp, int32 fmon_type, struct mod_t *mdp)
__prep_lstofsts	./v_prp2.c	/^extern struct st_t *__prep_lstofsts(struct st_t *hdrstp, int32 nd_endgoto,$/;"	f	signature:(struct st_t *hdrstp, int32 nd_endgoto, int32 is_dctrl_chain)
__prep_netlists_for_cvc	./v_cvcms.c	/^extern void __prep_netlists_for_cvc(void)$/;"	f	signature:(void)
__prep_numsts	./v_prp2.c	/^int32 __prep_numsts;$/;"	v
__prep_sim	./v_prp.c	/^extern void __prep_sim(void)$/;"	f	signature:(void)
__prep_specify	./v_prp2.c	/^extern void __prep_specify(void)$/;"	f	signature:(void)
__prep_stmts	./v_prp2.c	/^extern void __prep_stmts(void)$/;"	f	signature:(void)
__prep_xmrs	./v_prp2.c	/^extern void __prep_xmrs(void)$/;"	f	signature:(void)
__prep_xprop_stmts	./v_xprop.c	/^extern void __prep_xprop_stmts(int32 is_xprop2)$/;"	f	signature:(int32 is_xprop2)
__primtermprop_vpiget	./v_vpi2.c	/^extern int32 __primtermprop_vpiget(struct h_t *hp, int32 prop)$/;"	f	signature:(struct h_t *hp, int32 prop)
__print_hash_stats	./v_src2.c	/^extern void __print_hash_stats(void)$/;"	f	signature:(void)
__proc_flowg_hd	./v_bbgen.c	/^struct flowg_t *__proc_flowg_hd; \/* hd of cur gen list of flow graphs *\/$/;"	v	typeref:struct:flowg_t
__proc_flowg_tail	./v_bbgen.c	/^struct flowg_t *__proc_flowg_tail; \/* and its tail *\/$/;"	v	typeref:struct:flowg_t
__proc_thrd_tevents	./cvc.c	/^word32 __proc_thrd_tevents;\/* number of processed thread events *\/$/;"	v
__process_all_tchk_violations	./v_sim.c	/^extern void __process_all_tchk_violations(void)$/;"	f	signature:(void)
__process_all_toggle_coverage	./v_sim.c	/^extern void __process_all_toggle_coverage(void)$/;"	f	signature:(void)
__process_brkpt	./v_dbg2.c	/^extern int32 __process_brkpt(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__process_cancel_ev	./v_sim.c	/^extern void __process_cancel_ev(void)$/;"	f	signature:(void)
__process_cancel_ev_enterp	./cvc.c	/^void *__process_cancel_ev_enterp;   \/* cancel event addresss ptr  *\/$/;"	v
__process_cdir	./cvc.c	/^extern void __process_cdir(void)$/;"	f	signature:(void)
__process_compiled_nbpa_ev_sim_notpnd0	./v_sim.c	/^extern void __process_compiled_nbpa_ev_sim_notpnd0(void)$/;"	f	signature:(void)
__process_compiled_thrd_ev	./v_sim.c	/^extern void __process_compiled_thrd_ev(void)$/;"	f	signature:(void)
__process_compiled_thrd_ev_auto	./v_sim.c	/^extern void __process_compiled_thrd_ev_auto(void)$/;"	f	signature:(void)
__process_compiled_thrd_ev_enterp	./cvc.c	/^void *__process_compiled_thrd_ev_enterp; \/* enter pointer for thrd ev *\/$/;"	v
__process_compiled_trpthdst_ev	./v_sim.c	/^extern void __process_compiled_trpthdst_ev(void)$/;"	f	signature:(void)
__process_conta_ev	./v_sim.c	/^extern void __process_conta_ev(void)$/;"	f	signature:(void)
__process_defparams	./v_genfx.c	/^extern void __process_defparams(void)$/;"	f	signature:(void)
__process_exit_tgl_output	./v_cvr.c	/^extern void __process_exit_tgl_output(void)$/;"	f	signature:(void)
__process_free_ev_enterp	./cvc.c	/^void *__process_free_ev_enterp; \/* done with tev list enterp *\/$/;"	v
__process_free_ev_pnd0_enterp	./cvc.c	/^void *__process_free_ev_pnd0_enterp; \/* done with tev list ent pnd0 *\/$/;"	v
__process_gatechg_ev	./v_sim.c	/^extern void __process_gatechg_ev(void)$/;"	f	signature:(void)
__process_gatechg_ev_enterp	./cvc.c	/^void *__process_gatechg_ev_enterp;  \/* enter process for gate ev *\/$/;"	v
__process_getpat	./v_sim.c	/^extern void __process_getpat(struct conta_t *cap)$/;"	f	signature:(struct conta_t *cap)
__process_mipd_nchg_ev	./v_sim.c	/^extern void __process_mipd_nchg_ev(void)$/;"	f	signature:(void)
__process_nbpa_ev	./v_sim.c	/^extern void __process_nbpa_ev(void)$/;"	f	signature:(void)
__process_nbpa_ev_sim_notpnd0	./v_sim.c	/^extern void __process_nbpa_ev_sim_notpnd0(void)$/;"	f	signature:(void)
__process_nbpa_varndx_concat_ev	./v_sim.c	/^extern void __process_nbpa_varndx_concat_ev(void)$/;"	f	signature:(void)
__process_nbpa_varndx_ev_enterp	./v_cvcrt.c	/^void *__process_nbpa_varndx_ev_enterp;$/;"	v
__process_next_ev_enterp	./cvc.c	/^void *__process_next_ev_enterp; \/* done with cur tev - get next event *\/$/;"	v
__process_next_event_free_enterp	./v_cvcrt.c	/^void *__process_next_event_free_enterp;$/;"	v
__process_next_nchg_enterp	./v_cvcrt.c	/^void *__process_next_nchg_enterp; \/* process next nchg enter ptr *\/$/;"	v
__process_npp_timofchg	./v_sim.c	/^extern void __process_npp_timofchg(struct net_t *np, struct net_pin_t *npp)$/;"	f	signature:(struct net_t *np, struct net_pin_t *npp)
__process_pli_dynamic_libs	./v_vpi.c	/^extern void __process_pli_dynamic_libs(struct loadpli_t *ldp_hd)$/;"	f	signature:(struct loadpli_t *ldp_hd)
__process_putpdel_enterp	./cvc.c	/^void *__process_putpdel_enterp;      \/* vpi putdel event *\/$/;"	v
__process_sdf_files	./v_sdf.c	/^extern void __process_sdf_files(void)$/;"	f	signature:(void)
__process_sdf_tskenables	./v_sdf.c	/^extern void __process_sdf_tskenables(void)$/;"	f	signature:(void)
__process_thrd_ev	./v_ex.c	/^extern void __process_thrd_ev(void)$/;"	f	signature:(void)
__process_timescales	./v_fx2.c	/^extern void __process_timescales(void)$/;"	f	signature:(void)
__process_trpthdst_ev	./v_sim.c	/^extern void __process_trpthdst_ev(void)$/;"	f	signature:(void)
__process_trpthdst_ev_enterp	./cvc.c	/^void *__process_trpthdst_ev_enterp; \/* enter pointer for tran ev *\/$/;"	v
__process_vpi_varputv_enterp	./cvc.c	/^void *__process_vpi_varputv_enterp; \/* vpi putv event *\/$/;"	v
__process_vpi_varputv_ev	./v_vpi3.c	/^extern void __process_vpi_varputv_ev(void)$/;"	f	signature:(void)
__process_vpidrv_enterp	./cvc.c	/^void *__process_vpidrv_enterp;      \/* vpi drv event *\/$/;"	v
__process_vpidrv_ev	./v_vpi3.c	/^extern void __process_vpidrv_ev(void)$/;"	f	signature:(void)
__process_wire_ev	./v_sim.c	/^extern void __process_wire_ev(void)$/;"	f	signature:(void)
__process_wire_ev_enterp	./cvc.c	/^void *__process_wire_ev_enterp; \/* enter pointer for wire events *\/$/;"	v
__processing_func	./cvc.c	/^int32 __processing_func; \/* T => prep or exec of function occuring *\/$/;"	v
__processing_pnd0s	./cvc.c	/^int32 __processing_pnd0s;\/* T => in time unit, in end #0 region *\/$/;"	v
__prp_mstmt_ndx	./cvc.c	/^struct st_t **__prp_mstmt_ndx;\/* during prep tmp stmt tab for idp add *\/$/;"	v	typeref:struct:st_t
__prpsti	./cvc.c	/^int32 __prpsti;        \/* top of nested stmt. stack *\/$/;"	v
__prpstk	./cvc.c	/^struct st_t **__prpstk;\/* during prep., continue stp *\/$/;"	v	typeref:struct:st_t
__prt2_mod_typetab	./cvc.c	/^extern void __prt2_mod_typetab(int32 prt_all)$/;"	f	signature:(int32 prt_all)
__prt2_vtok	./v_ms.c	/^extern char *__prt2_vtok(int32 ttyp)$/;"	f	signature:(int32 ttyp)
__prt_1fg_cvc_stats	./v_asmlnk.c	/^extern void __prt_1fg_cvc_stats(struct flowg_t *fgp, struct mod_t *mdp)$/;"	f	signature:(struct flowg_t *fgp, struct mod_t *mdp)
__prt_allstats	./cvc.c	/^int32 __prt_allstats;  \/* T => print design and mod content tabs *\/$/;"	v
__prt_end_msg	./cvc.c	/^extern void __prt_end_msg()$/;"	f
__prt_kywrd_vtok	./v_ms.c	/^extern char *__prt_kywrd_vtok(void)$/;"	f	signature:(void)
__prt_src_lines	./v_dbg2.c	/^extern void __prt_src_lines(int32 ifi, int32 frlini, int32 stoplini)$/;"	f	signature:(int32 ifi, int32 frlini, int32 stoplini)
__prt_stats	./cvc.c	/^int32 __prt_stats;     \/* T => print design statics tables *\/$/;"	v
__prt_top_mods	./v_fx.c	/^extern void __prt_top_mods(void)$/;"	f	signature:(void)
__prt_vtok	./v_ms.c	/^extern char *__prt_vtok(void)$/;"	f	signature:(void)
__prt_where_msg	./v_dbg2.c	/^extern void __prt_where_msg(struct thread_t *thp)$/;"	f	signature:(struct thread_t *thp)
__pth_schd_allofwire	./v_ex3.c	/^extern void __pth_schd_allofwire(struct net_t *np, word32 *ap, word32 *bp,$/;"	f	signature:(struct net_t *np, word32 *ap, word32 *bp, int32 blen)
__pth_stren_schd_allofwire	./v_ex3.c	/^extern void __pth_stren_schd_allofwire(struct net_t *np, byte *sbp,$/;"	f	signature:(struct net_t *np, byte *sbp, int32 sblen)
__pth_tracing	./cvc.c	/^int32 __pth_tracing;   \/* T => trace path delays in detail *\/$/;"	v
__push_cc_stmt	./v_cvcrt.c	/^extern void __push_cc_stmt(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__push_count	./v_bbgen.c	/^int32 __push_count;        \/* number of variables push to wrap call *\/$/;"	v
__push_itstk	./v_ex3.c	/^extern void __push_itstk(struct itree_t *itp)$/;"	f	signature:(struct itree_t *itp)
__push_nbstk	./v_prp2.c	/^extern void __push_nbstk(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__push_prpstmt	./v_prp2.c	/^extern void __push_prpstmt(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__push_vinfil	./cvc.c	/^extern void __push_vinfil(void)$/;"	f	signature:(void)
__push_wrkitstk	./v_ex3.c	/^extern void __push_wrkitstk(struct mod_t *mdp, int32 winum)$/;"	f	signature:(struct mod_t *mdp, int32 winum)
__pv_ctab	./v_ms.c	/^char const __pv_ctab[128] = {$/;"	v
__pv_ctv	./cvc.c	/^int32 __pv_ctv;        \/* tmp for white space skipping macros *\/$/;"	v
__pv_defsyms	./cvc.c	/^struct symtab_t *__pv_defsyms;\/* global table for `defines *\/$/;"	v	typeref:struct:symtab_t
__pv_err	./v_ms.c	/^extern void __pv_err(int32 id_num, char *s, ...)$/;"	f	signature:(int32 id_num, char *s, ...)
__pv_err_cnt	./cvc.c	/^int32 __pv_err_cnt, __pv_warn_cnt; \/* error counts *\/$/;"	v
__pv_ferr	./v_ms.c	/^extern void __pv_ferr(int32 id_num, char *s, ...)$/;"	f	signature:(int32 id_num, char *s, ...)
__pv_fwarn	./v_ms.c	/^extern void __pv_fwarn(int32 id_num, char *s, ...)$/;"	f	signature:(int32 id_num, char *s, ...)
__pv_homedir	./cvc.c	/^char __pv_homedir[RECLEN]; \/* home dir - . if HOME env. not set *\/$/;"	v
__pv_sim	./v_sim.c	/^extern void __pv_sim(void)$/;"	f	signature:(void)
__pv_stlevel	./cvc.c	/^int32 __pv_stlevel;    \/* tmp. for current stmt nesting level *\/$/;"	v
__pv_stralloc	./v_ms.c	/^extern char *__pv_stralloc(char *s)$/;"	f	signature:(char *s)
__pv_terr	./v_ms.c	/^extern void __pv_terr(int32 id_num, char *s, ...)$/;"	f	signature:(int32 id_num, char *s, ...)
__pv_timestamp	./cvc.c	/^char *__pv_timestamp;  \/* timestamp for design *\/$/;"	v
__pv_varnam	./cvc.c	/^char __pv_varnam[IDLEN]; \/* variable name *\/$/;"	v
__pv_vpi_terr	./v_ms.c	/^extern void __pv_vpi_terr(int32 id_num, char *s, ...)$/;"	f	signature:(int32 id_num, char *s, ...)
__pv_warn	./v_ms.c	/^extern void __pv_warn(int32 id_num, char *s, ...)$/;"	f	signature:(int32 id_num, char *s, ...)
__pv_warn_cnt	./cvc.c	/^int32 __pv_err_cnt, __pv_warn_cnt; \/* error counts *\/$/;"	v
__pvc_dcehdr	./cvc.c	/^struct dceauxlst_t *__pvc_dcehdr; \/* header of current pvc dces *\/$/;"	v	typeref:struct:dceauxlst_t
__pvdate	./cvc.c	/^char *__pvdate;        \/* date in unix form *\/$/;"	v
__qc_tran_wireforce	./v_trch.c	/^extern void __qc_tran_wireforce(struct net_t *np, int32 biti, int32 bitj,$/;"	f	signature:(struct net_t *np, int32 biti, int32 bitj, int32 rhsbi, t_midat *idp, struct st_t *qcfstp)
__qc_tran_wirerelease	./v_trch.c	/^extern void __qc_tran_wirerelease(struct net_t *np, int32 biti, int32 bitj,$/;"	f	signature:(struct net_t *np, int32 biti, int32 bitj, t_midat *idp, struct expr_t *lhsx)
__qcaf_dcehdr	./cvc.c	/^struct dceauxlst_t *__qcaf_dcehdr; \/* header of current qcaf dces *\/$/;"	v	typeref:struct:dceauxlst_t
__qcol_comb_svals	./v_aslib.c	/^const word32 __qcol_comb_svals[16] = {0,3,3,3,3,1,3,3,3,3,3,3,3,3,3,3};$/;"	v
__qcol_comb_svals	./v_aslib.s	/^__qcol_comb_svals:$/;"	l
__qlist_hdr	./cvc.c	/^struct q_hdr_t *__qlist_hdr; \/* for $q_ system task q list header *\/$/;"	v	typeref:struct:q_hdr_t
__quiet_msgs	./cvc.c	/^int32 __quiet_msgs;    \/* T => do not emit msgs just errors *\/$/;"	v
__quiet_olp	./cvc.c	/^struct optlst_t *__quiet_olp; \/* quiet option, nil if none *\/$/;"	v	typeref:struct:optlst_t
__random_init	./cvc.c	/^int32 __random_init;     \/* T => random initialize is on *\/$/;"	v
__random_init_2state	./cvc.c	/^int32 __random_init_2state; \/* T => random 2state initialize is on *\/$/;"	v
__rd_always_ff	./cvc.c	/^int32 __rd_always_ff;    \/* T => read always_ff *\/$/;"	v
__rd_auto_task	./cvc.c	/^int32 __rd_auto_task;    \/* T => is reading automatic task *\/$/;"	v
__rd_break	./cvc.c	/^int32 __rd_break;        \/* T => read 'break' *\/$/;"	v
__rd_cfg	./v_src3.c	/^extern int32 __rd_cfg(void)$/;"	f	signature:(void)
__rd_cfg_ver_mod	./v_src.c	/^extern void __rd_cfg_ver_mod(void)$/;"	f	signature:(void)
__rd_continue	./cvc.c	/^int32 __rd_continue;     \/* T => read 'continue' *\/$/;"	v
__rd_dctrl_st_always_comb_latch	./v_src2.c	/^extern struct st_t *__rd_dctrl_st_always_comb_latch(void)$/;"	f	signature:(void)
__rd_iact_expr	./v_dbg.c	/^extern struct expr_t *__rd_iact_expr(void)$/;"	f	signature:(void)
__rd_ialine	./v_ms.c	/^extern int32 __rd_ialine(void)$/;"	f	signature:(void)
__rd_loop	./cvc.c	/^int32 __rd_loop;         \/* T => is reading a loop *\/$/;"	v
__rd_lstofsts	./v_src2.c	/^extern int32 __rd_lstofsts(int32 endbtok, struct st_t **stpp, int32 slcnt,$/;"	f	signature:(int32 endbtok, struct st_t **stpp, int32 slcnt, int32 sfnind)
__rd_moddef	./v_src.c	/^extern int32 __rd_moddef(struct symtab_t *cfg_sytab, int32 isconfig)$/;"	f	signature:(struct symtab_t *cfg_sytab, int32 isconfig)
__rd_opt_param_vec_rng	./v_src.c	/^extern int32 __rd_opt_param_vec_rng(struct expr_t **rx1, struct expr_t **rx2,$/;"	f	signature:(struct expr_t **rx1, struct expr_t **rx2, int32 is_hdr_form)
__rd_optcfg_files	./v_src3.c	/^extern void __rd_optcfg_files(void)$/;"	f	signature:(void)
__rd_parse_attribute	./v_src3.c	/^extern struct attr_t *__rd_parse_attribute(struct attr_t *rd_attrp)$/;"	f	signature:(struct attr_t *rd_attrp)
__rd_set_from_tgldat_toggled	./v_cvr.c	/^extern void  __rd_set_from_tgldat_toggled(void)$/;"	f	signature:(void)
__rd_setup_optcfg	./v_src3.c	/^extern void __rd_setup_optcfg(void)$/;"	f	signature:(void)
__rd_spfy	./v_src3.c	/^extern int32 __rd_spfy(struct mod_t *mdp)$/;"	f	signature:(struct mod_t *mdp)
__rd_stmt	./v_src2.c	/^extern struct st_t *__rd_stmt(void)$/;"	f	signature:(void)
__rd_tfdecls	./v_src.c	/^extern int32 __rd_tfdecls(char *tftypnam)$/;"	f	signature:(char *tftypnam)
__rd_tskenable	./v_src2.c	/^extern struct st_t *__rd_tskenable(char *tknam, struct expr_t *glbndp,$/;"	f	signature:(char *tknam, struct expr_t *glbndp, int32 is_glbenable)
__rd_udpdef	./v_src3.c	/^extern int32 __rd_udpdef(struct symtab_t *cfg_sytab)$/;"	f	signature:(struct symtab_t *cfg_sytab)
__rd_ver_cfg_src	./v_src3.c	/^extern void __rd_ver_cfg_src(void)$/;"	f	signature:(void)
__rd_ver_mod	./v_src.c	/^extern void __rd_ver_mod(void)$/;"	f	signature:(void)
__rd_ver_src	./cvc.c	/^extern void __rd_ver_src(void)$/;"	f	signature:(void)
__rding_comment	./cvc.c	/^int32 __rding_comment; \/* flag so comment non printable chars ok *\/$/;"	v
__rding_cond_expr	./v_sdf.c	/^static int32 __rding_cond_expr;  \/* reading cond form - scalars cons allowd *\/ $/;"	v	file:
__rding_defparam	./cvc.c	/^int32 __rding_defparam;  \/* T=> parsing dfp stmt - for dfp gref tab *\/$/;"	v
__rding_top_level	./cvc.c	/^int32 __rding_top_level; \/* T => reading outside top level construct *\/$/;"	v
__re_prep_dels	./v_del.c	/^extern void __re_prep_dels(struct net_t *parmnp, struct itree_t *itp,$/;"	f	signature:(struct net_t *parmnp, struct itree_t *itp, struct mod_t *mdp, int32 from_vpi)
__real_to_v64tim	./v_del.c	/^extern int32 __real_to_v64tim(word64 *tim, double dv)$/;"	f	signature:(word64 *tim, double dv)
__real_warns	./cvc.c	/^int32 __real_warns;            \/* turn on sim time NaN real warns *\/$/;"	v
__recalc_param_vals	./v_genfx.c	/^extern void __recalc_param_vals(void)$/;"	f	signature:(void)
__reconn_gia_pins	./v_fx2.c	/^extern void __reconn_gia_pins(void)$/;"	f	signature:(void)
__redand	./v_aslib.c	/^const word32 __redand[256] = {$/;"	v
__redand	./v_aslib.s	/^__redand:$/;"	l
__redor	./v_aslib.c	/^const word32 __redor[256] = {$/;"	v
__redor	./v_aslib.s	/^__redor:$/;"	l
__redxnor	./v_aslib.c	/^const word32 __redxnor[256] = {$/;"	v
__redxnor	./v_aslib.s	/^__redxnor:$/;"	l
__redxor	./v_aslib.c	/^const word32 __redxor[256] = {$/;"	v
__redxor	./v_aslib.s	/^__redxor:$/;"	l
__regab2_tostr	./v_cnv.c	/^extern char *__regab2_tostr(char *s, word32 *ap, word32 *bp, int32 blen,$/;"	f	signature:(char *s, word32 *ap, word32 *bp, int32 blen, int32 base, int32 hassign, int32 trim)
__regab_disp	./v_cnv.c	/^extern void __regab_disp(word32 *ap, word32 *bp, int32 blen, int32 base, $/;"	f	signature:(word32 *ap, word32 *bp, int32 blen, int32 base, int32 trim, int32 hassign)
__regab_tostr	./v_cnv.c	/^extern char *__regab_tostr(char *s, word32 *ap, word32 *bp, int32 blen,$/;"	f	signature:(char *s, word32 *ap, word32 *bp, int32 blen, int32 base, int32 hassign)
__regs	./v_asmlnk.c	/^char *__regs[] = {$/;"	v
__reinit_all_contas_in_mod	./v_prp2.c	/^extern void __reinit_all_contas_in_mod(struct mod_t *mdp)$/;"	f	signature:(struct mod_t *mdp)
__reinit_mipd	./v_prp2.c	/^extern void __reinit_mipd(struct mod_pin_t *mpp, struct mod_t *mdp)$/;"	f	signature:(struct mod_pin_t *mpp, struct mod_t *mdp)
__reinit_netdrvr_putvrec	./v_vpi3.c	/^extern void __reinit_netdrvr_putvrec(struct net_t *np, struct mod_t *mdp)$/;"	f	signature:(struct net_t *np, struct mod_t *mdp)
__reinit_regwir_putvrec	./v_vpi3.c	/^extern void __reinit_regwir_putvrec(struct net_t *np, int32 insts)$/;"	f	signature:(struct net_t *np, int32 insts)
__reinit_sim	./v_sim.c	/^extern void __reinit_sim(void)$/;"	f	signature:(void)
__reinit_vpi	./v_vpi3.c	/^extern void __reinit_vpi(void) $/;"	f	signature:(void)
__reinitialize_vars	./v_prp2.c	/^extern void __reinitialize_vars(struct mod_t *mdp)$/;"	f	signature:(struct mod_t *mdp)
__rel_allcb_end	./cvc.c	/^struct rfcblst_t *__rel_allcb_end;$/;"	v	typeref:struct:rfcblst_t
__rel_allcb_hdr	./cvc.c	/^struct rfcblst_t *__rel_allcb_hdr;$/;"	v	typeref:struct:rfcblst_t
__relceq_svals	./v_aslib.c	/^const word32 __relceq_svals[16] = {1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1};$/;"	v
__relceq_svals	./v_aslib.s	/^__relceq_svals:$/;"	l
__relcneq_svals	./v_aslib.c	/^const word32 __relcneq_svals[16] = {0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0};$/;"	v
__relcneq_svals	./v_aslib.s	/^__relcneq_svals:$/;"	l
__relgt_svals	./v_aslib.c	/^const word32 __relgt_svals[16] = {0,1,3,3,0,0,3,3,3,3,3,3,3,3,3,3};$/;"	v
__relgt_svals	./v_aslib.s	/^__relgt_svals:$/;"	l
__relle_svals	./v_aslib.c	/^const word32 __relle_svals[16] = {1,0,3,3,1,1,3,3,3,3,3,3,3,3,3,3};$/;"	v
__relle_svals	./v_aslib.s	/^__relle_svals:$/;"	l
__rellt_svals	./v_aslib.c	/^const word32 __rellt_svals[16] = {0,0,3,3,1,0,3,3,3,3,3,3,3,3,3,3};$/;"	v
__rellt_svals	./v_aslib.s	/^__rellt_svals:$/;"	l
__rem_0path_dels	./v_prp.c	/^extern void __rem_0path_dels(void)$/;"	f	signature:(void)
__rem_stren	./v_ex3.c	/^extern void __rem_stren(word32 *ap, word32 *bp, byte *sbp, int32 blen)$/;"	f	signature:(word32 *ap, word32 *bp, byte *sbp, int32 blen)
__remove_undef_mod	./v_src.c	/^extern void __remove_undef_mod(struct sy_t *syp)$/;"	f	signature:(struct sy_t *syp)
__removed_asm_insns	./v_bbgen.c	/^int32 __removed_asm_insns;  \/* removed num of asm insn *\/$/;"	v
__removed_bblks	./v_bbgen.c	/^int32 __removed_bblks; \/* number of removed basic blocks *\/ $/;"	v
__renumber_fg_insns	./v_cvcms.c	/^extern void __renumber_fg_insns(struct flowg_t *fgp)$/;"	f	signature:(struct flowg_t *fgp)
__repl_gen_dot_esc	./cvc.c	/^int32 __repl_gen_dot_esc;\/* T => decompile with gen dots escaped *\/ $/;"	v
__repl_gen_dot_uline	./cvc.c	/^int32 __repl_gen_dot_uline;\/* T => decompile with gen dots as '_' *\/ $/;"	v
__replace_insn	./v_cvcms.c	/^extern void __replace_insn(struct insn_t *new_ip, struct insn_t *ip)$/;"	f	signature:(struct insn_t *new_ip, struct insn_t *ip)
__rescanning_lib	./cvc.c	/^int32 __rescanning_lib;\/* T => for `language exclude after 1st pass *\/ $/;"	v
__reschedule_1caev	./v_sim.c	/^extern void __reschedule_1caev(struct tev_t *tevp, word64 cadel, word64 newtim,$/;"	f	signature:(struct tev_t *tevp, word64 cadel, word64 newtim, word32 *rhs_wp)
__reschedule_1wev	./v_ex3.c	/^extern void __reschedule_1wev(struct tev_t *tevp, word32 newval, word64 ndel,$/;"	f	signature:(struct tev_t *tevp, word32 newval, word64 ndel, word64 newtim, struct tev_t **itevp)
__reset_count	./cvc.c	/^int32 __reset_count;   \/* count of the number of rests ($reset) *\/$/;"	v
__reset_jmpbuf	./v_dbg.c	/^jmp_buf __reset_jmpbuf;$/;"	v
__reset_modport_strens	./v_fx2.c	/^extern void __reset_modport_strens(void)$/;"	f	signature:(void)
__reset_to_time0	./v_dbg2.c	/^extern void __reset_to_time0(void)$/;"	f	signature:(void)
__reset_value	./cvc.c	/^int32 __reset_value;   \/* 2nd $reset value preserved after reset *\/ $/;"	v
__resolve_xmrs_fr_xmrcmps	./v_genfx.c	/^extern void __resolve_xmrs_fr_xmrcmps(void)$/;"	f	signature:(void)
__restore_min_time_heap	./v_sim.c	/^extern void __restore_min_time_heap(int32 restore_point)$/;"	f	signature:(int32 restore_point)
__restore_min_time_nodes	./v_sim.c	/^extern void __restore_min_time_nodes(int32 restore_point)$/;"	f	signature:(int32 restore_point)
__rev_po_ndx	./v_bbgen.c	/^int32 __rev_po_ndx; \/* for reverse post order nums - current ndx *\/$/;"	v
__rhs_has_4state	./cvc.c	/^int32 __rhs_has_4state;  \/* T=> rhs has 4-state values *\/ $/;"	v
__rhs_isgetpat	./cvc.c	/^int32 __rhs_isgetpat;  \/* T => flag for checking stylized getpat *\/$/;"	v
__rhspsel	./v_ex2.c	/^extern void __rhspsel(word32 *dwp, word32 *swp, int32 sbit1, int32 numbits)$/;"	f	signature:(word32 *dwp, word32 *swp, int32 sbit1, int32 numbits)
__rm_gate_pnd0s	./cvc.c	/^int32 __rm_gate_pnd0s; \/* T => remove #0 from all gates *\/$/;"	v
__rm_path_pnd0s	./cvc.c	/^int32 __rm_path_pnd0s; \/* T => (default) remove all 0 delay paths *\/$/;"	v
__rmos_stmap	./v_ex3.c	/^const word32 __rmos_stmap[] = { 0, 1, 1, 2, 2, 3, 5, 5 }; $/;"	v
__root_ndp	./cvc.c	/^struct expr_t *__root_ndp;\/* root of built and alloced expression *\/$/;"	v	typeref:struct:expr_t
__rosync_slot	./cvc.c	/^int32 __rosync_slot;   \/* T => processing tf or vpi  ro synch events *\/$/;"	v
__rtl_dist_uniform	./v_ex2.c	/^extern int32 __rtl_dist_uniform(int32 *seed, int32 start, int32 end)$/;"	f	signature:(int32 *seed, int32 start, int32 end)
__run_state	./cvc.c	/^int32 __run_state;     \/* state of current simulation run *\/$/;"	v
__running_cvc_exe	./cvc.c	/^int32 __running_cvc_exe = FALSE; \/* T => running compiled executable *\/$/;"	v
__same_param_must_split	./cvc.c	/^int32 __same_param_must_split;\/* T => off inhibit splt same parms *\/$/;"	v
__same_size	./v_bbgen.c	/^extern int32 __same_size(int32 lhswid, int32 rhswid)$/;"	f	signature:(int32 lhswid, int32 rhswid)
__sav_mtime_units	./cvc.c	/^int32 __sav_mtime_units; \/* prep of iact statements needs tfmt units *\/$/;"	v
__sav_spsytp	./cvc.c	/^struct symtab_t *__sav_spsytp;\/* save loc. of sym tab in spfy sect. *\/$/;"	v	typeref:struct:symtab_t
__save_key_s	./cvc.c	/^FILE *__save_key_s;    \/* if $nolog executed, value to use if log *\/$/;"	v
__save_last_mitem	./cvc.c	/^void *__save_last_mitem; \/* ptr for remove mod items end of list *\/$/;"	v
__save_log_s	./cvc.c	/^FILE *__save_log_s;    \/* if $nolog executed, value to use if log *\/$/;"	v
__save_scope_tskp	./v_cvcrt.c	/^struct task_t *__save_scope_tskp; \/* save from $scope task if present *\/ $/;"	v	typeref:struct:task_t
__saverr_cnt	./cvc.c	/^int32 __saverr_cnt;    \/* counter to inhibit more than a err in xpr *\/$/;"	v
__scal_stfilter_dce_chg	./v_sim.c	/^extern int32 __scal_stfilter_dce_chg(struct net_t *np, byte *dcesbp,$/;"	f	signature:(struct net_t *np, byte *dcesbp, word32 *oval, word32 *nval)
__scanf_pos	./cvc.c	/^long __scanf_pos;      \/* byte offset position of scanf in file *\/$/;"	v
__schd_1pthwirebit	./v_ex3.c	/^extern void __schd_1pthwirebit(struct net_t *np, int32 biti, word32 nval,$/;"	f	signature:(struct net_t *np, int32 biti, word32 nval, word32 oval)
__sched_1mdrwire	./v_ex4.c	/^extern void __sched_1mdrwire(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__sched_always_blocks_first	./cvc.c	/^int32 __sched_always_blocks_first; \/* T init all alw before init *\/$/;"	v
__sched_fork	./v_ex.c	/^extern void __sched_fork(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__sched_mipd_nchg	./v_ex3.c	/^extern void __sched_mipd_nchg(struct net_t *np, int32 bi,$/;"	f	signature:(struct net_t *np, int32 bi, struct mipd_t *mipdp)
__sched_nbproc_delay	./v_ex.c	/^extern void __sched_nbproc_delay(struct delctrl_t *dctp, struct xstk_t *xsp,$/;"	f	signature:(struct delctrl_t *dctp, struct xstk_t *xsp, struct st_t *stp)
__schedorassign_unknown_bit	./v_ex3.c	/^extern void __schedorassign_unknown_bit(struct net_t *np, word32 av,$/;"	f	signature:(struct net_t *np, word32 av, word32 bv, int32 schd_wire)
__schedule_1caev	./v_sim.c	/^extern void __schedule_1caev(struct conta_t *cap, word64 cadel, word64 schtim,$/;"	f	signature:(struct conta_t *cap, word64 cadel, word64 schtim, word32 *rhs_wp)
__schedule_1wev	./v_ex3.c	/^extern void __schedule_1wev(struct net_t *np, int32 bi, void *enterptr,$/;"	f	signature:(struct net_t *np, int32 bi, void *enterptr, word64 ndel, word64 schtim, word32 newval, struct tev_t **itevp, int32 tr_decay)
__schop	./v_ms.c	/^extern char *__schop(char *s1, char *s2)$/;"	f	signature:(char *s1, char *s2)
__scope_idp	./cvc.c	/^t_midat *__scope_idp;     \/* from $scope itree place *\/$/;"	v
__scope_tskp	./cvc.c	/^struct task_t *__scope_tskp; \/* from $scope task if present *\/ $/;"	v	typeref:struct:task_t
__sdf_active	./cvc.c	/^int32 __sdf_active;    \/* T => annotating SDF - for PLI erro code  *\/$/;"	v
__sdf_cntxt_itp	./v_sdf.c	/^static struct itree_t *__sdf_cntxt_itp;$/;"	v	typeref:struct:itree_t	file:
__sdf_date	./v_sdf.c	/^static char *__sdf_date; $/;"	v	file:
__sdf_delp	./v_sdf.c	/^static struct t_vpi_delay *__sdf_delp;$/;"	v	typeref:struct:t_vpi_delay	file:
__sdf_delp2	./v_sdf.c	/^static struct t_vpi_delay *__sdf_delp2;$/;"	v	typeref:struct:t_vpi_delay	file:
__sdf_design	./v_sdf.c	/^static char *__sdf_design;$/;"	v	file:
__sdf_during_sim	./cvc.c	/^int32 __sdf_during_sim;\/* T => can't compile SDF file before sim *\/$/;"	v
__sdf_log_fnam	./v_sdf.c	/^static char *__sdf_log_fnam;   \/* name of SDF log file *\/$/;"	v	file:
__sdf_log_s	./v_sdf.c	/^static FILE *__sdf_log_s;      \/* and stream *\/ $/;"	v	file:
__sdf_mdp	./cvc.c	/^struct mod_t *__sdf_mdp; \/* special sdf context mod *\/$/;"	v	typeref:struct:mod_t
__sdf_mintypmax_sel	./cvc.c	/^int32 __sdf_mintypmax_sel; \/* min:nom_max over-ride for $sdf_annotate *\/$/;"	v
__sdf_nd_tscale	./v_sdf.c	/^static int32 __sdf_nd_tscale;    \/* T => SDF file timescale different *\/$/;"	v	file:
__sdf_no_errs	./cvc.c	/^int32 __sdf_no_errs;   \/* T => don't print any SDF error msgs *\/$/;"	v
__sdf_no_warns	./cvc.c	/^int32 __sdf_no_warns;  \/* T => don't print any SDF warning msgs *\/$/;"	v
__sdf_none_str	./v_sdf.c	/^static char __sdf_none_str[20];$/;"	v	file:
__sdf_opt_log_fnam	./cvc.c	/^char *__sdf_opt_log_fnam; \/* sdf log file if set by cmd arg *\/$/;"	v
__sdf_opt_log_s	./cvc.c	/^FILE *__sdf_opt_log_s; \/* and open file ptr *\/$/;"	v
__sdf_process	./v_sdf.c	/^static char *__sdf_process;$/;"	v	file:
__sdf_program	./v_sdf.c	/^static char *__sdf_program;$/;"	v	file:
__sdf_progversion	./v_sdf.c	/^static char *__sdf_progversion;$/;"	v	file:
__sdf_s	./cvc.c	/^FILE *__sdf_s;         \/* current SDF back annotate file\/stream *\/$/;"	v
__sdf_sav_enum	./cvc.c	/^int32 __sdf_sav_enum;  \/* saved error num. for annotate inhibit *\/$/;"	v
__sdf_sav_log_s	./v_sdf.c	/^static FILE *__sdf_sav_log_s;  \/* just need to save normal log file *\/  $/;"	v	file:
__sdf_sav_maxerrs	./cvc.c	/^int32 __sdf_sav_maxerrs; \/* saved max errors so won't stop *\/$/;"	v
__sdf_star_val	./v_sdf.c	/^static char __sdf_star_val[4]; \/* special " * " string for all inst. star *\/ $/;"	v	file:
__sdf_temp	./v_sdf.c	/^static double __sdf_temp;$/;"	v	file:
__sdf_timescale	./v_sdf.c	/^static int32 __sdf_timescale;    \/* this is internal pos. time unit exp *\/    $/;"	v	file:
__sdf_tokval	./v_sdf.c	/^static int32 __sdf_tokval;$/;"	v	file:
__sdf_ts_units	./v_sdf.c	/^static int32 __sdf_ts_units;     \/* unit difference for SDF TIMESCALE *\/$/;"	v	file:
__sdf_varnam	./v_sdf.c	/^static char __sdf_varnam[IDLEN];$/;"	v	file:
__sdf_vendor	./v_sdf.c	/^static char *__sdf_vendor;$/;"	v	file:
__sdf_verbose	./cvc.c	/^int32 __sdf_verbose;   \/* T => emit msgs for SDF annotated delays *\/$/;"	v
__sdf_version	./v_sdf.c	/^static char *__sdf_version;$/;"	v	file:
__sdf_voltage	./v_sdf.c	/^static double __sdf_voltage;$/;"	v	file:
__sdf_work_str	./v_sdf.c	/^static char __sdf_work_str[IDLEN];$/;"	v	file:
__sdflst	./cvc.c	/^struct sdfnamlst_t *__sdflst; \/* list of sdf annotate option files *\/$/;"	v	typeref:struct:sdfnamlst_t
__sdftelst_end	./cvc.c	/^struct sdf_tskenlst_t *__sdftelst_end;\/* end of list for src order *\/$/;"	v	typeref:struct:sdf_tskenlst_t
__sdftskenlst	./cvc.c	/^struct sdf_tskenlst_t *__sdftskenlst; \/* sdf annotate tsks in src lst *\/$/;"	v	typeref:struct:sdf_tskenlst_t
__se_reset_to_untgled	./cvc.c	/^int32 __se_reset_to_untgled; \/* T => slot end set recorded nets untgl *\/$/;"	v
__searched_count	./v_src2.c	/^static int32 __searched_count[HASHTABSIZ];$/;"	v	file:
__seed	./cvc.c	/^int32 __seed;          \/* SJM 01\/27\/04 - glb seed needed if no arg *\/$/;"	v
__seen_pc_ppulse	./v_sdf.c	/^static int32 __seen_pc_ppulse;   \/* same for path pulse percent *\/$/;"	v	file:
__seen_ppulse	./v_sdf.c	/^static int32 __seen_ppulse;      \/* per SDF file, 1 warn if path pulse used *\/$/;"	v	file:
__seen_rlim_delval	./v_sdf.c	/^static int32 __seen_rlim_delval; \/* 1 warn if reject limit in delval *\/ $/;"	v	file:
__seen_xlim_delval	./v_sdf.c	/^static int32 __seen_xlim_delval; \/* 1 warn if x (error) limit in delval *\/ $/;"	v	file:
__sentinel	./cvc.c	/^struct tqnode_t __sentinel;     \/* empty node holder *\/$/;"	v	typeref:struct:tqnode_t
__set_0tab_errval	./v_src2.c	/^extern void __set_0tab_errval(void)$/;"	f	signature:(void)
__set_1inst_pound_params	./v_genfx.c	/^extern void __set_1inst_pound_params(struct itree_t *itp, int32 is_giarr) $/;"	f	signature:(struct itree_t *itp, int32 is_giarr)
__set_1net_srep	./v_prp2.c	/^extern void __set_1net_srep(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__set_1var_net_ofs	./v_prp2.c	/^extern void __set_1var_net_ofs(struct net_t *np, struct mod_t *mdp)$/;"	f	signature:(struct net_t *np, struct mod_t *mdp)
__set_all_mods_1inst_storage_offsets	./v_prp2.c	/^extern void __set_all_mods_1inst_storage_offsets(void)$/;"	f	signature:(void)
__set_all_tgl_lastvals_tox	./v_prp2.c	/^extern void __set_all_tgl_lastvals_tox(void)$/;"	f	signature:(void)
__set_all_toggles_off	./v_prp2.c	/^extern void __set_all_toggles_off(void)$/;"	f	signature:(void)
__set_amode	./v_bbgen3.c	/^extern void __set_amode(struct amode_t *amp, va_list va)$/;"	f	signature:(struct amode_t *amp, va_list va)
__set_back_edge	./v_bbgen3.c	/^extern void __set_back_edge(struct bblk_t *bbp)$/;"	f	signature:(struct bblk_t *bbp)
__set_binxresult	./v_ex2.c	/^extern int32 __set_binxresult(word32 *resap, word32 *resbp, word32 *op1bp,$/;"	f	signature:(word32 *resap, word32 *resbp, word32 *op1bp, word32 *op2bp, int32 opbits)
__set_dbentry_listline	./v_dbg2.c	/^extern void __set_dbentry_listline(void)$/;"	f	signature:(void)
__set_drvr_bits	./v_fx2.c	/^extern void __set_drvr_bits(void)$/;"	f	signature:(void)
__set_expr_fold_value_stlst	./v_genfx.c	/^extern void __set_expr_fold_value_stlst(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__set_expr_onrhs	./v_fx2.c	/^extern void __set_expr_onrhs(struct expr_t *ndp)  $/;"	f	signature:(struct expr_t *ndp)
__set_gchg_func	./v_sim.c	/^extern void __set_gchg_func(struct gate_t *gp)$/;"	f	signature:(struct gate_t *gp)
__set_lhswidth	./v_fx3.c	/^extern void __set_lhswidth(struct expr_t *lhsx)$/;"	f	signature:(struct expr_t *lhsx)
__set_mark_mdprt_flags	./v_cvcrt.c	/^extern int32 __set_mark_mdprt_flags(struct net_pin_t *npp, int32 *has_all_nchg, $/;"	f	signature:(struct net_pin_t *npp, int32 *has_all_nchg, int32 *has_some_nchg, int32 *has_dmpv, int32 *has_dmpp, int32 *has_empty, int32 *has_all_bsel, int32 *all_bsel_1w, int32 *all_empty, int32 *has_toggle)
__set_mod_ent_bits	./v_cvcrt.c	/^extern void __set_mod_ent_bits(struct mod_t *mdp)$/;"	f	signature:(struct mod_t *mdp)
__set_mpp_aoff_routines	./v_ex4.c	/^extern void __set_mpp_aoff_routines(void)$/;"	f	signature:(void)
__set_mpp_assign_routines	./v_ex4.c	/^extern void __set_mpp_assign_routines(void)$/;"	f	signature:(void)
__set_net_srep_types	./v_prp2.c	/^extern void __set_net_srep_types(void)$/;"	f	signature:(void)
__set_numval	./v_src2.c	/^extern void __set_numval(struct expr_t *ndp, word32 av, word32 bv, int32 blen)$/;"	f	signature:(struct expr_t *ndp, word32 av, word32 bv, int32 blen)
__set_opempty	./v_src2.c	/^extern void __set_opempty(int32 ndi)$/;"	f	signature:(int32 ndi)
__set_optimtab_bits	./v_prp2.c	/^extern void __set_optimtab_bits(void)$/;"	f	signature:(void)
__set_pb_mpp_assign_routines	./v_ex4.c	/^extern void __set_pb_mpp_assign_routines(void)$/;"	f	signature:(void)
__set_poundparams	./v_genfx.c	/^extern void __set_poundparams(void)$/;"	f	signature:(void)
__set_pre_idp_nchgaction_bits	./v_prp2.c	/^extern void __set_pre_idp_nchgaction_bits(void)$/;"	f	signature:(void)
__set_reg_widths	./v_src.c	/^extern int32 __set_reg_widths(word32 wtyp, struct expr_t **x1,$/;"	f	signature:(word32 wtyp, struct expr_t **x1, struct expr_t **x2)
__set_rhswidth	./v_fx3.c	/^extern void __set_rhswidth(struct expr_t *rhsx, int32 cwid)$/;"	f	signature:(struct expr_t *rhsx, int32 cwid)
__set_scopchg_listline	./v_dbg2.c	/^extern void __set_scopchg_listline(void)$/;"	f	signature:(void)
__set_vpi_time	./v_vpi3.c	/^extern void __set_vpi_time(struct t_vpi_time *vpitimp, word64 *timp,$/;"	f	signature:(struct t_vpi_time *vpitimp, word64 *timp, int32 timtyp, struct mod_t *mdp)
__set_widconta_new_gateval	./v_bbgen3.c	/^extern void __set_widconta_new_gateval(int32 mastrhs_ti)$/;"	f	signature:(int32 mastrhs_ti)
__set_xtab_errval	./v_src2.c	/^extern void __set_xtab_errval(void)$/;"	f	signature:(void)
__setchk_all_fifo	./v_prp2.c	/^extern void __setchk_all_fifo(void)$/;"	f	signature:(void)
__setchk_mpwidths	./v_fx2.c	/^extern void __setchk_mpwidths(void)$/;"	f	signature:(void)
__setdel_call_misctf_enterp	./cvc.c	/^void *__setdel_call_misctf_enterp;  \/* set del pli event *\/$/;"	v
__setstr_objdir_path	./v_dpi.c	/^extern char *__setstr_objdir_path(void)$/;"	f	signature:(void)
__setup_1file_dmpports	./v_ex4.c	/^extern void __setup_1file_dmpports(struct dp_fildesc_t *fdescp)$/;"	f	signature:(struct dp_fildesc_t *fdescp)
__setup_and_exec_const_func	./v_prp.c	/^extern struct xstk_t *__setup_and_exec_const_func(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__setup_aslinfo_map	./v_cvcms.c	/^extern void __setup_aslinfo_map(void)$/;"	f	signature:(void)
__setup_contab	./v_src2.c	/^extern void __setup_contab(void)$/;"	f	signature:(void)
__setup_dbmalloc	./cvc.c	/^extern void __setup_dbmalloc(void)$/;"	f	signature:(void)
__setup_dmpvars	./v_ex4.c	/^extern void __setup_dmpvars()$/;"	f
__setup_dummy_events	./v_cvcrt.c	/^extern void __setup_dummy_events(void)$/;"	f	signature:(void)
__setup_mipd	./v_prp2.c	/^extern void __setup_mipd(struct mipd_t *mipdp, struct net_t *np, int32 ninsts)$/;"	f	signature:(struct mipd_t *mipdp, struct net_t *np, int32 ninsts)
__setup_tsk_thread	./v_ex.c	/^extern struct thread_t *__setup_tsk_thread(struct task_t *tskp)$/;"	f	signature:(struct task_t *tskp)
__setup_veriusertf_systfs	./v_tf.c	/^extern void __setup_veriusertf_systfs(void)$/;"	f	signature:(void)
__setup_xprop_not_eligible_file	./v_xprop.c	/^extern void __setup_xprop_not_eligible_file(struct optlst_t *olp)$/;"	f	signature:(struct optlst_t *olp)
__setup_xprop_trace_file	./v_xprop.c	/^extern void __setup_xprop_trace_file(int32 xprop_type)$/;"	f	signature:(int32 xprop_type)
__sfnam_ind	./cvc.c	/^int32 __sfnam_ind;     \/* global file index for current stmt. *\/$/;"	v
__sgferr	./v_ms.c	/^extern void __sgferr(int32 id_num, char *s, ...)$/;"	f	signature:(int32 id_num, char *s, ...)
__sgfinform	./v_ms.c	/^extern void __sgfinform(int32 id_num, char *s, ...)$/;"	f	signature:(int32 id_num, char *s, ...)
__sgfterr	./v_ms.c	/^extern void __sgfterr(int32 id_num, char *s, ...)$/;"	f	signature:(int32 id_num, char *s, ...)
__sgfwarn	./v_ms.c	/^extern void __sgfwarn(int32 id_num, char *s, ...)$/;"	f	signature:(int32 id_num, char *s, ...)
__sgn_ldivmod	./v_ex2.c	/^extern void __sgn_ldivmod(word32 *res, word32 *u, word32 *v, int32 blen,$/;"	f	signature:(word32 *res, word32 *u, word32 *v, int32 blen, int32 nd_quot)
__sgn_lmult	./v_ex2.c	/^extern void __sgn_lmult(word32 *res, word32 *u, word32 *v, int32 blen)$/;"	f	signature:(word32 *res, word32 *u, word32 *v, int32 blen)
__sgn_lpow	./v_ex2.c	/^extern int32 __sgn_lpow(word32 *res, word32 *op1, word32 *op2, int32 blen)$/;"	f	signature:(word32 *res, word32 *op1, word32 *op2, int32 blen)
__sgn_xtnd_widen	./v_ex3.c	/^extern void __sgn_xtnd_widen(struct xstk_t *xsp, int32 nblen)$/;"	f	signature:(struct xstk_t *xsp, int32 nblen)
__sgn_xtnd_wrd	./v_ex3.c	/^extern void __sgn_xtnd_wrd(struct xstk_t *xsp, int32 nblen)$/;"	f	signature:(struct xstk_t *xsp, int32 nblen)
__shadow_veriusertfs	./cvc.c	/^struct t_tfcell *__shadow_veriusertfs; \/* internal copy of table *\/$/;"	v	typeref:struct:t_tfcell
__shift_svals	./v_aslib.c	/^const word32 __shift_svals[16] = {0,1,2,3,0,0,0,0,3,3,3,3,3,3,3,3};$/;"	v
__shift_svals	./v_aslib.s	/^__shift_svals:$/;"	l
__show_allvars	./v_ex4.c	/^extern void __show_allvars(void)$/;"	f	signature:(void)
__show_asm	./cvc.c	/^int32  __show_asm;     \/* show assmebly files *\/     $/;"	v
__show_cancel_e	./cvc.c	/^int32 __show_cancel_e; \/* T => chg val to x on pulse cancelled event *\/$/;"	v
__showe_onevent	./cvc.c	/^int32 __showe_onevent; \/* T => if showing cancel e, drive x on event *\/$/;"	v
__sim_alloc_newxnd	./v_src2.c	/^extern struct expr_t *__sim_alloc_newxnd(void)$/;"	f	signature:(void)
__sim_copy_expr	./v_fx.c	/^extern struct expr_t *__sim_copy_expr(struct expr_t *src)$/;"	f	signature:(struct expr_t *src)
__sim_notbegun_err	./v_vpi3.c	/^extern void __sim_notbegun_err(char *rnam)$/;"	f	signature:(char *rnam)
__sim_sigint_handler	./v_dbg.c	/^extern void __sim_sigint_handler(void)$/;"	f	signature:(void)
__simtime	./cvc.c	/^word64 __simtime;      \/* current simulaton time (make 64 bits ?) *\/$/;"	v
__single_step	./cvc.c	/^int32 __single_step;   \/* T => need to single step *\/$/;"	v
__siz_bind_comps	./cvc.c	/^int32 __siz_bind_comps;\/* current malloc size of table *\/$/;"	v
__siz_in_fils	./cvc.c	/^int32 __siz_in_fils;   \/* current size of input files *\/$/;"	v
__siz_opt_npptab	./cvc.c	/^int32 __siz_opt_npptab;\/* current allocated size - just grows *\/$/;"	v
__siz_tgl_lst	./cvc.c	/^int32 __siz_tgl_lst;     \/* current alloc size of list *\/$/;"	v
__siz_tgl_rtpthnam	./cvc.c	/^int32 __siz_tgl_rtpthnam;\/* and alloc size *\/$/;"	v
__siz_tgltabs	./cvc.c	/^int32 __siz_tgltabs;     \/* alloc size of tgl cnt tabs *\/$/;"	v
__siz_xldlvtxtab	./cvc.c	/^int32 __siz_xldlvtxtab;\/* current size of table *\/$/;"	v
__sizchg_widen	./v_ex3.c	/^extern void __sizchg_widen(struct xstk_t *xsp, int32 nblen)$/;"	f	signature:(struct xstk_t *xsp, int32 nblen)
__sizchgxs	./v_ex3.c	/^extern void __sizchgxs(struct xstk_t *xsp, int32 nblen)$/;"	f	signature:(struct xstk_t *xsp, int32 nblen)
__size_prp_mstmts	./cvc.c	/^int32 __size_prp_mstmts;\/* alloc size of tmp prp mstmt tab *\/$/;"	v
__size_systftab	./cvc.c	/^int32 __size_systftab; \/* current size of systf data rec. table *\/$/;"	v
__size_tevtab	./cvc.c	/^int32 __size_tevtab;   \/* num tev's allocated in tev tab *\/ $/;"	v
__size_wrkevtab	./cvc.c	/^int32 __size_wrkevtab; \/* and current allocated size *\/ $/;"	v
__skipover_line	./v_ms.c	/^extern void __skipover_line(void)$/;"	f	signature:(void)
__slin_cnt	./cvc.c	/^int32 __slin_cnt;      \/* global line no. for currently check stmt *\/$/;"	v
__slotend_action	./cvc.c	/^word32 __slotend_action; \/* word32 of 1 bit switches set for action *\/$/;"	v
__sort_chan_ndx	./cvc.c	/^int32 *__sort_chan_ndx;\/* for bid comb, selected\/sorted chantab ndx *\/$/;"	v
__spec_vskipto2_any	./v_ms.c	/^extern int32 __spec_vskipto2_any(int32 targ1, int32 targ2)$/;"	f	signature:(int32 targ1, int32 targ2)
__spec_vskipto3_any	./v_ms.c	/^extern int32 __spec_vskipto3_any(int32 targ1, int32 targ2, int32 targ3)$/;"	f	signature:(int32 targ1, int32 targ2, int32 targ3)
__spec_vskipto_any	./v_ms.c	/^extern int32 __spec_vskipto_any(int32 targ1)$/;"	f	signature:(int32 targ1)
__spill_count	./cvc.c	/^int32 __spill_count;           \/* spill insn count *\/$/;"	v
__spill_nonw_count	./cvc.c	/^int32 __spill_nonw_count;      \/* spill non-wide insn count *\/$/;"	v
__splitting	./cvc.c	/^int32 __splitting;     \/* T => in process of splitting module *\/$/;"	v
__src_rd_cnv_stk_fromreal_toreg32	./v_cnv.c	/^extern void __src_rd_cnv_stk_fromreal_toreg32(struct xstk_t *xsp)$/;"	f	signature:(struct xstk_t *xsp)
__src_rd_cnv_stk_fromreg_toreal	./v_cnv.c	/^extern void __src_rd_cnv_stk_fromreg_toreal(struct xstk_t *xsp, int32 src_signed)$/;"	f	signature:(struct xstk_t *xsp, int32 src_signed)
__srm_stargi	./cvc.c	/^int32 __srm_stargi;    \/* current string position number *\/$/;"	v
__srm_strp	./cvc.c	/^char *__srm_strp;      \/* char. pos. in sreadmem string *\/$/;"	v
__srm_strp_beg	./cvc.c	/^char *__srm_strp_beg;  \/* work alloced location for sreadmem string *\/$/;"	v
__srm_strp_len	./cvc.c	/^int32 __srm_strp_len;  \/* alloced length *\/$/;"	v
__srm_xp	./cvc.c	/^struct expr_t *__srm_xp; \/* current string 'file' for sreadmem *\/$/;"	v	typeref:struct:expr_t
__st_arr_val	./v_ex3.c	/^extern void __st_arr_val(struct net_t *np, struct expr_t *ndx1, int32 arri, $/;"	f	signature:(struct net_t *np, struct expr_t *ndx1, int32 arri, word32 *rgap, word32 *rgbp, int32 rhswid)
__st_bit	./v_ex3.c	/^extern void __st_bit(struct net_t *np, int32 biti, word32 av, word32 bv)$/;"	f	signature:(struct net_t *np, int32 biti, word32 av, word32 bv)
__st_idp_val	./v_ex3.c	/^extern void __st_idp_val(word32 *wp, int32 vblen, word32 *rgap, word32 *rgbp)$/;"	f	signature:(word32 *wp, int32 vblen, word32 *rgap, word32 *rgbp)
__st_insn	./v_bbgen3.c	/^extern void __st_insn(int32 opcod, int32 src_amode, ...)$/;"	f	signature:(int32 opcod, int32 src_amode, ...)
__st_loop_break	./cvc.c	/^struct st_t *__st_loop_break;    \/* prep loop break statement *\/$/;"	v	typeref:struct:st_t
__st_loop_continue	./cvc.c	/^struct st_t *__st_loop_continue; \/* prep loop continue statement *\/$/;"	v	typeref:struct:st_t
__st_perinst_val	./v_ex3.c	/^extern void __st_perinst_val(union pck_u pckv, int32 vblen, word32 *rgap,$/;"	f	signature:(union pck_u pckv, int32 vblen, word32 *rgap, word32 *rgbp)
__st_regab_tostr	./v_cnv.c	/^extern char *__st_regab_tostr(char *s, byte *sbp, int32 blen)$/;"	f	signature:(char *s, byte *sbp, int32 blen)
__st_standval	./v_ex4.c	/^extern void __st_standval(byte *sbp, struct xstk_t *xsp, byte new_st)$/;"	f	signature:(byte *sbp, struct xstk_t *xsp, byte new_st)
__st_string_val	./v_ex3.c	/^extern void __st_string_val(struct net_t *np, word32 *rgap, int32 slen)$/;"	f	signature:(struct net_t *np, word32 *rgap, int32 slen)
__st_tracing	./cvc.c	/^int32 __st_tracing;    \/* T => trace statement execution *\/$/;"	v
__st_val	./v_ex3.c	/^extern void __st_val(struct net_t *np, word32 *rgap, word32 *rgbp, int32 blen)$/;"	f	signature:(struct net_t *np, word32 *rgap, word32 *rgbp, int32 blen)
__st_vval_isallzs	./v_cnv.c	/^extern int32 __st_vval_isallzs(byte *sbp, int32 blen)$/;"	f	signature:(byte *sbp, int32 blen)
__start_bblk	./v_bbgen.c	/^extern void __start_bblk(struct bblk_t *bbp)$/;"	f	signature:(struct bblk_t *bbp)
__start_chkchain	./cvc.c	/^extern void __start_chkchain(void)$/;"	f	signature:(void)
__start_fmonitor	./v_ex2.c	/^extern void __start_fmonitor(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__start_monitor	./v_ex2.c	/^extern void __start_monitor(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__start_mstime	./cvc.c	/^time_t __start_mstime; \/* start millisecond part *\/$/;"	v
__start_sp	./cvc.c	/^char *__start_sp, *__end_sp;\/* pointer for "big" memory allocator *\/$/;"	v
__start_time	./cvc.c	/^time_t __start_time;   \/* start wall clock times in secs. *\/$/;"	v
__step_from_thread	./cvc.c	/^int32 __step_from_thread;\/* T step from non thread loc. (^c?) *\/$/;"	v
__step_ifi	./cvc.c	/^int32 __step_ifi;      \/* and file *\/ $/;"	v
__step_lini	./cvc.c	/^int32 __step_lini;     \/* line stepping from (must step to next) *\/  $/;"	v
__step_match_idp	./cvc.c	/^t_midat *__step_match_idp; \/* for istep, exec itp must match *\/$/;"	v
__step_rep_cnt	./cvc.c	/^int32 __step_rep_cnt;  \/* number of times to repeat step *\/$/;"	v
__stfilter_dce_chg	./v_sim.c	/^extern int32 __stfilter_dce_chg(struct net_t *np, struct dcevnt_t *dcep,$/;"	f	signature:(struct net_t *np, struct dcevnt_t *dcep, byte *dcesbp, word32 *oval, word32 *nval)
__still_comp_err	./v_vpi3.c	/^extern void __still_comp_err(char *rnam)$/;"	f	signature:(char *rnam)
__stload_mdrwire	./v_ex4.c	/^extern struct xstk_t *__stload_mdrwire(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__stmt_coverage	./cvc.c	/^int32 __stmt_coverage;           \/* T => report stmt coverage *\/$/;"	v
__stmt_coverage_file_name	./cvc.c	/^char *__stmt_coverage_file_name; \/* name event coverage file *\/$/;"	v
__stmt_coverage_tasks	./cvc.c	/^int32 __stmt_coverage_tasks;     \/* T => report tasks stmt coverage *\/$/;"	v
__stmt_covered	./cvc.c	/^word32 *__stmt_covered;          \/* marked stmts array *\/$/;"	v
__stmt_dup_tn_tree	./v_bbgen.c	/^struct avlhd_t *__stmt_dup_tn_tree;$/;"	v	typeref:struct:avlhd_t
__stmt_id_ndx	./cvc.c	/^int32 __stmt_id_ndx;    \/* design wide statement index *\/$/;"	v
__stmt_suspend	./cvc.c	/^word32 __stmt_suspend;  \/* set when behavioral code suspends *\/$/;"	v
__stop_before_sim	./cvc.c	/^int32 __stop_before_sim; \/* T => enter interactive before sim *\/$/;"	v
__str_do_disp	./v_cnv.c	/^extern void __str_do_disp(struct expr_t *axp, int32 dflt_fmt)$/;"	f	signature:(struct expr_t *axp, int32 dflt_fmt)
__strab2_tostr	./v_cnv.c	/^extern char *__strab2_tostr(char *s, word32 *ap, int32 blen, int32 nd_quotes,$/;"	f	signature:(char *s, word32 *ap, int32 blen, int32 nd_quotes, int32 space_0)
__strab_tostr	./v_cnv.c	/^extern char *__strab_tostr(char *s, word32 *ap, int32 blen, int32 nd_quotes,$/;"	f	signature:(char *s, word32 *ap, int32 blen, int32 nd_quotes, int32 space_0)
__strb_freelst	./cvc.c	/^struct strblst_t *__strb_freelst; \/* head of free strobe elements *\/$/;"	v	typeref:struct:strblst_t
__stren_exec_ca_concat	./v_ex3.c	/^extern void __stren_exec_ca_concat(struct expr_t *xlhs, byte *sbp,$/;"	f	signature:(struct expr_t *xlhs, byte *sbp, int32 must_schedule)
__stren_map_tab	./v_ex3.c	/^const byte __stren_map_tab[] = {$/;"	v
__stren_schedorassign_unknown_bit	./v_ex3.c	/^extern void __stren_schedorassign_unknown_bit(struct net_t *np, word32 bval,$/;"	f	signature:(struct net_t *np, word32 bval, int32 schd_wire)
__strenexpr_tostr	./v_cnv.c	/^extern char *__strenexpr_tostr(char *s, struct expr_t *xp)$/;"	f	signature:(char *s, struct expr_t *xp)
__strenprop_chg	./cvc.c	/^int32 __strenprop_chg; \/* during propagate pass at least one chged *\/$/;"	v
__strenwiden_sizchg	./v_ex3.c	/^extern void __strenwiden_sizchg(struct xstk_t *xsp, int32 nblen)$/;"	f	signature:(struct xstk_t *xsp, int32 nblen)
__strobe_end	./cvc.c	/^struct strblst_t *__strobe_end; \/* end of strobe display list *\/$/;"	v	typeref:struct:strblst_t
__strobe_hdr	./cvc.c	/^struct strblst_t *__strobe_hdr; \/* list strobe display at slot end *\/$/;"	v	typeref:struct:strblst_t
__strtok_wid	./cvc.c	/^int32 __strtok_wid;    \/* current size of string token *\/    $/;"	v
__strtoken	./cvc.c	/^char *__strtoken;      \/* growable token to hold string *\/$/;"	v
__stvtxtab	./cvc.c	/^struct vtxlst_t *__stvtxtab[8]; \/* per stren value vertex list *\/ $/;"	v	typeref:struct:vtxlst_t
__stvtxtabend	./cvc.c	/^struct vtxlst_t *__stvtxtabend[8]; \/* and ptr to last el on each *\/$/;"	v	typeref:struct:vtxlst_t
__suspended_idp	./cvc.c	/^t_midat *__suspended_idp; \/* cur inst ptr before suspend *\/$/;"	v
__suspended_thd	./cvc.c	/^struct thread_t *__suspended_thd; \/* cur thread before suspend *\/$/;"	v	typeref:struct:thread_t
__sv_lib_endp	./cvc.c	/^struct sv_lib_t *__sv_lib_endp; \/* hdr of sv DPI lib paths *\/$/;"	v	typeref:struct:sv_lib_t
__sv_lib_hdrp	./cvc.c	/^struct sv_lib_t *__sv_lib_hdrp; \/* hdr of sv DPI lib paths *\/$/;"	v	typeref:struct:sv_lib_t
__sv_parse	./cvc.c	/^int32 __sv_parse; \/* T => parse system verilog keywords *\/$/;"	v
__switch_verbose	./cvc.c	/^int32 __switch_verbose;\/* T => emit msgs for switch\/tran chan build *\/$/;"	v
__sym_addprims	./cvc.c	/^extern void __sym_addprims(void)$/;"	f	signature:(void)
__sym_is_new	./cvc.c	/^int32 __sym_is_new;    \/* set when new symbol added *\/$/;"	v
__sync_call_misctf_enterp	./cvc.c	/^void *__sync_call_misctf_enterp;    \/* sync del pli event *\/$/;"	v
__syncto_class	./cvc.c	/^int32 __syncto_class;  \/* token class sync skipping halted at *\/$/;"	v
__sysfatal_msg	./v_ms.c	/^extern void __sysfatal_msg(char *s, ...)$/;"	f	signature:(char *s, ...)
__syssyms	./cvc.c	/^struct symtab_t *__syssyms;\/* global tab for system tasks and funcs *\/$/;"	v	typeref:struct:symtab_t
__systftab	./cvc.c	/^struct systftab_t *__systftab; \/* table of vpi_ systf records *\/$/;"	v	typeref:struct:systftab_t
__tail_gdap	./v_bbgen.c	/^struct gate_da_list_t *__tail_gdap; \/* tail date del assgn struct list *\/$/;"	v	typeref:struct:gate_da_list_t
__task_has_delay	./cvc.c	/^int32 __task_has_delay;\/* T => task call has del. needs thread *\/$/;"	v
__task_has_disable	./cvc.c	/^int32 __task_has_disable;\/* T => task call has disable needs thread *\/$/;"	v
__task_has_tskcall	./cvc.c	/^int32 __task_has_tskcall;\/* T => task calls other task (not name blk) *\/$/;"	v
__task_has_xmrcall	./cvc.c	/^int32 __task_has_xmrcall;\/* T => task has no reachable xmr task *\/$/;"	v
__tchk_num	./cvc.c	/^int32 __tchk_num;      \/* counter for unnamed paths *\/$/;"	v
__tcpendfreelst	./cvc.c	/^struct tc_pendlst_t *__tcpendfreelst; \/* free slot end changed tchks *\/$/;"	v	typeref:struct:tc_pendlst_t
__tcpendlst_end	./cvc.c	/^struct tc_pendlst_t *__tcpendlst_end; \/* end of pending *\/$/;"	v	typeref:struct:tc_pendlst_t
__tcpendlst_hdr	./cvc.c	/^struct tc_pendlst_t *__tcpendlst_hdr; \/* header of pending *\/ $/;"	v	typeref:struct:tc_pendlst_t
__tedpfreelst	./cvc.c	/^struct tedputp_t *__tedpfreelst; \/* tf_ putp rec free list header *\/$/;"	v	typeref:struct:tedputp_t
__teend_rosyncp	./cvc.c	/^struct tev_t *__teend_rosyncp; \/* end of slot end ro sync ev lst *\/ $/;"	v	typeref:struct:tev_t
__tefreelstp	./cvc.c	/^struct tev_t *__tefreelstp;\/* free list for events *\/$/;"	v	typeref:struct:tev_t
__tehdr_rosyncp	./cvc.c	/^struct tev_t *__tehdr_rosyncp; \/* hdr ndx of slot end ro sync ev lst *\/ $/;"	v	typeref:struct:tev_t
__teputvfreelst	./cvc.c	/^struct teputv_t *__teputvfreelst; \/* vpi_ put value free list hdr *\/ $/;"	v	typeref:struct:teputv_t
__tevdat_template	./v_aslib.c	/^struct tev_t __tevdat_template = {$/;"	v	typeref:struct:tev_t
__tevdat_template	./v_aslib.s	/^__tevdat_template:$/;"	l
__tevtab	./cvc.c	/^struct tev_t *__tevtab;\/* reallocable tab of events and free evs *\/$/;"	v	typeref:struct:tev_t
__tfcall_wrksytp	./cvc.c	/^struct symtab_t *__tfcall_wrksytp;\/* wrk tf tab for undecl xmr uprel *\/  $/;"	v	typeref:struct:symtab_t
__tfinst	./cvc.c	/^struct tfinst_t *__tfinst;\/* current tf_ inst loc. *\/$/;"	v	typeref:struct:tfinst_t
__tfmt_minfwid	./cvc.c	/^int32 __tfmt_minfwid;  \/* minimum field width for %t *\/$/;"	v
__tfmt_precunits	./cvc.c	/^word32 __tfmt_precunits;\/* %t number of prec. digits *\/$/;"	v
__tfmt_suf	./cvc.c	/^char *__tfmt_suf;      \/* suffix for %t *\/$/;"	v
__tfmt_units	./cvc.c	/^word32 __tfmt_units;   \/* %t output units (also interact. units) *\/$/;"	v
__tfrec	./cvc.c	/^struct tfrec_t *__tfrec;\/* current tf_ record *\/ $/;"	v	typeref:struct:tfrec_t
__tfrec_end	./cvc.c	/^struct tfrec_t *__tfrec_end; \/* last el of design wide tfrec list *\/ $/;"	v	typeref:struct:tfrec_t
__tfrec_hdr	./cvc.c	/^struct tfrec_t *__tfrec_hdr; \/* header of design wide tfrec list *\/ $/;"	v	typeref:struct:tfrec_t
__tgl01tab	./cvc.c	/^int32 *__tgl01tab;       \/* int (0\/1 for now) tab of 0->1 toggle cnt *\/$/;"	v
__tgl10tab	./cvc.c	/^int32 *__tgl10tab;       \/* and 1->0 tab *\/ $/;"	v
__tgl_modnam	./cvc.c	/^char *__tgl_modnam;      \/* name of module for tgl net line *\/$/;"	v
__tgl_mods_ndx	./v_cvr.c	/^static struct mod_t **__tgl_mods_ndx;$/;"	v	typeref:struct:mod_t	file:
__tgl_num_mods	./v_cvr.c	/^static int32 __tgl_num_mods;$/;"	v	file:
__tgl_r1	./cvc.c	/^int32 __tgl_r1;          \/* first tgldat line range *\/$/;"	v
__tgl_r2	./cvc.c	/^int32 __tgl_r2;          \/* 2nd tgldat line range *\/$/;"	v
__tgl_record_on	./cvc.c	/^int32 __tgl_record_on;             \/* tgl record (add to lst) now on *\/$/;"	v
__tgl_rtpthnam	./cvc.c	/^char *__tgl_rtpthnam;    \/* for init from .tgldat line rooted path *\/ $/;"	v
__tgl_verbose	./cvc.c	/^int32 __tgl_verbose;   \/* T => emit tgldat non match warning msgs *\/$/;"	v
__tglbits01	./cvc.c	/^char *__tglbits01;       \/* for init from .tgldat file 01 list *\/$/;"	v
__tglbits10	./cvc.c	/^char *__tglbits10;       \/* 10 list *\/$/;"	v
__tgldat_infils_lst_end	./cvc.c	/^struct tgldat_in_lst_t *__tgldat_infils_lst_end; \/* and tail *\/$/;"	v	typeref:struct:tgldat_in_lst_t
__tgldat_infils_lst_hd	./cvc.c	/^struct tgldat_in_lst_t *__tgldat_infils_lst_hd; \/* init tgldat hd *\/$/;"	v	typeref:struct:tgldat_in_lst_t
__tgldat_writer_date	./cvc.c	/^char __tgldat_writer_date[RECLEN]; \/* id info from input .tgldat file *\/$/;"	v
__tgldat_writer_vers	./cvc.c	/^char __tgldat_writer_vers[RECLEN]; \/* id info from input .tgldat file *\/$/;"	v
__thd_freelst	./cvc.c	/^struct thread_t *__thd_freelst; \/* free list of threads *\/$/;"	v	typeref:struct:thread_t
__thdjmp_nxti	./v_bbgen.c	/^int32 __thdjmp_nxti;$/;"	v
__thdjmp_ret_tab	./v_bbgen.c	/^char **__thdjmp_ret_tab;  \/* jump thru current thd dynamic lnk labels *\/$/;"	v
__thdjmp_siz	./v_bbgen.c	/^int32 __thdjmp_siz;    \/* growing tab size and next to use *\/$/;"	v
__thrd_done_cleanup	./v_ex.c	/^extern void __thrd_done_cleanup(struct thread_t *parthp)$/;"	f	signature:(struct thread_t *parthp)
__thrd_done_cleanup_auto	./v_ex.c	/^extern void __thrd_done_cleanup_auto(struct thread_t *parthp)$/;"	f	signature:(struct thread_t *parthp)
__thread_attr	./cvc.c	/^pthread_attr_t __thread_attr; \/* thread attributes *\/$/;"	v
__tilde_creat	./v_ms.c	/^extern int32 __tilde_creat(char *pthnam)$/;"	f	signature:(char *pthnam)
__tilde_fopen	./v_ms.c	/^extern FILE *__tilde_fopen(char *pthnam, char *opmod)$/;"	f	signature:(char *pthnam, char *opmod)
__tilde_open	./v_ms.c	/^extern int32 __tilde_open(char *pthnam, int32 opmask)$/;"	f	signature:(char *pthnam, int32 opmask)
__tim_zero	./cvc.c	/^word64 __tim_zero;     \/* place for time of constant 0 *\/$/;"	v
__time_hash	./cvc.c	/^struct heap_t *__time_hash[THASH_SIZE];$/;"	v	typeref:struct:heap_t
__times_svals	./v_aslib.c	/^const word32 __times_svals[16] = {0,0,3,3,0,1,3,3,3,3,3,3,3,3,3,3};$/;"	v
__times_svals	./v_aslib.s	/^__times_svals:$/;"	l
__timstr_mult	./cvc.c	/^word64 __timstr_mult;  \/* multiplier if needed *\/$/;"	v
__timstr_unitsuf	./cvc.c	/^char __timstr_unitsuf[4];\/* to_timstr units suffix if needed *\/$/;"	v
__tmp_avl_hd	./v_cvcrt.c	/^struct avlnode_t *__tmp_avl_hd;  \/* tmp for balance avl tree *\/$/;"	v	typeref:struct:avlnode_t
__tmp_head	./cvc.c	/^struct tnode_t *__tmp_head;$/;"	v	typeref:struct:tnode_t
__tmp_is_2state	./v_bbgen.c	/^extern int32 __tmp_is_2state(int32 ti)$/;"	f	signature:(int32 ti)
__tmpip_freelst	./cvc.c	/^struct inst_t *__tmpip_freelst; \/* free list of wrk ips *\/$/;"	v	typeref:struct:inst_t
__tmpitp_freelst	./cvc.c	/^struct itree_t *__tmpitp_freelst; \/* free list of wrk itps *\/$/;"	v	typeref:struct:itree_t
__tn_dup_node_free	./v_bbgen3.c	/^extern void __tn_dup_node_free(void *tndup)$/;"	f	signature:(void *tndup)
__tn_to_assgnloc	./v_cvcms.c	/^extern char *__tn_to_assgnloc(char *s, struct tn_t *tnp)$/;"	f	signature:(char *s, struct tn_t *tnp)
__tn_tostr	./v_cvcms.c	/^extern char *__tn_tostr(char *s, struct tn_t *tnp, int32 after_reg_alloc)$/;"	f	signature:(char *s, struct tn_t *tnp, int32 after_reg_alloc)
__tn_type_tostr	./v_cvcms.c	/^extern char *__tn_type_tostr(char *s1, int32 tntyp)$/;"	f	signature:(char *s1, int32 tntyp)
__tnblk_nxti	./cvc.c	/^int32 __tnblk_nxti;    \/* index of next free pos. *\/ $/;"	v
__tntab	./v_bbgen.c	/^struct tn_t *__tntab; \/* design wide (?) tmp name table *\/$/;"	v	typeref:struct:tn_t
__tntab_nxti	./v_bbgen.c	/^int32 __tntab_nxti; \/* next location to use *\/$/;"	v
__tntabsiz	./v_bbgen.c	/^size_t __tntabsiz;   \/* current size *\/         $/;"	v
__to1_stren_nam	./v_ms.c	/^extern char *__to1_stren_nam(char *s, int32 st, int32 st01dir)$/;"	f	signature:(char *s, int32 st, int32 st01dir)
__to_arr_range	./v_cnv.c	/^extern char *__to_arr_range(char *s, struct net_t *np)$/;"	f	signature:(char *s, struct net_t *np)
__to_aslinfo_rec	./v_cvcms.c	/^extern struct asl_info_t *__to_aslinfo_rec(int32 asl_rout_num)$/;"	f	signature:(int32 asl_rout_num)
__to_base	./v_ms.c	/^extern int32 __to_base(int32 c)$/;"	f	signature:(int32 c)
__to_baselet	./v_ms.c	/^extern char __to_baselet(int32 bcod)$/;"	f	signature:(int32 bcod)
__to_cap_size	./v_ms.c	/^extern word32 __to_cap_size(int32 st)$/;"	f	signature:(int32 st)
__to_cfgtoknam	./v_ms.c	/^extern char *__to_cfgtoknam(char *s, int32 ttyp)$/;"	f	signature:(char *s, int32 ttyp)
__to_cur_evtrwnam	./v_sim.c	/^extern char *__to_cur_evtrwnam(char *s, struct net_t *np, int32 bi1, $/;"	f	signature:(char *s, struct net_t *np, int32 bi1, int32 bi2)
__to_dcenam	./v_ms.c	/^extern char *__to_dcenam(char *s, word32 dctyp)$/;"	f	signature:(char *s, word32 dctyp)
__to_deltypnam	./v_ms.c	/^extern char *__to_deltypnam(char *s, word32 dtyp)$/;"	f	signature:(char *s, word32 dtyp)
__to_dhboval	./v_ms.c	/^extern void __to_dhboval(int32 base, int32 emit_warn)$/;"	f	signature:(int32 base, int32 emit_warn)
__to_dispst_str	./v_ms.c	/^extern char *__to_dispst_str(char *s, word32 st)$/;"	f	signature:(char *s, word32 st)
__to_dvcode	./v_ex4.c	/^extern char *__to_dvcode(char *s, int32 vnum)$/;"	f	signature:(char *s, int32 vnum)
__to_edgenam	./v_ms.c	/^extern char *__to_edgenam(char *s, word32 eval)$/;"	f	signature:(char *s, word32 eval)
__to_evtrcanam	./v_sim.c	/^extern char *__to_evtrcanam(char *s, struct conta_t *cap, t_midat *te_idp)$/;"	f	signature:(char *s, struct conta_t *cap, t_midat *te_idp)
__to_evtrwnam	./v_sim.c	/^extern char *__to_evtrwnam(char *s, struct net_t *np, int32 bi1, int32 bi2,$/;"	f	signature:(char *s, struct net_t *np, int32 bi1, int32 bi2, t_midat *te_idp)
__to_flowgnam	./v_cvcms.c	/^extern char *__to_flowgnam(char *s, struct flowg_t *fgp)$/;"	f	signature:(char *s, struct flowg_t *fgp)
__to_gassign_str	./v_ex3.c	/^extern char *__to_gassign_str(char *s, struct expr_t *xp) $/;"	f	signature:(char *s, struct expr_t *xp)
__to_genitem_nam	./v_ms.c	/^extern char *__to_genitem_nam(char *s, int32 gityp)$/;"	f	signature:(char *s, int32 gityp)
__to_ginam	./v_ms.c	/^extern char *__to_ginam(char *s, struct gate_t *gp, word32 v, int32 i)$/;"	f	signature:(char *s, struct gate_t *gp, word32 v, int32 i)
__to_glbcmp_nam	./v_cnv.c	/^extern char *__to_glbcmp_nam(struct expr_t *gcmp_ndp)$/;"	f	signature:(struct expr_t *gcmp_ndp)
__to_gonam	./v_ms.c	/^extern char *__to_gonam(char *s, struct gate_t *gp, word32 v)$/;"	f	signature:(char *s, struct gate_t *gp, word32 v)
__to_iclassnam	./v_cvcms.c	/^extern char *__to_iclassnam(char *s, int32 vi_class)$/;"	f	signature:(char *s, int32 vi_class)
__to_idnam	./v_ms.c	/^extern char *__to_idnam(struct expr_t *xp)$/;"	f	signature:(struct expr_t *xp)
__to_iinfo_rec	./v_cvcms.c	/^extern struct insn_info_t *__to_iinfo_rec(int32 opcod)$/;"	f	signature:(int32 opcod)
__to_mpnam	./v_ms.c	/^extern char *__to_mpnam(char *s, char *chp)$/;"	f	signature:(char *s, char *chp)
__to_noztab	./v_ex3.c	/^const word32 __to_noztab[] = {0, 1, 3, 3 };$/;"	v
__to_nppsubtyp	./v_ms.c	/^static char *__to_nppsubtyp(char *s, word32 subtyp)$/;"	f	file:	signature:(char *s, word32 subtyp)
__to_npptyp	./v_ms.c	/^extern char *__to_npptyp(char *s, struct net_pin_t *npp) $/;"	f	signature:(char *s, struct net_pin_t *npp)
__to_opname	./v_ms.c	/^extern char *__to_opname(word32 otyp)$/;"	f	signature:(word32 otyp)
__to_ptnam	./v_ms.c	/^extern char *__to_ptnam(char *s, word32 ptyp)$/;"	f	signature:(char *s, word32 ptyp)
__to_qctyp	./v_ms.c	/^extern char *__to_qctyp(char *s, word32 qctyp)$/;"	f	signature:(char *s, word32 qctyp)
__to_splt_nam	./v_ms.c	/^extern char *__to_splt_nam(char *s, int32 sptyp)$/;"	f	signature:(char *s, int32 sptyp)
__to_stren_nam	./v_ms.c	/^extern char *__to_stren_nam(char *s, int32 stren1, int32 stren2)$/;"	f	signature:(char *s, int32 stren1, int32 stren2)
__to_sttyp	./v_ms.c	/^extern char *__to_sttyp(char *s, word32 sttyp)$/;"	f	signature:(char *s, word32 sttyp)
__to_stval_nam	./v_ms.c	/^extern char *__to_stval_nam(char *s, word32 stval)$/;"	f	signature:(char *s, word32 stval)
__to_sytyp	./v_ms.c	/^extern char *__to_sytyp(char *s, word32 styp)$/;"	f	signature:(char *s, word32 styp)
__to_tasksytyp	./v_src.c	/^extern word32 __to_tasksytyp(int32 ttyp)$/;"	f	signature:(int32 ttyp)
__to_tcnam	./v_ms.c	/^extern char *__to_tcnam(char *s, word32 tctyp) $/;"	f	signature:(char *s, word32 tctyp)
__to_tetyp	./v_ms.c	/^extern char *__to_tetyp(char *s, void *enterp) $/;"	f	signature:(char *s, void *enterp)
__to_timstr	./v_cnv.c	/^extern char *__to_timstr(char *s, word64 *t)$/;"	f	signature:(char *s, word64 *t)
__to_timunitnam	./v_ms.c	/^extern char *__to_timunitnam(char *s, word32 unit)$/;"	f	signature:(char *s, word32 unit)
__to_tsktyp	./v_ms.c	/^extern char *__to_tsktyp(char *s, word32 tskt)$/;"	f	signature:(char *s, word32 tskt)
__to_uvaltab	./v_ex3.c	/^const word32 __to_uvaltab[] = {0, 1, 2, 2 };$/;"	v
__to_uvvnam	./v_ms.c	/^extern char *__to_uvvnam(char *s, word32 v)$/;"	f	signature:(char *s, word32 v)
__to_vnam	./v_ms.c	/^extern char *__to_vnam(char *s, word32 is_stren, word32 v)$/;"	f	signature:(char *s, word32 is_stren, word32 v)
__to_vpi_netproptyp	./v_vpi2.c	/^extern int32 __to_vpi_netproptyp(word32 ntyp)$/;"	f	signature:(word32 ntyp)
__to_vpi_primtyp	./v_vpi2.c	/^extern int32 __to_vpi_primtyp(struct gate_t *gp)$/;"	f	signature:(struct gate_t *gp)
__to_vpi_stmttyp	./v_vpi2.c	/^extern word32 __to_vpi_stmttyp(struct st_t **stpp)$/;"	f	signature:(struct st_t **stpp)
__to_vpi_tasktyp	./v_vpi.c	/^extern word32 __to_vpi_tasktyp(word32 tsktyp)$/;"	f	signature:(word32 tsktyp)
__to_vpinetbithtyp	./v_vpi2.c	/^extern word32 __to_vpinetbithtyp(word32 ntyp)$/;"	f	signature:(word32 ntyp)
__to_vpionam	./v_vpi3.c	/^extern char *__to_vpionam(char *s, word32 vpioval)$/;"	f	signature:(char *s, word32 vpioval)
__to_vpiopchar	./v_vpi3.c	/^extern char *__to_vpiopchar(char *s, int32 opval)$/;"	f	signature:(char *s, int32 opval)
__to_vpiopnam	./v_vpi3.c	/^extern char *__to_vpiopnam(char *s, int32 opval)$/;"	f	signature:(char *s, int32 opval)
__to_vpipnam	./v_vpi3.c	/^extern char *__to_vpipnam(char *s, int32 pval)$/;"	f	signature:(char *s, int32 pval)
__to_vvnam	./v_ms.c	/^extern char *__to_vvnam(char *s, word32 v)$/;"	f	signature:(char *s, word32 v)
__to_vvstnam	./v_ms.c	/^extern char *__to_vvstnam(char *s, word32 stval)$/;"	f	signature:(char *s, word32 stval)
__to_wrange	./v_cnv.c	/^extern char *__to_wrange(char *s, struct net_t *np)$/;"	f	signature:(char *s, struct net_t *np)
__to_wtnam	./v_ms.c	/^extern char *__to_wtnam(char *s, struct net_t *np)$/;"	f	signature:(char *s, struct net_t *np)
__to_wtnam2	./v_ms.c	/^extern char *__to_wtnam2(char *s, word32 typ)$/;"	f	signature:(char *s, word32 typ)
__to_xmrcmp_nam	./v_ms.c	/^extern char *__to_xmrcmp_nam(char *s, int32 gityp)$/;"	f	signature:(char *s, int32 gityp)
__toggle_chghdr	./cvc.c	/^struct rt_tgl_t *__toggle_chghdr;  \/* rt toggle change header list *\/$/;"	v	typeref:struct:rt_tgl_t
__toggle_coverage	./cvc.c	/^int32 __toggle_coverage;           \/* T => turn on tgl cover record *\/$/;"	v
__toggle_coverage_file_name	./cvc.c	/^char *__toggle_coverage_file_name; \/* name of coverage file *\/$/;"	v
__token	./cvc.c	/^char __token[IDLEN];   \/* current symbol (in canonical (lc) form) *\/$/;"	v
__toktyp	./cvc.c	/^int32 __toktyp;        \/* place for current toktyp value *\/$/;"	v
__top_ipind	./cvc.c	/^int32 *__top_ipind;    \/* binary searchable top insts index *\/$/;"	v
__top_itab	./cvc.c	/^struct inst_t **__top_itab; \/* tab of virt inst ptrs of top mods *\/$/;"	v	typeref:struct:inst_t
__top_sti	./cvc.c	/^int32 __top_sti;$/;"	v
__total_lds_from_nets	./cvc.c	/^int32 __total_lds_from_nets; \/* count of number of nets with lds del *\/$/;"	v
__total_lds_removed	./cvc.c	/^int32 __total_lds_removed; \/* count of total lds merged away *\/$/;"	v
__total_rd_lines	./cvc.c	/^int32 __total_rd_lines;\/* total number of lines read *\/$/;"	v
__tr_fnam	./cvc.c	/^char *__tr_fnam;$/;"	v
__tr_msg	./v_ms.c	/^extern void __tr_msg(char *s, ...)$/;"	f	signature:(char *s, ...)
__tr_s	./cvc.c	/^FILE *__tr_s;          \/* trace output file - can be stdout *\/$/;"	v
__trace_xprop_stmt_write	./v_cnv.c	/^extern void __trace_xprop_stmt_write(struct st_t *stp, word32 *ap, word32 *bp,$/;"	f	signature:(struct st_t *stp, word32 *ap, word32 *bp, int32 blen)
__tran_exec_putv_wire_softforce	./v_trch.c	/^extern void __tran_exec_putv_wire_softforce(struct net_t *np, word32 *ap,$/;"	f	signature:(struct net_t *np, word32 *ap, word32 *bp, int32 ndx)
__tran_wire_vpi_force	./v_trch.c	/^extern void __tran_wire_vpi_force(struct net_t *np, word32 *ap, word32 *bp,$/;"	f	signature:(struct net_t *np, word32 *ap, word32 *bp, int32 ndx)
__tran_wire_vpi_release	./v_trch.c	/^extern void __tran_wire_vpi_release(struct net_t *np, int32 ndx) $/;"	f	signature:(struct net_t *np, int32 ndx)
__tranx_to_netbit	./v_trch.c	/^extern struct net_t *__tranx_to_netbit(struct expr_t *xp,$/;"	f	signature:(struct expr_t *xp, int32 fromr_bi, int32 *bi, struct itree_t *oside_itp)
__travfreeze_genitem_sytabs	./v_genfx.c	/^extern void __travfreeze_genitem_sytabs(struct genitem_t *gip_hd)$/;"	f	signature:(struct genitem_t *gip_hd)
__travfreeze_syms	./v_src.c	/^extern void __travfreeze_syms(struct tnode_t *tnp)$/;"	f	signature:(struct tnode_t *tnp)
__tree_root	./cvc.c	/^struct tqnode_t *__tree_root;   \/* root of tree *\/$/;"	v	typeref:struct:tqnode_t
__trim1_0val	./v_cnv.c	/^extern int32 __trim1_0val(word32 *wp, int32 blen)$/;"	f	signature:(word32 *wp, int32 blen)
__trk_eval_con_oneword_binop	./v_bbgen3.c	/^extern word32 __trk_eval_con_oneword_binop(int32 *resval, int32 opcod,$/;"	f	signature:(int32 *resval, int32 opcod, int32 blen, int32 op1_con, word32 aval1, int32 op2_con, word32 aval2)
__trk_num_insn_changed	./v_bbgen.c	/^int32 __trk_num_insn_changed; \/* and changed *\/$/;"	v
__trk_num_insn_removed	./v_bbgen.c	/^int32 __trk_num_insn_removed; \/* tracking - per bblk no. insn removed *\/$/;"	v
__trk_state_tostr	./v_cvcms.c	/^extern char *__trk_state_tostr(char *s, int32 trk_state)$/;"	f	signature:(char *s, int32 trk_state)
__trunc_cstr	./v_cnv.c	/^extern void __trunc_cstr(char *s, int32 newsize, int32 from_front)$/;"	f	signature:(char *s, int32 newsize, int32 from_front)
__trunc_exprline	./v_cnv.c	/^extern void __trunc_exprline(int32 newsize, int32 from_front)$/;"	f	signature:(int32 newsize, int32 from_front)
__try_reduce_16vtab	./v_del.c	/^extern void __try_reduce_16vtab(word64 *tim, int32 *nvals)$/;"	f	signature:(word64 *tim, int32 *nvals)
__try_remove_jmp	./v_cvcms.c	/^extern void __try_remove_jmp(struct bblk_t *bbp)$/;"	f	signature:(struct bblk_t *bbp)
__try_to_fold_for_loops	./v_prp2.c	/^extern void __try_to_fold_for_loops(void)$/;"	f	signature:(void)
__tryadd_tn_use_in_fg	./v_bbopt.c	/^extern void __tryadd_tn_use_in_fg(struct flowg_t *fgp, int32 tni)$/;"	f	signature:(struct flowg_t *fgp, int32 tni)
__turnoff_1file_all_dumpports	./v_ex4.c	/^extern void __turnoff_1file_all_dumpports(struct dp_fildesc_t *fdescp)$/;"	f	signature:(struct dp_fildesc_t *fdescp)
__turnoff_all_dumpvars	./v_ex4.c	/^extern void __turnoff_all_dumpvars(void)$/;"	f	signature:(void)
__turnon_1file_all_dumpports	./v_ex4.c	/^extern void __turnon_1file_all_dumpports(struct dp_fildesc_t *fdescp)$/;"	f	signature:(struct dp_fildesc_t *fdescp)
__turnon_all_dumpvars	./v_ex4.c	/^extern void __turnon_all_dumpvars(void)$/;"	f	signature:(void)
__ualtrepipnum	./cvc.c	/^int32 __ualtrepipnum;  \/* udp rep. change threshold *\/$/;"	v
__udp_last	./cvc.c	/^struct udp_t *__udp_last;\/* end udp list *\/$/;"	v	typeref:struct:udp_t
__udp_vskipto2_any	./v_ms.c	/^extern int32 __udp_vskipto2_any(int32 targ1, int32 targ2)$/;"	f	signature:(int32 targ1, int32 targ2)
__udp_vskipto3_any	./v_ms.c	/^extern int32 __udp_vskipto3_any(int32 targ1, int32 targ2, int32 targ3)$/;"	f	signature:(int32 targ1, int32 targ2, int32 targ3)
__udp_vskipto_any	./v_ms.c	/^extern int32 __udp_vskipto_any(int32 targ1)$/;"	f	signature:(int32 targ1)
__udphead	./cvc.c	/^struct udp_t *__udphead; \/* header udps *\/$/;"	v	typeref:struct:udp_t
__un_p1_svals	./v_aslib.c	/^const word32 __un_p1_svals[4] =     {0,1,3,3};$/;"	v
__un_p1_svals	./v_aslib.s	/^__un_p1_svals:$/;"	l
__un_p2_svals	./v_aslib.c	/^const word32 __un_p2_svals[4] =     {1,0,3,3};$/;"	v
__un_p2_svals	./v_aslib.s	/^__un_p2_svals:$/;"	l
__unconn_drive	./cvc.c	/^int32 __unconn_drive;  \/* if none TOK_NONE else PULL 0 or PULL 1 *\/$/;"	v
__undef_mods	./cvc.c	/^int32 __undef_mods;    \/* count of undefined modules *\/$/;"	v
__undefhd	./cvc.c	/^struct undef_t *__undefhd;\/* head of undefined mod\/udp list *\/   $/;"	v	typeref:struct:undef_t
__undeftail	./cvc.c	/^struct undef_t *__undeftail; \/* tail of undefined mod\/udp list *\/$/;"	v	typeref:struct:undef_t
__unget_vtok	./v_ms.c	/^extern void __unget_vtok(void)$/;"	f	signature:(void)
__unmap_ndx	./v_fx2.c	/^extern int32 __unmap_ndx(int32 biti, int32 ri1, int32 ri2)$/;"	f	signature:(int32 biti, int32 ri1, int32 ri2)
__unnormalize2_ndx	./v_fx2.c	/^extern int32 __unnormalize2_ndx(int32 indi, int32 mr1, int32 mr2)$/;"	f	signature:(int32 indi, int32 mr1, int32 mr2)
__unnormalize_ndx	./v_fx2.c	/^extern int32 __unnormalize_ndx(struct net_t *np, int32 indi)$/;"	f	signature:(struct net_t *np, int32 indi)
__unscale_realticks	./v_cnv.c	/^extern double __unscale_realticks(word64 *ticksval, struct mod_t *mdp)$/;"	f	signature:(word64 *ticksval, struct mod_t *mdp)
__untgled_rpt_concise	./cvc.c	/^int32 __untgled_rpt_concise;       \/* T => concise untgl rpt only *\/$/;"	v
__update_tran_harddrvs	./v_trch.c	/^extern int32 __update_tran_harddrvs(struct net_t *np)$/;"	f	signature:(struct net_t *np)
__use_impthdels	./cvc.c	/^int32 __use_impthdels; \/* T => use src-dst im path dels *\/$/;"	v
__use_interp_dpi_mk	./cvc.c	/^int32 __use_interp_dpi_mk; \/* T => for dbg, interp dpi use mk file *\/$/;"	v
__use_pwd_as_tmp	./cvc.c	/^int32 __use_pwd_as_tmp;   \/* T => use pwd as the work space directory *\/ $/;"	v
__usedir_cp	./cvc.c	/^char * __usedir_cp;        \/* use named dir as the work space dir *\/ $/;"	v
__v0stren	./cvc.c	/^int32 __v0stren;       \/* wire\/inst. Ver. 0 strength *\/$/;"	v
__v1stren	./cvc.c	/^int32 __v1stren;       \/* wire\/inst. Ver. 1 strength *\/$/;"	v
__v64_to_real	./v_cnv.c	/^extern int32 __v64_to_real(double *d1, word64 *tim)$/;"	f	signature:(double *d1, word64 *tim)
__validate_accessm	./v_vpi3.c	/^extern int32 __validate_accessm(char *rnam, int32 otype, char *accessm)$/;"	f	signature:(char *rnam, int32 otype, char *accessm)
__validate_handle	./v_vpi3.c	/^extern int32 __validate_handle(char *rnam, struct h_t *hp) $/;"	f	signature:(char *rnam, struct h_t *hp)
__validate_nonit_handle	./v_vpi3.c	/^extern int32 __validate_nonit_handle(char *rnam, struct h_t *hp) $/;"	f	signature:(char *rnam, struct h_t *hp)
__validate_otyp	./v_vpi3.c	/^extern int32 __validate_otyp(word32 vpioval)$/;"	f	signature:(word32 vpioval)
__validate_time_type	./v_vpi3.c	/^extern int32 __validate_time_type(char *rnam, int32 timtyp)$/;"	f	signature:(char *rnam, int32 timtyp)
__validate_value_fmt	./v_vpi3.c	/^extern int32 __validate_value_fmt(char *rnam, int32 fmt)$/;"	f	signature:(char *rnam, int32 fmt)
__var_adradd_insn	./v_bbgen3.c	/^extern int32 __var_adradd_insn(int32 srep, int32 blen, int32 op1_ti,$/;"	f	signature:(int32 srep, int32 blen, int32 op1_ti, int32 op2_ti)
__var_tostr	./v_cnv.c	/^extern char *__var_tostr(char *s, struct net_t *np, int32 i1, int32 i2, int32 base)$/;"	f	signature:(char *s, struct net_t *np, int32 i1, int32 i2, int32 base)
__vccb_scal_standval_filter	./v_sim.c	/^extern int32 __vccb_scal_standval_filter(struct net_t *np, byte *dcesbp,$/;"	f	signature:(struct net_t *np, byte *dcesbp, word32 *oval, word32 *nval, int32 dce_edge)
__vccb_vec_standval_filter	./v_sim.c	/^extern int32 __vccb_vec_standval_filter(struct net_t *np,$/;"	f	signature:(struct net_t *np, struct dcevnt_t *dcep, byte *dcesbp, word32 *oval, word32 *nval)
__venviron	./cvc.c	/^struct symtab_t **__venviron;$/;"	v	typeref:struct:symtab_t
__verb_mem_olp	./cvc.c	/^struct optlst_t *__verb_mem_olp;  \/* verbose mem option, nil if none *\/  $/;"	v	typeref:struct:optlst_t
__verb_olp	./cvc.c	/^struct optlst_t *__verb_olp;  \/* verbose option, nil if none *\/  $/;"	v	typeref:struct:optlst_t
__verbose	./cvc.c	/^int32 __verbose;       \/* T => emit various extra messages *\/$/;"	v
__verbose_mem	./cvc.c	/^int32 __verbose_mem;     \/* T => verbose memory cvc usage *\/ $/;"	v
__verbose_step	./cvc.c	/^int32 __verbose_step;  \/* T => emit location each step *\/$/;"	v
__vers	./cvc.c	/^char *__vers;          \/* actual product info *\/$/;"	v
__vers2	./cvc.c	/^char *__vers2;$/;"	v
__via_err	./v_ms.c	/^extern void __via_err(int32 id_num, char *s, va_list args, va_list args2)$/;"	f	signature:(int32 id_num, char *s, va_list args, va_list args2)
__via_warn	./v_ms.c	/^extern void __via_warn(int32 id_num, char *s, va_list args, va_list args2)$/;"	f	signature:(int32 id_num, char *s, va_list args, va_list args2)
__vin_top	./cvc.c	/^int32 __vin_top;       \/* index of top of current file stack *\/$/;"	v
__vinstk	./cvc.c	/^struct vinstk_t **__vinstk;\/* open file\/macro list in stack form *\/$/;"	v	typeref:struct:vinstk_t
__visp	./cvc.c	/^struct vinstk_t *__visp;\/* pointer to top of open input stack *\/$/;"	v	typeref:struct:vinstk_t
__vpi_argc	./cvc.c	/^int32 __vpi_argc;      \/* global arg count for vpi *\/$/;"	v
__vpi_argv	./cvc.c	/^char **__vpi_argv;     \/* global arg array for vpi *\/$/;"	v
__vpi_argv0	./cvc.c	/^char *__vpi_argv0;     \/* argv execed program name *\/$/;"	v
__vpi_cbrec_hdr	./cvc.c	/^struct cbrec_t *__vpi_cbrec_hdr; \/* all cbs list header *\/$/;"	v	typeref:struct:cbrec_t
__vpi_del_nxtsimtim_trycall	./v_vpi.c	/^extern void __vpi_del_nxtsimtim_trycall(void)$/;"	f	signature:(void)
__vpi_del_rosync_call	./v_vpi.c	/^extern void __vpi_del_rosync_call(void)$/;"	f	signature:(void)
__vpi_dynlib_end	./cvc.c	/^struct loadpli_t *__vpi_dynlib_end; \/* and its end *\/$/;"	v	typeref:struct:loadpli_t
__vpi_dynlib_hd	./cvc.c	/^struct loadpli_t *__vpi_dynlib_hd; \/* hd of ld vpi dynamic lib list *\/$/;"	v	typeref:struct:loadpli_t
__vpi_endcomp_trycall	./v_vpi.c	/^extern void __vpi_endcomp_trycall(void)$/;"	f	signature:(void)
__vpi_endreset_trycall	./v_vpi.c	/^extern void __vpi_endreset_trycall(void)$/;"	f	signature:(void)
__vpi_endsim_trycall	./v_vpi.c	/^extern void __vpi_endsim_trycall(void)$/;"	f	signature:(void)
__vpi_enteriact_trycall	./v_vpi.c	/^extern void __vpi_enteriact_trycall(void)$/;"	f	signature:(void)
__vpi_err	./v_vpi3.c	/^extern void __vpi_err(int32 id_num, int32 level, char *s, ...)$/;"	f	signature:(int32 id_num, int32 level, char *s, ...)
__vpi_error_trycall	./v_vpi.c	/^extern void __vpi_error_trycall(void)$/;"	f	signature:(void)
__vpi_exitiact_trycall	./v_vpi.c	/^extern void __vpi_exitiact_trycall(void)$/;"	f	signature:(void)
__vpi_force_cb_always	./cvc.c	/^int32 __vpi_force_cb_always; \/* T => always call back on force *\/$/;"	v
__vpi_hfree_hdr	./cvc.c	/^struct h_t *__vpi_hfree_hdr;  \/* handle free list hdr *\/ $/;"	v	typeref:struct:h_t
__vpi_hrecfree_hdr	./cvc.c	/^struct hrec_t *__vpi_hrecfree_hdr;  \/* handle record free list hdr *\/ $/;"	v	typeref:struct:hrec_t
__vpi_iactscopechg_trycall	./v_vpi.c	/^extern void __vpi_iactscopechg_trycall(void)$/;"	f	signature:(void)
__vpi_plierror_trycall	./v_vpi.c	/^extern void __vpi_plierror_trycall(void)$/;"	f	signature:(void)
__vpi_rel_cb_always	./cvc.c	/^int32 __vpi_rel_cb_always; \/* T => always call back on release *\/$/;"	v
__vpi_set_chg_proc	./v_sim.c	/^extern void __vpi_set_chg_proc(struct gate_t *gp)$/;"	f	signature:(struct gate_t *gp)
__vpi_set_downtomdport_proc	./v_ex4.c	/^extern void __vpi_set_downtomdport_proc(struct mod_pin_t *mpp,$/;"	f	signature:(struct mod_pin_t *mpp, struct net_t *np)
__vpi_set_upiconnport_proc	./v_ex4.c	/^extern void __vpi_set_upiconnport_proc(struct mod_pin_t *mpp)$/;"	f	signature:(struct mod_pin_t *mpp)
__vpi_show_object	./v_vpi3.c	/^extern int32 __vpi_show_object(vpiHandle obj)$/;"	f	signature:(vpiHandle obj)
__vpi_startreset_trycall	./v_vpi.c	/^extern void __vpi_startreset_trycall(void)$/;"	f	signature:(void)
__vpi_startsim_trycall	./v_vpi.c	/^extern void __vpi_startsim_trycall(void)$/;"	f	signature:(void)
__vpi_sysf_calltf	./v_vpi.c	/^extern void __vpi_sysf_calltf(struct expr_t *fcallx)$/;"	f	signature:(struct expr_t *fcallx)
__vpi_sysf_hdr	./cvc.c	/^struct vpisystf_t *__vpi_sysf_hdr; \/* hdr sys func call src locs *\/$/;"	v	typeref:struct:vpisystf_t
__vpi_syst_calltf	./v_vpi.c	/^extern void __vpi_syst_calltf(struct st_t *stp)$/;"	f	signature:(struct st_t *stp)
__vpi_syst_hdr	./cvc.c	/^struct vpisystf_t *__vpi_syst_hdr; \/* hdr sys task enable src locs *\/$/;"	v	typeref:struct:vpisystf_t
__vpi_tchkerr_trycall	./v_vpi.c	/^extern void __vpi_tchkerr_trycall(struct tchk_t *tcp, struct itree_t *itp)$/;"	f	signature:(struct tchk_t *tcp, struct itree_t *itp)
__vpi_terr	./v_vpi3.c	/^extern void __vpi_terr(char *fnam, int32 lno)$/;"	f	signature:(char *fnam, int32 lno)
__vpi_vlog_start_done	./cvc.c	/^int32 __vpi_vlog_start_done;\/* T => startup done, no systf registering *\/$/;"	v
__vpicb_teendi	./cvc.c	/^struct tev_t **__vpicb_teendi; \/* end of fixed cb tev list - 1 per class *\/$/;"	v	typeref:struct:tev_t
__vpicb_tehdri	./cvc.c	/^struct tev_t **__vpicb_tehdri; \/* hdr of fixed cb tev list - 1 per class *\/$/;"	v	typeref:struct:tev_t
__vpierr_cb_active	./cvc.c	/^int32 __vpierr_cb_active; \/* T => at least one cbError reged *\/$/;"	v
__vpifnam_ind	./cvc.c	/^int32 __vpifnam_ind;   \/* vpi_ global current file index *\/$/;"	v
__vpilin_cnt	./cvc.c	/^int32 __vpilin_cnt;    \/* vpi_ global current line no. *\/$/;"	v
__vpitime_to_ticks	./v_vpi3.c	/^extern int32 __vpitime_to_ticks(word64 *timp, p_vpi_time time_p,$/;"	f	signature:(word64 *timp, p_vpi_time time_p, struct mod_t *mdp)
__vskipto2_any	./v_ms.c	/^extern int32 __vskipto2_any(int32 targ1, int32 targ2)$/;"	f	signature:(int32 targ1, int32 targ2)
__vskipto2_lofp_end	./v_ms.c	/^extern int32 __vskipto2_lofp_end()$/;"	f
__vskipto2_modend	./v_ms.c	/^extern int32 __vskipto2_modend(int32 targ1, int32 targ2)$/;"	f	signature:(int32 targ1, int32 targ2)
__vskipto3_any	./v_ms.c	/^extern int32 __vskipto3_any(int32 targ1, int32 targ2, int32 targ3)$/;"	f	signature:(int32 targ1, int32 targ2, int32 targ3)
__vskipto3_modend	./v_ms.c	/^extern int32 __vskipto3_modend(int32 targ1, int32 targ2, int32 targ3)$/;"	f	signature:(int32 targ1, int32 targ2, int32 targ3)
__vskipto4_any	./v_ms.c	/^extern int32 __vskipto4_any(int32 targ1, int32 targ2, int32 targ3, int32 targ4)$/;"	f	signature:(int32 targ1, int32 targ2, int32 targ3, int32 targ4)
__vskipto_any	./v_ms.c	/^extern int32 __vskipto_any(int32 targ1)$/;"	f	signature:(int32 targ1)
__vskipto_lofp_end	./v_ms.c	/^extern int32 __vskipto_lofp_end()$/;"	f
__vskipto_modend	./v_ms.c	/^extern int32 __vskipto_modend(int32 targ1)$/;"	f	signature:(int32 targ1)
__vstr_to_vval	./v_ms.c	/^extern void __vstr_to_vval(word32 *ap, char *s, int32 bitlen)$/;"	f	signature:(word32 *ap, char *s, int32 bitlen)
__vsysfuncs	./cvc.c	/^struct sysfunc_t __vsysfuncs[] = {$/;"	v	typeref:struct:sysfunc_t
__vtfind	./v_ms.c	/^extern struct tnode_t *__vtfind(char *nam, struct symtab_t *sytp)$/;"	f	signature:(char *nam, struct symtab_t *sytp)
__vtx_freelst	./cvc.c	/^struct vtx_t *__vtx_freelst;  \/* free list for re-using vtxs *\/   $/;"	v	typeref:struct:vtx_t
__vtxlst_freelst	./cvc.c	/^struct vtxlst_t *__vtxlst_freelst; \/* free list for vtx lists *\/$/;"	v	typeref:struct:vtxlst_t
__vval_is1	./v_cnv.c	/^extern int32 __vval_is1(word32 *wp, int32 blen)$/;"	f	signature:(word32 *wp, int32 blen)
__vval_isall_xs	./v_cnv.c	/^extern int32 __vval_isall_xs(word32 *ap, word32 *bp, int32 blen)$/;"	f	signature:(word32 *ap, word32 *bp, int32 blen)
__vval_isallzs	./v_cnv.c	/^extern int32 __vval_isallzs(word32 *ap, word32 *bp, int32 blen)$/;"	f	signature:(word32 *ap, word32 *bp, int32 blen)
__vval_to_vstr	./v_cnv.c	/^extern char *__vval_to_vstr(word32 *ap, int32 blen, int32 *slen)$/;"	f	signature:(word32 *ap, int32 blen, int32 *slen)
__vyhdr	./cvc.c	/^struct vylib_t *__vyhdr; \/* header of lib. file list *\/$/;"	v	typeref:struct:vylib_t
__wakeup_delay_ctrls	./v_sim.c	/^extern void __wakeup_delay_ctrls(struct net_t *np, int32 npi1, int32 npi2)$/;"	f	signature:(struct net_t *np, int32 npi1, int32 npi2)
__warn_cancel_e	./cvc.c	/^int32 __warn_cancel_e; \/* T => emit warn cancel_e (indep. of cancel) *\/$/;"	v
__wcardtab	./cvc.c	/^struct wcard_t *__wcardtab; \/* level wildcard table *\/$/;"	v	typeref:struct:wcard_t
__wdel_schd_1wirebit	./v_ex3.c	/^extern void __wdel_schd_1wirebit(struct net_t *np, int32 biti, word32 nval,$/;"	f	signature:(struct net_t *np, int32 biti, word32 nval, word32 oval, int32 tr_decay)
__wdel_schd_allofwire	./v_ex3.c	/^extern void __wdel_schd_allofwire(struct net_t *np, word32 *ap, word32 *bp,$/;"	f	signature:(struct net_t *np, word32 *ap, word32 *bp, int32 blen)
__wdel_stren_schd_allofwire	./v_ex3.c	/^extern void __wdel_stren_schd_allofwire(struct net_t *np, byte *sbp,$/;"	f	signature:(struct net_t *np, byte *sbp, int32 sblen)
__wide_vval_is0	./v_cnv.c	/^extern int32 __wide_vval_is0(word32 *wp, int32 blen)$/;"	f	signature:(word32 *wp, int32 blen)
__widen_sv_unbas_unsiz_rhs	./v_fx2.c	/^extern struct expr_t *__widen_sv_unbas_unsiz_rhs(struct expr_t *rhsx, $/;"	f	signature:(struct expr_t *rhsx, int32 lhswid)
__widen_unsiz_rhs_assign	./v_fx2.c	/^extern struct expr_t *__widen_unsiz_rhs_assign(struct expr_t *rhsx,$/;"	f	signature:(struct expr_t *rhsx, int32 lhswid)
__wire_array_grp	./cvc.c	/^struct gref_t * __wire_array_grp; \/* gref use to convert wire arrays *\/$/;"	v	typeref:struct:gref_t
__wire_init	./cvc.c	/^int32 __wire_init;     \/* T => initializing wires *\/$/;"	v
__work_array	./v_regasn.c	/^static int32 *__work_array;$/;"	v	file:
__work_array_size	./v_regasn.c	/^static int32 __work_array_size;$/;"	v	file:
__wr_dpi_c_hdrs	./cvc.c	/^int32 __wr_dpi_c_hdrs; \/* T => write DPI c prototype hdrs to file *\/$/;"	v
__wr_dvtimstr	./v_ex4.c	/^extern void __wr_dvtimstr(void)$/;"	f	signature:(void)
__wr_tgldat_file	./cvc.c	/^char *__wr_tgldat_file;            \/* name of .tgldat output file *\/$/;"	v
__wr_tgldat_on	./cvc.c	/^int32 __wr_tgldat_on;              \/* at end, write .tgldat file *\/$/;"	v
__wr_vcdclose_section	./v_ex4.c	/^extern void __wr_vcdclose_section(struct dp_fildesc_t *fdescp)$/;"	f	signature:(struct dp_fildesc_t *fdescp)
__wrap_putc	./v_cnv.c	/^extern void __wrap_putc(int32 c, FILE *f)$/;"	f	signature:(int32 c, FILE *f)
__wrap_puts	./v_cnv.c	/^extern void __wrap_puts(char *s, FILE *f)$/;"	f	signature:(char *s, FILE *f)
__wrd_redxor	./v_ex2.c	/^extern word32 __wrd_redxor(word32 opa)$/;"	f	signature:(word32 opa)
__write_dctrl	./v_cnv.c	/^extern void __write_dctrl(FILE *f, struct delctrl_t *dctp)$/;"	f	signature:(FILE *f, struct delctrl_t *dctp)
__write_ndx	./cvc.c	/^int32 __write_ndx;               \/* current write of dump buffer *\/$/;"	v
__write_not_triggered_events	./v_cvr.c	/^extern void __write_not_triggered_events(void)$/;"	f	signature:(void)
__write_snapshot	./v_dbg2.c	/^extern void __write_snapshot(int32 pend_num)$/;"	f	signature:(int32 pend_num)
__write_uncovered_stmts	./v_cvr.c	/^extern void __write_uncovered_stmts(void)$/;"	f	signature:(void)
__wrk_attr	./cvc.c	/^struct attr_t __wrk_attr; \/* latest read attribute *\/$/;"	v	typeref:struct:attr_t
__wrk_einfo	./v_vpi3.c	/^struct t_vpi_error_info __wrk_einfo;\/* if err, vpi routine fills this *\/$/;"	v	typeref:struct:t_vpi_error_info
__wrk_gi_nam	./cvc.c	/^char __wrk_gi_nam[RECLEN]; \/* gbl wrk string for saving gen item nam *\/$/;"	v
__wrk_ocvtok_end	./cvc.c	/^struct oc_vtok_t *__wrk_ocvtok_end;\/* and current end *\/$/;"	v	typeref:struct:oc_vtok_t
__wrk_ocvtok_hd	./cvc.c	/^struct oc_vtok_t *__wrk_ocvtok_hd; \/* opt cfg wrd token list hd *\/$/;"	v	typeref:struct:oc_vtok_t
__wrk_vpi_errcode	./cvc.c	/^char __wrk_vpi_errcode[256];\/* error codes are Cver err num as str *\/$/;"	v
__wrk_vpi_product	./cvc.c	/^char __wrk_vpi_product[256];\/* product version *\/$/;"	v
__wrk_vpi_timedbl	./cvc.c	/^double __wrk_vpi_timedbl;\/* time double for vpi error rec *\/$/;"	v
__wrk_vpiemsg	./cvc.c	/^char __wrk_vpiemsg[IDLEN];\/* error msg. work string *\/$/;"	v
__wrk_vpiget_str	./cvc.c	/^char __wrk_vpiget_str[IDLEN];\/* standard required vpi get str string *\/$/;"	v
__wrkevtab	./cvc.c	/^struct tev_t **__wrkevtab; \/* for exit, trace of pending events *\/$/;"	v	typeref:struct:tev_t
__wrks1	./cvc.c	/^char *__wrks1;         \/* work string - can not use xs if func *\/$/;"	v
__wrks2	./cvc.c	/^char *__wrks2;$/;"	v
__wrkstab	./cvc.c	/^struct sy_t **__wrkstab;\/* malloced work symbol table area *\/$/;"	v	typeref:struct:sy_t
__wrkstab2	./cvc.c	/^struct sy_t **__wrkstab2;\/* malloced 2nd work symbol table area *\/$/;"	v	typeref:struct:sy_t
__wrkval_buflen	./cvc.c	/^int32 __wrkval_buflen; \/* and current length *\/$/;"	v
__wrkvalbufp	./cvc.c	/^char *__wrkvalbufp;    \/* buf for vpi get value value_p contents *\/ $/;"	v
__wsupptab	./cvc.c	/^word32 *__wsupptab;    \/* tab (1 bit\/msg) for warn and iact suppress *\/$/;"	v
__xform_nl_stmts	./v_prp2.c	/^extern void __xform_nl_stmts(void)$/;"	f	signature:(void)
__xhas_reg	./v_fx3.c	/^extern int32 __xhas_reg(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__xi_stralloc	./v_cvcms.c	/^extern char *__xi_stralloc(char *s)$/;"	f	signature:(char *s)
__xldl_hdr	./cvc.c	/^struct xldlnpp_t *__xldl_hdr; \/* other side unproc. xl drv\/ld npps *\/$/;"	v	typeref:struct:xldlnpp_t
__xldlvtxind	./cvc.c	/^struct xldlvtx_t **__xldlvtxind; \/* table of xl drv\/ld net\/bit vtx *\/$/;"	v	typeref:struct:xldlvtx_t
__xline_vval_to_cstr	./v_cnv.c	/^extern void __xline_vval_to_cstr(word32 *ap, int32 blen, int32 nd_quotes,$/;"	f	signature:(word32 *ap, int32 blen, int32 nd_quotes, int32 space_0, int32 esc_esc)
__xmrget_refgrp_to_targ	./v_ex3.c	/^extern t_midat *__xmrget_refgrp_to_targ(struct gref_t *grp)$/;"	f	signature:(struct gref_t *grp)
__xmrpush_refgrp_to_targ_compiletime	./v_bbgen2.c	/^extern void __xmrpush_refgrp_to_targ_compiletime(struct gref_t *grp)$/;"	f	signature:(struct gref_t *grp)
__xndi	./cvc.c	/^int32 __xndi;          \/* next place in collected expression list *\/$/;"	v
__xnor_g3	./v_aslib.c	/^const word32 __xnor_g3[64] = {1,0,3,3,0,1,3,3,3,3,3,3,3,3,3,3,0,1,3,3,1,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3};$/;"	v
__xnor_g3	./v_aslib.s	/^__xnor_g3:$/;"	l
__xnor_g4	./v_aslib.c	/^const word32 __xnor_g4[256] = {1,0,3,3,0,1,3,3,3,3,3,3,3,3,3,3,0,1,3,3,1,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,1,3,3,1,0,3,3,3,3,3,3,3,3,3,3,1,0,3,3,0,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3};$/;"	v
__xnor_g4	./v_aslib.s	/^__xnor_g4:$/;"	l
__xor_g3	./v_aslib.c	/^const word32 __xor_g3[64] = {0,1,3,3,1,0,3,3,3,3,3,3,3,3,3,3,1,0,3,3,0,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3};$/;"	v
__xor_g3	./v_aslib.s	/^__xor_g3:$/;"	l
__xor_g4	./v_aslib.c	/^const word32 __xor_g4[256] = {0,1,3,3,1,0,3,3,3,3,3,3,3,3,3,3,1,0,3,3,0,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,0,3,3,0,1,3,3,3,3,3,3,3,3,3,3,0,1,3,3,1,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3};$/;"	v
__xor_g4	./v_aslib.s	/^__xor_g4:$/;"	l
__xpnd_copy1_genblk	./v_fx.c	/^extern struct genblk_t *__xpnd_copy1_genblk(struct genblk_t *ogblkp,$/;"	f	signature:(struct genblk_t *ogblkp, struct net_t *genv_np, int32 ndx)
__xpr_dup_tree	./cvc.c	/^struct avlhd_t *__xpr_dup_tree; \/* tree to hold all sysf calls *\/$/;"	v	typeref:struct:avlhd_t
__xpr_has_param	./v_src.c	/^extern int32 __xpr_has_param(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__xpr_hasfcall	./v_fx3.c	/^extern int32 __xpr_hasfcall(struct expr_t *ndp)$/;"	f	signature:(struct expr_t *ndp)
__xpr_isnum_tree	./cvc.c	/^struct avlhd_t *__xpr_isnum_tree; \/* tree to hold all IS num exprs *\/$/;"	v	typeref:struct:avlhd_t
__xprop	./cvc.c	/^int32 __xprop;           \/* T => x propagation  *\/$/;"	v
__xprop2	./cvc.c	/^int32 __xprop2;          \/* T => x2 propagation  *\/$/;"	v
__xprop_and_or_xs	./cvc.c	/^int32 __xprop_and_or_xs; \/* T => preserve xs for |,&, ||, &&  *\/$/;"	v
__xprop_cond_hit	./cvc.c	/^int32 __xprop_cond_hit;          \/* x conditions hit *\/$/;"	v
__xprop_cond_max	./cvc.c	/^int32 __xprop_cond_max;          \/* max hit before stopping log *\/$/;"	v
__xprop_copying	./cvc.c	/^int32 __xprop_copying;   \/* T => copying x propagation stmt block *\/$/;"	v
__xprop_expr_has_cneq	./cvc.c	/^int32 __xprop_expr_has_cneq; \/* expr mark has === or !=== *\/$/;"	v
__xprop_lhs_nets	./cvc.c	/^struct net_t **__xprop_lhs_nets; \/* lhs net prep building *\/$/;"	v	typeref:struct:net_t
__xprop_lhs_nets_top	./cvc.c	/^struct net_t **__xprop_lhs_nets_top; \/* top lhs net prep building *\/$/;"	v	typeref:struct:net_t
__xprop_lhs_other_than_id	./cvc.c	/^int32 *__xprop_lhs_other_than_id;  \/* lhs net id only *\/$/;"	v
__xprop_lhs_other_than_id_top	./cvc.c	/^int32 *__xprop_lhs_other_than_id_top;      \/* top lhs net id only *\/$/;"	v
__xprop_max_net_1_wp	./cvc.c	/^word32 *__xprop_max_net_1_wp;        \/* max width 1 wp *\/$/;"	v
__xprop_max_net_width	./cvc.c	/^int32 __xprop_max_net_width;         \/* max xprop net width *\/$/;"	v
__xprop_net_ndx	./cvc.c	/^int32 __xprop_net_ndx;              \/* lhs net ndx *\/$/;"	v
__xprop_net_ndx_top	./cvc.c	/^int32 __xprop_net_ndx_top;         \/* top lhs net ndx *\/$/;"	v
__xprop_not_eligible	./cvc.c	/^int32 __xprop_not_eligible;      \/* xprop not eligible stmts on *\/$/;"	v
__xprop_not_eligible_fp	./cvc.c	/^FILE *__xprop_not_eligible_fp;   \/* xprop not eligible stmt file *\/$/;"	v
__xprop_pos_neg_only	./cvc.c	/^int32 __xprop_pos_neg_only;  \/* T => only include pos\/neg edge *\/$/;"	v
__xprop_stmts	./cvc.c	/^struct st_t **__xprop_stmts;        \/* lhs stmt prep building *\/$/;"	v	typeref:struct:st_t
__xprop_stmts_top	./cvc.c	/^struct st_t **__xprop_stmts_top;     \/* top lhs stmt prep building *\/$/;"	v	typeref:struct:st_t
__xprop_trace_fp	./cvc.c	/^FILE *__xprop_trace_fp;          \/* xprop trace info file *\/$/;"	v
__xprop_trace_on	./cvc.c	/^int32 __xprop_trace_on;          \/* xprop tracing on *\/$/;"	v
__xprop_xedge	./cvc.c	/^int32 __xprop_xedge;             \/* T => xedge global *\/$/;"	v
__xprop_xtrace_suppress	./cvc.c	/^int32 __xprop_xtrace_suppress;   \/* T => do not emit trace message *\/$/;"	v
__xregab_tostr	./v_cnv.c	/^extern char *__xregab_tostr(char *s, word32 *ap, word32 *bp, int32 blen,$/;"	f	signature:(char *s, word32 *ap, word32 *bp, int32 blen, struct expr_t *xp)
__xs	./cvc.c	/^char *__xs, *__xs2;    \/* places to put expr to str trunc messages *\/$/;"	v
__xs2	./cvc.c	/^char *__xs, *__xs2;    \/* places to put expr to str trunc messages *\/$/;"	v
__xspi	./cvc.c	/^int32 __xspi;          \/* expr. pointer *\/$/;"	v
__xstk	./cvc.c	/^struct xstk_t **__xstk;\/* expr work vals *\/$/;"	v	typeref:struct:xstk_t
__xtract_wirng	./v_prp2.c	/^extern void __xtract_wirng(struct expr_t *xp, struct net_t **np,$/;"	f	signature:(struct expr_t *xp, struct net_t **np, int32 *i1, int32 *i2)
__zget_sym	./v_ms.c	/^extern struct sy_t *__zget_sym(char *nam, struct sy_t **syms, word32 nsyms)$/;"	f	signature:(char *nam, struct sy_t **syms, word32 nsyms)
acc_append_delays	./v_acc.c	/^extern bool acc_append_delays(handle object, ...)$/;"	f	signature:(handle object, ...)
acc_append_pulsere	./v_acc.c	/^extern bool acc_append_pulsere(handle object, double val1, double val1x, ...)$/;"	f	signature:(handle object, double val1, double val1x, ...)
acc_chg_4igate	./v_sim.c	/^static void acc_chg_4igate(struct gate_t *gp, word32 i)$/;"	f	file:	signature:(struct gate_t *gp, word32 i)
acc_chg_bufnot	./v_sim.c	/^static void acc_chg_bufnot(struct gate_t *gp, word32 i)$/;"	f	file:	signature:(struct gate_t *gp, word32 i)
acc_close	./v_acc.c	/^extern void acc_close(void)$/;"	f	signature:(void)
acc_collect	./v_acc.c	/^extern handle *acc_collect(handle (*p_next_routine)(), handle scope_object,$/;"	f	signature:(handle (p_next_routine)), handle scope_object, int32 *aof_count)
acc_compare_handles	./v_acc.c	/^extern bool acc_compare_handles(handle h1, handle h2)$/;"	f	signature:(handle h1, handle h2)
acc_configure	./v_acc.c	/^extern bool acc_configure(int32 item, char *value)$/;"	f	signature:(int32 item, char *value)
acc_count	./v_acc.c	/^extern int32 acc_count(handle (*next_function)(), handle object_handle)$/;"	f	signature:(handle (next_function)), handle object_handle)
acc_downtomdport	./v_ex4.c	/^static void acc_downtomdport(struct expr_t *lhsx, struct expr_t *rhsx,$/;"	f	file:	signature:(struct expr_t *lhsx, struct expr_t *rhsx, struct itree_t *down_itp)
acc_error_flag	./v_acc.c	/^bool acc_error_flag;$/;"	v
acc_fetch_argc	./v_acc.c	/^extern int32 acc_fetch_argc(void)$/;"	f	signature:(void)
acc_fetch_argv	./v_acc.c	/^extern void **acc_fetch_argv(void)$/;"	f	signature:(void)
acc_fetch_attribute	./v_acc.c	/^extern double acc_fetch_attribute(handle object, ...)$/;"	f	signature:(handle object, ...)
acc_fetch_attribute_int	./v_acc.c	/^extern int32 acc_fetch_attribute_int(handle object, ...)$/;"	f	signature:(handle object, ...)
acc_fetch_attribute_str	./v_acc.c	/^extern char *acc_fetch_attribute_str(handle object, ...)$/;"	f	signature:(handle object, ...)
acc_fetch_defname	./v_acc.c	/^extern char *acc_fetch_defname(handle object_handle)$/;"	f	signature:(handle object_handle)
acc_fetch_delay_mode	./v_acc.c	/^extern int32 acc_fetch_delay_mode(handle object_p)$/;"	f	signature:(handle object_p)
acc_fetch_delays	./v_acc.c	/^extern bool acc_fetch_delays(handle object, ...)$/;"	f	signature:(handle object, ...)
acc_fetch_direction	./v_acc.c	/^extern int32 acc_fetch_direction(handle object_handle)$/;"	f	signature:(handle object_handle)
acc_fetch_edge	./v_acc.c	/^extern int32 acc_fetch_edge(handle acc_object)$/;"	f	signature:(handle acc_object)
acc_fetch_fullname	./v_acc.c	/^extern char *acc_fetch_fullname(handle object_handle)$/;"	f	signature:(handle object_handle)
acc_fetch_fulltype	./v_acc.c	/^extern int32 acc_fetch_fulltype(handle object_h)$/;"	f	signature:(handle object_h)
acc_fetch_index	./v_acc.c	/^extern int32 acc_fetch_index(handle object_handle)$/;"	f	signature:(handle object_handle)
acc_fetch_itfarg	./v_acc.c	/^extern double acc_fetch_itfarg(int32 n, handle tfinst)$/;"	f	signature:(int32 n, handle tfinst)
acc_fetch_itfarg_int	./v_acc.c	/^extern int32 acc_fetch_itfarg_int(int32 n, handle tfinst)$/;"	f	signature:(int32 n, handle tfinst)
acc_fetch_itfarg_str	./v_acc.c	/^extern char *acc_fetch_itfarg_str(int32 n, handle tfinst)$/;"	f	signature:(int32 n, handle tfinst)
acc_fetch_location	./v_acc.c	/^extern int32 acc_fetch_location(p_location location_p, handle object)$/;"	f	signature:(p_location location_p, handle object)
acc_fetch_name	./v_acc.c	/^extern char *acc_fetch_name(handle object_handle)$/;"	f	signature:(handle object_handle)
acc_fetch_paramtype	./v_acc.c	/^extern int32 acc_fetch_paramtype(handle param_p)$/;"	f	signature:(handle param_p)
acc_fetch_paramval	./v_acc.c	/^extern double acc_fetch_paramval(handle param)$/;"	f	signature:(handle param)
acc_fetch_polarity	./v_acc.c	/^extern int32 acc_fetch_polarity(handle path)$/;"	f	signature:(handle path)
acc_fetch_precision	./v_acc.c	/^extern int32 acc_fetch_precision(void)$/;"	f	signature:(void)
acc_fetch_pulsere	./v_acc.c	/^extern bool acc_fetch_pulsere(handle path_p, double *val1r, double *val1e, ...)$/;"	f	signature:(handle path_p, double *val1r, double *val1e, ...)
acc_fetch_range	./v_acc.c	/^extern int32 acc_fetch_range(handle node, int32 *msb, int32 *lsb)$/;"	f	signature:(handle node, int32 *msb, int32 *lsb)
acc_fetch_size	./v_acc.c	/^extern int32 acc_fetch_size(handle obj_h)$/;"	f	signature:(handle obj_h)
acc_fetch_tfarg	./v_acc.c	/^extern double acc_fetch_tfarg(int32 n)$/;"	f	signature:(int32 n)
acc_fetch_tfarg_int	./v_acc.c	/^extern int32 acc_fetch_tfarg_int(int32 n)$/;"	f	signature:(int32 n)
acc_fetch_tfarg_str	./v_acc.c	/^extern char *acc_fetch_tfarg_str(int32 n)$/;"	f	signature:(int32 n)
acc_fetch_timescale_info	./v_acc.c	/^extern void acc_fetch_timescale_info(handle obj,$/;"	f	signature:(handle obj, p_timescale_info aof_timescale_info)
acc_fetch_type	./v_acc.c	/^extern int32 acc_fetch_type(handle object_handle)$/;"	f	signature:(handle object_handle)
acc_fetch_type_str	./v_acc.c	/^extern char *acc_fetch_type_str(int32 type)$/;"	f	signature:(int32 type)
acc_fetch_value	./v_acc.c	/^extern char *acc_fetch_value(handle object_handle, char *format_str,$/;"	f	signature:(handle object_handle, char *format_str, p_acc_value acc_value_p)
acc_free	./v_acc.c	/^extern void acc_free(handle *array_ptr)$/;"	f	signature:(handle *array_ptr)
acc_handle_by_name	./v_acc.c	/^extern handle acc_handle_by_name(char *inst_name, handle scope_p)$/;"	f	signature:(char *inst_name, handle scope_p)
acc_handle_condition	./v_acc.c	/^extern handle acc_handle_condition(handle obj)$/;"	f	signature:(handle obj)
acc_handle_conn	./v_acc.c	/^extern handle acc_handle_conn(handle term_p)$/;"	f	signature:(handle term_p)
acc_handle_datapath	./v_acc.c	/^extern handle acc_handle_datapath(handle path)$/;"	f	signature:(handle path)
acc_handle_hiconn	./v_acc.c	/^extern handle acc_handle_hiconn(handle port_ref)$/;"	f	signature:(handle port_ref)
acc_handle_interactive_scope	./v_acc.c	/^extern handle acc_handle_interactive_scope(void)$/;"	f	signature:(void)
acc_handle_itfarg	./v_acc.c	/^extern handle acc_handle_itfarg(int32 n, handle tfinst)$/;"	f	signature:(int32 n, handle tfinst)
acc_handle_loconn	./v_acc.c	/^extern handle acc_handle_loconn(handle port_ref)$/;"	f	signature:(handle port_ref)
acc_handle_modpath	./v_acc.c	/^extern handle acc_handle_modpath(handle mod_p, char *pathin_name,$/;"	f	signature:(handle mod_p, char *pathin_name, char *pathout_name, ...)
acc_handle_notifier	./v_acc.c	/^extern handle acc_handle_notifier(handle tchk)$/;"	f	signature:(handle tchk)
acc_handle_object	./v_acc.c	/^extern handle acc_handle_object(char *object_name)$/;"	f	signature:(char *object_name)
acc_handle_parent	./v_acc.c	/^extern handle acc_handle_parent(handle object_p)$/;"	f	signature:(handle object_p)
acc_handle_path	./v_acc.c	/^extern handle acc_handle_path(handle source, handle destination)$/;"	f	signature:(handle source, handle destination)
acc_handle_pathin	./v_acc.c	/^extern handle acc_handle_pathin(handle path_p)$/;"	f	signature:(handle path_p)
acc_handle_pathout	./v_acc.c	/^extern handle acc_handle_pathout(handle path_p)$/;"	f	signature:(handle path_p)
acc_handle_port	./v_acc.c	/^extern handle acc_handle_port(handle port, int32 port_num)$/;"	f	signature:(handle port, int32 port_num)
acc_handle_scope	./v_acc.c	/^extern handle acc_handle_scope(handle object)$/;"	f	signature:(handle object)
acc_handle_simulated_net	./v_acc.c	/^extern handle acc_handle_simulated_net(handle net_h)$/;"	f	signature:(handle net_h)
acc_handle_tchk	./v_acc.c	/^extern handle acc_handle_tchk(handle mod_p, int32 tchk_type,$/;"	f	signature:(handle mod_p, int32 tchk_type, char *arg1_conn_name, int32 arg1_edgetype, ...)
acc_handle_tchkarg1	./v_acc.c	/^extern handle acc_handle_tchkarg1(handle tchk)$/;"	f	signature:(handle tchk)
acc_handle_tchkarg2	./v_acc.c	/^extern handle acc_handle_tchkarg2(handle tchk)$/;"	f	signature:(handle tchk)
acc_handle_terminal	./v_acc.c	/^extern handle acc_handle_terminal(handle gate_handle, int32 terminal_index)$/;"	f	signature:(handle gate_handle, int32 terminal_index)
acc_handle_tfarg	./v_acc.c	/^extern handle acc_handle_tfarg(int32 n)$/;"	f	signature:(int32 n)
acc_handle_tfinst	./v_acc.c	/^extern handle acc_handle_tfinst(void)$/;"	f	signature:(void)
acc_initialize	./v_acc.c	/^extern bool acc_initialize(void)$/;"	f	signature:(void)
acc_internal_itfree	./v_acc.c	/^static void acc_internal_itfree(struct h_t *ihp)$/;"	f	file:	signature:(struct h_t *ihp)
acc_next	./v_acc.c	/^extern handle acc_next(int32 *type_list, handle h_scope, handle h_object)$/;"	f	signature:(int32 *type_list, handle h_scope, handle h_object)
acc_next_bit	./v_acc.c	/^extern handle acc_next_bit(handle vector, handle bit)$/;"	f	signature:(handle vector, handle bit)
acc_next_cell	./v_acc.c	/^extern handle acc_next_cell(handle scope, handle cell)$/;"	f	signature:(handle scope, handle cell)
acc_next_cell_load	./v_acc.c	/^extern handle acc_next_cell_load(handle net_handle, handle load)$/;"	f	signature:(handle net_handle, handle load)
acc_next_child	./v_acc.c	/^extern handle acc_next_child(handle mod_handle, handle child)$/;"	f	signature:(handle mod_handle, handle child)
acc_next_driver	./v_acc.c	/^extern handle acc_next_driver(handle net, handle driver)$/;"	f	signature:(handle net, handle driver)
acc_next_hiconn	./v_acc.c	/^extern handle acc_next_hiconn(handle port, handle hiconn)$/;"	f	signature:(handle port, handle hiconn)
acc_next_input	./v_acc.c	/^extern handle acc_next_input(handle path, handle pathin)$/;"	f	signature:(handle path, handle pathin)
acc_next_load	./v_acc.c	/^extern handle acc_next_load(handle net, handle load)$/;"	f	signature:(handle net, handle load)
acc_next_loconn	./v_acc.c	/^extern handle acc_next_loconn(handle port, handle loconn)$/;"	f	signature:(handle port, handle loconn)
acc_next_modpath	./v_acc.c	/^extern handle acc_next_modpath(handle mod_p, handle path)$/;"	f	signature:(handle mod_p, handle path)
acc_next_net	./v_acc.c	/^extern handle acc_next_net(handle mod_handle, handle net)$/;"	f	signature:(handle mod_handle, handle net)
acc_next_output	./v_acc.c	/^extern handle acc_next_output(handle path, handle pathout)$/;"	f	signature:(handle path, handle pathout)
acc_next_parameter	./v_acc.c	/^extern handle acc_next_parameter(handle module_p, handle param)$/;"	f	signature:(handle module_p, handle param)
acc_next_port	./v_acc.c	/^extern handle acc_next_port(handle ref_obj_p, handle port)$/;"	f	signature:(handle ref_obj_p, handle port)
acc_next_portout	./v_acc.c	/^extern handle acc_next_portout(handle mod_p, handle port)$/;"	f	signature:(handle mod_p, handle port)
acc_next_primitive	./v_acc.c	/^extern handle acc_next_primitive(handle mod_handle, handle prim)$/;"	f	signature:(handle mod_handle, handle prim)
acc_next_scope	./v_acc.c	/^extern handle acc_next_scope(handle ref_scope_p, handle scope)$/;"	f	signature:(handle ref_scope_p, handle scope)
acc_next_specparam	./v_acc.c	/^extern handle acc_next_specparam(handle module_p, handle sparam)$/;"	f	signature:(handle module_p, handle sparam)
acc_next_tchk	./v_acc.c	/^extern handle acc_next_tchk(handle mod_p, handle tchk)$/;"	f	signature:(handle mod_p, handle tchk)
acc_next_terminal	./v_acc.c	/^extern handle acc_next_terminal(handle gate_handle, handle term)$/;"	f	signature:(handle gate_handle, handle term)
acc_next_topmod	./v_acc.c	/^extern handle acc_next_topmod(handle topmod)$/;"	f	signature:(handle topmod)
acc_not_sim_err	./v_acc.c	/^static void acc_not_sim_err(char *rnam)$/;"	f	file:	signature:(char *rnam)
acc_object_in_typelist	./v_acc.c	/^extern bool acc_object_in_typelist(handle object, int32 *type_list)$/;"	f	signature:(handle object, int32 *type_list)
acc_object_of_type	./v_acc.c	/^extern bool acc_object_of_type(handle object, int32 type)$/;"	f	signature:(handle object, int32 type)
acc_otyp	./v_acc.c	/^ int32 acc_otyp;$/;"	m	struct:vpi_to_acc_t	file:	access:public
acc_product_type	./v_acc.c	/^extern int32 acc_product_type(void)$/;"	f	signature:(void)
acc_product_version	./v_acc.c	/^extern char *acc_product_version(void)$/;"	f	signature:(void)
acc_release_object	./v_acc.c	/^extern int32 acc_release_object(handle obj)$/;"	f	signature:(handle obj)
acc_replace_delays	./v_acc.c	/^extern bool acc_replace_delays(handle object, ...)$/;"	f	signature:(handle object, ...)
acc_replace_pulsere	./v_acc.c	/^extern bool acc_replace_pulsere(handle object, double val1r, double val1x, ...)$/;"	f	signature:(handle object, double val1r, double val1x, ...)
acc_reset_buffer	./v_acc.c	/^extern void acc_reset_buffer(void)$/;"	f	signature:(void)
acc_set_interactive_scope	./v_acc.c	/^extern bool acc_set_interactive_scope(handle scope, int32 callback_flag)$/;"	f	signature:(handle scope, int32 callback_flag)
acc_set_pulsere	./v_acc.c	/^extern bool acc_set_pulsere(handle path_p, double val1r, double val1e)$/;"	f	signature:(handle path_p, double val1r, double val1e)
acc_set_scope	./v_acc.c	/^extern char *acc_set_scope(handle object, ...)$/;"	f	signature:(handle object, ...)
acc_set_value	./v_acc.c	/^extern int32 acc_set_value(handle obj, p_setval_value setval_p,$/;"	f	signature:(handle obj, p_setval_value setval_p, p_setval_delay delay_p)
acc_stichg_4igate	./v_sim.c	/^static void acc_stichg_4igate(struct gate_t *gp, word32 i)$/;"	f	file:	signature:(struct gate_t *gp, word32 i)
acc_stichg_bufnot	./v_sim.c	/^static void acc_stichg_bufnot(struct gate_t *gp, word32 i)$/;"	f	file:	signature:(struct gate_t *gp, word32 i)
acc_uptoiconn	./v_ex4.c	/^static void acc_uptoiconn(struct expr_t *lhsx, struct expr_t *rhsx,$/;"	f	file:	signature:(struct expr_t *lhsx, struct expr_t *rhsx, struct itree_t *up_itp)
acc_vcl_add	./v_acc.c	/^extern void acc_vcl_add(handle object_p, int32 (*consumer)(), char *user_data,$/;"	f	signature:(handle object_p, int32 (*consumer)(), char *user_data, int32 vcl_flags)
acc_vcl_delete	./v_acc.c	/^extern void acc_vcl_delete(handle object_p, int32 (*consumer)(),$/;"	f	signature:(handle object_p, int32 (*consumer)(), char *user_data, int32 vcl_flags)
acc_version	./v_acc.c	/^extern char *acc_version(void)$/;"	f	signature:(void)
accconfig_names	./v_acc.c	/^static struct pnamvpi_t accconfig_names[] = {$/;"	v	typeref:struct:pnamvpi_t	file:
access_stbsel	./v_ex4.c	/^static void access_stbsel(byte *sbp, struct expr_t *ndp)$/;"	f	file:	signature:(byte *sbp, struct expr_t *ndp)
access_stpsel	./v_ex4.c	/^static void access_stpsel(byte *sbp, struct expr_t *ndp)$/;"	f	file:	signature:(byte *sbp, struct expr_t *ndp)
access_width_index_stpsel	./v_ex4.c	/^static void access_width_index_stpsel(byte *sbp, struct expr_t *ndp)$/;"	f	file:	signature:(byte *sbp, struct expr_t *ndp)
acciter_t	./v_acc.c	/^struct acciter_t {$/;"	s	file:
acciter_t::aiter	./v_acc.c	/^ struct h_t *aiter;$/;"	m	struct:acciter_t	typeref:struct:acciter_t::h_t	file:	access:public
acciter_t::aiternxt	./v_acc.c	/^ struct acciter_t *aiternxt;$/;"	m	struct:acciter_t	typeref:struct:acciter_t::acciter_t	file:	access:public
acciter_t::aiterprev	./v_acc.c	/^ struct acciter_t *aiterprev;$/;"	m	struct:acciter_t	typeref:struct:acciter_t::acciter_t	file:	access:public
accmuladd32	./v_ex2.c	/^static int32 accmuladd32(word32 *a, word32 *b, word32 c, word32 *d, int32 wlen)$/;"	f	file:	signature:(word32 *a, word32 *b, word32 c, word32 *d, int32 wlen)
accmuladd64	./v_ex2.c	/^static word64 accmuladd64(word32 *a, word32 *b, word32 c, word32 *d, int32 wlen)$/;"	f	file:	signature:(word32 *a, word32 *b, word32 c, word32 *d, int32 wlen)
accnam	./v_acc.c	/^ char *accnam;$/;"	m	struct:accnam_t	file:	access:public
accnam_t	./v_acc.c	/^struct accnam_t {$/;"	s	file:
accnam_t::accnam	./v_acc.c	/^ char *accnam;$/;"	m	struct:accnam_t	file:	access:public
accnam_t::accval	./v_acc.c	/^ int32 accval;$/;"	m	struct:accnam_t	file:	access:public
accnamtab	./v_acc.c	/^struct accnam_t accnamtab[] = {$/;"	v	typeref:struct:accnam_t
accum_block1	./v.h	/^ word32 **accum_block1;          \/* accum block 1 *\/$/;"	m	struct:xprop_t	access:public
accum_block2	./v.h	/^ word32 **accum_block2;          \/* accum block 2 *\/$/;"	m	struct:xprop_t	access:public
accum_usecnts	./cvc.c	/^static void accum_usecnts(struct mod_t *mdp, int32 *gftab, int32 *gstab,$/;"	f	file:	signature:(struct mod_t *mdp, int32 *gftab, int32 *gstab, int32 *cgftab, int32 *mftab, int32 *mstab, int32 *uftab, int32 *ustab, int32 *cuftab, int32 *mhasudps)
accval	./v_acc.c	/^ int32 accval;$/;"	m	struct:accnam_t	file:	access:public
action_cb_register	./v_vpi.c	/^static vpiHandle action_cb_register(p_cb_data datp) $/;"	f	file:	signature:(p_cb_data datp)
actionst	./v.h	/^ struct st_t *actionst;       \/* delctrl stmt list *\/$/;"	m	struct:delctrl_t	typeref:struct:delctrl_t::st_t	access:public
active	./fstapi.c	/^unsigned active : 1;$/;"	m	struct:fstBlackoutChain	file:	access:public
add1_oside_edge	./v_trch.c	/^static int32 add1_oside_edge(struct vtx_t *vtxp, struct net_pin_t *npp,$/;"	f	file:	signature:(struct vtx_t *vtxp, struct net_pin_t *npp, struct net_t *osnp, int32 osbi, int32 chanid, struct itree_t *vt1_itp, struct itree_t *vt2_itp)
add_1chan_vtxes_and_edges	./v_trch.c	/^static void add_1chan_vtxes_and_edges(int32 chanid)$/;"	f	file:	signature:(int32 chanid)
add_1mod_nchges_from_nd_chgst_bit	./v_prp.c	/^static void add_1mod_nchges_from_nd_chgst_bit(struct mod_t *mdp,$/;"	f	file:	signature:(struct mod_t *mdp, int32 filter_net_tgl_on)
add_1stmt_mstmts_ndx	./v_prp2.c	/^static struct st_t *add_1stmt_mstmts_ndx(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
add_accstrbuf	./v_acc.c	/^static char *add_accstrbuf(char *s)$/;"	f	file:	signature:(char *s)
add_bblst_linear_set	./v_bbopt.c	/^static int32 add_bblst_linear_set(struct bblk_t *runner_bbp,$/;"	f	file:	signature:(struct bblk_t *runner_bbp, struct bblk_t *bbp)
add_cell	./v_src.c	/^static struct cell_t *add_cell(char *inam)$/;"	f	file:	signature:(char *inam)
add_cell_attr	./v_src.c	/^static void add_cell_attr(struct cell_t *cp)$/;"	f	file:	signature:(struct cell_t *cp)
add_cfg_libsyms	./v_src3.c	/^static void add_cfg_libsyms(struct cfglib_t *cfgp)$/;"	f	file:	signature:(struct cfglib_t *cfgp)
add_cfgsym	./v_src3.c	/^static void add_cfgsym(char *libnam, struct tnode_t *tnp)$/;"	f	file:	signature:(char *libnam, struct tnode_t *tnp)
add_conflict_edge	./v_regasn.c	/^static void add_conflict_edge(int32 t1, int32 t2)$/;"	f	file:	signature:(int32 t1, int32 t2)
add_conta	./v_src.c	/^static struct conta_t *add_conta(struct expr_t *lhsndp, struct expr_t *rhsndp,$/;"	f	file:	signature:(struct expr_t *lhsndp, struct expr_t *rhsndp, int32 sfnind, int32 slcnt, struct genblk_t *cgblkp)
add_conta_netchgs	./v_prp.c	/^static void add_conta_netchgs(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
add_contadel_pnp	./v_prp.c	/^static void add_contadel_pnp(struct conta_t *cap, struct paramlst_t *pdels)$/;"	f	file:	signature:(struct conta_t *cap, struct paramlst_t *pdels)
add_csitemlst_mstmts_ndx	./v_prp2.c	/^static void add_csitemlst_mstmts_ndx(struct csitem_t *csip)$/;"	f	file:	signature:(struct csitem_t *csip)
add_dctl_stmt_event	./v_prp.c	/^static void add_dctl_stmt_event(struct st_t *stp, struct mod_t *mdp)$/;"	f	file:	signature:(struct st_t *stp, struct mod_t *mdp)
add_deflst_livdefs	./v_bbopt.c	/^static void add_deflst_livdefs(struct bblk_t *succ_bbp)$/;"	f	file:	signature:(struct bblk_t *succ_bbp)
add_edges_from_npps	./v_trch.c	/^static void add_edges_from_npps(struct vtx_t *vtxp, int32 chanid,$/;"	f	file:	signature:(struct vtx_t *vtxp, int32 chanid, struct itree_t *vt1_itp)
add_flowg_to_netfg_list	./v_bbgen2.c	/^static void add_flowg_to_netfg_list(struct net_t *np, struct flowg_t *fgp)$/;"	f	file:	signature:(struct net_t *np, struct flowg_t *fgp)
add_force_net_tran_changes	./v_prp.c	/^static void add_force_net_tran_changes(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
add_funcretdecl	./v_src.c	/^static void add_funcretdecl(char *rvnam, word32 frwtyp, struct expr_t *x1,$/;"	f	file:	signature:(char *rvnam, word32 frwtyp, struct expr_t *x1, struct expr_t *x2, int32 is_signed)
add_gatedel_pnp	./v_prp.c	/^static void add_gatedel_pnp(struct gate_t *gp, struct paramlst_t *pdels)$/;"	f	file:	signature:(struct gate_t *gp, struct paramlst_t *pdels)
add_genitems_from1_genblk	./v_genfx.c	/^static void add_genitems_from1_genblk(struct genblk_t *gblkp)$/;"	f	file:	signature:(struct genblk_t *gblkp)
add_genitems_from1_genitem	./v_genfx.c	/^static void add_genitems_from1_genitem(struct genitem_t *gip)$/;"	f	file:	signature:(struct genitem_t *gip)
add_iahist	./v_dbg.c	/^static void add_iahist(void)$/;"	f	file:	signature:(void)
add_lbfil	./cvc.c	/^static void add_lbfil(char *fnam, char tlet)$/;"	f	file:	signature:(char *fnam, char tlet)
add_lhs_net	./v_xprop.c	/^static int32 add_lhs_net(struct net_t *np, struct st_t *nstp,$/;"	f	file:	signature:(struct net_t *np, struct st_t *nstp, struct st_t *top_stp)
add_lhs_stmt	./v_xprop.c	/^static int32 add_lhs_stmt(struct st_t *nstp, struct st_t *lhs_stp,$/;"	f	file:	signature:(struct st_t *nstp, struct st_t *lhs_stp, struct st_t *top_stp)
add_lhsx_concat_to_netchg_lst	./v_prp.c	/^static void add_lhsx_concat_to_netchg_lst(struct expr_t *lhsx, int32 is_wire_ev)$/;"	f	file:	signature:(struct expr_t *lhsx, int32 is_wire_ev)
add_lhsx_netchgs	./v_prp.c	/^static void add_lhsx_netchgs(struct mod_t *mdp, struct expr_t *lhsx)$/;"	f	file:	signature:(struct mod_t *mdp, struct expr_t *lhsx)
add_lhsx_to_netchg_lst	./v_prp.c	/^static void add_lhsx_to_netchg_lst(struct expr_t *lhsx, int32 is_wire_ev,$/;"	f	file:	signature:(struct expr_t *lhsx, int32 is_wire_ev, int32 is_nb_stmt)
add_loopend_goto	./v_prp2.c	/^static struct st_t *add_loopend_goto(struct st_t *begstp,$/;"	f	file:	signature:(struct st_t *begstp, struct st_t *targstp)
add_match_vtxs	./v_trch.c	/^static void add_match_vtxs(struct net_t *np, struct net_pin_t *npp, int32 bi,$/;"	f	file:	signature:(struct net_t *np, struct net_pin_t *npp, int32 bi, struct itree_t *cur_itp)
add_mdvp_for_each_array_element	./v_ex4.c	/^static void add_mdvp_for_each_array_element(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
add_mipd_flowg	./v_bbopt.c	/^static void add_mipd_flowg(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
add_mod_attrs_toinst	./v_fx.c	/^static void add_mod_attrs_toinst(struct inst_t *ip)$/;"	f	file:	signature:(struct inst_t *ip)
add_net_attr	./v_src.c	/^static void add_net_attr(struct net_t *np, int32 ttyp)$/;"	f	file:	signature:(struct net_t *np, int32 ttyp)
add_net_change	./v_prp.c	/^static void add_net_change(struct net_t *np, int32 i1, int32 i2, $/;"	f	file:	signature:(struct net_t *np, int32 i1, int32 i2, int32 is_const, int32 is_wire_ev, int32 is_tran_force_vec)
add_net_changes_from_dces	./v_prp.c	/^static void add_net_changes_from_dces(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
add_net_changes_from_drvs	./v_prp.c	/^static void add_net_changes_from_drvs(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
add_net_changes_from_lds	./v_prp.c	/^static void add_net_changes_from_lds(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
add_net_changes_from_tran	./v_prp.c	/^static void add_net_changes_from_tran(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
add_net_driver	./v_vpi3.c	/^static struct h_t *add_net_driver(struct h_t *hp) $/;"	f	file:	signature:(struct h_t *hp)
add_netbit_driver	./v_vpi3.c	/^static struct h_t *add_netbit_driver(struct h_t *hp) $/;"	f	file:	signature:(struct h_t *hp)
add_netdel_pnp	./v_prp.c	/^static void add_netdel_pnp(struct net_t *np, struct paramlst_t *pdels)$/;"	f	file:	signature:(struct net_t *np, struct paramlst_t *pdels)
add_new_gsym	./v_genfx.c	/^static void add_new_gsym(struct gate_t *gp, int32 bi)  $/;"	f	file:	signature:(struct gate_t *gp, int32 bi)
add_new_heap_time	./v_sim.c	/^static struct heap_t *add_new_heap_time(struct tev_t *tevp, int32 hash)$/;"	f	file:	signature:(struct tev_t *tevp, int32 hash)
add_new_isym	./v_genfx.c	/^static void add_new_isym(struct inst_t *ip, int32 bi)  $/;"	f	file:	signature:(struct inst_t *ip, int32 bi)
add_new_xprop_stmts_to_mstmts	./v_xprop.c	/^static void add_new_xprop_stmts_to_mstmts(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
add_non_blocking_stmt	./v_bbgen.c	/^static void add_non_blocking_stmt(struct st_t *stp, int32 static_mem, $/;"	f	file:	signature:(struct st_t *stp, int32 static_mem, int32 rhs_const, int32 lhs_srep, int32 is_processing_pnd0s, int32 fg_free)
add_octok_toend	./v_src3.c	/^static void add_octok_toend(int32 ttyp, int32 lcnt, char *toknam)$/;"	f	file:	signature:(int32 ttyp, int32 lcnt, char *toknam)
add_one_lhsx_netchgs	./v_prp.c	/^static void add_one_lhsx_netchgs(struct mod_t *mdp, struct expr_t *lhsx,$/;"	f	file:	signature:(struct mod_t *mdp, struct expr_t *lhsx, int32 has_mfi, int32 has_del)
add_portbit_map	./v_prp2.c	/^static void add_portbit_map(struct tenp_t *prtnetmap, struct expr_t *xp,$/;"	f	file:	signature:(struct tenp_t *prtnetmap, struct expr_t *xp, int32 base_pi)
add_proc_stmt_netchgs	./v_prp.c	/^static void add_proc_stmt_netchgs(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
add_srcdst_impth	./v_sdf.c	/^static void add_srcdst_impth(struct mipd_t *mipdp, struct mod_pin_t *smpp,$/;"	f	file:	signature:(struct mipd_t *mipdp, struct mod_pin_t *smpp, int32 si1, int32 si2, struct itree_t *sitp, char *s1)
add_stchan_chged_vtx	./v_trch.c	/^static struct vtxlst_t *add_stchan_chged_vtx(struct vtx_t *vtxp,$/;"	f	file:	signature:(struct vtx_t *vtxp, struct itree_t *vt1_itp)
add_stlst_mstmts_ndx	./v_prp2.c	/^static void add_stlst_mstmts_ndx(struct st_t *hdstp)$/;"	f	file:	signature:(struct st_t *hdstp)
add_suppwarn	./cvc.c	/^static int32 add_suppwarn(char *pluslst, struct optlst_t *olp) $/;"	f	file:	signature:(char *pluslst, struct optlst_t *olp)
add_sysfuncsym	./cvc.c	/^static void add_sysfuncsym(struct sysfunc_t *sfbp)$/;"	f	file:	signature:(struct sysfunc_t *sfbp)
add_systsksym	./cvc.c	/^static void add_systsksym(struct systsk_t *stbp)$/;"	f	file:	signature:(struct systsk_t *stbp)
add_task_to_task_call	./v_fx2.c	/^static void add_task_to_task_call(struct task_t *from_tskp, $/;"	f	file:	signature:(struct task_t *from_tskp, struct task_t *called_tskp)
add_tchk_chged	./v_sim.c	/^static void add_tchk_chged(struct chktchg_t *chkchgp)$/;"	f	file:	signature:(struct chktchg_t *chkchgp)
add_tn_to_defuse_list	./v_regasn.c	/^static void add_tn_to_defuse_list(struct tn_list_t *tlstp, int32 val)$/;"	f	file:	signature:(struct tn_list_t *tlstp, int32 val)
add_tn_to_list	./v_regasn.c	/^static void add_tn_to_list(int32 orig_tni, int32 conflct_tni)$/;"	f	file:	signature:(int32 orig_tni, int32 conflct_tni)
add_tn_to_list_nodup	./v_regasn.c	/^static void add_tn_to_list_nodup(struct tn_list_t *tlstp, int32 val)$/;"	f	file:	signature:(struct tn_list_t *tlstp, int32 val)
add_to_chg_vtx_list	./v_trch.c	/^static void add_to_chg_vtx_list(struct vtxlst_t *vtxlp, int32 si)$/;"	f	file:	signature:(struct vtxlst_t *vtxlp, int32 si)
add_tot_1inst_drvn_const_bits	./v_cvr.c	/^static void add_tot_1inst_drvn_const_bits(struct itree_t *itp,$/;"	f	file:	signature:(struct itree_t *itp, int32 *tot_wires, int32 *tot_bits, int32 *tot_drvn_const)
add_tot_1inst_sigs_bits	./v_cvr.c	/^static void add_tot_1inst_sigs_bits(struct itree_t *itp, int32 *tot_sigs,$/;"	f	file:	signature:(struct itree_t *itp, int32 *tot_sigs, int32 *tot_bits, int32 *tot_tgls, int32 *tot_01_tgls, int32 *tot_10_tgls, int32 *tot_excl_bits, int32 *tot_drvn_con_bits, int32 *tot_drvn_con_sigs)
add_undef_el	./v_fx.c	/^static struct undef_t *add_undef_el(struct sy_t *syp,$/;"	f	file:	signature:(struct sy_t *syp, struct undef_t **hd, struct undef_t **tail)
add_vtx_to_bidvtxtab	./v_trch.c	/^static void add_vtx_to_bidvtxtab(struct chanrec_t *chanp, struct vtx_t *vtxp,$/;"	f	file:	signature:(struct chanrec_t *chanp, struct vtx_t *vtxp, struct itree_t *vt1_itp)
add_vtx_to_future_q	./v_trch.c	/^static void add_vtx_to_future_q(struct vtx_t *vtxp, struct itree_t *itp)$/;"	f	file:	signature:(struct vtx_t *vtxp, struct itree_t *itp)
add_vtx_to_offlist	./v_trch.c	/^static void add_vtx_to_offlist(struct vtx_t *vtxp)$/;"	f	file:	signature:(struct vtx_t *vtxp)
add_vtxtraux	./v_trch.c	/^static struct vbinfo_t *add_vtxtraux(struct net_t *np, int32 bi, int32 chanid) $/;"	f	file:	signature:(struct net_t *np, int32 bi, int32 chanid)
add_xldl_vtx	./v_trch.c	/^static int32 add_xldl_vtx(struct itree_t *itp, struct net_t *np, int32 bi,$/;"	f	file:	signature:(struct itree_t *itp, struct net_t *np, int32 bi, int32 ix_insert)
add_xmr_dcep_edge_list	./v_prp2.c	/^static void add_xmr_dcep_edge_list(struct mod_t *decl_mdp, $/;"	f	file:	signature:(struct mod_t *decl_mdp, struct dcevnt_t *dcep)
add_xprop_stmt_to_list	./v_xprop.c	/^static void add_xprop_stmt_to_list(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
addch_	./cvmacros.h	521;"	d
adds_evgate_ins	./v_ex4.c	/^static void adds_evgate_ins(word32 *gatap, word32 *gatbp, int32 nins)$/;"	f	file:	signature:(word32 *gatap, word32 *gatbp, int32 nins)
addto_acc_cells_iter	./v_acc.c	/^static int32 addto_acc_cells_iter(struct h_t *hp, int32 locnum, int32 cnum)$/;"	f	file:	signature:(struct h_t *hp, int32 locnum, int32 cnum)
addto_attrwrkstr_	./v_ms.c	2750;"	d	file:
addto_avltab	./v_cvcrt.c	/^static void addto_avltab(struct avlnode_t *nodp)$/;"	f	file:	signature:(struct avlnode_t *nodp)
addto_macwrkstr_	./v_ms.c	973;"	d	file:
addto_parmnplst	./v_prp.c	/^static void addto_parmnplst(struct expr_t *xp,$/;"	f	file:	signature:(struct expr_t *xp, struct parmnet_pin_t *tmplate_pnp)
adjust_jmpfr_end_insn	./v_bbopt.c	/^static void adjust_jmpfr_end_insn(struct bblk_t *jmpfr_bbp,$/;"	f	file:	signature:(struct bblk_t *jmpfr_bbp, struct bblk_t *jmpto_bbp, int32 rm_seqno)
adpi_u	./v.h	/^union adpi_u {$/;"	u
adpi_u::sv_ch	./v.h	/^ unsigned char sv_ch;$/;"	m	union:adpi_u	access:public
adpi_u::sv_d	./v.h	/^ double sv_d; $/;"	m	union:adpi_u	access:public
adpi_u::sv_i	./v.h	/^ int sv_i;$/;"	m	union:adpi_u	access:public
adpi_u::sv_lngi	./v.h	/^ long long int sv_lngi;$/;"	m	union:adpi_u	access:public
adpi_u::sv_ptr	./v.h	/^ void *sv_ptr;$/;"	m	union:adpi_u	access:public
adpi_u::sv_shrti	./v.h	/^ short int sv_shrti;$/;"	m	union:adpi_u	access:public
adradd_dup_t	./igen.h	/^struct adradd_dup_t {$/;"	s
adradd_dup_t::blen	./igen.h	/^ int32 blen;               \/* blen of tmp *\/$/;"	m	struct:adradd_dup_t	access:public
adradd_dup_t::mdp	./igen.h	/^ struct mod_t *mdp;        \/* module tmp is in *\/$/;"	m	struct:adradd_dup_t	typeref:struct:adradd_dup_t::mod_t	access:public
adradd_dup_t::offset	./igen.h	/^ size_t offset;             \/* offset from the parent *\/$/;"	m	struct:adradd_dup_t	access:public
adradd_dup_t::par_ti	./igen.h	/^ int32 par_ti;             \/* parent tmp *\/$/;"	m	struct:adradd_dup_t	access:public
adradd_dup_t::res_ti	./igen.h	/^ int32 res_ti;             \/* result of adr add *\/$/;"	m	struct:adradd_dup_t	access:public
adradd_dup_t::srep	./igen.h	/^ int32 srep;               \/* srep of this tmp *\/$/;"	m	struct:adradd_dup_t	access:public
afs_reachable	./igen.h	/^ unsigned afs_reachable : 1;  \/* T => reachable from some AFS bblk if fg *\/$/;"	m	struct:bblk_t	access:public
after_suspend	./igen.h	/^ unsigned after_suspend : 1;  \/* T => entry bblk after suspend *\/$/;"	m	struct:bblk_t	access:public
ai1	./v.h	/^ int32 ai1, ai2;$/;"	m	struct:rngarr_t	access:public
ai2	./v.h	/^ int32 ai1, ai2;$/;"	m	struct:rngarr_t	access:public
aiter	./v_acc.c	/^ struct h_t *aiter;$/;"	m	struct:acciter_t	typeref:struct:acciter_t::h_t	file:	access:public
aiternxt	./v_acc.c	/^ struct acciter_t *aiternxt;$/;"	m	struct:acciter_t	typeref:struct:acciter_t::acciter_t	file:	access:public
aiterprev	./v_acc.c	/^ struct acciter_t *aiterprev;$/;"	m	struct:acciter_t	typeref:struct:acciter_t::acciter_t	file:	access:public
align_filler	./v.h	/^ unsigned align_filler : 9;   \/* empty space to align on word boundary *\/$/;"	m	struct:tev_t	access:public
all_drvrs_bidirect	./v_prp2.c	/^static int32 all_drvrs_bidirect(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
all_els_not_signed	./v_bbgen.c	/^static int32 all_els_not_signed(struct expr_t *lcbndp)$/;"	f	file:	signature:(struct expr_t *lcbndp)
all_parent_mods_recalced	./v_genfx.c	/^static int32 all_parent_mods_recalced(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
all_paths_same	./v_bbgen2.c	/^static int32 all_paths_same(struct pthdst_t *pdp, word64 *val)$/;"	f	file:	signature:(struct pthdst_t *pdp, word64 *val)
all_sig_bits_included	./v_cvr.c	/^static int32 all_sig_bits_included(struct net_t *np, int32 ii,$/;"	f	file:	signature:(struct net_t *np, int32 ii, int32 *all_excluded)
alloc_aiter	./v_acc.c	/^static struct acciter_t *alloc_aiter(void)$/;"	f	file:	signature:(void)
alloc_bblklst	./v_bbopt.c	/^static struct bblklst_t *alloc_bblklst(void)$/;"	f	file:	signature:(void)
alloc_cpnam	./v_src.c	/^static char *alloc_cpnam(char *s)$/;"	f	file:	signature:(char *s)
alloc_ctev	./v_prp.c	/^static struct ctev_t *alloc_ctev(union del_u du, int32 del_rep, $/;"	f	file:	signature:(union del_u du, int32 del_rep, struct mod_t *mdp, int32 wire_ev)
alloc_cur_tev_	./cvmacros.h	281;"	d
alloc_dfpval	./v_src.c	/^static struct dfparam_t *alloc_dfpval(void)$/;"	f	file:	signature:(void)
alloc_dpinstel	./v_ex4.c	/^static struct dpinstel_t *alloc_dpinstel(void)$/;"	f	file:	signature:(void)
alloc_drvn_const_rec	./v_cvr.c	/^static void alloc_drvn_const_rec(void)$/;"	f	file:	signature:(void)
alloc_edge	./v_trch.c	/^static struct edge_t *alloc_edge(struct net_pin_t *npp)  $/;"	f	file:	signature:(struct net_pin_t *npp)
alloc_fill_bblk_insn_order_tab	./v_bbopt.c	/^static void alloc_fill_bblk_insn_order_tab(int32 nbblks)$/;"	f	file:	signature:(int32 nbblks)
alloc_fill_ctevp_idp_map_el	./v_prp2.c	/^static void alloc_fill_ctevp_idp_map_el(struct mod_t *mdp,$/;"	f	file:	signature:(struct mod_t *mdp, struct ctev_t *ctevp, int32 t, void *vp)
alloc_fill_ctevtab_idp_map_els	./v_prp2.c	/^static void alloc_fill_ctevtab_idp_map_els(struct mod_t *mdp,$/;"	f	file:	signature:(struct mod_t *mdp, struct ctev_t **ctevtab, int32 siz_idp_area, int32 t, void *vp)
alloc_fill_idp_map_el	./v_prp2.c	/^static void alloc_fill_idp_map_el(struct mod_t *mdp, int32 base_idp_ofs,$/;"	f	file:	signature:(struct mod_t *mdp, int32 base_idp_ofs, int32 siz_idp_area, int32 t, void *vp)
alloc_glbndp_tostr	./v_src2.c	/^static char *alloc_glbndp_tostr(struct expr_t *glbndp)$/;"	f	file:	signature:(struct expr_t *glbndp)
alloc_init_1net_tgl	./v_src3.c	/^static void alloc_init_1net_tgl(struct net_t *np, struct mod_t *mdp)$/;"	f	file:	signature:(struct net_t *np, struct mod_t *mdp)
alloc_init_dpi_arginfo	./v_dpi.c	/^static void alloc_init_dpi_arginfo(struct dpi_t *dpip, int32 nargs)$/;"	f	file:	signature:(struct dpi_t *dpip, int32 nargs)
alloc_init_dpi_rec	./v_src.c	/^static struct dpi_t *alloc_init_dpi_rec(void)$/;"	f	file:	signature:(void)
alloc_init_m_itps_tgl_cover	./v_src3.c	/^static void alloc_init_m_itps_tgl_cover(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
alloc_mdvmast	./v_ex4.c	/^static struct mdvmast_t *alloc_mdvmast(void)$/;"	f	file:	signature:(void)
alloc_memcell	./v_src.c	/^static struct cell_t *alloc_memcell(void)$/;"	f	file:	signature:(void)
alloc_memcpins	./v_src.c	/^static struct cell_pin_t *alloc_memcpins(void)$/;"	f	file:	signature:(void)
alloc_ndxjmp	./v_bbgen3.c	/^static struct ndxjmp_t *alloc_ndxjmp(struct bblk_t **bbtab, int32 jtabsiz)$/;"	f	file:	signature:(struct bblk_t **bbtab, int32 jtabsiz)
alloc_node	./v_sim.c	/^static struct tqnode_t *alloc_node(word64 t)$/;"	f	file:	signature:(word64 t)
alloc_optlst	./cvc.c	/^static struct optlst_t *alloc_optlst(void)$/;"	f	file:	signature:(void)
alloc_sdf_mdp	./v_sdf.c	/^static void alloc_sdf_mdp(void)$/;"	f	file:	signature:(void)
alloc_spfy	./v_src3.c	/^static struct spfy_t *alloc_spfy(void)$/;"	f	file:	signature:(void)
alloc_task	./v_src.c	/^static struct task_t *alloc_task(struct sy_t *syp)$/;"	f	file:	signature:(struct sy_t *syp)
alloc_tev_	./cvmacros.h	275;"	d
alloc_tfarg	./v_fx3.c	/^static struct tfarg_t *alloc_tfarg(struct expr_t *argxp,$/;"	f	file:	signature:(struct expr_t *argxp, int32 anump1, int32 insts)
alloc_tn_list	./v_regasn.c	/^static struct tn_list_t *alloc_tn_list(int32 val_size)$/;"	f	file:	signature:(int32 val_size)
alloc_tnode	./v_ms.c	/^static struct tnode_t *alloc_tnode(struct symtab_t *sytp)$/;"	f	file:	signature:(struct symtab_t *sytp)
alloc_traux	./v_trch.c	/^static void alloc_traux(struct mod_t *mdp, struct net_t *np)$/;"	f	file:	signature:(struct mod_t *mdp, struct net_t *np)
alloc_tskpin	./v_src.c	/^static struct task_pin_t *alloc_tskpin(void)$/;"	f	file:	signature:(void)
alloc_udp	./v_src3.c	/^static struct udp_t *alloc_udp(struct sy_t *syp)$/;"	f	file:	signature:(struct sy_t *syp)
alloc_vpidrv	./v_vpi3.c	/^static struct vpi_drv_t *alloc_vpidrv(struct net_t *np, int32 insts)$/;"	f	file:	signature:(struct net_t *np, int32 insts)
alloc_vtx	./v_trch.c	/^static struct vtx_t *alloc_vtx(struct net_t *np, int32 bi)$/;"	f	file:	signature:(struct net_t *np, int32 bi)
alloc_vylib	./cvc.c	/^static struct vylib_t *alloc_vylib(char *nam)$/;"	f	file:	signature:(char *nam)
alloc_xtnd	./v_src2.c	/^static struct expr_t *alloc_xtnd(int32 ndi)$/;"	f	file:	signature:(int32 ndi)
alloca	./fstapi.c	65;"	d	file:
alloca	./fstapi.c	72;"	d	file:
allocinit_curdef_ip	./v_bbopt.c	/^static void allocinit_curdef_ip(struct tn_t *tnp, int32 nd_alloc)$/;"	f	file:	signature:(struct tn_t *tnp, int32 nd_alloc)
already_in_close	./fstapi.c	/^unsigned char already_in_close; \/* in case control-c handlers interrupt *\/$/;"	m	struct:fstWriterContext	file:	access:public
already_in_flush	./fstapi.c	/^unsigned char already_in_flush; \/* in case control-c handlers interrupt *\/$/;"	m	struct:fstWriterContext	file:	access:public
am1	./igen.h	/^ struct amode_t am1;$/;"	m	struct:ftval_t	typeref:struct:ftval_t::amode_t	access:public
am2	./igen.h	/^ struct amode_t am2;$/;"	m	struct:ftval_t	typeref:struct:ftval_t::amode_t	access:public
am_arg	./igen.h	/^ struct amode_t am_arg;$/;"	m	struct:asl_def_t	typeref:struct:asl_def_t::amode_t	access:public
am_ptr_u	./igen.h	/^union am_ptr_u {$/;"	u
am_ptr_u::bbp	./igen.h	/^ struct bblk_t *bbp;$/;"	m	union:am_ptr_u	typeref:struct:am_ptr_u::bblk_t	access:public
am_ptr_u::labnam	./igen.h	/^ char *labnam;$/;"	m	union:am_ptr_u	access:public
am_tni	./igen.h	/^ int32 am_tni;                \/* reg tmp name index *\/$/;"	m	struct:amode_t	access:public
amac_t	./v.h	/^struct amac_t { $/;"	s
amac_t::amxp	./v.h	/^ struct macexp_t *amxp;$/;"	m	struct:amac_t	typeref:struct:amac_t::macexp_t	access:public
amac_t::num_formal_args	./v.h	/^ int32 num_formal_args;$/;"	m	struct:amac_t	access:public
amode	./igen.h	/^ unsigned amode : 8;$/;"	m	struct:amode_t	access:public
amode_dst_is_def	./v_regasn.c	/^static int32 amode_dst_is_def(struct insn_t *ip)$/;"	f	file:	signature:(struct insn_t *ip)
amode_t	./igen.h	/^struct amode_t {$/;"	s
amode_t::am_tni	./igen.h	/^ int32 am_tni;                \/* reg tmp name index *\/$/;"	m	struct:amode_t	access:public
amode_t::amode	./igen.h	/^ unsigned amode : 8;$/;"	m	struct:amode_t	access:public
amode_t::apu	./igen.h	/^ union am_ptr_u apu;          \/* union for either labnam or bbp *\/$/;"	m	struct:amode_t	typeref:union:amode_t::am_ptr_u	access:public
amode_t::arr_base_nlo	./igen.h	/^ unsigned arr_base_nlo: 8;    \/* for glb nlo array indexing the NLO number *\/$/;"	m	struct:amode_t	access:public
amode_t::disp	./igen.h	/^ size_t disp;                   \/* byte offset (above) within tmp name area *\/$/;"	m	struct:amode_t	access:public
amode_t::is_labnam	./igen.h	/^ unsigned is_labnam : 1;      \/* union apu is a label string *\/ $/;"	m	struct:amode_t	access:public
amode_t::is_large_label	./igen.h	/^ unsigned is_large_label : 1; \/* is large model label *\/ $/;"	m	struct:amode_t	access:public
amode_t::scale	./igen.h	/^ unsigned scale : 3;          \/* scale - 0 for none, 1=2x, 2= 4x, 3=8x *\/ $/;"	m	struct:amode_t	access:public
amode_t::x86_regno	./igen.h	/^ unsigned x86_regno : 6;      \/* x86 reg num if used *\/$/;"	m	struct:amode_t	access:public
amxp	./v.h	/^ struct macexp_t *amxp;$/;"	m	struct:amac_t	typeref:struct:amac_t::macexp_t	access:public
ancmps	./v.h	/^ struct ncomp_t *ancmps;$/;"	m	struct:ncablk_t	typeref:struct:ncablk_t::ncomp_t	access:public
anp	./v.h	/^ struct net_t *anp;           \/* for is rw, the wire *\/$/;"	m	struct:tfarg_t	typeref:struct:tfarg_t::net_t	access:public
any_bit_can_tgl	./v_cvr.c	/^static int32 any_bit_can_tgl(struct mod_t *mdp, struct net_t *np, int32 bi)$/;"	f	file:	signature:(struct mod_t *mdp, struct net_t *np, int32 bi)
any_on_path_cond	./v_bbgen2.c	/^static int32 any_on_path_cond(struct pthdst_t *pdp_hdr)$/;"	f	file:	signature:(struct pthdst_t *pdp_hdr)
ap	./v.h	/^ word32 *ap;                  \/* a part of value but must be contigous *\/$/;"	m	struct:xstk_t	access:public
apu	./igen.h	/^ union am_ptr_u apu;          \/* union for either labnam or bbp *\/$/;"	m	struct:amode_t	typeref:union:amode_t::am_ptr_u	access:public
arg	./fstapi.h	/^                uint64_t arg; \/* number of array elements, struct members, or some other payload (possibly ignored) *\/$/;"	m	struct:fstHier::__anon18::fstHierAttr	access:public
arg	./v.h	/^ union tfx_u arg;$/;"	m	struct:tfarg_t	typeref:union:tfarg_t::tfx_u	access:public
arg_arr	./v.h	/^ unsigned arg_arr : 1;        \/* T => arg is verilog array name *\/$/;"	m	struct:dpiarg_t	access:public
arg_from_name	./fstapi.h	/^                uint64_t arg_from_name; \/* for when name is overloaded as a variable-length integer (FST_AT_MISC + FST_MT_SOURCESTEM) *\/$/;"	m	struct:fstHier::__anon18::fstHierAttr	access:public
arg_iotyp	./v.h	/^ unsigned arg_iotyp : 3;      \/* arg direction - using ver side vals *\/$/;"	m	struct:dpiarg_t	access:public
arg_nbytes	./v.h	/^ int32 arg_nbytes;            \/* if alloced size, else 0 *\/ $/;"	m	struct:dpiarg_t	access:public
arg_savchain_ips	./igen.h	/^ struct insn_t **arg_savchain_ips;$/;"	m	struct:asl_def_t	typeref:struct:asl_def_t::insn_t	access:public
arg_src_defips	./igen.h	/^ struct insn_t **arg_src_defips;$/;"	m	struct:asl_def_t	typeref:struct:asl_def_t::insn_t	access:public
arg_srep	./v.h	/^ unsigned arg_srep : 6;       \/* extended storage reps (for passed arrays) *\/$/;"	m	struct:dpiarg_t	access:public
arg_u_tab	./v.h	/^ union adpi_u *arg_u_tab;    \/* array of union of dpi arg values *\/$/;"	m	struct:dpi_t	typeref:union:dpi_t::adpi_u	access:public
argisvtab	./v.h	/^ byte *argisvtab;             \/* tab of v format flags for monitor *\/$/;"	m	struct:monaux_t	access:public
argv_done	./v.h	/^ unsigned argv_done : 1;$/;"	m	struct:optlst_t	access:public
arm_event_dctrl	./v_ex.c	/^static void arm_event_dctrl(struct delctrl_t *dctp, word32 *wp, int32 wlen)$/;"	f	file:	signature:(struct delctrl_t *dctp, word32 *wp, int32 wlen)
arm_nbevent_dctrl	./v_ex.c	/^static void arm_nbevent_dctrl(struct delctrl_t *dctp, struct xstk_t *xsp,$/;"	f	file:	signature:(struct delctrl_t *dctp, struct xstk_t *xsp, struct st_t *stp)
arr_base_nlo	./igen.h	/^ unsigned arr_base_nlo: 8;    \/* for glb nlo array indexing the NLO number *\/$/;"	m	struct:amode_t	access:public
arr_flat_ndx	./v.h	/^ int32 arr_flat_ndx;        \/* array index for array dumping *\/$/;"	m	struct:dmp_buf_t	access:public
arr_num_els	./v.h	/^ int32 arr_num_els;           \/* number of flattened array elements *\/$/;"	m	struct:net_t	access:public
arr_select	./v.h	/^ unsigned arr_select : 1;     \/* last dimension access of array is bsel\/psel *\/$/;"	m	struct:expr_t	access:public
arr_set_dpi_arg	./v_dpi.c	/^static void arr_set_dpi_arg(struct expr_t *argxp, struct task_pin_t *tpp,$/;"	f	file:	signature:(struct expr_t *argxp, struct task_pin_t *tpp, int32 argi, struct dpiarg_t *dap, union adpi_u *a_u_tab)
arraytypes	./fstapi.c	/^static const char *arraytypes[] = {$/;"	v	file:
arrprop_vpiget	./v_vpi2.c	/^static int32 arrprop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
arrwrdprop_vpiget	./v_vpi2.c	/^static int32 arrwrdprop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
asl_ausedefs	./igen.h	/^ struct asl_def_t *asl_ausedefs; \/* tab of asl opand usedef and tn records *\/$/;"	m	union:i_extrainfo_u	typeref:struct:i_extrainfo_u::asl_def_t	access:public
asl_def_t	./igen.h	/^struct asl_def_t {$/;"	s
asl_def_t::am_arg	./igen.h	/^ struct amode_t am_arg;$/;"	m	struct:asl_def_t	typeref:struct:asl_def_t::amode_t	access:public
asl_def_t::arg_savchain_ips	./igen.h	/^ struct insn_t **arg_savchain_ips;$/;"	m	struct:asl_def_t	typeref:struct:asl_def_t::insn_t	access:public
asl_def_t::arg_src_defips	./igen.h	/^ struct insn_t **arg_src_defips;$/;"	m	struct:asl_def_t	typeref:struct:asl_def_t::insn_t	access:public
asl_info_t	./igen.h	/^struct asl_info_t {$/;"	s
asl_info_t::asl_op_typ	./igen.h	/^ unsigned asl_op_typ[7];$/;"	m	struct:asl_info_t	access:public
asl_info_t::asl_ret_typ	./igen.h	/^ unsigned asl_ret_typ : 4;$/;"	m	struct:asl_info_t	access:public
asl_info_t::asl_rout_nam	./igen.h	/^ char *asl_rout_nam;$/;"	m	struct:asl_info_t	access:public
asl_info_t::asl_rout_num	./igen.h	/^ int32 asl_rout_num;$/;"	m	struct:asl_info_t	access:public
asl_info_t::uses_idp	./igen.h	/^ unsigned uses_idp : 1;      \/* T => needs __idp to be set upon entering *\/$/;"	m	struct:asl_info_t	access:public
asl_loc_add_dmpv_chglst_el_mdprt	./v_aslib.c	/^static void asl_loc_add_dmpv_chglst_el_mdprt(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
asl_loc_add_dmpv_chglst_el_mdprt	./v_aslib.s	/^asl_loc_add_dmpv_chglst_el_mdprt:$/;"	l
asl_loc_add_nb_event_	./v_aslib.c	1436;"	d	file:
asl_loc_add_nb_event_	./v_aslib.c	1444;"	d	file:
asl_loc_add_new_heap_time	./v_aslib.c	/^static struct heap_t *asl_loc_add_new_heap_time(struct tev_t *tevp, int32 hash)$/;"	f	file:	signature:(struct tev_t *tevp, int32 hash)
asl_loc_add_new_heap_time	./v_aslib.s	/^asl_loc_add_new_heap_time:$/;"	l
asl_loc_add_pnd0_event	./v_aslib.c	/^static void asl_loc_add_pnd0_event(struct tev_t *tevp)$/;"	f	file:	signature:(struct tev_t *tevp)
asl_loc_add_pnd0_event_dl	./v_aslib.c	/^static void asl_loc_add_pnd0_event_dl(struct tev_t *tevp)$/;"	f	file:	signature:(struct tev_t *tevp)
asl_loc_add_static_nchglst	./v_aslib.c	/^static void asl_loc_add_static_nchglst(struct nchglst_t *nchglp)$/;"	f	file:	signature:(struct nchglst_t *nchglp)
asl_loc_assign_1mdrwire	./v_aslib.c	/^static void asl_loc_assign_1mdrwire(struct net_t *np, struct nchglst_t *nchglp)$/;"	f	file:	signature:(struct net_t *np, struct nchglst_t *nchglp)
asl_loc_assign_1mdrwire	./v_aslib.s	/^asl_loc_assign_1mdrwire:$/;"	l
asl_loc_assign_1tranbit	./v_aslib.c	/^static void asl_loc_assign_1tranbit(struct net_t *np, int32 bi, word32 nav, $/;"	f	file:	signature:(struct net_t *np, int32 bi, word32 nav, word32 nbv)
asl_loc_assign_chged_vtxs	./v_aslib.c	/^static void asl_loc_assign_chged_vtxs(void)$/;"	f	file:	signature:(void)
asl_loc_assign_chged_vtxs	./v_aslib.s	/^asl_loc_assign_chged_vtxs:$/;"	l
asl_loc_bit1_vpi_or_tran_wireforce	./v_aslib.c	/^extern void asl_loc_bit1_vpi_or_tran_wireforce(struct net_t *np, $/;"	f	signature:(struct net_t *np, word32 *ap, word32 *bp, int32 ibase, int32 lhsbi, int32 rhsbi, struct nchglst_t *nchglp)
asl_loc_bit1_vpi_or_tran_wireforce	./v_aslib.s	/^asl_loc_bit1_vpi_or_tran_wireforce:$/;"	l
asl_loc_cancel_1mipdev	./v_aslib.c	/^static void asl_loc_cancel_1mipdev(struct tev_t *tevp)$/;"	f	file:	signature:(struct tev_t *tevp)
asl_loc_chg_st_bit	./v_aslib.c	/^static void asl_loc_chg_st_bit(struct net_t *np, int32 biti, $/;"	f	file:	signature:(struct net_t *np, int32 biti, word32 av, word32 bv, struct nchglst_t *nchglp)
asl_loc_chg_st_bit	./v_aslib.s	/^asl_loc_chg_st_bit:$/;"	l
asl_loc_chg_st_vecval	./v_aslib.c	/^static int32 asl_loc_chg_st_vecval(word32 *dwp, int32 blen, word32 *ap, $/;"	f	file:	signature:(word32 *dwp, int32 blen, word32 *ap, word32 *bp)
asl_loc_chg_st_vecval_2state	./v_aslib.c	/^static int32 asl_loc_chg_st_vecval_2state(word32 *dwp, int32 blen, word32 *ap)$/;"	f	file:	signature:(word32 *dwp, int32 blen, word32 *ap)
asl_loc_chg_vec_lhsbsel	./v_aslib.c	/^static int32 asl_loc_chg_vec_lhsbsel(word32 *dwp, int32 dbit, word32 aw, $/;"	f	file:	signature:(word32 *dwp, int32 dbit, word32 aw, word32 bw, int32 blen)
asl_loc_chg_vec_lhsbsel	./v_aslib.s	/^asl_loc_chg_vec_lhsbsel:$/;"	l
asl_loc_chg_vec_lhsbsel_2state	./v_aslib.c	/^static int32 asl_loc_chg_vec_lhsbsel_2state(word32 *dwp, int32 dbit, word32 aw) $/;"	f	file:	signature:(word32 *dwp, int32 dbit, word32 aw)
asl_loc_cmp_str_vals	./v_aslib.c	/^static int32 asl_loc_cmp_str_vals(word32 *op1ap, word32 *op2ap, int32 opwid)$/;"	f	file:	signature:(word32 *op1ap, word32 *op2ap, int32 opwid)
asl_loc_combine_xprop_accum	./v_aslib.c	/^static void asl_loc_combine_xprop_accum(word32 *accum_wp, word32 *ap, $/;"	f	file:	signature:(word32 *accum_wp, word32 *ap, word32 *bp, int32 nwid)
asl_loc_combine_xprop_accum	./v_aslib.s	/^asl_loc_combine_xprop_accum:$/;"	l
asl_loc_combine_xprop_accum_1w	./v_aslib.c	/^static void asl_loc_combine_xprop_accum_1w(word32 *accum_wp, word32 aval, $/;"	f	file:	signature:(word32 *accum_wp, word32 aval, word32 bval)
asl_loc_conflict_list	./v_aslib.c	/^static void asl_loc_conflict_list(struct tev_t *tevp, struct heap_t *time_hp)$/;"	f	file:	signature:(struct tev_t *tevp, struct heap_t *time_hp)
asl_loc_conflict_list	./v_aslib.s	/^asl_loc_conflict_list:$/;"	l
asl_loc_delx_to_deltim	./v_aslib.c	/^static word64 asl_loc_delx_to_deltim(struct expr_t *dxp, struct xstk_t *xsp)$/;"	f	file:	signature:(struct expr_t *dxp, struct xstk_t *xsp)
asl_loc_delx_to_deltim	./v_aslib.s	/^asl_loc_delx_to_deltim:$/;"	l
asl_loc_do_1bit_wireforce	./v_aslib.c	/^static void asl_loc_do_1bit_wireforce(struct st_t *qcstp, struct net_t *np,$/;"	f	file:	signature:(struct st_t *qcstp, struct net_t *np, int32 ibase, int32 lhsbi, int32 rhsbi, t_midat *xmr_idp, struct dceauxlst_t *qcdcep, t_midat *save_idp, struct nchglst_t *nchglp)
asl_loc_do_1bit_wireforce	./v_aslib.s	/^asl_loc_do_1bit_wireforce:$/;"	l
asl_loc_do_qc2_regstore	./v_aslib.c	/^static void asl_loc_do_qc2_regstore(struct net_t *np, struct qcval_t *qcvalp,$/;"	f	file:	signature:(struct net_t *np, struct qcval_t *qcvalp, struct xstk_t *xsp, struct nchglst_t *nchglp)
asl_loc_do_qc2_wirestore	./v_aslib.c	/^static void asl_loc_do_qc2_wirestore(struct net_t *np, struct qcval_t *qcvalp,$/;"	f	file:	signature:(struct net_t *np, struct qcval_t *qcvalp, struct xstk_t *xsp, struct nchglst_t *nchglp)
asl_loc_do_qc2_wirestore	./v_aslib.s	/^asl_loc_do_qc2_wirestore:$/;"	l
asl_loc_do_qc_assign	./v_aslib.c	/^static void asl_loc_do_qc_assign(struct st_t *qcastp, struct expr_t *lhsx,$/;"	f	file:	signature:(struct st_t *qcastp, struct expr_t *lhsx, int32 rhsbi, struct dceauxlstlst_t *dcllp, struct nchglst_t *nchglp, size_t nchg_idp_ofs)
asl_loc_do_qc_deassign	./v_aslib.c	/^static void asl_loc_do_qc_deassign(struct expr_t *lhsx) $/;"	f	file:	signature:(struct expr_t *lhsx)
asl_loc_do_qc_deassign	./v_aslib.s	/^asl_loc_do_qc_deassign:$/;"	l
asl_loc_do_qc_regforce	./v_aslib.c	/^static void asl_loc_do_qc_regforce(struct st_t *qcastp, $/;"	f	file:	signature:(struct st_t *qcastp, struct expr_t *lhsx, int32 rhsbi, struct dceauxlstlst_t *dcllp, struct nchglst_t *nchglp, size_t nchg_idp_ofs)
asl_loc_do_qc_regrelease	./v_aslib.c	/^static void asl_loc_do_qc_regrelease(struct expr_t *lhsx,$/;"	f	file:	signature:(struct expr_t *lhsx, struct nchglst_t *nchglp, size_t nchg_idp_ofs)
asl_loc_do_qc_regrelease	./v_aslib.s	/^asl_loc_do_qc_regrelease:$/;"	l
asl_loc_do_qc_store	./v_aslib.c	/^static void asl_loc_do_qc_store(struct net_t *np, struct qcval_t *qcvalp,$/;"	f	file:	signature:(struct net_t *np, struct qcval_t *qcvalp, struct expr_t *lhsx, struct expr_t *rhsx, struct nchglst_t *nchglp)
asl_loc_do_qc_store	./v_aslib.s	/^asl_loc_do_qc_store:$/;"	l
asl_loc_do_qc_tran_wireforce	./v_aslib.c	/^static void asl_loc_do_qc_tran_wireforce(struct st_t *qcfstp, $/;"	f	file:	signature:(struct st_t *qcfstp, struct expr_t *lhsx, int32 rhsbi, struct nchglst_t *nchglp_base, size_t nchg_idp_ofs)
asl_loc_do_qc_tran_wireforce	./v_aslib.s	/^asl_loc_do_qc_tran_wireforce:$/;"	l
asl_loc_do_qc_tran_wirerelease	./v_aslib.c	/^static void asl_loc_do_qc_tran_wirerelease(struct expr_t *lhsx, $/;"	f	file:	signature:(struct expr_t *lhsx, struct nchglst_t *nchglp_base, size_t nchg_idp_ofs)
asl_loc_do_qc_tran_wirerelease	./v_aslib.s	/^asl_loc_do_qc_tran_wirerelease:$/;"	l
asl_loc_do_qc_wire_intran_force	./v_aslib.c	/^static void asl_loc_do_qc_wire_intran_force(struct net_t *np, int32 biti, $/;"	f	file:	signature:(struct net_t *np, int32 biti, word32 aval, word32 bval, t_midat *lhs_idp, struct nchglst_t *nchglp)
asl_loc_do_qc_wire_intran_force	./v_aslib.s	/^asl_loc_do_qc_wire_intran_force:$/;"	l
asl_loc_do_qc_wire_intran_release	./v_aslib.c	/^static void asl_loc_do_qc_wire_intran_release(struct net_t *np, int32 biti,$/;"	f	file:	signature:(struct net_t *np, int32 biti, struct expr_t *lhsx, t_midat *idp, struct nchglst_t *nchglp)
asl_loc_do_qc_wire_intran_release	./v_aslib.s	/^asl_loc_do_qc_wire_intran_release:$/;"	l
asl_loc_do_qc_wireforce	./v_aslib.c	/^static void asl_loc_do_qc_wireforce(struct st_t *qcfstp, struct expr_t *lhsx,$/;"	f	file:	signature:(struct st_t *qcfstp, struct expr_t *lhsx, int32 rhsbi, struct nchglst_t *nchglp, size_t nchg_idp_ofs)
asl_loc_do_qc_wireforce	./v_aslib.s	/^asl_loc_do_qc_wireforce:$/;"	l
asl_loc_do_qc_wirerelease	./v_aslib.c	/^static void asl_loc_do_qc_wirerelease(struct expr_t *lhsx, $/;"	f	file:	signature:(struct expr_t *lhsx, struct nchglst_t *nchglp, size_t nchg_idp_ofs)
asl_loc_do_qc_wirerelease	./v_aslib.s	/^asl_loc_do_qc_wirerelease:$/;"	l
asl_loc_eval_1w_nonstren_wire	./v_aslib.c	/^static void asl_loc_eval_1w_nonstren_wire(word32 *resa, word32 *resb,$/;"	f	file:	signature:(word32 *resa, word32 *resb, word32 op2a, word32 op2b)
asl_loc_eval_1w_nonstren_wire_and	./v_aslib.c	/^static void asl_loc_eval_1w_nonstren_wire_and(word32 *resa, word32 *resb,$/;"	f	file:	signature:(word32 *resa, word32 *resb, word32 op2a, word32 op2b)
asl_loc_eval_1w_nonstren_wire_or	./v_aslib.c	/^static void asl_loc_eval_1w_nonstren_wire_or(word32 *resa, word32 *resb,$/;"	f	file:	signature:(word32 *resa, word32 *resb, word32 op2a, word32 op2b)
asl_loc_eval_assign_bid_chan	./v_aslib.c	/^static void asl_loc_eval_assign_bid_chan(struct chanrec_t *chanp) $/;"	f	file:	signature:(struct chanrec_t *chanp)
asl_loc_eval_assign_stbid_chan	./v_aslib.c	/^static void asl_loc_eval_assign_stbid_chan(struct chanrec_t *chanp)$/;"	f	file:	signature:(struct chanrec_t *chanp)
asl_loc_eval_combine_bid_chan	./v_aslib.c	/^static word32 asl_loc_eval_combine_bid_chan(struct chanrec_t *chanp) $/;"	f	file:	signature:(struct chanrec_t *chanp)
asl_loc_eval_combine_stbid_chan	./v_aslib.c	/^static word32 asl_loc_eval_combine_stbid_chan(struct chanrec_t *chanp)$/;"	f	file:	signature:(struct chanrec_t *chanp)
asl_loc_eval_tranif_onoff	./v_aslib.c	/^static void asl_loc_eval_tranif_onoff(struct gate_t *gp)$/;"	f	file:	signature:(struct gate_t *gp)
asl_loc_gate_chg_lhsbsel	./v_aslib.c	/^static void asl_loc_gate_chg_lhsbsel(word32 *dwp, int32 dbit, word32 sw)$/;"	f	file:	signature:(word32 *dwp, int32 dbit, word32 sw)
asl_loc_get_impth_del	./v_aslib.c	/^static void asl_loc_get_impth_del(word64 *pschtim, struct net_t *np, $/;"	f	file:	signature:(word64 *pschtim, struct net_t *np, struct mipd_t *mipdp)
asl_loc_get_new_event	./v_aslib.c	/^static struct tev_t *asl_loc_get_new_event(struct tev_t *tevp)$/;"	f	file:	signature:(struct tev_t *tevp)
asl_loc_get_new_event	./v_aslib.s	/^asl_loc_get_new_event:$/;"	l
asl_loc_get_new_event_nb	./v_aslib.c	/^static struct tev_t *asl_loc_get_new_event_nb(struct tev_t *tevp)$/;"	f	file:	signature:(struct tev_t *tevp)
asl_loc_get_new_event_nb	./v_aslib.s	/^asl_loc_get_new_event_nb:$/;"	l
asl_loc_get_new_nbmem_event	./v_aslib.c	/^static struct tev_t *asl_loc_get_new_nbmem_event(struct tev_t *tevp, $/;"	f	file:	signature:(struct tev_t *tevp, int32 nbytes)
asl_loc_get_new_nbmem_event	./v_aslib.s	/^asl_loc_get_new_nbmem_event:$/;"	l
asl_loc_get_new_thread_event	./v_aslib.c	/^static struct tev_t *asl_loc_get_new_thread_event(void)$/;"	f	file:	signature:(void)
asl_loc_get_new_thread_event	./v_aslib.s	/^asl_loc_get_new_thread_event:$/;"	l
asl_loc_get_path_del	./v_aslib.c	/^static struct pthdst_t *asl_loc_get_path_del(struct rngdwir_t *dwirp, $/;"	f	file:	signature:(struct rngdwir_t *dwirp, int32 biti, word64 *pschtim)
asl_loc_get_path_del_scalar	./v_aslib.c	/^static struct pthdst_t *asl_loc_get_path_del_scalar(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, word64 *pschtim)
asl_loc_grow_event_heap	./v_aslib.c	/^static void asl_loc_grow_event_heap(void)$/;"	f	file:	signature:(void)
asl_loc_insert_event	./v_aslib.c	/^static inline void asl_loc_insert_event(struct tev_t *tevp)$/;"	f	file:	signature:(struct tev_t *tevp)
asl_loc_insert_event_	./v_aslib.c	464;"	d	file:
asl_loc_insert_event_	./v_aslib.c	476;"	d	file:
asl_loc_insert_event_nb	./v_aslib.c	/^static inline void asl_loc_insert_event_nb(struct tev_t *tevp)$/;"	f	file:	signature:(struct tev_t *tevp)
asl_loc_insert_event_nb_	./v_aslib.c	465;"	d	file:
asl_loc_insert_event_nb_	./v_aslib.c	477;"	d	file:
asl_loc_insert_event_nb_t	./v_aslib.c	/^static inline void asl_loc_insert_event_nb_t(struct tev_t *tevp)$/;"	f	file:	signature:(struct tev_t *tevp)
asl_loc_insert_event_nb_t_	./v_aslib.c	478;"	d	file:
asl_loc_ld_vtx_netbit	./v_aslib.c	/^static void asl_loc_ld_vtx_netbit(word32 *ap, word32 *bp, struct net_t *np,$/;"	f	file:	signature:(word32 *ap, word32 *bp, struct net_t *np, int32 bi)
asl_loc_ld_vtx_netbit	./v_aslib.s	/^asl_loc_ld_vtx_netbit:$/;"	l
asl_loc_nb_conflict_list	./v_aslib.c	/^static void asl_loc_nb_conflict_list(struct tev_t *tevp, struct heap_t *time_hp)$/;"	f	file:	signature:(struct tev_t *tevp, struct heap_t *time_hp)
asl_loc_nb_conflict_list	./v_aslib.s	/^asl_loc_nb_conflict_list:$/;"	l
asl_loc_qc_tran_wireforce	./v_aslib.c	/^static void asl_loc_qc_tran_wireforce(struct net_t *np, int32 biti, int32 bitj,$/;"	f	file:	signature:(struct net_t *np, int32 biti, int32 bitj, int32 rhsbi, t_midat *idp, struct st_t *qcfstp, struct nchglst_t *nchglp_base)
asl_loc_qc_tran_wirerelease	./v_aslib.c	/^static void asl_loc_qc_tran_wirerelease(struct net_t *np, int32 biti, $/;"	f	file:	signature:(struct net_t *np, int32 biti, int32 bitj, t_midat *idp, struct expr_t *lhsx, struct nchglst_t *nchglp_base)
asl_loc_real_to_ticks	./v_aslib.c	/^static word64 asl_loc_real_to_ticks(double d1, struct mod_t *mdp)$/;"	f	file:	signature:(double d1, struct mod_t *mdp)
asl_loc_record_nchg	./v_aslib.c	/^static void asl_loc_record_nchg(struct net_t *np, struct nchglst_t *nchglp)$/;"	f	file:	signature:(struct net_t *np, struct nchglst_t *nchglp)
asl_loc_record_nchg	./v_aslib.s	/^asl_loc_record_nchg:$/;"	l
asl_loc_record_sel_nchg	./v_aslib.c	/^static void asl_loc_record_sel_nchg(struct net_t *np, struct nchglst_t *nchglp,$/;"	f	file:	signature:(struct net_t *np, struct nchglst_t *nchglp, int32 biti)
asl_loc_record_sel_nchg	./v_aslib.s	/^asl_loc_record_sel_nchg:$/;"	l
asl_loc_reschedule_1mipd	./v_aslib.c	/^static void asl_loc_reschedule_1mipd(int32 bi, struct tev_t *tevp, $/;"	f	file:	signature:(int32 bi, struct tev_t *tevp, word64 newtim)
asl_loc_reschedule_1wev	./v_aslib.c	/^static void asl_loc_reschedule_1wev(struct tev_t *tevp, word32 newval, $/;"	f	file:	signature:(struct tev_t *tevp, word32 newval, word64 newtim)
asl_loc_reschedule_scalar_1mipd	./v_aslib.c	/^static void asl_loc_reschedule_scalar_1mipd(struct tev_t *tevp, word64 newtim)$/;"	f	file:	signature:(struct tev_t *tevp, word64 newtim)
asl_loc_rtl_dist_uniform	./v_aslib.c	/^static int32 asl_loc_rtl_dist_uniform(int32 *seed, int32 start, int32 end)$/;"	f	file:	signature:(int32 *seed, int32 start, int32 end)
asl_loc_schd_1bitpthdrvr	./v_aslib.c	/^static int32 asl_loc_schd_1bitpthdrvr(struct net_t *np, int32 biti,$/;"	f	file:	signature:(struct net_t *np, int32 biti, struct tev_t *ptevp)
asl_loc_schd_1bitpthdrvr	./v_aslib.s	/^asl_loc_schd_1bitpthdrvr:$/;"	l
asl_loc_sched_fj_subthread	./v_aslib.c	/^static struct thread_t *asl_loc_sched_fj_subthread(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
asl_loc_sched_mipd_nchg	./v_aslib.c	/^static void asl_loc_sched_mipd_nchg(struct net_t *np, int32 bi,$/;"	f	file:	signature:(struct net_t *np, int32 bi, struct mipd_t *mipdp, struct tev_t *ptevp)
asl_loc_schedule_1wev	./v_aslib.c	/^static void asl_loc_schedule_1wev(int32 bi, struct tev_t *tevp,$/;"	f	file:	signature:(int32 bi, struct tev_t *tevp, word64 ndel, word64 schtim, word32 newval)
asl_loc_schedule_1wev	./v_aslib.s	/^asl_loc_schedule_1wev:$/;"	l
asl_loc_set_restore_xprop_accum_block	./v_aslib.c	/^static void asl_loc_set_restore_xprop_accum_block(struct xprop_t *xprop, $/;"	f	file:	signature:(struct xprop_t *xprop, int32 combine_blocks)
asl_loc_set_restore_xprop_accum_block	./v_aslib.s	/^asl_loc_set_restore_xprop_accum_block:$/;"	l
asl_loc_set_restore_xprop_accum_block_selfv	./v_aslib.c	/^static void asl_loc_set_restore_xprop_accum_block_selfv(struct xprop_t *xprop, $/;"	f	file:	signature:(struct xprop_t *xprop, int32 combine_blocks)
asl_loc_set_restore_xprop_accum_block_selfv	./v_aslib.s	/^asl_loc_set_restore_xprop_accum_block_selfv:$/;"	l
asl_loc_stassign_1tranbit	./v_aslib.c	/^static void asl_loc_stassign_1tranbit(struct net_t *np, int32 bi, word32 sbv)$/;"	f	file:	signature:(struct net_t *np, int32 bi, word32 sbv)
asl_loc_stmt_assign_to_accum_1w_id	./v_aslib.c	/^static void asl_loc_stmt_assign_to_accum_1w_id(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, struct xprop_t *xprop, word32 aval, word32 bval)
asl_loc_stmt_assign_to_accum_1w_id	./v_aslib.s	/^asl_loc_stmt_assign_to_accum_1w_id:$/;"	l
asl_loc_stmt_assign_to_accum_wide_id	./v_aslib.c	/^static void asl_loc_stmt_assign_to_accum_wide_id(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, struct xprop_t *xprop, word32 *ap, word32 *bp)
asl_loc_stmt_assign_to_accum_wide_id	./v_aslib.s	/^asl_loc_stmt_assign_to_accum_wide_id:$/;"	l
asl_loc_uniform	./v_aslib.c	/^static double asl_loc_uniform(int32 *seed, int32 start, int32 end)$/;"	f	file:	signature:(int32 *seed, int32 start, int32 end)
asl_loc_vec_eval_assign_bid_chan	./v_aslib.c	/^static void asl_loc_vec_eval_assign_bid_chan(struct chanrec_t *chanp) $/;"	f	file:	signature:(struct chanrec_t *chanp)
asl_loc_vec_eval_assign_stbid_chan	./v_aslib.c	/^static void asl_loc_vec_eval_assign_stbid_chan(struct chanrec_t *chanp)$/;"	f	file:	signature:(struct chanrec_t *chanp)
asl_op_typ	./igen.h	/^ unsigned asl_op_typ[7];$/;"	m	struct:asl_info_t	access:public
asl_ret_typ	./igen.h	/^ unsigned asl_ret_typ : 4;$/;"	m	struct:asl_info_t	access:public
asl_rout_nam	./igen.h	/^ char *asl_rout_nam;$/;"	m	struct:asl_info_t	access:public
asl_rout_num	./igen.h	/^ int32 asl_rout_num;$/;"	m	struct:asl_info_t	access:public
asl_wide_all_trk_con	./v_bbopt.c	/^static int32 asl_wide_all_trk_con(int32 one_def, int32 *trk_state_vec,$/;"	f	file:	signature:(int32 one_def, int32 *trk_state_vec, int32 arg_wlen)
asm_partition_cnt	./v.h	/^ int32 asm_partition_cnt;     \/* asm files partitioned into N files *\/    $/;"	m	struct:mod_t	access:public
asm_wr_globl	./v_asmlnk.c	/^static void asm_wr_globl(FILE *fp, char *glbnam, size_t glbsiz)$/;"	f	file:	signature:(FILE *fp, char *glbnam, size_t glbsiz)
assgn_2005_is_param	./v_genfx.c	/^static void assgn_2005_is_param(struct net_t *np, struct xstk_t *xsp,$/;"	f	file:	signature:(struct net_t *np, struct xstk_t *xsp, struct expr_t *xrhs, int32 ninsts, int32 iti)
assgn_idnums_and_bld_indices	./v_prp.c	/^static void assgn_idnums_and_bld_indices(void)$/;"	f	file:	signature:(void)
assgnfunc_set	./v.h	/^ unsigned assgnfunc_set : 1;  \/* T => know the port assign func *\/$/;"	m	struct:mod_pin_t	access:public
assign_1tranbit	./v_trch.c	/^static void assign_1tranbit(struct net_t *np, int32 bi, word32 nav, word32 nbv)$/;"	f	file:	signature:(struct net_t *np, int32 bi, word32 nav, word32 nbv)
assign_alllhs_bits	./v_ex3.c	/^static void assign_alllhs_bits(struct expr_t *lhsx, struct xstk_t *xsp)$/;"	f	file:	signature:(struct expr_t *lhsx, struct xstk_t *xsp)
assign_bit_to_net	./v_bbgen2.c	/^static void assign_bit_to_net(struct net_t *np, int32 bi, int32 val_ti)$/;"	f	file:	signature:(struct net_t *np, int32 bi, int32 val_ti)
assign_chged_vtxs	./v_trch.c	/^static void assign_chged_vtxs(void)$/;"	f	file:	signature:(void)
assign_conta_rhs	./v_bbgen2.c	/^static void assign_conta_rhs(struct conta_t *cap, int32 rhs_ti)$/;"	f	file:	signature:(struct conta_t *cap, int32 rhs_ti)
assign_net_to_accum	./v_xprop.c	/^static void assign_net_to_accum(struct expr_t *lhsx, word32 *ap, word32 *bp,$/;"	f	file:	signature:(struct expr_t *lhsx, word32 *ap, word32 *bp, struct xprop_t *xprop)
assign_regs	./v_regasn.c	/^static int32 assign_regs(int32 *regs, int32 num_regs,$/;"	f	file:	signature:(int32 *regs, int32 num_regs, int32 *call_byte_regs, int32 num_call_byte, int32 *call_regs, int32 num_call_regs, int32 *byte_word_regs, int32 num_byte_word_regs, int32 *all_gen_regs, int32 num_gen_regs, int32 ret_on_spill, int32 *spill_regs, struct flowg_t *fgp)
assign_tmpregs_to_regs	./v_regasn.c	/^static int32 assign_tmpregs_to_regs(struct flowg_t *fgp, $/;"	f	file:	signature:(struct flowg_t *fgp, struct avlnode_t **tn_ref_avltab, int32 tn_refs, int32 uses_idp_tmp)
assign_to_index_width_psel	./v_ex3.c	/^static void assign_to_index_width_psel(struct expr_t *idndp, $/;"	f	file:	signature:(struct expr_t *idndp, struct expr_t *xlhs, word32 *ap, word32 *bp)
assign_x86_reg_set	./v_regasn.c	/^static int32 assign_x86_reg_set(struct flowg_t *fgp, struct tn_t *tnp,$/;"	f	file:	signature:(struct flowg_t *fgp, struct tn_t *tnp, int32 *registers, int32 avail_regs, int32 regno)
assign_xprop_value	./v_xprop.c	/^static void assign_xprop_value(struct st_t *stp, struct xstk_t *xsp)$/;"	f	file:	signature:(struct st_t *stp, struct xstk_t *xsp)
assoc_tsk	./v.h	/^ struct task_t *assoc_tsk;    \/* if created from task, connection to it *\/$/;"	m	struct:thread_t	typeref:struct:thread_t::task_t	access:public
astmts	./v.h	/^ struct st_t **astmts;           \/* assign stmts - all know to be the same *\/$/;"	m	struct:xprop_t	typeref:struct:xprop_t::st_t	access:public
asynchon	./v.h	/^ byte *asynchon;              \/* per inst. async on flag *\/$/;"	m	struct:tfrec_t	access:public
attr	./fstapi.h	/^                } attr;$/;"	m	union:fstHier::__anon18	typeref:struct:fstHier::__anon18::fstHierAttr	access:public
attr_fnind	./v.h	/^ unsigned attr_fnind : 16;    \/* file attribute instance defined at *\/$/;"	m	struct:attr_t	access:public
attr_seen	./v.h	/^ unsigned attr_seen : 1;      \/* turn on when see attr of attr tok type *\/$/;"	m	struct:attr_t	access:public
attr_t	./v.h	/^struct attr_t {$/;"	s
attr_t::attr_fnind	./v.h	/^ unsigned attr_fnind : 16;    \/* file attribute instance defined at *\/$/;"	m	struct:attr_t	access:public
attr_t::attr_seen	./v.h	/^ unsigned attr_seen : 1;      \/* turn on when see attr of attr tok type *\/$/;"	m	struct:attr_t	access:public
attr_t::attr_tok	./v.h	/^ unsigned attr_tok : 8;       \/* token attribute on *\/$/;"	m	struct:attr_t	access:public
attr_t::attr_xp	./v.h	/^ struct expr_t *attr_xp;      \/* expr - nil if no value expr *\/$/;"	m	struct:attr_t	typeref:struct:attr_t::expr_t	access:public
attr_t::attrlin_cnt	./v.h	/^ int32 attrlin_cnt;           \/* and line no. *\/$/;"	m	struct:attr_t	access:public
attr_t::attrnam	./v.h	/^ char *attrnam;               \/* name but before parsed entire attr inst str *\/ $/;"	m	struct:attr_t	access:public
attr_t::attrnxt	./v.h	/^ struct attr_t *attrnxt;$/;"	m	struct:attr_t	typeref:struct:attr_t::attr_t	access:public
attr_tok	./v.h	/^ unsigned attr_tok : 8;       \/* token attribute on *\/$/;"	m	struct:attr_t	access:public
attr_xp	./v.h	/^ struct expr_t *attr_xp;      \/* expr - nil if no value expr *\/$/;"	m	struct:attr_t	typeref:struct:attr_t::expr_t	access:public
attrlin_cnt	./v.h	/^ int32 attrlin_cnt;           \/* and line no. *\/$/;"	m	struct:attr_t	access:public
attrnam	./v.h	/^ char *attrnam;               \/* name but before parsed entire attr inst str *\/ $/;"	m	struct:attr_t	access:public
attrnxt	./v.h	/^ struct attr_t *attrnxt;$/;"	m	struct:attr_t	typeref:struct:attr_t::attr_t	access:public
attrtypes	./fstapi.c	/^static const char *attrtypes[] = {$/;"	v	file:
aval	./igen.h	/^ word32 aval;                 \/* for constant expr, value, a part *\/$/;"	m	struct:icasx_t	access:public
aval	./v.h	/^ word32 aval;                  \/* aways 1 bit constant value (for rhs only) *\/$/;"	m	struct:pbexpr_t	access:public
avl_alloc	./igen.h	/^ struct avlnode_t *(*avl_alloc)(void *);$/;"	m	struct:avlhd_t	typeref:struct:avlhd_t::avl_alloc	access:public
avl_cmp	./igen.h	/^ cmpsword (*avl_cmp)(const void *, const struct avlnode_t *);$/;"	m	struct:avlhd_t	access:public
avl_one_rot	./v_cvcrt.c	/^static void avl_one_rot(struct avlnode_t *bal_pt, struct avlnode_t *bal_down, $/;"	f	file:	signature:(struct avlnode_t *bal_pt, struct avlnode_t *bal_down, struct avlnode_t *balpt_par)
avl_root	./igen.h	/^ struct avlnode_t *avl_root;$/;"	m	struct:avlhd_t	typeref:struct:avlhd_t::avlnode_t	access:public
avl_two_rot	./v_cvcrt.c	/^static void avl_two_rot(struct avlnode_t *bal_pt, struct avlnode_t *bal_down,$/;"	f	file:	signature:(struct avlnode_t *bal_pt, struct avlnode_t *bal_down, struct avlnode_t *balpt_par)
avlhd_t	./igen.h	/^struct avlhd_t {$/;"	s
avlhd_t::avl_alloc	./igen.h	/^ struct avlnode_t *(*avl_alloc)(void *);$/;"	m	struct:avlhd_t	typeref:struct:avlhd_t::avl_alloc	access:public
avlhd_t::avl_cmp	./igen.h	/^ cmpsword (*avl_cmp)(const void *, const struct avlnode_t *);$/;"	m	struct:avlhd_t	access:public
avlhd_t::avl_root	./igen.h	/^ struct avlnode_t *avl_root;$/;"	m	struct:avlhd_t	typeref:struct:avlhd_t::avlnode_t	access:public
avlhd_t::num_nodes	./igen.h	/^ int32 num_nodes;$/;"	m	struct:avlhd_t	access:public
avlnode_t	./igen.h	/^struct avlnode_t {$/;"	s
avlnode_t::bal	./igen.h	/^ unsigned bal : 8;$/;"	m	struct:avlnode_t	access:public
avlnode_t::lp	./igen.h	/^ struct avlnode_t *lp, *rp;$/;"	m	struct:avlnode_t	typeref:struct:avlnode_t::avlnode_t	access:public
avlnode_t::rp	./igen.h	/^ struct avlnode_t *lp, *rp;$/;"	m	struct:avlnode_t	typeref:struct:avlnode_t::	access:public
avlnode_t::valp	./igen.h	/^ void *valp;                  \/* probably ptr to record of compare values *\/$/;"	m	struct:avlnode_t	access:public
avlnode_t::via_dir	./igen.h	/^ unsigned via_dir : 8;$/;"	m	struct:avlnode_t	access:public
awp	./v.h	/^ word32 *awp;                 \/* for 0th return value just the value *\/$/;"	m	union:tfx_u	access:public
ax1	./v.h	/^ struct expr_t *ax1, *ax2;$/;"	m	struct:ncomp_t	typeref:struct:ncomp_t::expr_t	access:public
ax2	./v.h	/^ struct expr_t *ax1, *ax2;$/;"	m	struct:ncomp_t	typeref:struct:ncomp_t::	access:public
axp	./v.h	/^ struct expr_t *axp;          \/* for arg the expr. *\/$/;"	m	union:tfx_u	typeref:struct:tfx_u::expr_t	access:public
bal	./igen.h	/^ unsigned bal : 8;$/;"	m	struct:avlnode_t	access:public
bal	./v.h	/^ unsigned bal : 8;$/;"	m	struct:tnode_t	access:public
base	./lz4.c	/^    const BYTE* base;$/;"	m	struct:__anon5	file:	access:public
bb_def_tree	./igen.h	/^ struct avlhd_t *bb_def_tree; \/* avl tree of bblk this tn defined in *\/ $/;"	m	struct:tn_t	typeref:struct:tn_t::avlhd_t	access:public
bb_use_tree	./igen.h	/^ struct avlhd_t *bb_use_tree; \/* avl tree of bblk this tn used (refed) in *\/ $/;"	m	struct:tn_t	typeref:struct:tn_t::avlhd_t	access:public
bbe_prev	./igen.h	/^ struct bbedge_t *bbe_prev;   \/* list of basic blk predecesor edges *\/$/;"	m	struct:bblk_t	typeref:struct:bblk_t::bbedge_t	access:public
bbedge_t	./igen.h	/^struct bbedge_t {$/;"	s
bbedge_t::bbenxt	./igen.h	/^ struct bbedge_t *bbenxt;$/;"	m	struct:bbedge_t	typeref:struct:bbedge_t::bbedge_t	access:public
bbedge_t::eblkp	./igen.h	/^ struct bblk_t *eblkp;$/;"	m	struct:bbedge_t	typeref:struct:bbedge_t::bblk_t	access:public
bbenxt	./igen.h	/^ struct bbedge_t *bbenxt;$/;"	m	struct:bbedge_t	typeref:struct:bbedge_t::bbedge_t	access:public
bblk_dup_node_alloc	./v_bbgen3.c	/^static struct avlnode_t *bblk_dup_node_alloc(void *bbp)$/;"	f	file:	signature:(void *bbp)
bblk_node_cmp	./v_bbgen3.c	/^static cmpsword bblk_node_cmp(const void *valp, const struct avlnode_t *nodp)$/;"	f	file:	signature:(const void *valp, const struct avlnode_t *nodp)
bblk_pdoms	./igen.h	/^ struct bblklst_t *bblk_pdoms;\/* list of bblks predominated by this bblk *\/$/;"	m	struct:bblk_t	typeref:struct:bblk_t::bblklst_t	access:public
bblk_seqno	./igen.h	/^ int32 bblk_seqno;$/;"	m	struct:bblk_t	access:public
bblk_t	./igen.h	/^struct bblk_t {$/;"	s
bblk_t::afs_reachable	./igen.h	/^ unsigned afs_reachable : 1;  \/* T => reachable from some AFS bblk if fg *\/$/;"	m	struct:bblk_t	access:public
bblk_t::after_suspend	./igen.h	/^ unsigned after_suspend : 1;  \/* T => entry bblk after suspend *\/$/;"	m	struct:bblk_t	access:public
bblk_t::bbe_prev	./igen.h	/^ struct bbedge_t *bbe_prev;   \/* list of basic blk predecesor edges *\/$/;"	m	struct:bblk_t	typeref:struct:bblk_t::bbedge_t	access:public
bblk_t::bblk_pdoms	./igen.h	/^ struct bblklst_t *bblk_pdoms;\/* list of bblks predominated by this bblk *\/$/;"	m	struct:bblk_t	typeref:struct:bblk_t::bblklst_t	access:public
bblk_t::bblk_seqno	./igen.h	/^ int32 bblk_seqno;$/;"	m	struct:bblk_t	access:public
bblk_t::bbnxt	./igen.h	/^ struct bblk_t *bbnxt;        \/* alloc order list of bblk in flowg *\/$/;"	m	struct:bblk_t	typeref:struct:bblk_t::bblk_t	access:public
bblk_t::bbprev	./igen.h	/^ struct bblk_t *bbprev;       \/* alloc order list of bblk in flowg *\/$/;"	m	struct:bblk_t	typeref:struct:bblk_t::bblk_t	access:public
bblk_t::deflst_added	./igen.h	/^ unsigned deflst_added : 1;   \/* T => phi already added for current tn *\/$/;"	m	struct:bblk_t	access:public
bblk_t::deflst_processed	./igen.h	/^ unsigned deflst_processed : 1;\/* T => already processed for current tn *\/$/;"	m	struct:bblk_t	access:public
bblk_t::ihd	./igen.h	/^ struct insn_t *ihd;          \/* one bblks' machine insn list head *\/$/;"	m	struct:bblk_t	typeref:struct:bblk_t::insn_t	access:public
bblk_t::in_list	./igen.h	/^ unsigned in_list : 1;        \/* T => block is in list  *\/$/;"	m	struct:bblk_t	access:public
bblk_t::is_casejmp_item	./igen.h	/^ unsigned is_casejmp_item : 1;   \/* T => block is jmp case item  *\/$/;"	m	struct:bblk_t	access:public
bblk_t::is_enter_loop	./igen.h	/^ unsigned is_enter_loop : 1;  \/* T => block is loop enter  *\/$/;"	m	struct:bblk_t	access:public
bblk_t::is_xz	./igen.h	/^ unsigned is_xz : 1;          \/* T => block is x\/z block *\/$/;"	m	struct:bblk_t	access:public
bblk_t::itail	./igen.h	/^ struct insn_t *itail;        \/* and its tail *\/$/;"	m	struct:bblk_t	typeref:struct:bblk_t::insn_t	access:public
bblk_t::mark	./igen.h	/^ int32 mark;                  \/* work number for marking *\/$/;"	m	struct:bblk_t	access:public
bblk_t::mark_for_rm	./igen.h	/^ unsigned mark_for_rm : 1;    \/* T => block is marked for rm  *\/$/;"	m	struct:bblk_t	access:public
bblk_t::predom_frontiers	./igen.h	/^ struct bblklst_t *predom_frontiers;\/* predom frontier's list *\/$/;"	m	struct:bblk_t	typeref:struct:bblk_t::bblklst_t	access:public
bblk_t::revpostordno	./igen.h	/^ int32 revpostordno;          \/* this bblks reverse post order num in flowg *\/$/;"	m	struct:bblk_t	access:public
bblklst_t	./igen.h	/^struct bblklst_t {$/;"	s
bblklst_t::bl_bbp	./igen.h	/^ struct bblk_t *bl_bbp;$/;"	m	struct:bblklst_t	typeref:struct:bblklst_t::bblk_t	access:public
bblklst_t::bl_nxt	./igen.h	/^ struct bblklst_t *bl_nxt;$/;"	m	struct:bblklst_t	typeref:struct:bblklst_t::bblklst_t	access:public
bblklst_t::bl_prev	./igen.h	/^ struct bblklst_t *bl_prev;$/;"	m	struct:bblklst_t	typeref:struct:bblklst_t::bblklst_t	access:public
bbnxt	./igen.h	/^ struct bblk_t *bbnxt;        \/* alloc order list of bblk in flowg *\/$/;"	m	struct:bblk_t	typeref:struct:bblk_t::bblk_t	access:public
bbp	./igen.h	/^ struct bblk_t *bbp;$/;"	m	union:am_ptr_u	typeref:struct:am_ptr_u::bblk_t	access:public
bbprev	./igen.h	/^ struct bblk_t *bbprev;       \/* alloc order list of bblk in flowg *\/$/;"	m	struct:bblk_t	typeref:struct:bblk_t::bblk_t	access:public
bbtab	./igen.h	/^ struct bblk_t **bbtab;        \/* jump to blocks *\/$/;"	m	struct:ndxjmp_t	typeref:struct:ndxjmp_t::bblk_t	access:public
bi	./v.h	/^ int32 bi;                     \/* for bsel\/psel offset in var object *\/$/;"	m	struct:pbexpr_t	access:public
bi	./v.h	/^ int32 bi;                    \/* AIV 11\/21\/07 - the bit\/arr ndx into the lhs *\/$/;"	m	struct:tenbpa_t	access:public
bi	./v.h	/^ word32 bi;                      \/* mipd index value *\/$/;"	m	union:te_u	access:public
bi	./v.h	/^ word32 bi;                    \/* lhs bit index *\/$/;"	m	union:te2_u	access:public
bi1	./v.h	/^ int32 bi1, bi2;$/;"	m	struct:nchglst_t	access:public
bi2	./v.h	/^ int32 bi1, bi2;$/;"	m	struct:nchglst_t	access:public
bid_vtxtab	./v.h	/^ struct bidvtx_t *bid_vtxtab; \/* for bid only, rec tab with itree loc *\/$/;"	m	struct:chanrec_t	typeref:struct:chanrec_t::bidvtx_t	access:public
bidvtx_cmp	./v_trch.c	/^static int32 bidvtx_cmp(const void *p1, const void *p2)$/;"	f	file:	signature:(const void *p1, const void *p2)
bidvtx_itp	./v.h	/^ struct itree_t *bidvtx_itp;$/;"	m	struct:bidvtx_t	typeref:struct:bidvtx_t::itree_t	access:public
bidvtx_t	./v.h	/^struct bidvtx_t {$/;"	s
bidvtx_t::bidvtx_itp	./v.h	/^ struct itree_t *bidvtx_itp;$/;"	m	struct:bidvtx_t	typeref:struct:bidvtx_t::itree_t	access:public
bidvtx_t::vi1	./v.h	/^ int32 vi1;                   \/* bit index for vec wire (-1 for all of vec) *\/ $/;"	m	struct:bidvtx_t	access:public
bidvtx_t::vnp	./v.h	/^ struct net_t *vnp;           \/* net in channel *\/$/;"	m	struct:bidvtx_t	typeref:struct:bidvtx_t::net_t	access:public
bind_cells_in1mod	./v_src3.c	/^static void bind_cells_in1mod(struct cfg_t *cfgp, struct cfglib_t *cntxt_lbp,$/;"	f	file:	signature:(struct cfg_t *cfgp, struct cfglib_t *cntxt_lbp, struct mod_t *mdp)
bind_cells_inside	./v_src3.c	/^static void bind_cells_inside(struct cfg_t *cfgp, struct cell_t *cp,$/;"	f	file:	signature:(struct cfg_t *cfgp, struct cell_t *cp, struct mod_t *bind_mdp, struct cfglib_t *lbp)
bind_cfg_design	./v_src3.c	/^static int32 bind_cfg_design(struct cfg_t *cfgp, int32 is_hier)$/;"	f	file:	signature:(struct cfg_t *cfgp, int32 is_hier)
bind_liblist_rule	./v_src3.c	/^static int32 bind_liblist_rule(struct cfg_t *cfgp, struct cell_t *cp,$/;"	f	file:	signature:(struct cfg_t *cfgp, struct cell_t *cp, struct cfgrule_t *rulp)
bind_use_rule	./v_src3.c	/^static int32 bind_use_rule(struct cfg_t *cfgp, struct cfglib_t *cntxt_lbp,$/;"	f	file:	signature:(struct cfg_t *cfgp, struct cfglib_t *cntxt_lbp, struct cell_t *cp, struct cfgrule_t *rulp)
binop_get_ndwid	./v_bbgen.c	/^static int32 binop_get_ndwid(int32 *op2_nd_wid, struct expr_t *ndp)$/;"	f	file:	signature:(int32 *op2_nd_wid, struct expr_t *ndp)
bit_drvs_iter	./v_vpi2.c	/^static vpiHandle bit_drvs_iter(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
bit_has_path	./v_bbgen2.c	/^static int32 bit_has_path(struct net_t *np, int32 bi)$/;"	f	file:	signature:(struct net_t *np, int32 bi)
bit_lds_iter	./v_vpi2.c	/^static vpiHandle bit_lds_iter(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
bit_xl_ldsdrvs_iter	./v_vpi2.c	/^static vpiHandle bit_xl_ldsdrvs_iter(struct h_t *hp, int32 do_loads)$/;"	f	file:	signature:(struct h_t *hp, int32 do_loads)
bith_ndx	./v.h	/^ unsigned bith_ndx : 1;       \/* bit handle index form (also any tab form) *\/ $/;"	m	struct:hrec_t	access:public
bithi_is0	./v_cnv.c	/^static int32 bithi_is0(word32 val, int32 ubits)$/;"	f	file:	signature:(word32 val, int32 ubits)
bitmwlshift	./v_ex2.c	/^static void bitmwlshift(word32 *wp, int32 k, int32 lwlen)$/;"	f	file:	signature:(word32 *wp, int32 k, int32 lwlen)
bitmwrshift	./v_ex2.c	/^static void bitmwrshift(word32 *wp, int32 k, int32 lwlen)$/;"	f	file:	signature:(word32 *wp, int32 k, int32 lwlen)
bits_set	./v.h	/^ word32 **bits_set;              \/* net mask for the per set bits *\/$/;"	m	struct:xprop_t	access:public
bitsto_char	./v_cnv.c	/^static char bitsto_char(word32 a, word32 b, int32 bwid)$/;"	f	file:	signature:(word32 a, word32 b, int32 bwid)
bl_bbp	./igen.h	/^ struct bblk_t *bl_bbp;$/;"	m	struct:bblklst_t	typeref:struct:bblklst_t::bblk_t	access:public
bl_nxt	./igen.h	/^ struct bblklst_t *bl_nxt;$/;"	m	struct:bblklst_t	typeref:struct:bblklst_t::bblklst_t	access:public
bl_prev	./igen.h	/^ struct bblklst_t *bl_prev;$/;"	m	struct:bblklst_t	typeref:struct:bblklst_t::bblklst_t	access:public
blackout_activity	./fstapi.c	/^unsigned char *blackout_activity;$/;"	m	struct:fstReaderContext	file:	access:public
blackout_curr	./fstapi.c	/^struct fstBlackoutChain *blackout_curr;$/;"	m	struct:fstWriterContext	typeref:struct:fstWriterContext::fstBlackoutChain	file:	access:public
blackout_head	./fstapi.c	/^struct fstBlackoutChain *blackout_head;$/;"	m	struct:fstWriterContext	typeref:struct:fstWriterContext::fstBlackoutChain	file:	access:public
blackout_times	./fstapi.c	/^uint64_t *blackout_times;$/;"	m	struct:fstReaderContext	file:	access:public
bld1_dmpv_event	./v_ex4.c	/^static void bld1_dmpv_event(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
bld1_dmpv_real	./v_ex4.c	/^static void bld1_dmpv_real(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
bld1_dmpv_real_array	./v_ex4.c	/^static void bld1_dmpv_real_array(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
bld1_dmpv_scalar	./v_ex4.c	/^static void bld1_dmpv_scalar(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
bld1_dmpv_scalar_2state_array	./v_ex4.c	/^static void bld1_dmpv_scalar_2state_array(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
bld1_dmpv_scalar_array	./v_ex4.c	/^static void bld1_dmpv_scalar_array(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
bld1_dmpv_vector_1w	./v_ex4.c	/^static void bld1_dmpv_vector_1w(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
bld1_dmpv_vector_1w_packed_array	./v_ex4.c	/^static void bld1_dmpv_vector_1w_packed_array(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
bld1_dmpv_vector_2state_1w	./v_ex4.c	/^static void bld1_dmpv_vector_2state_1w(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
bld1_dmpv_vector_2state_1w_array	./v_ex4.c	/^static void bld1_dmpv_vector_2state_1w_array(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
bld1_dmpv_vector_2state_wide	./v_ex4.c	/^static void bld1_dmpv_vector_2state_wide(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
bld1_dmpv_vector_2state_wide_array	./v_ex4.c	/^static void bld1_dmpv_vector_2state_wide_array(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
bld1_dmpv_vector_notpacked_1w_array	./v_ex4.c	/^static void bld1_dmpv_vector_notpacked_1w_array(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
bld1_dmpv_vector_svec	./v_ex4.c	/^static void bld1_dmpv_vector_svec(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
bld1_dmpv_vector_wide	./v_ex4.c	/^static void bld1_dmpv_vector_wide(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
bld1_dmpv_vector_wide_array	./v_ex4.c	/^static void bld1_dmpv_vector_wide_array(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
bld1_scal_dpval	./v_ex4.c	/^static void bld1_scal_dpval(struct dpinstel_t *dpip, struct net_t *np,$/;"	f	file:	signature:(struct dpinstel_t *dpip, struct net_t *np, char *dvcodp)
bld1_vec_dpval	./v_ex4.c	/^static void bld1_vec_dpval(struct dpinstel_t *dpip, struct net_t *np,$/;"	f	file:	signature:(struct dpinstel_t *dpip, struct net_t *np, char *dvcodp)
bld1_xdpval	./v_ex4.c	/^static void bld1_xdpval(struct net_t *np, char *dvcodp)$/;"	f	file:	signature:(struct net_t *np, char *dvcodp)
bld1_xdvval	./v_ex4.c	/^static void bld1_xdvval(struct net_t *np, char *dvcodp)$/;"	f	file:	signature:(struct net_t *np, char *dvcodp)
bld1vec_fifo	./v_prp.c	/^static void bld1vec_fifo(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
bld2_flat_itree	./v_genfx.c	/^static void bld2_flat_itree(struct itree_t *new_itp)$/;"	f	file:	signature:(struct itree_t *new_itp)
bld2_itnum_to_itp	./v_genfx.c	/^static void bld2_itnum_to_itp(struct itree_t *itp)$/;"	f	file:	signature:(struct itree_t *itp)
bld2_lhsexpr_npins	./v_prp.c	/^static void bld2_lhsexpr_npins(struct expr_t *xp, int32 npctyp)$/;"	f	file:	signature:(struct expr_t *xp, int32 npctyp)
bld3vndx_str	./v_prp.c	/^static char *bld3vndx_str(char *s, word32 ndx, word32 nstates)$/;"	f	file:	signature:(char *s, word32 ndx, word32 nstates)
bld_1bit_dptriple	./v_ex4.c	/^static char bld_1bit_dptriple(int32 *retst0, int32 *retst1,$/;"	f	file:	signature:(int32 *retst0, int32 *retst1, struct dpinstel_t *dpip, struct net_t *np, int32 drvbi)
bld_1cmp_global	./v_src2.c	/^static struct expr_t *bld_1cmp_global(struct expr_t *ndp,$/;"	f	file:	signature:(struct expr_t *ndp, struct expridtab_t *xidp)
bld_1fg_doms_sets_fuds	./v_bbopt.c	/^static void bld_1fg_doms_sets_fuds(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
bld_1inst_dpctrl_lists	./v_ex4.c	/^static void bld_1inst_dpctrl_lists(struct dpinstel_t *dpip, struct mod_t *mdp)$/;"	f	file:	signature:(struct dpinstel_t *dpip, struct mod_t *mdp)
bld_1mod_gitem_list	./v_genfx.c	/^static void bld_1mod_gitem_list(void)$/;"	f	file:	signature:(void)
bld_1mod_idp_map	./v_prp2.c	/^static void bld_1mod_idp_map(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
bld_1mod_npp_ndx	./v_prp.c	/^static void bld_1mod_npp_ndx(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
bld_1mod_specify_pth_ndx	./v_prp.c	/^static void bld_1mod_specify_pth_ndx(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
bld_1net_ldcomb_multfi_flowg	./v_bbgen2.c	/^static void bld_1net_ldcomb_multfi_flowg(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
bld_1net_trpthdst_1bit_flowg	./v_bbgen2.c	/^static void bld_1net_trpthdst_1bit_flowg(struct net_t *np, int32 bi, $/;"	f	file:	signature:(struct net_t *np, int32 bi, int32 np_ti)
bld_1net_trpthdst_flowgs	./v_bbgen2.c	/^static void bld_1net_trpthdst_flowgs(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
bld_1sep_pbit_expr	./v_prp.c	/^static struct expr_t *bld_1sep_pbit_expr(struct pbexpr_t *pbxp,$/;"	f	file:	signature:(struct pbexpr_t *pbxp, int32 is_stren)
bld_1to1_exprclass_handle	./v_vpi.c	/^static vpiHandle bld_1to1_exprclass_handle(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
bld_acc_cells_iter	./v_acc.c	/^static vpiHandle bld_acc_cells_iter(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
bld_accnext_iter	./v_acc.c	/^static int32 bld_accnext_iter(int32 *atyp_list, handle scope_h)$/;"	f	file:	signature:(int32 *atyp_list, handle scope_h)
bld_add_1gblk_gref_item	./v_src2.c	/^static struct gref_t *bld_add_1gblk_gref_item(struct expr_t *glbndp,$/;"	f	file:	signature:(struct expr_t *glbndp, int32 gfnam_ind, int32 glin_cnt)
bld_adpi_u_arg_sel	./v_dpi.c	/^static char *bld_adpi_u_arg_sel(char *s, int32 argi, struct dpiarg_t *dap)$/;"	f	file:	signature:(char *s, int32 argi, struct dpiarg_t *dap)
bld_adpi_u_sel_name	./v_dpi.c	/^static char *bld_adpi_u_sel_name(char *s, struct dpiarg_t *dap)$/;"	f	file:	signature:(char *s, struct dpiarg_t *dap)
bld_all_netchanges	./v_prp.c	/^static void bld_all_netchanges(void)$/;"	f	file:	signature:(void)
bld_all_proc_time_events	./v_prp.c	/^static void bld_all_proc_time_events(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
bld_all_time_events	./v_prp.c	/^static void bld_all_time_events(void)$/;"	f	file:	signature:(void)
bld_bblk_defuse_in_tn_sets	./v_bbopt.c	/^static void bld_bblk_defuse_in_tn_sets(struct bblk_t *bbp)$/;"	f	file:	signature:(struct bblk_t *bbp)
bld_bblk_predom_frontier	./v_bbopt.c	/^static void bld_bblk_predom_frontier(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
bld_bblk_predom_of_lists	./v_bbopt.c	/^static void bld_bblk_predom_of_lists(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
bld_bit_drvs	./v_vpi2.c	/^static int32 bld_bit_drvs(struct net_t *np, int32 bi, t_midat *idp,$/;"	f	file:	signature:(struct net_t *np, int32 bi, t_midat *idp, int32 no_ports)
bld_bit_lds	./v_vpi2.c	/^static int32 bld_bit_lds(struct net_t *np, int32 bi, t_midat *idp,$/;"	f	file:	signature:(struct net_t *np, int32 bi, t_midat *idp, int32 no_ports)
bld_bitref	./v_prp2.c	/^static char *bld_bitref(char *s, struct net_t *np, int32 bi)$/;"	f	file:	signature:(char *s, struct net_t *np, int32 bi)
bld_boot_rout_list	./cvc.c	/^static int32 bld_boot_rout_list(struct loadpli_t *ldp, char *rnams)$/;"	f	file:	signature:(struct loadpli_t *ldp, char *rnams)
bld_bsel_expr	./v_fx2.c	/^static struct expr_t *bld_bsel_expr(struct net_t *np, int32 ndx)$/;"	f	file:	signature:(struct net_t *np, int32 ndx)
bld_case_evxlst	./v_fx2.c	/^static void bld_case_evxlst(struct st_t *stp, int32 include_func)$/;"	f	file:	signature:(struct st_t *stp, int32 include_func)
bld_cbrec	./v_vpi.c	/^static vpiHandle bld_cbrec(p_cb_data cb_data_p, word32 cbclass)$/;"	f	file:	signature:(p_cb_data cb_data_p, word32 cbclass)
bld_cbvc_dces	./v_vpi.c	/^static void bld_cbvc_dces(struct expr_t *xp, struct cbrec_t *cbp)$/;"	f	file:	signature:(struct expr_t *xp, struct cbrec_t *cbp)
bld_cell_load_iter	./v_acc.c	/^static vpiHandle bld_cell_load_iter(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
bld_check_tchk_npp	./v_prp2.c	/^static struct chktchg_t *bld_check_tchk_npp(struct net_t *chknp, int32 bi1)$/;"	f	file:	signature:(struct net_t *chknp, int32 bi1)
bld_comlab_tostr	./v_asmlnk.c	/^static void bld_comlab_tostr(char *amods, struct amode_t *amp, int32 dbg_fmt)$/;"	f	file:	signature:(char *amods, struct amode_t *amp, int32 dbg_fmt)
bld_conta_iterator	./v_vpi.c	/^static vpiHandle bld_conta_iterator(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
bld_conta_time_events	./v_prp.c	/^static void bld_conta_time_events(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
bld_defparam_stmt_iterator	./v_vpi.c	/^static vpiHandle bld_defparam_stmt_iterator(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
bld_delay_iter	./v_vpi2.c	/^static int32 bld_delay_iter(union del_u du, word32 drep, t_midat *idp,$/;"	f	file:	signature:(union del_u du, word32 drep, t_midat *idp, struct task_t *tskp)
bld_delctrl_head_fg	./v_bbgen.c	/^static void bld_delctrl_head_fg(struct delctrl_t *head_dctp)$/;"	f	file:	signature:(struct delctrl_t *head_dctp)
bld_delctrl_merged_fgs	./v_bbgen.c	/^static void bld_delctrl_merged_fgs(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
bld_dfp_hd_xmrcmp	./v_genfx.c	/^static int32 bld_dfp_hd_xmrcmp(struct xmrcmp_t *xmp, struct gref_t *grp)$/;"	f	file:	signature:(struct xmrcmp_t *xmp, struct gref_t *grp)
bld_dfp_xmrcmps	./v_genfx.c	/^static int32 bld_dfp_xmrcmps(struct gref_t *grp)$/;"	f	file:	signature:(struct gref_t *grp)
bld_dig_attrlist_iter	./v_vpi2.c	/^static vpiHandle bld_dig_attrlist_iter(struct h_t *hp, struct attr_t *attrp)$/;"	f	file:	signature:(struct h_t *hp, struct attr_t *attrp)
bld_dpi_proto_comment	./v_dpi.c	/^static char *bld_dpi_proto_comment(char *s, struct dpi_t *dpip)$/;"	f	file:	signature:(char *s, struct dpi_t *dpip)
bld_driver_iter	./v_acc.c	/^static vpiHandle bld_driver_iter(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
bld_ev_dces	./v_prp2.c	/^static void bld_ev_dces(struct expr_t *xp, struct delctrl_t *dctp)$/;"	f	file:	signature:(struct expr_t *xp, struct delctrl_t *dctp)
bld_evlst_comma_expr	./v_fx2.c	/^static struct expr_t *bld_evlst_comma_expr(void)$/;"	f	file:	signature:(void)
bld_evxpr_dces	./v_prp2.c	/^static void bld_evxpr_dces(struct expr_t *xp, struct delctrl_t *dctp,$/;"	f	file:	signature:(struct expr_t *xp, struct delctrl_t *dctp, int32 eval)
bld_expr_telltale	./v_dbg.c	/^static char *bld_expr_telltale(char *s, struct expr_t *xp)$/;"	f	file:	signature:(char *s, struct expr_t *xp)
bld_filpostab	./v_dbg2.c	/^static int32 bld_filpostab(int32 ifi)$/;"	f	file:	signature:(int32 ifi)
bld_fjlist_iter	./v_vpi2.c	/^static vpiHandle bld_fjlist_iter(struct st_t *stp, t_midat *idp,$/;"	f	file:	signature:(struct st_t *stp, t_midat *idp, struct task_t *tskp)
bld_fuds_and_simplify_1fg	./v_bbopt.c	/^static void bld_fuds_and_simplify_1fg(struct mod_t *mdp, struct flowg_t *fgp)$/;"	f	file:	signature:(struct mod_t *mdp, struct flowg_t *fgp)
bld_gate_giap	./v_fx.c	/^static void bld_gate_giap(struct mod_t *mdp, struct gate_t *gp,$/;"	f	file:	signature:(struct mod_t *mdp, struct gate_t *gp, struct cell_t *cp)
bld_gate_iterator	./v_vpi.c	/^static vpiHandle bld_gate_iterator(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
bld_gate_paramlst	./v_fx.c	/^static struct paramlst_t *bld_gate_paramlst(struct namparam_t *npmphdr)$/;"	f	file:	signature:(struct namparam_t *npmphdr)
bld_gate_time_events	./v_prp.c	/^static void bld_gate_time_events(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
bld_genfor_gentab	./v_genfx.c	/^static void bld_genfor_gentab(struct gen_for_t *gforp,$/;"	f	file:	signature:(struct gen_for_t *gforp, struct genblk_t *cntxt_gblkp)
bld_glb_hd_xmrcmp	./v_genfx.c	/^static int32 bld_glb_hd_xmrcmp(struct xmrcmp_t *xmp, struct gref_t *grp)$/;"	f	file:	signature:(struct xmrcmp_t *xmp, struct gref_t *grp)
bld_glb_xmrcmps	./v_genfx.c	/^static int32 bld_glb_xmrcmps(struct gref_t *grp)$/;"	f	file:	signature:(struct gref_t *grp)
bld_glbref_xpr_from_xmrcmptab	./v_genfx.c	/^static void bld_glbref_xpr_from_xmrcmptab(struct gref_t *grp)$/;"	f	file:	signature:(struct gref_t *grp)
bld_gstate	./v_prp.c	/^static void bld_gstate(void)$/;"	f	file:	signature:(void)
bld_identdfparams	./v_genfx.c	/^static void bld_identdfparams(int32 nrtdfps)$/;"	f	file:	signature:(int32 nrtdfps)
bld_immed_iathrd	./v_dbg.c	/^static struct thread_t *bld_immed_iathrd(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
bld_incdtab	./cvc.c	/^static int32 bld_incdtab(char *incdirptr, struct optlst_t *olp) $/;"	f	file:	signature:(char *incdirptr, struct optlst_t *olp)
bld_inflist	./cvc.c	/^static void bld_inflist(void)$/;"	f	file:	signature:(void)
bld_init_qcaf_dce_lstlst	./v_prp2.c	/^static void bld_init_qcaf_dce_lstlst(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
bld_initalw_iterator	./v_vpi.c	/^static vpiHandle bld_initalw_iterator(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
bld_inmod_port_iter	./v_vpi2.c	/^static vpiHandle bld_inmod_port_iter(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
bld_insert_fud_chains	./v_bbopt.c	/^static void bld_insert_fud_chains(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
bld_inst_giap	./v_fx.c	/^static void bld_inst_giap(struct mod_t *mdp, struct inst_t *ip, struct cell_t *cp)$/;"	f	file:	signature:(struct mod_t *mdp, struct inst_t *ip, struct cell_t *cp)
bld_inst_iterator	./v_vpi.c	/^static vpiHandle bld_inst_iterator(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
bld_inst_xmr_comptab	./v_src3.c	/^static int32 bld_inst_xmr_comptab(char *inam)$/;"	f	file:	signature:(char *inam)
bld_instel_dumpports_eval_ds	./v_ex4.c	/^static void bld_instel_dumpports_eval_ds(struct dpinstel_t *dpip)$/;"	f	file:	signature:(struct dpinstel_t *dpip)
bld_interconn_drv_emsg	./v_sdf.c	/^static char *bld_interconn_drv_emsg(char *s, struct mod_pin_t *mpp,$/;"	f	file:	signature:(char *s, struct mod_pin_t *mpp, struct mod_t *mdp)
bld_itree_iterator	./v_vpi.c	/^static vpiHandle bld_itree_iterator(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
bld_lbxtab	./cvc.c	/^static int32 bld_lbxtab(char *lbxptr, struct optlst_t *olp)$/;"	f	file:	signature:(char *lbxptr, struct optlst_t *olp)
bld_lhs_impl_evxlst	./v_fx2.c	/^static void bld_lhs_impl_evxlst(struct expr_t *lhsx, int32 include_func)$/;"	f	file:	signature:(struct expr_t *lhsx, int32 include_func)
bld_lhsexpr_npins	./v_prp.c	/^static void bld_lhsexpr_npins(struct expr_t *xp, int32 npctyp)$/;"	f	file:	signature:(struct expr_t *xp, int32 npctyp)
bld_lhsx_time_events	./v_prp.c	/^static void bld_lhsx_time_events(struct expr_t *lhsx, struct mod_t *mdp)$/;"	f	file:	signature:(struct expr_t *lhsx, struct mod_t *mdp)
bld_listofexprs_iter	./v_vpi2.c	/^static vpiHandle bld_listofexprs_iter(struct expr_t *argx, t_midat *idp,$/;"	f	file:	signature:(struct expr_t *argx, t_midat *idp, struct task_t *tskp)
bld_listofnets_iter	./v_vpi.c	/^static vpiHandle bld_listofnets_iter(struct net_t *np, int32 onnum,$/;"	f	file:	signature:(struct net_t *np, int32 onnum, t_midat *idp, word32 otype, struct task_t *tskp)
bld_listofparams_iter	./v_vpi.c	/^static vpiHandle bld_listofparams_iter(struct net_t *nptab, int32 nparams,$/;"	f	file:	signature:(struct net_t *nptab, int32 nparams, struct net_t *loc_nptab, int32 loc_nparams, t_midat *idp, struct task_t *tskp)
bld_listofstmts_iter	./v_vpi2.c	/^static vpiHandle bld_listofstmts_iter(struct st_t *stp, t_midat *idp,$/;"	f	file:	signature:(struct st_t *stp, t_midat *idp, struct task_t *in_tskp)
bld_load_iter	./v_acc.c	/^static vpiHandle bld_load_iter(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
bld_loadpli_lbs	./cvc.c	/^static struct loadpli_t *bld_loadpli_lbs(char *loadpliptr,$/;"	f	file:	signature:(char *loadpliptr, struct optlst_t *olp, int32 is_pli1)
bld_mac_expandtab	./v_ms.c	/^static struct macexp_t *bld_mac_expandtab(char *dnam, char *dval, int32 nargs)$/;"	f	file:	signature:(char *dnam, char *dval, int32 nargs)
bld_macdef_arglist	./v_ms.c	/^static char *bld_macdef_arglist(int32 *nargs)$/;"	f	file:	signature:(int32 *nargs)
bld_match_spcpth	./v_sdf.c	/^static struct pthlst_t *bld_match_spcpth(struct mod_t *ctmdp, char *psrcnam,$/;"	f	file:	signature:(struct mod_t *ctmdp, char *psrcnam, int32 si1, int32 si2, int32 eval, char *pdstnam, int32 di1, int32 di2, struct expr_t *cndx, int32 is_condelse)
bld_match_tchk	./v_sdf.c	/^static struct tclst_t *bld_match_tchk(struct mod_t *ctmdp,$/;"	f	file:	signature:(struct mod_t *ctmdp, struct tcterm_t *reftctp, struct tcterm_t *dattctp, int32 tctyp, char *sdf_tcnam)
bld_mda_index_label	./v_cnv.c	/^static char *bld_mda_index_label(char *s, struct mda_t *mdap, $/;"	f	file:	signature:(char *s, struct mda_t *mdap, int32 *mda_ndxies)
bld_mda_index_label	./v_ex4.c	/^static char *bld_mda_index_label(char *s, struct net_t *np, int32 *mda_ndxies)$/;"	f	file:	signature:(char *s, struct net_t *np, int32 *mda_ndxies)
bld_mdpin_table	./v_src.c	/^static void bld_mdpin_table(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
bld_mod_proc_flowgraphs	./v_bbgen.c	/^static void bld_mod_proc_flowgraphs(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
bld_modnam	./cvc.c	/^static void bld_modnam(char *s, struct mod_t *mdp, int32 fldsiz)$/;"	f	file:	signature:(char *s, struct mod_t *mdp, int32 fldsiz)
bld_modpth_iterator	./v_vpi.c	/^static vpiHandle bld_modpth_iterator(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
bld_nb_tev	./v_ex.c	/^static struct tev_t *bld_nb_tev(struct st_t *stp, struct xstk_t *xsp,$/;"	f	file:	signature:(struct st_t *stp, struct xstk_t *xsp, word64 schtim)
bld_net_drvs	./v_vpi2.c	/^static int32 bld_net_drvs(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
bld_net_iconns	./v_vpi2.c	/^static int32 bld_net_iconns(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
bld_net_iterator	./v_vpi.c	/^static vpiHandle bld_net_iterator(struct h_t *hp, word32 otype)$/;"	f	file:	signature:(struct h_t *hp, word32 otype)
bld_net_lds	./v_vpi2.c	/^static int32 bld_net_lds(struct net_t *np, t_midat *idp) $/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
bld_net_mdpins	./v_vpi2.c	/^static int32 bld_net_mdpins(struct net_t *np, struct mod_t *mdp,$/;"	f	file:	signature:(struct net_t *np, struct mod_t *mdp, t_midat *idp)
bld_net_pathterms	./v_vpi2.c	/^static int32 bld_net_pathterms(struct net_t *np, t_midat *idp, int32 ndx)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp, int32 ndx)
bld_net_tchkterms	./v_vpi2.c	/^static int32 bld_net_tchkterms(struct net_t *np, t_midat *idp, int32 ndx)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp, int32 ndx)
bld_netbit_iconns	./v_vpi2.c	/^static int32 bld_netbit_iconns(struct net_t *np, int32 bi, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, int32 bi, t_midat *idp)
bld_netbit_mdpins	./v_vpi2.c	/^static int32 bld_netbit_mdpins(struct net_t *np, int32 bi, struct mod_t *mdp,$/;"	f	file:	signature:(struct net_t *np, int32 bi, struct mod_t *mdp, t_midat *idp)
bld_netbiticonnport_iter	./v_vpi2.c	/^static vpiHandle bld_netbiticonnport_iter(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
bld_netbitmdport_iter	./v_vpi2.c	/^static vpiHandle bld_netbitmdport_iter(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
bld_neticonnport_iter	./v_vpi2.c	/^static vpiHandle bld_neticonnport_iter(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
bld_netmdport_iter	./v_vpi2.c	/^static vpiHandle bld_netmdport_iter(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
bld_no_lds_and_no_drvs_nchges	./v_prp.c	/^static void bld_no_lds_and_no_drvs_nchges(void)$/;"	f	file:	signature:(void)
bld_nplist	./v_prp.c	/^static void bld_nplist(void)$/;"	f	file:	signature:(void)
bld_num_expr	./v_fx2.c	/^static struct expr_t *bld_num_expr(struct xstk_t *xsp)$/;"	f	file:	signature:(struct xstk_t *xsp)
bld_open_mcd	./v_ex.c	/^static word32 bld_open_mcd(void)$/;"	f	file:	signature:(void)
bld_param_iterator	./v_vpi.c	/^static vpiHandle bld_param_iterator(struct h_t *hp, int32 otype)$/;"	f	file:	signature:(struct h_t *hp, int32 otype)
bld_pb_contas	./v_prp.c	/^static void bld_pb_contas(void)$/;"	f	file:	signature:(void)
bld_pb_mpps	./v_prp.c	/^static void bld_pb_mpps(struct mod_pin_t *mpp)$/;"	f	file:	signature:(struct mod_pin_t *mpp)
bld_pbsep_input_mpps	./v_prp.c	/^static void bld_pbsep_input_mpps(void)$/;"	f	file:	signature:(void)
bld_pbsep_output_mpps	./v_prp.c	/^static void bld_pbsep_output_mpps(void)$/;"	f	file:	signature:(void)
bld_pck_nwval	./v_bbgen.c	/^static int32 bld_pck_nwval(struct net_t *np, int32 rhs_apti, int32 blen)  $/;"	f	file:	signature:(struct net_t *np, int32 rhs_apti, int32 blen)
bld_perib_drvn_const_tab	./v_cvr.c	/^static void bld_perib_drvn_const_tab(void)$/;"	f	file:	signature:(void)
bld_predom_tree	./v_bbopt.c	/^static void bld_predom_tree(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
bld_predominators	./v_bbopt.c	/^static void bld_predominators(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
bld_prefnam	./v_sdf.c	/^static char *bld_prefnam(char *s, char *pnam, int32 i1, int32 i2)$/;"	f	file:	signature:(char *s, char *pnam, int32 i1, int32 i2)
bld_prtbasecode	./v_dbg.c	/^static char *bld_prtbasecode(char *s, int32 bcod, int32 force_unsign, int32 prtwidth)$/;"	f	file:	signature:(char *s, int32 bcod, int32 force_unsign, int32 prtwidth)
bld_psel_expr	./v_fx2.c	/^static struct expr_t *bld_psel_expr(struct net_t *np, int32 i1, int32 i2)$/;"	f	file:	signature:(struct net_t *np, int32 i1, int32 i2)
bld_qcaf_dces	./v_prp2.c	/^static void bld_qcaf_dces(struct expr_t *xp, struct qcval_t *qcvalp)$/;"	f	file:	signature:(struct expr_t *xp, struct qcval_t *qcvalp)
bld_rec_of_recrem	./v_fx3.c	/^static struct tchk_t *bld_rec_of_recrem(struct tchk_t *otcp)$/;"	f	file:	signature:(struct tchk_t *otcp)
bld_regwir_putvrec	./v_vpi3.c	/^static void bld_regwir_putvrec(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
bld_rest_dfpcmps	./v_genfx.c	/^static int32 bld_rest_dfpcmps(struct xmrcmp_t **xmrcmptab, int32 xmrtsiz,$/;"	f	file:	signature:(struct xmrcmp_t **xmrcmptab, int32 xmrtsiz, struct gref_t *grp, struct expr_t *gcmp_ndp)
bld_rest_xmrcmps	./v_genfx.c	/^static int32 bld_rest_xmrcmps(struct xmrcmp_t **xmrcmptab, int32 xmrtsiz,$/;"	f	file:	signature:(struct xmrcmp_t **xmrcmptab, int32 xmrtsiz, struct gref_t *grp, struct expr_t *gcmp_ndp)
bld_rhs_impl_evxlst	./v_fx2.c	/^static void bld_rhs_impl_evxlst(struct expr_t *rhsx, int32 include_func)$/;"	f	file:	signature:(struct expr_t *rhsx, int32 include_func)
bld_rhsexpr_npins	./v_prp.c	/^static void bld_rhsexpr_npins(struct expr_t *xp, int32 npctyp)$/;"	f	file:	signature:(struct expr_t *xp, int32 npctyp)
bld_rhsexpr_npins_var_wire_array	./v_prp.c	/^static void bld_rhsexpr_npins_var_wire_array(struct expr_t *xp, int32 npctyp,$/;"	f	file:	signature:(struct expr_t *xp, int32 npctyp, struct gref_t *grp)
bld_root2_dfpglbs	./v_genfx.c	/^static void bld_root2_dfpglbs(struct itree_t *itp, int32 level)$/;"	f	file:	signature:(struct itree_t *itp, int32 level)
bld_root_dfpglbs	./v_genfx.c	/^static void bld_root_dfpglbs(void)$/;"	f	file:	signature:(void)
bld_scope_iterator	./v_vpi.c	/^static vpiHandle bld_scope_iterator(struct h_t *hp) $/;"	f	file:	signature:(struct h_t *hp)
bld_scope_par	./v_vpi.c	/^static vpiHandle bld_scope_par(struct h_t *hp, struct task_t *tskp)$/;"	f	file:	signature:(struct h_t *hp, struct task_t *tskp)
bld_sdfnewdu	./v_sdf.c	/^static int32 bld_sdfnewdu(struct gate_t *ngp, struct gate_t *ogp,$/;"	f	file:	signature:(struct gate_t *ngp, struct gate_t *ogp, p_vpi_delay delay_p, struct itree_t *itp, int32 is_path, int32 has_toz, char *sdfmsg)
bld_specparam_iterator	./v_vpi.c	/^static vpiHandle bld_specparam_iterator(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
bld_srcfilter_ref	./v_sim.c	/^static void bld_srcfilter_ref(char *s, word32 pthifnone, word32 cedge,$/;"	f	file:	signature:(char *s, word32 pthifnone, word32 cedge, struct expr_t *cxp)
bld_srted_ipins	./v_fx.c	/^static int32 bld_srted_ipins(struct inst_t *ip, struct cell_pin_t *cpp,$/;"	f	file:	signature:(struct inst_t *ip, struct cell_pin_t *cpp, int32 pnum, struct cell_pin_t **scptab)
bld_srted_mdpins	./v_fx.c	/^static void bld_srted_mdpins(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
bld_start_tchk_npp	./v_prp2.c	/^static struct tchg_t *bld_start_tchk_npp(struct tchk_t *tcp,$/;"	f	file:	signature:(struct tchk_t *tcp, struct net_t *startnp, int32 bi1)
bld_stlst_evxlst	./v_fx2.c	/^static void bld_stlst_evxlst(struct st_t *hdstp, int32 include_func)$/;"	f	file:	signature:(struct st_t *hdstp, int32 include_func)
bld_stmt_evxlst	./v_fx2.c	/^static void bld_stmt_evxlst(struct st_t *stp, int32 include_func)$/;"	f	file:	signature:(struct st_t *stp, int32 include_func)
bld_sup_of_suphld	./v_fx3.c	/^static struct tchk_t *bld_sup_of_suphld(struct tchk_t *otcp)$/;"	f	file:	signature:(struct tchk_t *otcp)
bld_symhandle	./v_vpi2.c	/^static vpiHandle bld_symhandle(char *nam, struct sy_t *syp,$/;"	f	file:	signature:(char *nam, struct sy_t *syp, struct symtab_t *sytp, struct itree_t *itp)
bld_symidp	./v_dpi.c	/^static t_midat *bld_symidp(const char *nam, struct sy_t *syp,$/;"	f	file:	signature:(const char *nam, struct sy_t *syp, struct symtab_t *sytp, struct itree_t *itp)
bld_symtabs_iterator	./v_vpi.c	/^static vpiHandle bld_symtabs_iterator(struct symtab_t *sytp,$/;"	f	file:	signature:(struct symtab_t *sytp, t_midat *idp)
bld_tchk_iterator	./v_vpi.c	/^static vpiHandle bld_tchk_iterator(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
bld_tchk_srcdump	./v_sim.c	/^static char *bld_tchk_srcdump(char *s, struct tchk_t *tcp, word64 *tim1,$/;"	f	file:	signature:(char *s, struct tchk_t *tcp, word64 *tim1, word64 *tim2, word64 *lim1, word64 *lim2)
bld_tfmt_val	./v_cnv.c	/^static int32 bld_tfmt_val(char *s, struct expr_t *xp, word32 *ap, word32 *bp,$/;"	f	file:	signature:(char *s, struct expr_t *xp, word32 *ap, word32 *bp, int32 blen, int32 trim, int32 fmt_pos)
bld_tgl_mods_ndx	./v_cvr.c	/^static void bld_tgl_mods_ndx(void)$/;"	f	file:	signature:(void)
bld_tgl_val_array_from_list	./v_cvr.c	/^static int32 bld_tgl_val_array_from_list(int32 *tglvaltab, int32 nbits,$/;"	f	file:	signature:(int32 *tglvaltab, int32 nbits, char *tglvecstr, char *errstr)
bld_timstr_vals	./v_fx2.c	/^static void bld_timstr_vals(void)$/;"	f	file:	signature:(void)
bld_tn_sets	./v_bbopt.c	/^static void bld_tn_sets(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
bld_tn_used_in_fg_set	./v_bbopt.c	/^static void bld_tn_used_in_fg_set(struct flowg_t *fgp, struct bblk_t *bbp)$/;"	f	file:	signature:(struct flowg_t *fgp, struct bblk_t *bbp)
bld_top_virtinsts	./v_genfx.c	/^static void bld_top_virtinsts(void)$/;"	f	file:	signature:(void)
bld_trauxs	./v_trch.c	/^static void bld_trauxs(void) $/;"	f	file:	signature:(void)
bld_trgraph	./v_trch.c	/^static void bld_trgraph(struct mod_t *mdp, struct traux_t *trap,$/;"	f	file:	signature:(struct mod_t *mdp, struct traux_t *trap, struct net_t *np)
bld_tskenable_evxlst	./v_fx2.c	/^static void bld_tskenable_evxlst(struct st_t *stp, int32 include_func)$/;"	f	file:	signature:(struct st_t *stp, int32 include_func)
bld_type_iterator	./v_vpi.c	/^static vpiHandle bld_type_iterator(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
bld_udpdef_iterator	./v_vpi.c	/^static vpiHandle bld_udpdef_iterator(struct h_t *rhp)$/;"	f	file:	signature:(struct h_t *rhp)
bld_udploc	./v_prp.c	/^static char *bld_udploc(char *s, word32 ndx, word32 val, word32 nstates)$/;"	f	file:	signature:(char *s, word32 ndx, word32 val, word32 nstates)
bld_uinitndx	./v_prp.c	/^static word32 bld_uinitndx(char *tlp, word32 nstates, int32 einum)$/;"	f	file:	signature:(char *tlp, word32 nstates, int32 einum)
bld_unnormalized_rng_str	./v_cvr.c	/^static char *bld_unnormalized_rng_str(char *s, int32 hind, int32 lind,$/;"	f	file:	signature:(char *s, int32 hind, int32 lind, int32 mr1, int32 mr2)
bld_vpinewdu	./v_vpi3.c	/^static int32 bld_vpinewdu(struct gate_t *ngp, struct gate_t *ogp,$/;"	f	file:	signature:(struct gate_t *ngp, struct gate_t *ogp, p_vpi_delay delay_p, t_midat *idp, int32 is_path, int32 is_trireg)
bld_wcardtab	./v_prp.c	/^static void bld_wcardtab(char *chp, word32 nstates, word32 einum)$/;"	f	file:	signature:(char *chp, word32 nstates, word32 einum)
bld_wire_ev_time_events	./v_prp.c	/^static void bld_wire_ev_time_events(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
bld_wire_telltale	./v_ex4.c	/^static char *bld_wire_telltale(char *s, struct net_t *np)$/;"	f	file:	signature:(char *s, struct net_t *np)
bld_xmrsrc_ref	./v_sim.c	/^static void bld_xmrsrc_ref(char *s, struct net_t *np)$/;"	f	file:	signature:(char *s, struct net_t *np)
bld_xprop_xedge_flowg	./v_bbgen.c	/^static void bld_xprop_xedge_flowg(struct net_t *np,$/;"	f	file:	signature:(struct net_t *np, struct st_t *stp, struct delctrl_t *dctp)
bld_ylb_dirfiles	./v_fx.c	/^static void bld_ylb_dirfiles(struct vylib_t *vyp)$/;"	f	file:	signature:(struct vylib_t *vyp)
bldchk_1bit_pthdst	./v_prp2.c	/^static int32 bldchk_1bit_pthdst(struct spcpth_t *pthp, struct net_t *s_np,$/;"	f	file:	signature:(struct spcpth_t *pthp, struct net_t *s_np, int32 sbi, struct net_t *d_np, int32 dbi, int32 dnwid, struct tchg_t *src_tchg)
bldchk_pb_pthdsts	./v_prp2.c	/^static int32 bldchk_pb_pthdsts(struct spcpth_t *pthp)$/;"	f	file:	signature:(struct spcpth_t *pthp)
bldndx_str	./v_prp.c	/^static char *bldndx_str(char *s, word32 ndx, word32 nstates)$/;"	f	file:	signature:(char *s, word32 ndx, word32 nstates)
blen	./igen.h	/^ int32 blen;               \/* blen of tmp *\/$/;"	m	struct:adradd_dup_t	access:public
blen	./v.h	/^ int32 blen;                \/* bit blen *\/$/;"	m	struct:prep_obj_t	access:public
bootrout_nam	./v.h	/^ char *bootrout_nam;$/;"	m	struct:dynboot_t	access:public
bp	./v.h	/^ byte *bp;$/;"	m	union:pck_u	access:public
bp	./v.h	/^ word32 *bp;                  \/* b part of value *\/$/;"	m	struct:xstk_t	access:public
bp_can_halt	./v.h	/^ unsigned bp_can_halt : 1;    \/* T => really break, F start and reset *\/$/;"	m	struct:brkpt_t	access:public
bp_condx	./v.h	/^ struct expr_t *bp_condx;     \/* :cond cmd filter expr. *\/ $/;"	m	struct:brkpt_t	typeref:struct:brkpt_t::expr_t	access:public
bp_dup	./v.h	/^ unsigned bp_dup : 1;         \/* T => multiple break points at statement *\/$/;"	m	struct:brkpt_t	access:public
bp_enable	./v.h	/^ unsigned bp_enable : 1;      \/* T => break not disabled *\/$/;"	m	struct:brkpt_t	access:public
bp_hit_cnt	./v.h	/^ int32 bp_hit_cnt;            \/* number of times hit *\/$/;"	m	struct:brkpt_t	access:public
bp_idp	./v.h	/^ t_midat *bp_idp;             \/* itree loc. - any (first?) for all of type *\/ $/;"	m	struct:brkpt_t	access:public
bp_ignore_cnt	./v.h	/^ int32 bp_ignore_cnt;$/;"	m	struct:brkpt_t	access:public
bp_num	./v.h	/^ int32 bp_num;                \/* identifying number *\/$/;"	m	struct:brkpt_t	access:public
bp_prttyp	./v.h	/^ unsigned bp_prttyp : 2;      \/* type of printing when hit *\/$/;"	m	struct:brkpt_t	access:public
bp_rm_when_hit	./v.h	/^ unsigned bp_rm_when_hit : 1; \/* T => remove when hit *\/$/;"	m	struct:brkpt_t	access:public
bp_stp	./v.h	/^ struct st_t *bp_stp;         \/* statement this break point breaks at *\/$/;"	m	struct:brkpt_t	typeref:struct:brkpt_t::st_t	access:public
bp_tskp	./v.h	/^ struct task_t *bp_tskp;      \/* task break point in else NULL if not *\/$/;"	m	struct:brkpt_t	typeref:struct:brkpt_t::task_t	access:public
bp_type	./v.h	/^ unsigned bp_type : 4;        \/* type of breakpoint *\/ $/;"	m	struct:brkpt_t	access:public
bpnxt	./v.h	/^ struct brkpt_t *bpnxt;$/;"	m	struct:brkpt_t	typeref:struct:brkpt_t::brkpt_t	access:public
breakpoint_msg	./v_dbg.c	/^static char *breakpoint_msg[] = { $/;"	v	file:
brkpt_t	./v.h	/^struct brkpt_t {$/;"	s
brkpt_t::bp_can_halt	./v.h	/^ unsigned bp_can_halt : 1;    \/* T => really break, F start and reset *\/$/;"	m	struct:brkpt_t	access:public
brkpt_t::bp_condx	./v.h	/^ struct expr_t *bp_condx;     \/* :cond cmd filter expr. *\/ $/;"	m	struct:brkpt_t	typeref:struct:brkpt_t::expr_t	access:public
brkpt_t::bp_dup	./v.h	/^ unsigned bp_dup : 1;         \/* T => multiple break points at statement *\/$/;"	m	struct:brkpt_t	access:public
brkpt_t::bp_enable	./v.h	/^ unsigned bp_enable : 1;      \/* T => break not disabled *\/$/;"	m	struct:brkpt_t	access:public
brkpt_t::bp_hit_cnt	./v.h	/^ int32 bp_hit_cnt;            \/* number of times hit *\/$/;"	m	struct:brkpt_t	access:public
brkpt_t::bp_idp	./v.h	/^ t_midat *bp_idp;             \/* itree loc. - any (first?) for all of type *\/ $/;"	m	struct:brkpt_t	access:public
brkpt_t::bp_ignore_cnt	./v.h	/^ int32 bp_ignore_cnt;$/;"	m	struct:brkpt_t	access:public
brkpt_t::bp_num	./v.h	/^ int32 bp_num;                \/* identifying number *\/$/;"	m	struct:brkpt_t	access:public
brkpt_t::bp_prttyp	./v.h	/^ unsigned bp_prttyp : 2;      \/* type of printing when hit *\/$/;"	m	struct:brkpt_t	access:public
brkpt_t::bp_rm_when_hit	./v.h	/^ unsigned bp_rm_when_hit : 1; \/* T => remove when hit *\/$/;"	m	struct:brkpt_t	access:public
brkpt_t::bp_stp	./v.h	/^ struct st_t *bp_stp;         \/* statement this break point breaks at *\/$/;"	m	struct:brkpt_t	typeref:struct:brkpt_t::st_t	access:public
brkpt_t::bp_tskp	./v.h	/^ struct task_t *bp_tskp;      \/* task break point in else NULL if not *\/$/;"	m	struct:brkpt_t	typeref:struct:brkpt_t::task_t	access:public
brkpt_t::bp_type	./v.h	/^ unsigned bp_type : 4;        \/* type of breakpoint *\/ $/;"	m	struct:brkpt_t	access:public
brkpt_t::bpnxt	./v.h	/^ struct brkpt_t *bpnxt;$/;"	m	struct:brkpt_t	typeref:struct:brkpt_t::brkpt_t	access:public
brktr_exec_stmts	./v_ex.c	/^static void brktr_exec_stmts(struct st_t *stp, int32 *dowhile, $/;"	f	file:	signature:(struct st_t *stp, int32 *dowhile, int32 is_do_while)
bsel_acc_downtomdport	./v_ex4.c	/^static void bsel_acc_downtomdport(struct expr_t *lhsx, struct expr_t *rhsx,$/;"	f	file:	signature:(struct expr_t *lhsx, struct expr_t *rhsx, struct itree_t *down_itp)
bsel_acc_uptoiconn	./v_ex4.c	/^static void bsel_acc_uptoiconn(struct expr_t *lhsx, struct expr_t *rhsx,$/;"	f	file:	signature:(struct expr_t *lhsx, struct expr_t *rhsx, struct itree_t *up_itp)
buf	./v.h	/^ byte *buf; $/;"	m	union:dv_storage_u	access:public
bufferStart	./lz4.c	/^    const BYTE* bufferStart;$/;"	m	struct:__anon5	file:	access:public
build_mda_indices	./v_ex4.c	/^static int32 *build_mda_indices(struct expr_t *ndx1, struct mda_t *mdap, $/;"	f	file:	signature:(struct expr_t *ndx1, struct mda_t *mdap, int32 arri)
build_reg_conflicts	./v_regasn.c	/^static void build_reg_conflicts(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
build_register_def_use_list	./v_regasn.c	/^static void build_register_def_use_list(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
build_rule_error	./v_src3.c	/^static void build_rule_error(struct cfg_t *cfgp, struct cfglib_t *cntxt_lbp, $/;"	f	file:	signature:(struct cfg_t *cfgp, struct cfglib_t *cntxt_lbp, struct cfgrule_t *rulp)
build_xmr_dependency	./v_cvcms.c	/^static void build_xmr_dependency(void)$/;"	f	file:	signature:(void)
bval	./igen.h	/^ word32 bval;                 \/* and b part *\/$/;"	m	struct:icasx_t	access:public
bval	./v.h	/^ word32 bval;               \/* <= WBITS bpart value *\/$/;"	m	struct:dmp_buf_t	access:public
bval	./v.h	/^ word32 bval;$/;"	m	struct:pbexpr_t	access:public
byPtr	./lz4.c	/^typedef enum { byPtr, byU32, byU16 } tableType_t;$/;"	e	enum:__anon7	file:
byU16	./lz4.c	/^typedef enum { byPtr, byU32, byU16 } tableType_t;$/;"	e	enum:__anon7	file:
byU32	./lz4.c	/^typedef enum { byPtr, byU32, byU16 } tableType_t;$/;"	e	enum:__anon7	file:
byte	./v.h	/^typedef unsigned char byte;$/;"	t
byte_to_chars	./v_ex4.c	/^static const word64 byte_to_chars[256] = {$/;"	v	file:
c_hasst	./v.h	/^ unsigned c_hasst : 1;        \/* T => strength appears in source *\/$/;"	m	struct:cell_t	access:public
c_iscell	./v.h	/^ unsigned c_iscell : 1;       \/* T => this is a timing lib. cell *\/  $/;"	m	struct:cell_t	access:public
c_named	./v.h	/^ unsigned c_named : 1;        \/* T => instance is named *\/$/;"	m	struct:cell_t	access:public
c_nparms	./v.h	/^ struct namparam_t *c_nparms;$/;"	m	struct:cell_t	typeref:struct:cell_t::namparam_t	access:public
c_stval	./v.h	/^ unsigned c_stval : 6;        \/* (3 bit 0 st. and 3 bit 1 st. *\/$/;"	m	struct:cell_t	access:public
ca_4vdel	./v.h	/^ unsigned ca_4vdel : 1;       \/* T => delay 4v so need to eval new_gateval *\/$/;"	m	struct:conta_t	access:public
ca_delrep	./v.h	/^ unsigned ca_delrep : 5;$/;"	m	struct:conta_t	access:public
ca_drv_ofs	./v.h	/^ size_t ca_drv_ofs;            \/* idp ofs rhs drive a\/b values if needed *\/$/;"	m	struct:conta_t	access:public
ca_du	./v.h	/^ union del_u ca_du;           \/* per type delay table (only in master) *\/$/;"	m	struct:conta_t	typeref:union:conta_t::del_u	access:public
ca_gone	./v.h	/^ unsigned ca_gone : 1;        \/* continuous assign could be removed *\/$/;"	m	struct:conta_t	access:public
ca_hasst	./v.h	/^ unsigned ca_hasst : 1;$/;"	m	struct:conta_t	access:public
ca_ndx	./v.h	/^ int32 ca_ndx;                \/* conta ndx needed by asmlnk tev write proc *\/$/;"	m	struct:ctev_t	access:public
ca_pb_el	./v.h	/^ unsigned ca_pb_el : 1;       \/* T => this is a per bit el pb fld is master *\/$/;"	m	struct:conta_t	access:public
ca_pb_sim	./v.h	/^ unsigned ca_pb_sim : 1;      \/* T => in src rhs concat simulates as PB *\/$/;"	m	struct:conta_t	access:public
ca_stval	./v.h	/^ unsigned ca_stval : 6;       \/* (3 bit 0 st. and 3 bit 1 st. *\/$/;"	m	struct:conta_t	access:public
call_asl_insn_tostr	./v_asmlnk.c	/^static char *call_asl_insn_tostr(char *s, struct insn_t *ip)$/;"	f	file:	signature:(char *s, struct insn_t *ip)
callasl_argnum	./igen.h	/^ unsigned callasl_argnum : 4; \/* for unlowered asl calls, number of args *\/$/;"	m	struct:insn_t	access:public
called_tasks	./v.h	/^ struct task_t **called_tasks; \/* array of tasks this task calls *\/$/;"	m	struct:task_t	typeref:struct:task_t::task_t	access:public
callx	./v.h	/^ struct expr_t *callx;        \/* for tf_ func ptr back to call expr else nil *\/$/;"	m	union:tf_u	typeref:struct:tf_u::expr_t	access:public
callx	./v.h	/^ struct expr_t *callx;$/;"	m	struct:tfinst_t	typeref:struct:tfinst_t::expr_t	access:public
can_be_disabled	./v.h	/^ unsigned can_be_disabled : 1;\/* T => disable somewhere in source *\/$/;"	m	struct:task_t	access:public
can_dump_entire_array	./v_ex4.c	/^static int32 can_dump_entire_array(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
can_merge_dce	./v_prp.c	/^static int32 can_merge_dce(struct dcevnt_t *dcep)$/;"	f	file:	signature:(struct dcevnt_t *dcep)
can_rm_trk_insn	./v_bbopt.c	/^static int32 can_rm_trk_insn(int32 dtni)$/;"	f	file:	signature:(int32 dtni)
cancel_1mipdev	./v_ex3.c	/^static void cancel_1mipdev(struct tev_t *tevp)$/;"	f	file:	signature:(struct tev_t *tevp)
cancel_vpievents_toend	./v_vpi3.c	/^static void cancel_vpievents_toend(struct net_t *np, struct dltevlst_t *frdlp,$/;"	f	file:	signature:(struct net_t *np, struct dltevlst_t *frdlp, int32 ewid)
cant_opt	./v.h	/^ unsigned cant_opt : 1;       \/* npp must not be deleted or changed *\/$/;"	m	struct:npopt_t	access:public
canxt	./v.h	/^ struct conta_t *canxt;       \/* canxt only need up to late fixup 2 tab bld *\/ $/;"	m	union:pbca_u	typeref:struct:pbca_u::conta_t	access:public
cas_tabi	./igen.h	/^ int32 cas_tabi;$/;"	m	struct:icasx_t	access:public
caschd_tevs_ofs	./v.h	/^ size_t caschd_tevs_ofs;       \/* per inst. idp ofs scheduled event ndx array *\/$/;"	m	struct:conta_t	access:public
case_stmt_lhs_assign	./v_xprop.c	/^static int32 case_stmt_lhs_assign(struct st_t *stp, int32 slevel, $/;"	f	file:	signature:(struct st_t *stp, int32 slevel, int32 do_alloc)
case_t	./v.h	/^struct case_t {$/;"	s
case_t::castyp	./v.h	/^ unsigned castyp : 8;$/;"	m	struct:case_t	access:public
case_t::csitems	./v.h	/^ struct csitem_t *csitems;    \/* first item always default: place holder *\/  $/;"	m	struct:case_t	typeref:struct:case_t::csitem_t	access:public
case_t::csx	./v.h	/^ struct expr_t *csx;$/;"	m	struct:case_t	typeref:struct:case_t::expr_t	access:public
case_t::maxselwid	./v.h	/^ unsigned maxselwid : 24;$/;"	m	struct:case_t	access:public
case_t::xprop	./v.h	/^ struct xprop_t *xprop;$/;"	m	struct:case_t	typeref:struct:case_t::xprop_t	access:public
case_t::xprop_lstp	./v.h	/^ struct st_t *xprop_lstp;     \/* x-prop statement list *\/$/;"	m	struct:case_t	typeref:struct:case_t::st_t	access:public
castyp	./v.h	/^ unsigned castyp : 8;$/;"	m	struct:case_t	access:public
casx	./igen.h	/^ struct expr_t *casx;         \/* item expression *\/$/;"	m	struct:icasx_t	typeref:struct:icasx_t::expr_t	access:public
casym	./v.h	/^ struct sy_t *casym;$/;"	m	struct:conta_t	typeref:struct:conta_t::sy_t	access:public
cat_need_rhs_eval	./v_bbgen.c	/^static int32 cat_need_rhs_eval(struct expr_t **lhsxtab, int32 lels,$/;"	f	file:	signature:(struct expr_t **lhsxtab, int32 lels, struct expr_t **rhsxtab, int32 rels)
cat_need_rhs_eval2	./v_bbgen.c	/^static int32 cat_need_rhs_eval2(struct expr_t *lhsx, struct expr_t **rhsxtab,$/;"	f	file:	signature:(struct expr_t *lhsx, struct expr_t **rhsxtab, int32 rels, int32 rhsx_xlen)
cattrs	./v.h	/^ struct attr_t *cattrs;       \/* attrs for cell - moved later *\/$/;"	m	struct:cell_t	typeref:struct:cell_t::attr_t	access:public
cb_cbhp	./v.h	/^ struct h_t *cb_cbhp;         \/* associated handle of call back *\/$/;"	m	struct:cbrec_t	typeref:struct:cbrec_t::h_t	access:public
cb_class	./v.h	/^ unsigned cb_class : 3;       \/* internal scheduling class *\/  $/;"	m	struct:cbrec_t	access:public
cb_gateout	./v.h	/^ unsigned cb_gateout : 1;     \/* T => gate outut val chg type cb *\/ $/;"	m	struct:cbrec_t	access:public
cb_hp	./v.h	/^ struct h_t *cb_hp;           \/* object *\/ $/;"	m	struct:cbrec_t	typeref:struct:cbrec_t::h_t	access:public
cb_ndxobj	./v.h	/^ unsigned cb_ndxobj : 1;      \/* T => value chg handle is indexed *\/  $/;"	m	struct:cbrec_t	access:public
cb_reason	./v.h	/^ unsigned cb_reason : 12;     \/* reason field from passed cb_data rec. *\/$/;"	m	struct:cbrec_t	access:public
cb_rettimtyp	./v.h	/^ unsigned cb_rettimtyp : 6;   \/* time record field type to return *\/$/;"	m	struct:cbrec_t	access:public
cb_retvalfmt	./v.h	/^ unsigned cb_retvalfmt : 7;   \/* value record field format to return *\/$/;"	m	struct:cbrec_t	access:public
cb_rtn	./v.h	/^ int32 (*cb_rtn)();           \/* cb_data call back routine *\/$/;"	m	struct:cbrec_t	access:public
cb_user_data	./v.h	/^ char *cb_user_data;          \/* user data field from passed cb_data rec. *\/$/;"	m	struct:cbrec_t	access:public
cb_user_off	./v.h	/^ unsigned cb_user_off : 1;    \/* T => user turned off with sim control *\/$/;"	m	struct:cbrec_t	access:public
cbdcep	./v.h	/^ struct dceauxlst_t *cbdcep;  \/* list of dces for cb removal *\/ $/;"	m	struct:cbrec_t	typeref:struct:cbrec_t::dceauxlst_t	access:public
cbnxt	./v.h	/^ struct cbrec_t *cbnxt;       \/* next in chain of all callbacks *\/$/;"	m	struct:cbrec_t	typeref:struct:cbrec_t::cbrec_t	access:public
cbprev	./v.h	/^ struct cbrec_t *cbprev;      \/* previous in chain of all callbacks *\/$/;"	m	struct:cbrec_t	typeref:struct:cbrec_t::cbrec_t	access:public
cbrec_t	./v.h	/^struct cbrec_t {$/;"	s
cbrec_t::cb_cbhp	./v.h	/^ struct h_t *cb_cbhp;         \/* associated handle of call back *\/$/;"	m	struct:cbrec_t	typeref:struct:cbrec_t::h_t	access:public
cbrec_t::cb_class	./v.h	/^ unsigned cb_class : 3;       \/* internal scheduling class *\/  $/;"	m	struct:cbrec_t	access:public
cbrec_t::cb_gateout	./v.h	/^ unsigned cb_gateout : 1;     \/* T => gate outut val chg type cb *\/ $/;"	m	struct:cbrec_t	access:public
cbrec_t::cb_hp	./v.h	/^ struct h_t *cb_hp;           \/* object *\/ $/;"	m	struct:cbrec_t	typeref:struct:cbrec_t::h_t	access:public
cbrec_t::cb_ndxobj	./v.h	/^ unsigned cb_ndxobj : 1;      \/* T => value chg handle is indexed *\/  $/;"	m	struct:cbrec_t	access:public
cbrec_t::cb_reason	./v.h	/^ unsigned cb_reason : 12;     \/* reason field from passed cb_data rec. *\/$/;"	m	struct:cbrec_t	access:public
cbrec_t::cb_rettimtyp	./v.h	/^ unsigned cb_rettimtyp : 6;   \/* time record field type to return *\/$/;"	m	struct:cbrec_t	access:public
cbrec_t::cb_retvalfmt	./v.h	/^ unsigned cb_retvalfmt : 7;   \/* value record field format to return *\/$/;"	m	struct:cbrec_t	access:public
cbrec_t::cb_rtn	./v.h	/^ int32 (*cb_rtn)();           \/* cb_data call back routine *\/$/;"	m	struct:cbrec_t	access:public
cbrec_t::cb_user_data	./v.h	/^ char *cb_user_data;          \/* user data field from passed cb_data rec. *\/$/;"	m	struct:cbrec_t	access:public
cbrec_t::cb_user_off	./v.h	/^ unsigned cb_user_off : 1;    \/* T => user turned off with sim control *\/$/;"	m	struct:cbrec_t	access:public
cbrec_t::cbdcep	./v.h	/^ struct dceauxlst_t *cbdcep;  \/* list of dces for cb removal *\/ $/;"	m	struct:cbrec_t	typeref:struct:cbrec_t::dceauxlst_t	access:public
cbrec_t::cbnxt	./v.h	/^ struct cbrec_t *cbnxt;       \/* next in chain of all callbacks *\/$/;"	m	struct:cbrec_t	typeref:struct:cbrec_t::cbrec_t	access:public
cbrec_t::cbprev	./v.h	/^ struct cbrec_t *cbprev;      \/* previous in chain of all callbacks *\/$/;"	m	struct:cbrec_t	typeref:struct:cbrec_t::cbrec_t	access:public
cbrec_t::cbtevp	./v.h	/^ struct tev_t *cbtevp;         \/* ndx (ptr) back to event *\/$/;"	m	struct:cbrec_t	typeref:struct:cbrec_t::tev_t	access:public
cbtevp	./v.h	/^ struct tev_t *cbtevp;         \/* ndx (ptr) back to event *\/$/;"	m	struct:cbrec_t	typeref:struct:cbrec_t::tev_t	access:public
cc_need_multfi	./v.h	/^ unsigned cc_need_multfi : 1;$/;"	m	struct:net_t	access:public
cell_pin_t	./v.h	/^struct cell_pin_t {$/;"	s
cell_pin_t::cpfnam_ind	./v.h	/^ word32 cpfnam_ind;           \/* file symbol defined in *\/$/;"	m	struct:cell_pin_t	access:public
cell_pin_t::cplin_cnt	./v.h	/^ int32 cplin_cnt;             \/* def. line no. *\/$/;"	m	struct:cell_pin_t	access:public
cell_pin_t::cpnxt	./v.h	/^ struct cell_pin_t *cpnxt;$/;"	m	struct:cell_pin_t	typeref:struct:cell_pin_t::cell_pin_t	access:public
cell_pin_t::cpxnd	./v.h	/^ struct expr_t *cpxnd;        \/* connecting expression root node *\/$/;"	m	struct:cell_pin_t	typeref:struct:cell_pin_t::expr_t	access:public
cell_pin_t::pnam	./v.h	/^ char *pnam;                  \/* probably no symbol table when read *\/$/;"	m	struct:cell_pin_t	access:public
cell_t	./v.h	/^struct cell_t {$/;"	s
cell_t::c_hasst	./v.h	/^ unsigned c_hasst : 1;        \/* T => strength appears in source *\/$/;"	m	struct:cell_t	access:public
cell_t::c_iscell	./v.h	/^ unsigned c_iscell : 1;       \/* T => this is a timing lib. cell *\/  $/;"	m	struct:cell_t	access:public
cell_t::c_named	./v.h	/^ unsigned c_named : 1;        \/* T => instance is named *\/$/;"	m	struct:cell_t	access:public
cell_t::c_nparms	./v.h	/^ struct namparam_t *c_nparms;$/;"	m	struct:cell_t	typeref:struct:cell_t::namparam_t	access:public
cell_t::c_stval	./v.h	/^ unsigned c_stval : 6;        \/* (3 bit 0 st. and 3 bit 1 st. *\/$/;"	m	struct:cell_t	access:public
cell_t::cattrs	./v.h	/^ struct attr_t *cattrs;       \/* attrs for cell - moved later *\/$/;"	m	struct:cell_t	typeref:struct:cell_t::attr_t	access:public
cell_t::cmsym	./v.h	/^ struct sy_t *cmsym;          \/* module type symbol *\/$/;"	m	struct:cell_t	typeref:struct:cell_t::sy_t	access:public
cell_t::cnxt	./v.h	/^ struct cell_t *cnxt;$/;"	m	struct:cell_t	typeref:struct:cell_t::cell_t	access:public
cell_t::cp_explicit	./v.h	/^ unsigned cp_explicit : 1;    \/* T => all explicit connection list *\/$/;"	m	struct:cell_t	access:public
cell_t::cpins	./v.h	/^ struct cell_pin_t *cpins;$/;"	m	struct:cell_t	typeref:struct:cell_t::cell_pin_t	access:public
cell_t::csym	./v.h	/^ struct sy_t *csym;$/;"	m	struct:cell_t	typeref:struct:cell_t::sy_t	access:public
cell_t::cx1	./v.h	/^ struct expr_t *cx1, *cx2;    \/* for arrays of gates\/insts, the range *\/$/;"	m	struct:cell_t	typeref:struct:cell_t::expr_t	access:public
cell_t::cx2	./v.h	/^ struct expr_t *cx1, *cx2;    \/* for arrays of gates\/insts, the range *\/$/;"	m	struct:cell_t	typeref:struct:cell_t::	access:public
cellinst_addto_iter	./v_acc.c	/^static int32 cellinst_addto_iter(vpiHandle ihref, int32 iti2, int32 rm_cells)$/;"	f	file:	signature:(vpiHandle ihref, int32 iti2, int32 rm_cells)
cellrep_to_gate	./v_fx.c	/^static void cellrep_to_gate(struct cell_t *cp, struct gate_t *gp)$/;"	f	file:	signature:(struct cell_t *cp, struct gate_t *gp)
cellrep_to_inst	./v_fx.c	/^static void cellrep_to_inst(struct cell_t *cp, struct inst_t *ip)$/;"	f	file:	signature:(struct cell_t *cp, struct inst_t *ip)
cf_auxp	./v.h	/^ struct conf_aux_t *cf_auxp;     \/* aux record for con func extra info *\/$/;"	m	union:conf_u	typeref:struct:conf_u::conf_aux_t	access:public
cfg_fnam	./v.h	/^ char *cfg_fnam;$/;"	m	struct:cfg_t	access:public
cfg_lno	./v.h	/^ int32 cfg_lno;$/;"	m	struct:cfg_t	access:public
cfg_needed	./v.h	/^ unsigned cfg_needed : 1;     \/* T => symbol is used in config *\/$/;"	m	struct:sy_t	access:public
cfg_scanned	./v.h	/^ unsigned cfg_scanned : 1;    \/* T => module has been scanned by config *\/$/;"	m	struct:mod_t	access:public
cfg_skipto_comma_semi	./v_src3.c	/^static int32 cfg_skipto_comma_semi(int32 ttyp, FILE *fp)$/;"	f	file:	signature:(int32 ttyp, FILE *fp)
cfg_skipto_eof	./v_src3.c	/^static int32 cfg_skipto_eof(int32 ttyp, FILE *fp)$/;"	f	file:	signature:(int32 ttyp, FILE *fp)
cfg_skipto_semi	./v_src3.c	/^static int32 cfg_skipto_semi(int32 ttyp, FILE *fp)$/;"	f	file:	signature:(int32 ttyp, FILE *fp)
cfg_skipto_semi_endconfig	./v_src3.c	/^static int32 cfg_skipto_semi_endconfig(int32 ttyp, FILE *fp)$/;"	f	file:	signature:(int32 ttyp, FILE *fp)
cfg_t	./v.h	/^struct cfg_t {$/;"	s
cfg_t::cfg_fnam	./v.h	/^ char *cfg_fnam;$/;"	m	struct:cfg_t	access:public
cfg_t::cfg_lno	./v.h	/^ int32 cfg_lno;$/;"	m	struct:cfg_t	access:public
cfg_t::cfgdeslist	./v.h	/^ struct cfgdes_t *cfgdeslist; \/* list of config design [lib].[cell]s *\/$/;"	m	struct:cfg_t	typeref:struct:cfg_t::cfgdes_t	access:public
cfg_t::cfgdflt	./v.h	/^ struct cfgrule_t *cfgdflt;   \/* default lib list if rules find no matches *\/$/;"	m	struct:cfg_t	typeref:struct:cfg_t::cfgrule_t	access:public
cfg_t::cfgnam	./v.h	/^ char *cfgnam;                \/* name of the cfg *\/$/;"	m	struct:cfg_t	access:public
cfg_t::cfgnxt	./v.h	/^ struct cfg_t *cfgnxt;$/;"	m	struct:cfg_t	typeref:struct:cfg_t::cfg_t	access:public
cfg_t::cfgrules	./v.h	/^ struct cfgrule_t *cfgrules;  \/* ordered list of config rules *\/$/;"	m	struct:cfg_t	typeref:struct:cfg_t::cfgrule_t	access:public
cfgctab	./v_ms.c	/^static char cfgctab[128] = {$/;"	v	file:
cfgdes_t	./v.h	/^struct cfgdes_t {$/;"	s
cfgdes_t::deslbnam	./v.h	/^ char *deslbnam;          \/* name of config design library *\/$/;"	m	struct:cfgdes_t	access:public
cfgdes_t::deslbp	./v.h	/^ struct cfglib_t *deslbp; \/* ptr to config design library *\/$/;"	m	struct:cfgdes_t	typeref:struct:cfgdes_t::cfglib_t	access:public
cfgdes_t::desnxt	./v.h	/^ struct cfgdes_t *desnxt;  $/;"	m	struct:cfgdes_t	typeref:struct:cfgdes_t::cfgdes_t	access:public
cfgdes_t::topmodnam	./v.h	/^ char *topmodnam;         \/* name of top level cell (type) *\/$/;"	m	struct:cfgdes_t	access:public
cfgdeslist	./v.h	/^ struct cfgdes_t *cfgdeslist; \/* list of config design [lib].[cell]s *\/$/;"	m	struct:cfg_t	typeref:struct:cfg_t::cfgdes_t	access:public
cfgdflt	./v.h	/^ struct cfgrule_t *cfgdflt;   \/* default lib list if rules find no matches *\/$/;"	m	struct:cfg_t	typeref:struct:cfg_t::cfgrule_t	access:public
cfglb_fnam	./v.h	/^ char *cfglb_fnam;            \/* location of library in src needed *\/$/;"	m	struct:cfglib_t	access:public
cfglb_lno	./v.h	/^ int32 cfglb_lno;$/;"	m	struct:cfglib_t	access:public
cfglib_t	./v.h	/^struct cfglib_t {$/;"	s
cfglib_t::cfglb_fnam	./v.h	/^ char *cfglb_fnam;            \/* location of library in src needed *\/$/;"	m	struct:cfglib_t	access:public
cfglib_t::cfglb_lno	./v.h	/^ int32 cfglb_lno;$/;"	m	struct:cfglib_t	access:public
cfglib_t::cfgnxt	./v.h	/^ struct cfg_t *cfgnxt;$/;"	m	struct:cfglib_t	typeref:struct:cfglib_t::cfg_t	access:public
cfglib_t::lbels	./v.h	/^ struct libel_t *lbels;       \/* list of library file path spec elements *\/$/;"	m	struct:cfglib_t	typeref:struct:cfglib_t::libel_t	access:public
cfglib_t::lbname	./v.h	/^ char *lbname;                \/* library name *\/ $/;"	m	struct:cfglib_t	access:public
cfglib_t::lbnxt	./v.h	/^ struct cfglib_t *lbnxt;      \/* pointer to the next library *\/$/;"	m	struct:cfglib_t	typeref:struct:cfglib_t::cfglib_t	access:public
cfglib_t::lbsrc_rd	./v.h	/^ unsigned lbsrc_rd : 1;       \/* T => lib src files already read *\/$/;"	m	struct:cfglib_t	access:public
cfglib_t::sym_added	./v.h	/^ unsigned sym_added : 1;      \/* T => sym table has been read *\/$/;"	m	struct:cfglib_t	access:public
cfgnam	./v.h	/^ char *cfgnam;                \/* name of the cfg *\/$/;"	m	struct:cfg_t	access:public
cfgnamlst_t	./v.h	/^struct cfgnamlst_t {$/;"	s
cfgnamlst_t::cnlnxt	./v.h	/^ struct cfgnamlst_t *cnlnxt;$/;"	m	struct:cfgnamlst_t	typeref:struct:cfgnamlst_t::cfgnamlst_t	access:public
cfgnamlst_t::nam	./v.h	/^ char *nam;$/;"	m	struct:cfgnamlst_t	access:public
cfgnxt	./v.h	/^ struct cfg_t *cfgnxt;$/;"	m	struct:cfg_t	typeref:struct:cfg_t::cfg_t	access:public
cfgnxt	./v.h	/^ struct cfg_t *cfgnxt;$/;"	m	struct:cfglib_t	typeref:struct:cfglib_t::cfg_t	access:public
cfgrule_t	./v.h	/^struct cfgrule_t {$/;"	s
cfgrule_t::inam_comp_lasti	./v.h	/^ int32 inam_comp_lasti;       \/* number of components in XMR inst path *\/$/;"	m	struct:cfgrule_t	access:public
cfgrule_t::inam_comptab	./v.h	/^ char **inam_comptab;         \/* table of inst clause XMR components *\/$/;"	m	struct:cfgrule_t	access:public
cfgrule_t::is_use	./v.h	/^ unsigned is_use : 1;         \/* T => 'use' else 'liblist' *\/ $/;"	m	struct:cfgrule_t	access:public
cfgrule_t::libnam	./v.h	/^ char *libnam;                \/* cell clause: <lib name>.[cell name] *\/$/;"	m	struct:cfgrule_t	access:public
cfgrule_t::matched	./v.h	/^ unsigned matched : 1;        \/* T => rule was bound at least once *\/ $/;"	m	struct:cfgrule_t	access:public
cfgrule_t::objnam	./v.h	/^ char *objnam;                \/* inst clause: [XMR inst path] *\/ $/;"	m	struct:cfgrule_t	access:public
cfgrule_t::rul_libs	./v.h	/^ struct cfgnamlst_t *rul_libs;\/* liblist clause - just list of libraries *\/$/;"	m	struct:cfgrule_t	typeref:struct:cfgrule_t::cfgnamlst_t	access:public
cfgrule_t::rul_lno	./v.h	/^ int32 rul_lno;$/;"	m	struct:cfgrule_t	access:public
cfgrule_t::rul_use_celnam	./v.h	/^ char *rul_use_celnam;$/;"	m	struct:cfgrule_t	access:public
cfgrule_t::rul_use_libnam	./v.h	/^ char *rul_use_libnam;        \/* use <lib name.>[cell name][:config] *\/$/;"	m	struct:cfgrule_t	access:public
cfgrule_t::rulnxt	./v.h	/^ struct cfgrule_t *rulnxt;$/;"	m	struct:cfgrule_t	typeref:struct:cfgrule_t::cfgrule_t	access:public
cfgrule_t::rultyp	./v.h	/^ unsigned rultyp : 8;         \/* type - cfg symbol number *\/$/;"	m	struct:cfgrule_t	access:public
cfgrule_t::use_rule_cfg	./v.h	/^ unsigned use_rule_cfg : 1;   \/* T => use clause config form *\/ $/;"	m	struct:cfgrule_t	access:public
cfgrules	./v.h	/^ struct cfgrule_t *cfgrules;  \/* ordered list of config rules *\/$/;"	m	struct:cfg_t	typeref:struct:cfg_t::cfgrule_t	access:public
cfu	./v.h	/^ union conf_u cfu;            \/* con func and image aux info union *\/$/;"	m	struct:task_t	typeref:union:task_t::conf_u	access:public
ch_tobits	./v_ms.c	/^static int32 ch_tobits(word32 *ap, word32 *bp, int32 ch)$/;"	f	file:	signature:(word32 *ap, word32 *bp, int32 ch)
ch_tohexs	./v_ms.c	/^static int32 ch_tohexs(word32 *ap, word32 *bp, int32 ch)$/;"	f	file:	signature:(word32 *ap, word32 *bp, int32 ch)
ch_toocts	./v_ms.c	/^static int32 ch_toocts(word32 *ap, word32 *bp, int32 ch)$/;"	f	file:	signature:(word32 *ap, word32 *bp, int32 ch)
chan_diffwtyps	./v.h	/^ unsigned chan_diffwtyps : 1; \/* T => different wire types in channel *\/$/;"	m	struct:chanrec_t	access:public
chan_id	./v.h	/^ int32 chan_id;               \/* ID for channel *\/$/;"	m	struct:vbinfo_t	access:public
chan_no_vtxs	./v.h	/^ unsigned chan_no_vtxs : 1;   \/* T => for pure bid after cnvt to list *\/$/;"	m	struct:chanrec_t	access:public
chan_replaced	./v.h	/^ unsigned chan_replaced : 1;  \/* T => when cnvrt to vec bid chan, this gone *\/$/;"	m	struct:chanrec_t	access:public
chan_vectored	./v.h	/^ unsigned chan_vectored : 1;  \/* T => replacement vector for inout per bit *\/$/;"	m	struct:chanrec_t	access:public
change_all_rngreps	./v_prp.c	/^static void change_all_rngreps(void)$/;"	f	file:	signature:(void)
change_contags_to_imms	./v_asmlnk.c	/^static void change_contags_to_imms(struct bblk_t *bbp)$/;"	f	file:	signature:(struct bblk_t *bbp)
change_srcfile	./v_dbg2.c	/^static int32 change_srcfile(int32 new_ifi)$/;"	f	file:	signature:(int32 new_ifi)
channel_all_entire_vecs	./v_trch.c	/^static int32 channel_all_entire_vecs(int32 start_chii, int32 end_chii)$/;"	f	file:	signature:(int32 start_chii, int32 end_chii)
chanrec_t	./v.h	/^struct chanrec_t {$/;"	s
chanrec_t::bid_vtxtab	./v.h	/^ struct bidvtx_t *bid_vtxtab; \/* for bid only, rec tab with itree loc *\/$/;"	m	struct:chanrec_t	typeref:struct:chanrec_t::bidvtx_t	access:public
chanrec_t::chan_diffwtyps	./v.h	/^ unsigned chan_diffwtyps : 1; \/* T => different wire types in channel *\/$/;"	m	struct:chanrec_t	access:public
chanrec_t::chan_no_vtxs	./v.h	/^ unsigned chan_no_vtxs : 1;   \/* T => for pure bid after cnvt to list *\/$/;"	m	struct:chanrec_t	access:public
chanrec_t::chan_replaced	./v.h	/^ unsigned chan_replaced : 1;  \/* T => when cnvrt to vec bid chan, this gone *\/$/;"	m	struct:chanrec_t	access:public
chanrec_t::chan_vectored	./v.h	/^ unsigned chan_vectored : 1;  \/* T => replacement vector for inout per bit *\/$/;"	m	struct:chanrec_t	access:public
chanrec_t::chtyp	./v.h	/^ unsigned chtyp : 3;          \/* channel processing type *\/$/;"	m	struct:chanrec_t	access:public
chanrec_t::chvitp	./v.h	/^ struct itree_t *chvitp;      \/* and its itree loc. *\/$/;"	m	struct:chanrec_t	typeref:struct:chanrec_t::itree_t	access:public
chanrec_t::chvxp	./v.h	/^ struct vtx_t *chvxp;         \/* for now one random vertex *\/ $/;"	m	struct:chanrec_t	typeref:struct:chanrec_t::vtx_t	access:public
chanrec_t::numvtxs	./v.h	/^ word32 numvtxs;              \/* number of vertices (net-bits) in channel *\/$/;"	m	struct:chanrec_t	access:public
chanvtxs_cmp	./v_trch.c	/^static int32 chanvtxs_cmp(const void *p1, const void *p2)$/;"	f	file:	signature:(const void *p1, const void *p2)
check_arr_select	./v_fx3.c	/^static int32 check_arr_select(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
check_bad_or_unreachable_bblks	./v_bbopt.c	/^static void check_bad_or_unreachable_bblks(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
check_case_items	./v_xprop.c	/^static int32 check_case_items(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
check_fg_uses_idp	./v_regasn.c	/^static int32 check_fg_uses_idp(struct flowg_t *fgp) $/;"	f	file:	signature:(struct flowg_t *fgp)
check_for_active_event	./v_aslib.c	/^static void check_for_active_event(struct tev_t *tevp)$/;"	f	file:	signature:(struct tev_t *tevp)
check_rnam_str	./cvc.c	/^static int32 check_rnam_str(char *rnams)$/;"	f	file:	signature:(char *rnams)
check_systf	./v_vpi.c	/^static int32 check_systf(p_vpi_systf_data systfp, int32 *stftyp)$/;"	f	file:	signature:(p_vpi_systf_data systfp, int32 *stftyp)
check_task_has_delay	./v_fx2.c	/^static void check_task_has_delay(struct task_t *tskp)$/;"	f	file:	signature:(struct task_t *tskp)
check_task_has_disable	./v_fx2.c	/^static void check_task_has_disable(struct task_t *tskp)$/;"	f	file:	signature:(struct task_t *tskp)
check_task_has_xmrcall	./v_fx2.c	/^static void check_task_has_xmrcall(struct task_t *tskp)$/;"	f	file:	signature:(struct task_t *tskp)
check_used_insns	./v_regasn.c	/^static void check_used_insns(struct flowg_t *fgp,$/;"	f	file:	signature:(struct flowg_t *fgp, struct avlnode_t **tn_ref_avltab, int32 num_tnrefs)
chg16vform_1instdel	./v_del.c	/^static void chg16vform_1instdel(struct gate_t *mgp, struct itree_t *mastitp,$/;"	f	file:	signature:(struct gate_t *mgp, struct itree_t *mastitp, struct gate_t *ngp)
chg1vform_1instdel	./v_del.c	/^static void chg1vform_1instdel(struct gate_t *mgp, struct itree_t *mastitp,$/;"	f	file:	signature:(struct gate_t *mgp, struct itree_t *mastitp, struct gate_t *ngp)
chg4vform_1instdel	./v_del.c	/^static void chg4vform_1instdel(struct gate_t *mgp, struct itree_t *mastitp,$/;"	f	file:	signature:(struct gate_t *mgp, struct itree_t *mastitp, struct gate_t *ngp)
chg_abwrklen	./v_ms.c	/^static void chg_abwrklen(int32 wlen)$/;"	f	file:	signature:(int32 wlen)
chg_bidchan_to_vtxlist	./v_trch.c	/^static void chg_bidchan_to_vtxlist(struct chanrec_t *chanp)$/;"	f	file:	signature:(struct chanrec_t *chanp)
chg_cmos_instate	./v_sim.c	/^static int32 chg_cmos_instate(struct gate_t *gp, word32 i)$/;"	f	file:	signature:(struct gate_t *gp, word32 i)
chg_ins_wval	./v_ex3.c	/^static void chg_ins_wval(word32 *dwp, int32 dbi, word32 *swp, int32 numbits)$/;"	f	file:	signature:(word32 *dwp, int32 dbi, word32 *swp, int32 numbits)
chg_lhsbsel	./v_ex3.c	/^static void chg_lhsbsel(word32 *dwp, int32 dbit, word32 sw)$/;"	f	file:	signature:(word32 *dwp, int32 dbit, word32 sw)
chg_mos_instate	./v_sim.c	/^static int32 chg_mos_instate(struct gate_t *gp, word32 i)$/;"	f	file:	signature:(struct gate_t *gp, word32 i)
chg_mpx_to_bid	./v_fx2.c	/^static void chg_mpx_to_bid(struct expr_t *mpx)$/;"	f	file:	signature:(struct expr_t *mpx)
chg_net_to_multfi	./v_vpi3.c	/^static void chg_net_to_multfi(struct net_t *np, struct mod_t *mdp)$/;"	f	file:	signature:(struct net_t *np, struct mod_t *mdp)
chg_ofs_cmp	./v_ex3.c	/^static int32 chg_ofs_cmp(word32 *dwp, word32 *swp,$/;"	f	file:	signature:(word32 *dwp, word32 *swp, int32 dbi, int32 numbits)
chg_params_to_tab	./v_fx.c	/^static void chg_params_to_tab(void)$/;"	f	file:	signature:(void)
chg_rng_isnum_to_num	./v_fx2.c	/^static void chg_rng_isnum_to_num(struct net_t *np, struct expr_t *ndp,$/;"	f	file:	signature:(struct net_t *np, struct expr_t *ndp, char *rngstr)
chg_st_2state_unpckpsel	./v_ex3.c	/^static void chg_st_2state_unpckpsel(word32 *wp, int32 bith, int32 bitl,$/;"	f	file:	signature:(word32 *wp, int32 bith, int32 bitl, word32 *ap)
chg_st_arr_val_2state	./v_ex3.c	/^static void chg_st_arr_val_2state(struct net_t *np, struct expr_t *ndx1, $/;"	f	file:	signature:(struct net_t *np, struct expr_t *ndx1, struct expr_t *sel_ndx, int32 arri, word32 *ap)
chg_st_bit2sval	./v_ex3.c	/^static void chg_st_bit2sval(word32 *dwp, int32 blen, word32 *ap)$/;"	f	file:	signature:(word32 *dwp, int32 blen, word32 *ap)
chg_st_psel	./v_ex3.c	/^static void chg_st_psel(struct net_t *np, int32 ri1, int32 ri2, word32 *ap,$/;"	f	file:	signature:(struct net_t *np, int32 ri1, int32 ri2, word32 *ap, word32 *bp)
chg_st_scalval_	./cvmacros.h	331;"	d
chg_st_unpckpsel	./v_ex3.c	/^static void chg_st_unpckpsel(word32 *wp, int32 blen, int32 bith, int32 bitl,$/;"	f	file:	signature:(word32 *wp, int32 blen, int32 bith, int32 bitl, word32 *ap, word32 *bp)
chg_st_vecval	./v_ex3.c	/^static void chg_st_vecval(word32 *dwp, int32 blen, word32 *ap, word32 *bp)$/;"	f	file:	signature:(word32 *dwp, int32 blen, word32 *ap, word32 *bp)
chg_testl_to_con	./v_bbopt.c	/^static void chg_testl_to_con(struct insn_t *cmp_ip, int32 retval) $/;"	f	file:	signature:(struct insn_t *cmp_ip, int32 retval)
chg_unfilled_tox	./v_prp.c	/^static void chg_unfilled_tox(word32 *taddr, int32 blen)$/;"	f	file:	signature:(word32 *taddr, int32 blen)
chgnp	./v.h	/^ struct net_t *chgnp;$/;"	m	struct:nchglst_t	typeref:struct:nchglst_t::net_t	access:public
chgpthp	./v.h	/^ struct spcpth_t *chgpthp;$/;"	m	union:tchg_u	typeref:struct:tchg_u::spcpth_t	access:public
chgsubtyp	./v.h	/^ unsigned chgsubtyp : 2;      \/* for change the change subtype *\/$/;"	m	struct:net_pin_t	access:public
chgtcp	./v.h	/^ struct tchk_t *chgtcp;$/;"	m	union:tchg_u	typeref:struct:tchg_u::tchk_t	access:public
chgu	./v.h	/^ union tchg_u chgu;           \/* union pointer to associated master *\/$/;"	m	struct:tchg_t	typeref:union:tchg_t::tchg_u	access:public
chi_square	./v_ex2.c	/^static double chi_square(int32 *seed, int32 deg_of_free)$/;"	f	file:	signature:(int32 *seed, int32 deg_of_free)
child_tag_offset	./igen.h	/^ size_t child_tag_offset;      \/* for tn in parent, offset in area in bytes *\/$/;"	m	struct:tn_t	access:public
chk1_defparam	./v_genfx.c	/^static int32 chk1_defparam(struct dfparam_t *dfpp)$/;"	f	file:	signature:(struct dfparam_t *dfpp)
chk1_pndparam	./v_fx.c	/^static int32 chk1_pndparam(char *s1, struct inst_t *ip, struct namparam_t *npmp,$/;"	f	file:	signature:(char *s1, struct inst_t *ip, struct namparam_t *npmp, int32 pi, int32 npi)
chk_1bit_tran	./v_fx2.c	/^static void chk_1bit_tran(struct gate_t *gp, struct expr_t *px,$/;"	f	file:	signature:(struct gate_t *gp, struct expr_t *px, struct net_t *np, int32 termno)
chk_1bltingate	./v_fx2.c	/^static int32 chk_1bltingate(struct gate_t *gp)$/;"	f	file:	signature:(struct gate_t *gp)
chk_1gblk_dfp	./v_genfx.c	/^static int32 chk_1gblk_dfp(struct dfparam_t *dfpp)$/;"	f	file:	signature:(struct dfparam_t *dfpp)
chk_1mod_genblk_defparams	./v_genfx.c	/^static void chk_1mod_genblk_defparams(void)$/;"	f	file:	signature:(void)
chk_1reg	./v_fx2.c	/^static void chk_1reg(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
chk_1spcpth	./v_fx3.c	/^static int32 chk_1spcpth(struct spcpth_t *pthp) $/;"	f	file:	signature:(struct spcpth_t *pthp)
chk_1stmt	./v_fx2.c	/^static void chk_1stmt(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
chk_1tchk	./v_fx3.c	/^static int32 chk_1tchk(struct tchk_t *tcp)$/;"	f	file:	signature:(struct tchk_t *tcp)
chk_1tsk	./v_fx2.c	/^static void chk_1tsk(struct task_t *tskp)$/;"	f	file:	signature:(struct task_t *tskp)
chk_1tsk_arg_expr	./v_fx3.c	/^static void chk_1tsk_arg_expr(struct task_t *tskp, struct expr_t *argx, $/;"	f	file:	signature:(struct task_t *tskp, struct expr_t *argx, int32 pi, int32 pwid, struct net_t *tskp_np, struct tskcall_t *tkcp, int32 is_rhs)
chk_1udp	./v_fx2.c	/^static int32 chk_1udp(struct gate_t *gp)$/;"	f	file:	signature:(struct gate_t *gp)
chk_1wire	./v_fx2.c	/^static void chk_1wire(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
chk_1wire_delay	./v_fx2.c	/^static void chk_1wire_delay(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
chk_add_del_vclobj	./v_acc.c	/^static int32 chk_add_del_vclobj(char *rtnnam, struct h_t **hpp,$/;"	f	file:	signature:(char *rtnnam, struct h_t **hpp, int32 (*consumer)(), char *user_data)
chk_all_uprels_same	./v_genfx.c	/^static int32 chk_all_uprels_same(struct gref_t *grp, struct sy_t *modsyp,$/;"	f	file:	signature:(struct gref_t *grp, struct sy_t *modsyp, char *ncmp, struct expr_t *ghd_ndp)
chk_assign_val_specparam	./v_src.c	/^static void chk_assign_val_specparam(struct net_t *parm_np)$/;"	f	file:	signature:(struct net_t *parm_np)
chk_bblk_connectivity	./v_bbopt.c	/^static void chk_bblk_connectivity(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
chk_biti_pthdst_driver	./v_prp2.c	/^static int32 chk_biti_pthdst_driver(struct spcpth_t *pthp, struct net_t *np,$/;"	f	file:	signature:(struct spcpth_t *pthp, struct net_t *np, int32 biti)
chk_callasl_arg_num	./v_bbgen3.c	/^static void chk_callasl_arg_num(int32 num)$/;"	f	file:	signature:(int32 num)
chk_capwdecl_strens	./v_src.c	/^static void chk_capwdecl_strens(word32 wtyp)$/;"	f	file:	signature:(word32 wtyp)
chk_case	./v_fx2.c	/^static void chk_case(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
chk_circular_qc_stmt	./v_fx2.c	/^static void chk_circular_qc_stmt(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
chk_cnvt_fd_modes	./v_ex.c	/^static int32 chk_cnvt_fd_modes(char *os_mode, char *ver_mode)$/;"	f	file:	signature:(char *os_mode, char *ver_mode)
chk_comb_udpline	./v_src3.c	/^static int32 chk_comb_udpline(char *uline, struct udp_t *udpp,$/;"	f	file:	signature:(char *uline, struct udp_t *udpp, int32 *has_wcard)
chk_contas	./v_fx2.c	/^static void chk_contas(void)$/;"	f	file:	signature:(void)
chk_dag	./v_genfx.c	/^static int32 chk_dag(void)$/;"	f	file:	signature:(void)
chk_dctrl	./v_fx2.c	/^static void chk_dctrl(struct delctrl_t *dctp)$/;"	f	file:	signature:(struct delctrl_t *dctp)
chk_decl_func	./v_src2.c	/^static int32 chk_decl_func(int32 *is_sysfunc, struct expr_t *idndp,$/;"	f	file:	signature:(int32 *is_sysfunc, struct expr_t *idndp, struct expridtab_t *xidp)
chk_decl_siderep	./v_prp2.c	/^static void chk_decl_siderep(struct expr_t *lhsx, struct expr_t *rhsx,$/;"	f	file:	signature:(struct expr_t *lhsx, struct expr_t *rhsx, char *objnam, int32 deltyp, word32 fnind, int32 lcnt)
chk_defparams	./v_genfx.c	/^static void chk_defparams(void)$/;"	f	file:	signature:(void)
chk_delay_cb	./v_vpi.c	/^static int32 chk_delay_cb(p_cb_data datp, struct h_t *hp)$/;"	f	file:	signature:(p_cb_data datp, struct h_t *hp)
chk_delay_num	./v_vpi3.c	/^static int32 chk_delay_num(char *rnam, struct h_t *hp, int32 numdels,$/;"	f	file:	signature:(char *rnam, struct h_t *hp, int32 numdels, struct gate_t *ogp)
chk_dfparam_rhs_expr	./v_src.c	/^static void chk_dfparam_rhs_expr(struct dfparam_t *dfpp)$/;"	f	file:	signature:(struct dfparam_t *dfpp)
chk_disable	./v_fx2.c	/^static void chk_disable(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
chk_downrel_inst_sels	./v_prp2.c	/^static void chk_downrel_inst_sels(struct gref_t *grp)$/;"	f	file:	signature:(struct gref_t *grp)
chk_drvstren	./v_src.c	/^static void chk_drvstren(word32 wtyp)$/;"	f	file:	signature:(word32 wtyp)
chk_dup_attrs	./v_src3.c	/^static struct attr_t *chk_dup_attrs(struct attr_t *attr_hd)$/;"	f	file:	signature:(struct attr_t *attr_hd)
chk_edge_expr	./v_fx3.c	/^static void chk_edge_expr(struct expr_t *endp)$/;"	f	file:	signature:(struct expr_t *endp)
chk_escid	./v_src3.c	/^static int32 chk_escid(char *nam)$/;"	f	file:	signature:(char *nam)
chk_eval_param_rhs	./v_src.c	/^static void chk_eval_param_rhs(struct net_t *parm_np, char *ptnam)$/;"	f	file:	signature:(struct net_t *parm_np, char *ptnam)
chk_folded_fargs	./v_fx3.c	/^static void chk_folded_fargs(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
chk_gate_nostren	./v_fx2.c	/^static void chk_gate_nostren(struct gate_t *gp)$/;"	f	file:	signature:(struct gate_t *gp)
chk_gate_source	./v_fx2.c	/^static int32 chk_gate_source(struct gate_t *gp, struct expr_t *xp,$/;"	f	file:	signature:(struct gate_t *gp, struct expr_t *xp, int32 nd_lhs_chk, int32 nd_1bit, struct net_t **ret_np)
chk_gates	./v_fx2.c	/^static void chk_gates(void)$/;"	f	file:	signature:(void)
chk_get_mcd_or_fd	./v_ex.c	/^static int32 chk_get_mcd_or_fd(struct expr_t *fdxp, int32 *is_mcd)$/;"	f	file:	signature:(struct expr_t *fdxp, int32 *is_mcd)
chk_get_ver_fd	./v_ex.c	/^static int32 chk_get_ver_fd(struct expr_t *fdxp)$/;"	f	file:	signature:(struct expr_t *fdxp)
chk_getpat_nonscal	./v_fx2.c	/^static void chk_getpat_nonscal(struct expr_t *lhsx)$/;"	f	file:	signature:(struct expr_t *lhsx)
chk_glb_inst_sels	./v_genfx.c	/^static int32 chk_glb_inst_sels(struct gref_t *grp)$/;"	f	file:	signature:(struct gref_t *grp)
chk_hasst_wires	./v_fx2.c	/^static int32 chk_hasst_wires(struct mod_t *mdp, struct expr_t *lhsx)$/;"	f	file:	signature:(struct mod_t *mdp, struct expr_t *lhsx)
chk_iact_grefs	./v_dbg.c	/^static void chk_iact_grefs(int32 hist_rexec)$/;"	f	file:	signature:(int32 hist_rexec)
chk_iconn_downxmr	./v_fx2.c	/^static void chk_iconn_downxmr(struct inst_t *ip, struct expr_t *ndp)$/;"	f	file:	signature:(struct inst_t *ip, struct expr_t *ndp)
chk_iconn_mixeddirrng	./v_fx2.c	/^static void chk_iconn_mixeddirrng(struct inst_t *ip,$/;"	f	file:	signature:(struct inst_t *ip, struct mod_pin_t *mpp, struct expr_t *ipxp)
chk_idnam_systfs	./v_vpi.c	/^static int32 chk_idnam_systfs(char *tfnam)$/;"	f	file:	signature:(char *tfnam)
chk_inrng_bsel	./v_fx3.c	/^static int32 chk_inrng_bsel(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
chk_inrng_index_psel	./v_fx3.c	/^static int32 chk_inrng_index_psel(struct expr_t *ndp, int32 need_arg_const)$/;"	f	file:	signature:(struct expr_t *ndp, int32 need_arg_const)
chk_inrng_multi_dim_arr	./v_fx3.c	/^static int32 chk_inrng_multi_dim_arr(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
chk_inrng_psel	./v_fx3.c	/^static int32 chk_inrng_psel(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
chk_insns_2memrefs	./v_bbopt.c	/^static void chk_insns_2memrefs(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
chk_inst_conns	./v_fx2.c	/^static void chk_inst_conns(void)$/;"	f	file:	signature:(void)
chk_lhs_assign_stmt	./v_xprop.c	/^static int32 chk_lhs_assign_stmt(struct st_t *nstp, struct st_t *ostp,$/;"	f	file:	signature:(struct st_t *nstp, struct st_t *ostp, int32 *other_than_id, struct st_t *top_stp)
chk_libid	./v_src3.c	/^static int32 chk_libid(char *lbnam)$/;"	f	file:	signature:(char *lbnam)
chk_mdports_named	./v_fx.c	/^static int32 chk_mdports_named(struct inst_t *ip,$/;"	f	file:	signature:(struct inst_t *ip, struct mod_t *mdp, struct expr_t **xphdr)
chk_mixedsign_relops	./v_fx3.c	/^static int32 chk_mixedsign_relops(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
chk_modsym	./v_fx2.c	/^static void chk_modsym(struct sy_t *syp)$/;"	f	file:	signature:(struct sy_t *syp)
chk_monits_chged	./v_ex2.c	/^static int32 chk_monits_chged(struct dceauxlst_t *dclp)$/;"	f	file:	signature:(struct dceauxlst_t *dclp)
chk_ndfolded_specops	./v_fx3.c	/^static void chk_ndfolded_specops(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
chk_nodel_dsable	./v_fx2.c	/^static void chk_nodel_dsable(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
chk_nodel_stmt	./v_fx2.c	/^static void chk_nodel_stmt(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
chk_notifier	./v_fx3.c	/^static void chk_notifier(struct tchk_t *tcp, char *snam)$/;"	f	file:	signature:(struct tchk_t *tcp, char *snam)
chk_one_dim_arr_rng	./v_fx3.c	/^static int32 chk_one_dim_arr_rng(struct net_t *np, struct expr_t *rconx, $/;"	f	file:	signature:(struct net_t *np, struct expr_t *rconx, int32 dim, int32 ri1, int32 ri2, int32 obwid)
chk_pli_arglist	./v_fx3.c	/^static void chk_pli_arglist(struct expr_t *argxp, int32 stfnum)$/;"	f	file:	signature:(struct expr_t *argxp, int32 stfnum)
chk_prtntyp	./v_fx.c	/^static int32 chk_prtntyp(struct mod_pin_t *mpp, struct net_t *np)$/;"	f	file:	signature:(struct mod_pin_t *mpp, struct net_t *np)
chk_prtref	./v_fx.c	/^static int32 chk_prtref(struct expr_t *ndp, struct mod_pin_t *mpp,$/;"	f	file:	signature:(struct expr_t *ndp, struct mod_pin_t *mpp, int32 is_top)
chk_prtwidth	./v_fx2.c	/^static int32 chk_prtwidth(struct expr_t *ndp, struct mod_pin_t *mpp)$/;"	f	file:	signature:(struct expr_t *ndp, struct mod_pin_t *mpp)
chk_pthels	./v_prp2.c	/^static int32 chk_pthels(struct spcpth_t *pthp)$/;"	f	file:	signature:(struct spcpth_t *pthp)
chk_pull_gate	./v_fx2.c	/^static void chk_pull_gate(struct gate_t *gp)$/;"	f	file:	signature:(struct gate_t *gp)
chk_putv_args	./v_vpi3.c	/^static int32 chk_putv_args(word32 dtyp, struct h_t *hp, p_vpi_value value_p) $/;"	f	file:	signature:(word32 dtyp, struct h_t *hp, p_vpi_value value_p)
chk_qclvalue	./v_fx2.c	/^static void chk_qclvalue(struct expr_t *ndp, word32 qctyp,$/;"	f	file:	signature:(struct expr_t *ndp, word32 qctyp, int32 *is_rgform)
chk_rep_in_fullpth	./v_fx3.c	/^static void chk_rep_in_fullpth(struct spcpth_t *pthp)$/;"	f	file:	signature:(struct spcpth_t *pthp)
chk_rep_sdpds	./v_fx3.c	/^static void chk_rep_sdpds(struct spfy_t *spfp)$/;"	f	file:	signature:(struct spfy_t *spfp)
chk_repl_1wire_arr_sel	./v_fx3.c	/^static int32 chk_repl_1wire_arr_sel(struct expr_t *ndp, char *s1, char *s2)$/;"	f	file:	signature:(struct expr_t *ndp, char *s1, char *s2)
chk_rf_cb	./v_vpi.c	/^static int32 chk_rf_cb(p_cb_data cb_data_p, struct h_t *hp, char *rfnam)$/;"	f	file:	signature:(p_cb_data cb_data_p, struct h_t *hp, char *rfnam)
chk_rhs_id	./v_fx3.c	/^static int32 chk_rhs_id(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
chk_rm_rng_legal	./v_ex2.c	/^static int32 chk_rm_rng_legal(int32 tmpi, int32 ri1, int32 ri2, char *msg)$/;"	f	file:	signature:(int32 tmpi, int32 ri1, int32 ri2, char *msg)
chk_samechan_trifctrl_simple	./v_prp2.c	/^static void chk_samechan_trifctrl_simple(struct mod_t *mdp, struct gate_t *gp,$/;"	f	file:	signature:(struct mod_t *mdp, struct gate_t *gp, int32 pi, struct expr_t *termxp, struct expr_t *ctrlxp)
chk_scanf_fmt	./v_ex.c	/^static int32 chk_scanf_fmt(char *fmt)$/;"	f	file:	signature:(char *fmt)
chk_sequdpline	./v_src3.c	/^static int32 chk_sequdpline(char *uline, struct udp_t *udpp,$/;"	f	file:	signature:(char *uline, struct udp_t *udpp, int32 *has_wcard)
chk_set_dp_limits	./v_ex4.c	/^static void chk_set_dp_limits(struct dp_fildesc_t *fdescp, word32 wval)$/;"	f	file:	signature:(struct dp_fildesc_t *fdescp, word32 wval)
chk_set_dp_off	./v_ex4.c	/^static void chk_set_dp_off(struct dp_fildesc_t *fdescp)$/;"	f	file:	signature:(struct dp_fildesc_t *fdescp)
chk_set_dp_on	./v_ex4.c	/^static void chk_set_dp_on(struct dp_fildesc_t *fdescp)$/;"	f	file:	signature:(struct dp_fildesc_t *fdescp)
chk_specialop_rhsexpr	./v_fx3.c	/^static void chk_specialop_rhsexpr(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
chk_spterm	./v_fx3.c	/^static void chk_spterm(struct expr_t *spxp, char *spos, char *snam,$/;"	f	file:	signature:(struct expr_t *spxp, char *spos, char *snam, int32 iodir)
chk_srcbsel	./v_fx3.c	/^static int32 chk_srcbsel(struct expr_t *ndp, int32 is_rhs)$/;"	f	file:	signature:(struct expr_t *ndp, int32 is_rhs)
chk_srcpsel	./v_fx3.c	/^static int32 chk_srcpsel(struct expr_t *ndp, int32 is_rhs)$/;"	f	file:	signature:(struct expr_t *ndp, int32 is_rhs)
chk_stmts	./v_fx2.c	/^static void chk_stmts(void)$/;"	f	file:	signature:(void)
chk_strobe_infloop	./v_ex.c	/^static int32 chk_strobe_infloop(struct st_t *stp, struct sy_t *tsksyp)$/;"	f	file:	signature:(struct st_t *stp, struct sy_t *tsksyp)
chk_struct_rhsexpr	./v_fx3.c	/^static void chk_struct_rhsexpr(struct expr_t *ndp, int32 xwid)$/;"	f	file:	signature:(struct expr_t *ndp, int32 xwid)
chk_sysfargs_syntax	./v_fx3.c	/^static void chk_sysfargs_syntax(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
chk_systskenable	./v_fx3.c	/^static void chk_systskenable(struct st_t *stp, struct tskcall_t *tkcp)$/;"	f	file:	signature:(struct st_t *stp, struct tskcall_t *tkcp)
chk_tccond	./v_fx3.c	/^static void chk_tccond(struct expr_t *cndx, char *spos, char *snam)$/;"	f	file:	signature:(struct expr_t *cndx, char *spos, char *snam)
chk_toggle_opt_consistent	./cvc.c	/^static void chk_toggle_opt_consistent(void)$/;"	f	file:	signature:(void)
chk_tran_channel	./v_trch.c	/^static void chk_tran_channel(struct chanrec_t *chanp)$/;"	f	file:	signature:(struct chanrec_t *chanp)
chk_tran_gate	./v_fx2.c	/^static void chk_tran_gate(struct gate_t *gp)$/;"	f	file:	signature:(struct gate_t *gp)
chk_tran_terms_same	./v_fx2.c	/^static int32 chk_tran_terms_same(struct gate_t *gp)$/;"	f	file:	signature:(struct gate_t *gp)
chk_tranif_gate	./v_fx2.c	/^static void chk_tranif_gate(struct gate_t *gp)$/;"	f	file:	signature:(struct gate_t *gp)
chk_trifctrl_insame_chan	./v_prp2.c	/^static void chk_trifctrl_insame_chan(struct gate_t *gp, struct expr_t *ndp)$/;"	f	file:	signature:(struct gate_t *gp, struct expr_t *ndp)
chk_undef_specparams	./v_fx3.c	/^static int32 chk_undef_specparams(struct symtab_t *sytp)$/;"	f	file:	signature:(struct symtab_t *sytp)
chk_undef_syms	./v_fx2.c	/^static void chk_undef_syms(struct symtab_t *sytp, word32 objttyp)$/;"	f	file:	signature:(struct symtab_t *sytp, word32 objttyp)
chk_valchg_cb	./v_vpi.c	/^static int32 chk_valchg_cb(p_cb_data cb_data_p, struct h_t *hp)$/;"	f	file:	signature:(p_cb_data cb_data_p, struct h_t *hp)
chk_varinits	./v_fx2.c	/^static void chk_varinits(void)$/;"	f	file:	signature:(void)
chk_vpi_logicval	./v_vpi3.c	/^static int32 chk_vpi_logicval(word32 wval)$/;"	f	file:	signature:(word32 wval)
chk_wire_dma_rng	./v_fx2.c	/^static int32 chk_wire_dma_rng(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
chk_wire_rng	./v_fx2.c	/^static void chk_wire_rng(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
chk_xmr_tail_wire	./v_genfx.c	/^static int32 chk_xmr_tail_wire(struct gref_t *grp, struct sy_t *tailsyp,$/;"	f	file:	signature:(struct gref_t *grp, struct sy_t *tailsyp, int32 is_loc1cmp)
chk_xpnd1_dfparam	./v_genfx.c	/^static void chk_xpnd1_dfparam(struct genitem_t *gip,$/;"	f	file:	signature:(struct genitem_t *gip, struct genblk_t *cntxt_gblkp)
chkactive_ofs	./v.h	/^ size_t chkactive_ofs;        \/* T => check is active flag *\/$/;"	m	struct:chktchg_t	access:public
chkalloc_tfrec	./v_fx3.c	/^static struct tfrec_t *chkalloc_tfrec(struct expr_t *argxp,$/;"	f	file:	signature:(struct expr_t *argxp, int32 anum)
chkbld_pli_func	./v_fx3.c	/^static void chkbld_pli_func(struct expr_t *fcallx, int32 sfnum)$/;"	f	file:	signature:(struct expr_t *fcallx, int32 sfnum)
chkbld_pli_task	./v_fx3.c	/^static void chkbld_pli_task(struct st_t *stp, int32 tfnum)$/;"	f	file:	signature:(struct st_t *stp, int32 tfnum)
chkchan_edge	./v_trch.c	/^static void chkchan_edge(struct chanrec_t *chanp, struct edge_t *ep)$/;"	f	file:	signature:(struct chanrec_t *chanp, struct edge_t *ep)
chkcnt_uports	./v_src3.c	/^static int32 chkcnt_uports(struct udp_t *udpp)$/;"	f	file:	signature:(struct udp_t *udpp)
chkcnv_sdfid	./v_sdf.c	/^static int32 chkcnv_sdfid(char *verid, int32 *i1, int32 *i2, char *sdfid,$/;"	f	file:	signature:(char *verid, int32 *i1, int32 *i2, char *sdfid, int32 allow_select)
chkcnv_sdfpath	./v_sdf.c	/^static int32 chkcnv_sdfpath(char *verid, int32 *i1, int32 *i2, char *sdfid,$/;"	f	file:	signature:(char *verid, int32 *i1, int32 *i2, char *sdfid, int32 allow_select)
chkcondx	./v.h	/^ struct expr_t *chkcondx;     \/* &&& data event or edge path delay sel. *\/$/;"	m	struct:tchk_t	typeref:struct:tchk_t::expr_t	access:public
chkdel_expr	./v_fx2.c	/^static int32 chkdel_expr(struct expr_t *dxp, char *emsg,$/;"	f	file:	signature:(struct expr_t *dxp, char *emsg, int32 mustbeconst)
chkedge	./v.h	/^ unsigned chkedge : 8;        \/* edge byte (pli 1 bit per rf coding) *\/$/;"	m	struct:tchk_t	access:public
chknorm_range	./v_fx3.c	/^static int32 chknorm_range(struct expr_t *rconx, int32 ri1, int32 ri2,$/;"	f	file:	signature:(struct expr_t *rconx, int32 ri1, int32 ri2, char *emsg, int32 emit_err)
chkoldval_ofs	./v.h	/^ size_t chkoldval_ofs;$/;"	m	struct:chktchg_t	access:public
chkset_1mwire_rnges	./v_fx2.c	/^static void chkset_1mwire_rnges(void)$/;"	f	file:	signature:(void)
chkset_interconn_dels	./v_sdf.c	/^static void chkset_interconn_dels(struct itree_t *itp, char *portsrc,$/;"	f	file:	signature:(struct itree_t *itp, char *portsrc, int32 si1, int32 si2, char *portdst, int32 di1, int32 di2)
chkset_vec_fifo	./v_prp2.c	/^static void chkset_vec_fifo(struct net_t *np, int32 *pbfi, int32 *pbfo,$/;"	f	file:	signature:(struct net_t *np, int32 *pbfi, int32 *pbfo, int32 ii, int32 isform, int32 nd_fi_chk)
chkset_wdrng	./v_src.c	/^static int32 chkset_wdrng(struct net_t *np, struct expr_t *x1,$/;"	f	file:	signature:(struct net_t *np, struct expr_t *x1, struct expr_t *x2)
chksf_count_drivers	./v_fx3.c	/^static void chksf_count_drivers(struct expr_t *ndp, int32 anum)$/;"	f	file:	signature:(struct expr_t *ndp, int32 anum)
chksf_getpattern	./v_fx3.c	/^static void chksf_getpattern(struct sy_t *syp, struct expr_t *ndp,$/;"	f	file:	signature:(struct sy_t *syp, struct expr_t *ndp, int32 anum)
chksf_q_full	./v_fx3.c	/^static void chksf_q_full( struct expr_t *ndp, int32 anum)$/;"	f	file:	signature:( struct expr_t *ndp, int32 anum)
chksf_rand	./v_fx3.c	/^static void chksf_rand(struct expr_t *ndp, int32 maxanum, int32 anum, $/;"	f	file:	signature:(struct expr_t *ndp, int32 maxanum, int32 anum, int32 is_dist)
chkspecop_fcall	./v_fx3.c	/^static void chkspecop_fcall(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
chkst_dumpports_enable	./v_fx3.c	/^static void chkst_dumpports_enable(struct tskcall_t *tkcp, int32 anum)$/;"	f	file:	signature:(struct tskcall_t *tkcp, int32 anum)
chkst_dumpvars_enable	./v_fx3.c	/^static void chkst_dumpvars_enable(struct tskcall_t *tkcp, int32 anum)$/;"	f	file:	signature:(struct tskcall_t *tkcp, int32 anum)
chkst_read_write_mem	./v_fx3.c	/^static void chkst_read_write_mem(struct sy_t *syp, int32 anum,$/;"	f	file:	signature:(struct sy_t *syp, int32 anum, struct tskcall_t *tkcp)
chkst_sdfannotate_enable	./v_fx3.c	/^static void chkst_sdfannotate_enable(struct st_t *stp, struct tskcall_t *tkcp,$/;"	f	file:	signature:(struct st_t *stp, struct tskcall_t *tkcp, int32 anum)
chkst_sreadmem	./v_fx3.c	/^static void chkst_sreadmem(struct sy_t *syp, int32 anum,$/;"	f	file:	signature:(struct sy_t *syp, int32 anum, struct tskcall_t *tkcp)
chksyn_lhsexpr	./v_fx3.c	/^static int32 chksyn_lhsexpr(struct expr_t *ndp, int32 is_top, int32 lhstyp)$/;"	f	file:	signature:(struct expr_t *ndp, int32 is_top, int32 lhstyp)
chktchg_t	./v.h	/^struct chktchg_t {$/;"	s
chktchg_t::chkactive_ofs	./v.h	/^ size_t chkactive_ofs;        \/* T => check is active flag *\/$/;"	m	struct:chktchg_t	access:public
chktchg_t::chkoldval_ofs	./v.h	/^ size_t chkoldval_ofs;$/;"	m	struct:chktchg_t	access:public
chktchg_t::startchgp	./v.h	/^ struct tchg_t *startchgp;    \/* corresponding start wire time change *\/$/;"	m	struct:chktchg_t	typeref:struct:chktchg_t::tchg_t	access:public
chktim_condx	./v.h	/^ struct expr_t *chktim_condx; \/* optional setuphld\/recrem chk del expr *\/$/;"	m	struct:tchk_t	typeref:struct:tchk_t::expr_t	access:public
chkxp	./v.h	/^ struct expr_t *chkxp;        \/* event (data - check) expr *\/$/;"	m	struct:tchk_t	typeref:struct:tchk_t::expr_t	access:public
chlen_to_bitlen	./v_ms.c	/^static int32 chlen_to_bitlen(int32 chlen, int32 base)$/;"	f	file:	signature:(int32 chlen, int32 base)
choose_nxt_allup_inst_gened_mod	./v_genfx.c	/^static struct mod_t *choose_nxt_allup_inst_gened_mod(void)$/;"	f	file:	signature:(void)
chtyp	./v.h	/^ unsigned chtyp : 3;          \/* channel processing type *\/$/;"	m	struct:chanrec_t	access:public
chvitp	./v.h	/^ struct itree_t *chvitp;      \/* and its itree loc. *\/$/;"	m	struct:chanrec_t	typeref:struct:chanrec_t::itree_t	access:public
chvxp	./v.h	/^ struct vtx_t *chvxp;         \/* for now one random vertex *\/ $/;"	m	struct:chanrec_t	typeref:struct:chanrec_t::vtx_t	access:public
cmdopts	./cvc.c	/^static struct namlst_t cmdopts[] = {$/;"	v	typeref:struct:namlst_t	file:
cmp_drvld_bitndx	./v_vpi2.c	/^static int32 cmp_drvld_bitndx(struct net_t **nnp, struct h_t *hp, char *objnam)$/;"	f	file:	signature:(struct net_t **nnp, struct h_t *hp, char *objnam)
cmp_ihd_ndx	./v_bbopt.c	/^static int32 cmp_ihd_ndx(const void *bblki1, const void *bblki2) $/;"	f	file:	signature:(const void *bblki1, const void *bblki2)
cmp_max_wait	./v_ex.c	/^static void cmp_max_wait(word64 *timvalp, struct q_hdr_t *q_p)$/;"	f	file:	signature:(word64 *timvalp, struct q_hdr_t *q_p)
cmp_mean_interarriv_tim	./v_ex.c	/^static void cmp_mean_interarriv_tim(word64 *timvalp, struct q_hdr_t *q_p)$/;"	f	file:	signature:(word64 *timvalp, struct q_hdr_t *q_p)
cmp_mean_wait_tim	./v_ex.c	/^static void cmp_mean_wait_tim(word64 *timvalp, struct q_hdr_t *q_p)$/;"	f	file:	signature:(word64 *timvalp, struct q_hdr_t *q_p)
cmp_new_mgnum_minum_and_stsiz	./v_genfx.c	/^static void cmp_new_mgnum_minum_and_stsiz(struct mod_t *mdp, int32 *newgnum,$/;"	f	file:	signature:(struct mod_t *mdp, int32 *newgnum, int32 *newinum, int32 *new_stsiz)
cmp_rng	./v_src.c	/^static int32 cmp_rng(struct expr_t *x1, struct expr_t *x2,$/;"	f	file:	signature:(struct expr_t *x1, struct expr_t *x2, struct expr_t *nx1, struct expr_t *nx2)
cmp_str_vals	./v_ex2.c	/^static int32 cmp_str_vals(word32 *op1ap, word32 *op2ap, int32 opwid)$/;"	f	file:	signature:(word32 *op1ap, word32 *op2ap, int32 opwid)
cmp_udpind	./v_prp2.c	/^static word32 cmp_udpind(word32 ustate, word32 nstates)$/;"	f	file:	signature:(word32 ustate, word32 nstates)
cmp_vval_	./cvmacros.h	473;"	d
cmp_wvval_	./cvmacros.h	475;"	d
cmp_xform1_stmt	./v_prp2.c	/^static struct st_t *cmp_xform1_stmt(struct mod_t *mdp, struct st_t *ostp,$/;"	f	file:	signature:(struct mod_t *mdp, struct st_t *ostp, struct st_t *last_stp)
cmp_xform_csitemlst	./v_prp2.c	/^static void cmp_xform_csitemlst(struct mod_t *mdp, struct csitem_t *csip)$/;"	f	file:	signature:(struct mod_t *mdp, struct csitem_t *csip)
cmp_xform_ialst	./v_prp2.c	/^static void cmp_xform_ialst(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
cmp_xform_lstofsts	./v_prp2.c	/^static struct st_t *cmp_xform_lstofsts(struct mod_t *mdp, struct st_t *ostp)$/;"	f	file:	signature:(struct mod_t *mdp, struct st_t *ostp)
cmp_xform_tasks	./v_prp2.c	/^static void cmp_xform_tasks(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
cmpsword	./v.h	/^typedef int cmpsword;$/;"	t
cmpsword	./v.h	/^typedef long cmpsword;$/;"	t
cmsym	./v.h	/^ struct sy_t *cmsym;          \/* module type symbol *\/$/;"	m	struct:cell_t	typeref:struct:cell_t::sy_t	access:public
cname	./v.h	/^ char *cname;                \/* name of actual C function *\/$/;"	m	struct:dpi_t	access:public
cnd_const	./v_sdf.c	/^ int32 cnd_op, cnd_const;$/;"	m	struct:tcterm_t	file:	access:public
cnd_op	./v_sdf.c	/^ int32 cnd_op, cnd_const;$/;"	m	struct:tcterm_t	file:	access:public
cndi1	./v_sdf.c	/^ int32 cndi1, cndi2;$/;"	m	struct:tcterm_t	file:	access:public
cndi2	./v_sdf.c	/^ int32 cndi1, cndi2;$/;"	m	struct:tcterm_t	file:	access:public
cndnam	./v_sdf.c	/^ char *cndnam;$/;"	m	struct:tcterm_t	file:	access:public
cnlnxt	./v.h	/^ struct cfgnamlst_t *cnlnxt;$/;"	m	struct:cfgnamlst_t	typeref:struct:cfgnamlst_t::cfgnamlst_t	access:public
cnt_bblk_insns	./v_bbopt.c	/^static int32 cnt_bblk_insns(struct bblk_t *bbp)$/;"	f	file:	signature:(struct bblk_t *bbp)
cnt_bblk_num	./v_asmlnk.c	/^static int32 cnt_bblk_num(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
cnt_beg_to_endmark	./v_cnv.c	/^static int32 cnt_beg_to_endmark(struct optlst_t *olp, int32 lev)$/;"	f	file:	signature:(struct optlst_t *olp, int32 lev)
cnt_gateprts	./v_fx.c	/^static int32 cnt_gateprts(struct cell_t *cp)$/;"	f	file:	signature:(struct cell_t *cp)
cnt_level0	./v_cnv.c	/^static int32 cnt_level0(struct optlst_t *olp)$/;"	f	file:	signature:(struct optlst_t *olp)
cnt_mod_insns	./v_bbopt.c	/^static int32 cnt_mod_insns(void)$/;"	f	file:	signature:(void)
cnt_modprt_bits	./cvc.c	/^static int32 cnt_modprt_bits(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
cnt_modtasks	./cvc.c	/^static void cnt_modtasks(struct mod_t *mdp, int32 *inits, int32 *always,$/;"	f	file:	signature:(struct mod_t *mdp, int32 *inits, int32 *always, int32 *tsks, int32 *funcs, int32 *begblks, int32 *frks)
cnt_modwires	./cvc.c	/^static void cnt_modwires(struct mod_t *mdp, int32 *wires, int32 *wirebits,$/;"	f	file:	signature:(struct mod_t *mdp, int32 *wires, int32 *wirebits, int32 *regs, int32 *regbits, int32 *arrs, int32 *arrcells, int32 *arrbits)
cnt_new_xmp_siz	./v_genfx.c	/^static int32 cnt_new_xmp_siz(struct gref_t *grp)$/;"	f	file:	signature:(struct gref_t *grp)
cnt_nplstels	./v_cnv.c	/^static int32 cnt_nplstels(struct net_pin_t *npp)$/;"	f	file:	signature:(struct net_pin_t *npp)
cnt_npps	./v_prp.c	/^static int32 cnt_npps(struct net_pin_t *npp)$/;"	f	file:	signature:(struct net_pin_t *npp)
cnt_prms	./v_fx.c	/^static int32 cnt_prms(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
cnt_same_brkpts	./v_dbg2.c	/^static int32 cnt_same_brkpts(int32 ifi, int32 lini, struct brkpt_t **last_bpp)$/;"	f	file:	signature:(int32 ifi, int32 lini, struct brkpt_t **last_bpp)
cnt_scalar_fo	./v_prp2.c	/^static int32 cnt_scalar_fo(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
cnt_split_mods	./v_fx.c	/^static int32 cnt_split_mods(struct mod_t *hd_mdp)$/;"	f	file:	signature:(struct mod_t *hd_mdp)
cnt_typnetnum	./v_vpi.c	/^static int32 cnt_typnetnum(struct net_t *np, int32 onnum, word32 typ)$/;"	f	file:	signature:(struct net_t *np, int32 onnum, word32 typ)
cnt_xmr_cmp_num	./v_genfx.c	/^static int32 cnt_xmr_cmp_num(struct gref_t *grp)$/;"	f	file:	signature:(struct gref_t *grp)
cnv_1bcas_into_garr	./v_fx2.c	/^static void cnv_1bcas_into_garr(int32 n1bcas, struct conta_t *ca1bit_hd) $/;"	f	file:	signature:(int32 n1bcas, struct conta_t *ca1bit_hd)
cnv_1is_to_16is	./v_del.c	/^static void cnv_1is_to_16is(struct gate_t *gp, int32 numinsts, int32 opck, int32 npck)$/;"	f	file:	signature:(struct gate_t *gp, int32 numinsts, int32 opck, int32 npck)
cnv_1is_to_4is	./v_del.c	/^static void cnv_1is_to_4is(struct gate_t *gp, int32 numinsts, int32 opck, int32 npck)$/;"	f	file:	signature:(struct gate_t *gp, int32 numinsts, int32 opck, int32 npck)
cnv_cmpdctl_todu	./v_prp2.c	/^static void cnv_cmpdctl_todu(struct st_t *stp, struct delctrl_t *dctp)$/;"	f	file:	signature:(struct st_t *stp, struct delctrl_t *dctp)
cnv_num64to_ticks_	./cvmacros.h	415;"	d
cnvrt_rhs_xpr_to_con_bit_string	./v_cvr.c	/^static struct xstk_t *cnvrt_rhs_xpr_to_con_bit_string(struct itree_t *itp,$/;"	f	file:	signature:(struct itree_t *itp, struct expr_t *rhsx)
cnvt_constant_real_fr_w	./v_bbgen3.c	/^static int32 cnvt_constant_real_fr_w(int32 rhs_ti, int32 is_signed) $/;"	f	file:	signature:(int32 rhs_ti, int32 is_signed)
cnvt_forw_tfcall_1cmpglb	./v_src2.c	/^static void cnvt_forw_tfcall_1cmpglb(struct expr_t *ndp, char *tfnam, $/;"	f	file:	signature:(struct expr_t *ndp, char *tfnam, int32 fnam_ind, int32 lin_cnt)
cnvt_idp_offset	./v_bbopt.c	/^static void cnvt_idp_offset(struct flowg_t *fgp, int32 idp_ti) $/;"	f	file:	signature:(struct flowg_t *fgp, int32 idp_ti)
cnvt_is_bselparm	./v_fx3.c	/^static void cnvt_is_bselparm(struct net_t *np, struct expr_t *ndp,$/;"	f	file:	signature:(struct net_t *np, struct expr_t *ndp, struct expr_t *ndx)
cnvt_is_pselparm	./v_fx3.c	/^static void cnvt_is_pselparm(struct net_t *np, struct expr_t *ndp,$/;"	f	file:	signature:(struct net_t *np, struct expr_t *ndp, struct expr_t *ndx1, struct expr_t *ndx2)
cnvt_name_to_handle	./v_vpi2.c	/^static vpiHandle cnvt_name_to_handle(char *nam, struct symtab_t *sytp,$/;"	f	file:	signature:(char *nam, struct symtab_t *sytp, t_midat *idp)
cnvt_name_to_idp	./v_dpi.c	/^static t_midat *cnvt_name_to_idp(const char *nam, struct symtab_t *sytp,$/;"	f	file:	signature:(const char *nam, struct symtab_t *sytp, t_midat *idp)
cnvt_nonis_pselparm	./v_fx3.c	/^static void cnvt_nonis_pselparm(struct net_t *np, struct expr_t *ndp,$/;"	f	file:	signature:(struct net_t *np, struct expr_t *ndp, struct expr_t *ndx1, struct expr_t *ndx2)
cnvt_nonis_selparm	./v_fx3.c	/^static void cnvt_nonis_selparm(struct net_t *np, struct expr_t *ndp,$/;"	f	file:	signature:(struct net_t *np, struct expr_t *ndp, struct expr_t *ndx)
cnvt_paramsel_toconst	./v_fx3.c	/^static void cnvt_paramsel_toconst(struct expr_t *ndp, struct net_t *np)$/;"	f	file:	signature:(struct expr_t *ndp, struct net_t *np)
cnvt_scanf_stnam_to_val	./v_ex.c	/^static int32 cnvt_scanf_stnam_to_val(char *s) $/;"	f	file:	signature:(char *s)
cnvt_to_bsel_expr	./v_prp.c	/^static struct expr_t *cnvt_to_bsel_expr(struct expr_t *xp, int32 i1)$/;"	f	file:	signature:(struct expr_t *xp, int32 i1)
cnvt_to_itp	./v_prp2.c	/^static struct itree_t *cnvt_to_itp(struct mod_t *mdp, int32 itino)$/;"	f	file:	signature:(struct mod_t *mdp, int32 itino)
cnvt_to_real	./v.h	/^ unsigned cnvt_to_real : 1;   \/* T => non real operand of real expr *\/$/;"	m	struct:expr_t	access:public
cnvt_to_string	./v.h	/^ unsigned cnvt_to_string : 1; \/* T => convert to SV string *\/$/;"	m	struct:expr_t	access:public
cnvt_tobase_ntyp	./v_trch.c	/^static word32 cnvt_tobase_ntyp(word32 ntyp)$/;"	f	file:	signature:(word32 ntyp)
cnvt_todown_itp	./v_prp2.c	/^static struct itree_t *cnvt_todown_itp(struct itree_t *itp,$/;"	f	file:	signature:(struct itree_t *itp, struct mod_t *mdp, int32 itino)
cnvt_tskassgn_rhsexpr_ifneed	./v_bbgen.c	/^static int32 cnvt_tskassgn_rhsexpr_ifneed(int32 rhs_apti, struct net_t *np,$/;"	f	file:	signature:(int32 rhs_apti, struct net_t *np, int32 rhsreal, int32 rhssign)
cnxt	./v.h	/^ struct cell_t *cnxt;$/;"	m	struct:cell_t	typeref:struct:cell_t::cell_t	access:public
cnxt	./v.h	/^ struct contab_info_t *cnxt;$/;"	m	struct:contab_info_t	typeref:struct:contab_info_t::contab_info_t	access:public
col2_lval	./v_src2.c	/^static int32 col2_lval(void)$/;"	f	file:	signature:(void)
col_cond_port_expr	./v_sdf.c	/^static int32 col_cond_port_expr(FILE *f)$/;"	f	file:	signature:(FILE *f)
col_dctrl_xmr	./v_src2.c	/^static int32 col_dctrl_xmr(void)$/;"	f	file:	signature:(void)
col_evctrlexpr	./v_src2.c	/^static int32 col_evctrlexpr(void)$/;"	f	file:	signature:(void)
col_pthexpr	./v_src3.c	/^static int32 col_pthexpr(void)$/;"	f	file:	signature:(void)
collchain_t	./fstapi.c	/^struct collchain_t$/;"	s	file:
collchain_t::fullhash	./fstapi.c	/^uint32_t fullhash, length;$/;"	m	struct:collchain_t	file:	access:public
collchain_t::length	./fstapi.c	/^uint32_t fullhash, length;$/;"	m	struct:collchain_t	file:	access:public
collchain_t::mem	./fstapi.c	/^unsigned char mem[1];$/;"	m	struct:collchain_t	file:	access:public
collchain_t::next	./fstapi.c	/^struct collchain_t *next;$/;"	m	struct:collchain_t	typeref:struct:collchain_t::collchain_t	file:	access:public
collchain_t::payload	./fstapi.c	/^void *payload;$/;"	m	struct:collchain_t	file:	access:public
collect_cnv_tgldat_rng	./v_cvr.c	/^static char *collect_cnv_tgldat_rng(char *linep, int32 *rng1, int32 *rng2)$/;"	f	file:	signature:(char *linep, int32 *rng1, int32 *rng2)
collect_loc_insts	./v_acc.c	/^static int32 collect_loc_insts(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
collect_scanf_num	./v_ex.c	/^static int32 collect_scanf_num(int32 *signc, FILE *f, int32 c, int32 base, int32 width)$/;"	f	file:	signature:(int32 *signc, FILE *f, int32 c, int32 base, int32 width)
collect_scanf_realnum	./v_ex.c	/^static int32 collect_scanf_realnum(double *dret, FILE *f, int32 c, int32 width,$/;"	f	file:	signature:(double *dret, FILE *f, int32 c, int32 width, int32 fch)
collect_ufmt_binval	./v_ex.c	/^static struct xstk_t *collect_ufmt_binval(FILE *f, struct expr_t *lhsx, int32 c)$/;"	f	file:	signature:(FILE *f, struct expr_t *lhsx, int32 c)
collect_zfmt_binval	./v_ex.c	/^static struct xstk_t *collect_zfmt_binval(FILE *f, struct expr_t *lhsx,$/;"	f	file:	signature:(FILE *f, struct expr_t *lhsx, int32 c2)
color	./v.h	/^ int32 color;             \/* color of node (red\/black) *\/$/;"	m	struct:tqnode_t	access:public
comb2tabsiz	./v_prp.c	/^static int32 comb2tabsiz[] = { 0, 6, 18, 54, 162, 486, 1458, 4374, 13122,$/;"	v	file:
combine_bid_channels	./v_trch.c	/^static void combine_bid_channels(int32 start_chii, int32 end_chii)$/;"	f	file:	signature:(int32 start_chii, int32 end_chii)
combine_split_mods	./v_fx.c	/^static int32 combine_split_mods(struct mod_t *hd_mdp)$/;"	f	file:	signature:(struct mod_t *hd_mdp)
combine_xprop_accum	./v_xprop.c	/^static void combine_xprop_accum(word32 *accum_wp, word32 *ap, word32 *bp, $/;"	f	file:	signature:(word32 *accum_wp, word32 *ap, word32 *bp, int32 nwid)
combtabsiz	./v_prp.c	/^static int32 combtabsiz[] = { 0, 8, 32, 128, 512, 2048, 8192, 32768 };$/;"	v	file:
comlab_typ	./igen.h	/^ unsigned comlab_typ : 6;     \/* per mod comm area data object label type *\/  $/;"	m	struct:tn_t	access:public
comp_ndxwrd_addr	./v_bbgen.c	/^static int32 comp_ndxwrd_addr(int32 addr_apti, int32 wbyti_ti)$/;"	f	file:	signature:(int32 addr_apti, int32 wbyti_ti)
comp_pre_elab_norm_con_ndx	./v_fx2.c	/^static int32 comp_pre_elab_norm_con_ndx(struct net_t *np, struct expr_t *xp,$/;"	f	file:	signature:(struct net_t *np, struct expr_t *xp, int32 fnind, int32 flcnt)
comp_pre_elab_wire_ndx	./v_fx2.c	/^static int32 comp_pre_elab_wire_ndx(struct net_t *np, struct expr_t *xp,$/;"	f	file:	signature:(struct net_t *np, struct expr_t *xp, int32 fnind, int32 flcnt)
compare_number	./v_xprop.c	/^static int32 compare_number(struct expr_t *xp1, struct expr_t *xp2)$/;"	f	file:	signature:(struct expr_t *xp1, struct expr_t *xp2)
component	./fstapi.h	/^                const char *component;$/;"	m	struct:fstHier::__anon18::fstHierScope	access:public
component_length	./fstapi.h	/^                uint32_t component_length;      \/* strlen(u.scope.component) *\/$/;"	m	struct:fstHier::__anon18::fstHierScope	access:public
compress_hier	./fstapi.c	/^unsigned compress_hier : 1;$/;"	m	struct:fstWriterContext	file:	access:public
compute_log2	./v_ex.c	/^static int32 compute_log2(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
con_fcall	./v.h	/^ unsigned con_fcall : 1;      \/* T => in const cntxt, call of const func *\/$/;"	m	struct:expr_t	access:public
conadr_is_is	./igen.h	/^ unsigned conadr_is_is : 1;   \/* T => per mod comm area const is IS form *\/$/;"	m	struct:tn_t	access:public
concat_stmtlst	./v_xprop.c	/^static void concat_stmtlst(struct st_t *into_stp, struct st_t *next_stp)$/;"	f	file:	signature:(struct st_t *into_stp, struct st_t *next_stp)
concise_drvn_const_report	./v_cvr.c	/^static void concise_drvn_const_report(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
concise_untoggled_report	./v_cvr.c	/^static void concise_untoggled_report(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
cond_jmp_insn	./v_bbgen3.c	/^static void cond_jmp_insn(int32 cc, struct bblk_t *t_bbp, struct bblk_t *f_bbp)$/;"	f	file:	signature:(int32 cc, struct bblk_t *t_bbp, struct bblk_t *f_bbp)
cond_real_jmp_insn	./v_bbgen3.c	/^static void cond_real_jmp_insn(int32 cc, struct bblk_t *t_bbp,$/;"	f	file:	signature:(int32 cc, struct bblk_t *t_bbp, struct bblk_t *f_bbp)
cond_sgn_jmp_insn	./v_bbgen3.c	/^static void cond_sgn_jmp_insn(int32 cc, struct bblk_t *t_bbp,$/;"	f	file:	signature:(int32 cc, struct bblk_t *t_bbp, struct bblk_t *f_bbp)
condbrk_msg	./v_dbg.c	/^static char *condbrk_msg[] = { $/;"	v	file:
condx	./v.h	/^ struct expr_t *condx;$/;"	m	struct:gen_if_t	typeref:struct:gen_if_t::expr_t	access:public
condx	./v.h	/^ struct expr_t *condx;$/;"	m	struct:if_t	typeref:struct:if_t::expr_t	access:public
conf_aux_t	./v.h	/^struct conf_aux_t {$/;"	s
conf_aux_t::conf_idata	./v.h	/^ word32 *conf_idata;             \/* if alloced, the dummy var idp ara *\/$/;"	m	struct:conf_aux_t	access:public
conf_aux_t::conf_idata_siz	./v.h	/^ int32 conf_idata_siz;           \/* and its size - only one 0th inst *\/$/;"	m	struct:conf_aux_t	access:public
conf_idata	./v.h	/^ word32 *conf_idata;             \/* if alloced, the dummy var idp ara *\/$/;"	m	struct:conf_aux_t	access:public
conf_idata_siz	./v.h	/^ int32 conf_idata_siz;           \/* and its size - only one 0th inst *\/$/;"	m	struct:conf_aux_t	access:public
conf_u	./v.h	/^union conf_u {$/;"	u
conf_u::cf_auxp	./v.h	/^ struct conf_aux_t *cf_auxp;     \/* aux record for con func extra info *\/$/;"	m	union:conf_u	typeref:struct:conf_u::conf_aux_t	access:public
conf_u::to_exec_confunc	./v.h	/^ struct task_t *to_exec_confunc; \/* copied\/elabed to exec con func image *\/$/;"	m	union:conf_u	typeref:struct:conf_u::task_t	access:public
conflct_tn_node_alloc	./v_bbgen3.c	/^static struct avlnode_t *conflct_tn_node_alloc(void *bbp)$/;"	f	file:	signature:(void *bbp)
conflct_tn_node_cmp	./v_bbgen3.c	/^static cmpsword conflct_tn_node_cmp(const void *valp,$/;"	f	file:	signature:(const void *valp, const struct avlnode_t *nodp)
confunc_get_sym	./v_src.c	/^static struct sy_t *confunc_get_sym(char *snam, struct symtab_t *cur_sytab,$/;"	f	file:	signature:(char *snam, struct symtab_t *cur_sytab, struct symtab_t *ftsk_sytab)
conn1_inst_in_mod	./v_fx.c	/^static struct srcloc_t *conn1_inst_in_mod(struct inst_t *ip)$/;"	f	file:	signature:(struct inst_t *ip)
conn2_npin	./v_prp.c	/^static struct net_pin_t *conn2_npin(struct net_t *np, int32 ni1, int32 ni2,$/;"	f	file:	signature:(struct net_t *np, int32 ni1, int32 ni2, int32 islhs, int32 npctyp)
conn_1gateterm_concat	./v_fx2.c	/^static void conn_1gateterm_concat(struct mod_t *mdp, int32 gi,$/;"	f	file:	signature:(struct mod_t *mdp, int32 gi, struct expr_t *catxp, int32 pi)
conn_1instport_concat	./v_fx2.c	/^static void conn_1instport_concat(struct mod_t *mdp, int32 ii,$/;"	f	file:	signature:(struct mod_t *mdp, int32 ii, struct gia_aux_t *giap, struct expr_t *catxp, int32 pi, int32 mpwid)
conn_expl_mports	./v_fx.c	/^static void conn_expl_mports(struct inst_t *ip, struct cell_pin_t *cpp,$/;"	f	file:	signature:(struct inst_t *ip, struct cell_pin_t *cpp, struct mod_t *imdp, struct expr_t **xphdr, struct srcloc_t *srclocp)
conn_expr_gone	./v_prp.c	/^static int32 conn_expr_gone(struct expr_t *xp)$/;"	f	file:	signature:(struct expr_t *xp)
conn_impl_mports	./v_fx.c	/^static void conn_impl_mports(struct inst_t *ip, struct cell_pin_t *cpp,$/;"	f	file:	signature:(struct inst_t *ip, struct cell_pin_t *cpp, struct mod_t *mdp, struct expr_t **xphdr, struct srcloc_t *srclocp)
conn_mod_insts	./v_fx.c	/^static void conn_mod_insts(void)$/;"	f	file:	signature:(void)
conn_rtxmr_npin	./v_prp.c	/^static void conn_rtxmr_npin(struct net_t *np, int32 ni1, int32 ni2,$/;"	f	file:	signature:(struct net_t *np, int32 ni1, int32 ni2, int32 islhs, int32 npctyp, struct gref_t *grp, int32 chgtyp, char *chgp)
conn_xmr_npin	./v_prp.c	/^static void conn_xmr_npin(struct net_t *np, int32 ni1, int32 ni2, int32 islhs,$/;"	f	file:	signature:(struct net_t *np, int32 ni1, int32 ni2, int32 islhs, int32 npctyp, struct gref_t *grp, int32 chgtyp, char *chgp)
consub_is	./v.h	/^ unsigned consub_is : 1;      \/* T => node will eval to IS number *\/$/;"	m	struct:expr_t	access:public
consubxpr	./v.h	/^ unsigned consubxpr : 1;      \/* T => node will evaluate to number *\/$/;"	m	struct:expr_t	access:public
conta_initeval	./v_sim.c	/^static void conta_initeval(struct conta_t *cap, struct conta_t *mast_cap)$/;"	f	file:	signature:(struct conta_t *cap, struct conta_t *mast_cap)
conta_t	./v.h	/^struct conta_t {$/;"	s
conta_t::ca_4vdel	./v.h	/^ unsigned ca_4vdel : 1;       \/* T => delay 4v so need to eval new_gateval *\/$/;"	m	struct:conta_t	access:public
conta_t::ca_delrep	./v.h	/^ unsigned ca_delrep : 5;$/;"	m	struct:conta_t	access:public
conta_t::ca_drv_ofs	./v.h	/^ size_t ca_drv_ofs;            \/* idp ofs rhs drive a\/b values if needed *\/$/;"	m	struct:conta_t	access:public
conta_t::ca_du	./v.h	/^ union del_u ca_du;           \/* per type delay table (only in master) *\/$/;"	m	struct:conta_t	typeref:union:conta_t::del_u	access:public
conta_t::ca_gone	./v.h	/^ unsigned ca_gone : 1;        \/* continuous assign could be removed *\/$/;"	m	struct:conta_t	access:public
conta_t::ca_hasst	./v.h	/^ unsigned ca_hasst : 1;$/;"	m	struct:conta_t	access:public
conta_t::ca_pb_el	./v.h	/^ unsigned ca_pb_el : 1;       \/* T => this is a per bit el pb fld is master *\/$/;"	m	struct:conta_t	access:public
conta_t::ca_pb_sim	./v.h	/^ unsigned ca_pb_sim : 1;      \/* T => in src rhs concat simulates as PB *\/$/;"	m	struct:conta_t	access:public
conta_t::ca_stval	./v.h	/^ unsigned ca_stval : 6;       \/* (3 bit 0 st. and 3 bit 1 st. *\/$/;"	m	struct:conta_t	access:public
conta_t::caschd_tevs_ofs	./v.h	/^ size_t caschd_tevs_ofs;       \/* per inst. idp ofs scheduled event ndx array *\/$/;"	m	struct:conta_t	access:public
conta_t::casym	./v.h	/^ struct sy_t *casym;$/;"	m	struct:conta_t	typeref:struct:conta_t::sy_t	access:public
conta_t::ctevp	./v.h	/^ struct ctev_t *ctevp;$/;"	m	struct:conta_t	typeref:struct:conta_t::ctev_t	access:public
conta_t::enter_cndx	./v.h	/^ int32 enter_cndx;            \/* index for enter del assign place *\/$/;"	m	struct:conta_t	access:public
conta_t::flowg	./v.h	/^ struct flowg_t *flowg;       \/* aux flow graph for conta *\/$/;"	m	struct:conta_t	typeref:struct:conta_t::flowg_t	access:public
conta_t::is_loaded	./v.h	/^ unsigned is_loaded : 1;      \/* T => conta is loaded (passed) to wrapper *\/$/;"	m	struct:conta_t	access:public
conta_t::is_printed	./v.h	/^ unsigned is_printed : 1;     \/* T => compiled global is printed *\/$/;"	m	struct:conta_t	access:public
conta_t::lhsx	./v.h	/^ struct expr_t *lhsx;$/;"	m	struct:conta_t	typeref:struct:conta_t::expr_t	access:public
conta_t::pbcau	./v.h	/^ union pbca_u pbcau;          \/* up or down tab rhs cat decomposed PB val *\/ $/;"	m	struct:conta_t	typeref:union:conta_t::pbca_u	access:public
conta_t::rhsx	./v.h	/^ struct expr_t *rhsx;$/;"	m	struct:conta_t	typeref:struct:conta_t::expr_t	access:public
conta_t::schd_drv_ofs	./v.h	/^ size_t schd_drv_ofs;          \/* idp scheduled value *\/$/;"	m	struct:conta_t	access:public
contab_info_t	./v.h	/^struct contab_info_t {$/;"	s
contab_info_t::cnxt	./v.h	/^ struct contab_info_t *cnxt;$/;"	m	struct:contab_info_t	typeref:struct:contab_info_t::contab_info_t	access:public
contab_info_t::cwid	./v.h	/^ int32 cwid;$/;"	m	struct:contab_info_t	access:public
contab_info_t::xvi	./v.h	/^ int32 xvi;$/;"	m	struct:contab_info_t	access:public
contains_geom_section	./fstapi.c	/^unsigned contains_geom_section : 1;$/;"	m	struct:fstReaderContext	file:	access:public
contains_hier_section	./fstapi.c	/^unsigned contains_hier_section : 1;        \/* valid for hier_pos *\/$/;"	m	struct:fstReaderContext	file:	access:public
contains_hier_section_lz4	./fstapi.c	/^unsigned contains_hier_section_lz4 : 1;    \/* valid for hier_pos *\/$/;"	m	struct:fstReaderContext	file:	access:public
contains_hier_section_lz4duo	./fstapi.c	/^unsigned contains_hier_section_lz4duo : 1; \/* valid for hier_pos (contains_hier_section_lz4 always also set) *\/$/;"	m	struct:fstReaderContext	file:	access:public
contaprop_vpiget	./v_vpi2.c	/^static int32 contaprop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
conv_line_tostmt	./v_dbg2.c	/^static struct st_t *conv_line_tostmt(struct mod_t *in_mdp,$/;"	f	file:	signature:(struct mod_t *in_mdp, struct task_t *in_tskp, int32 ifi, int32 lini)
convert_1bca_togate	./v_fx2.c	/^static struct gate_t *convert_1bca_togate(struct gate_t *gp, $/;"	f	file:	signature:(struct gate_t *gp, struct conta_t *cap)
convert_all_adjregs	./v_regasn.c	/^static void convert_all_adjregs(int32 *regs, int32 num_regs, int32 from_tni, $/;"	f	file:	signature:(int32 *regs, int32 num_regs, int32 from_tni, int32 to_tni)
convert_connect1_gen_cell	./v_fx.c	/^static void convert_connect1_gen_cell(struct genitem_t *gip)$/;"	f	file:	signature:(struct genitem_t *gip)
convert_div_insn_to_x86_2op	./v_bbopt.c	/^static void convert_div_insn_to_x86_2op(struct insn_t *ip)$/;"	f	file:	signature:(struct insn_t *ip)
convert_file	./hexasm.c	/^static void convert_file(char *fname, char *glbl_name, int alignword)$/;"	f	file:	signature:(char *fname, char *glbl_name, int alignword)
convert_idp_amode	./v_bbopt.c	/^static void convert_idp_amode(struct amode_t *amp, int32 is_large_ofs)$/;"	f	file:	signature:(struct amode_t *amp, int32 is_large_ofs)
convert_insn_bytes_hwords	./v_asmlnk.c	/^static void convert_insn_bytes_hwords(struct bblk_t *bbp)$/;"	f	file:	signature:(struct bblk_t *bbp)
convert_insn_to_2op	./v_bbopt.c	/^static int32 convert_insn_to_2op(struct insn_t *ip)$/;"	f	file:	signature:(struct insn_t *ip)
convert_inter_block_jumps	./v_asmlnk.c	/^static void convert_inter_block_jumps(struct bblk_t *bbp)$/;"	f	file:	signature:(struct bblk_t *bbp)
convert_inter_block_jumps_works	./v_asmlnk.c	/^static void convert_inter_block_jumps_works(struct bblk_t *bbp)$/;"	f	file:	signature:(struct bblk_t *bbp)
convert_to_2op_insn	./v_bbopt.c	/^static void convert_to_2op_insn(struct flowg_t *fgp, struct mod_t *mdp)$/;"	f	file:	signature:(struct flowg_t *fgp, struct mod_t *mdp)
convert_to_fork	./v_src2.c	/^static struct st_t *convert_to_fork(struct st_t *hdstp)$/;"	f	file:	signature:(struct st_t *hdstp)
convert_trireg_1vto4v	./v_del.c	/^static void convert_trireg_1vto4v(struct gate_t *gp)$/;"	f	file:	signature:(struct gate_t *gp)
convert_x_assign_stmt	./v_xprop.c	/^static struct st_t *convert_x_assign_stmt(struct st_t *stp, $/;"	f	file:	signature:(struct st_t *stp, struct st_t *prev_stp, int32 *update_last)
convert_x_assigns_stlst	./v_xprop.c	/^static void convert_x_assigns_stlst(struct st_t *hd_stp)$/;"	f	file:	signature:(struct st_t *hd_stp)
copy1_csitem	./v_fx.c	/^static struct gen_csitem_t *copy1_csitem(struct gen_csitem_t *ogcsip,$/;"	f	file:	signature:(struct gen_csitem_t *ogcsip, struct genblk_t *par_gblkp)
copy1_gen_conta	./v_fx.c	/^static struct conta_t *copy1_gen_conta(struct genitem_t *ogip)$/;"	f	file:	signature:(struct genitem_t *ogip)
copy1_gen_initalw	./v_fx.c	/^static struct ialst_t *copy1_gen_initalw(struct genitem_t *ogip)$/;"	f	file:	signature:(struct genitem_t *ogip)
copy1_gen_vardecl	./v_fx.c	/^static struct net_t *copy1_gen_vardecl(struct genitem_t *ogip,$/;"	f	file:	signature:(struct genitem_t *ogip, struct genblk_t *par_gblkp)
copy1_gencase	./v_fx.c	/^static struct gen_case_t *copy1_gencase(struct genitem_t *ogip,$/;"	f	file:	signature:(struct genitem_t *ogip, struct genblk_t *par_gblkp)
copy1_genfor	./v_fx.c	/^static struct gen_for_t *copy1_genfor(struct genitem_t *ogip,$/;"	f	file:	signature:(struct genitem_t *ogip, struct genblk_t *par_gblkp)
copy1_genif	./v_fx.c	/^static struct gen_if_t *copy1_genif(struct genitem_t *ogip,$/;"	f	file:	signature:(struct genitem_t *ogip, struct genblk_t *par_gblkp)
copy1_genitem	./v_fx.c	/^static struct genitem_t *copy1_genitem(struct genitem_t *ngip,$/;"	f	file:	signature:(struct genitem_t *ngip, struct genitem_t *ogip, struct genblk_t *par_gblkp)
copy1_task	./v_fx.c	/^static struct task_t *copy1_task(struct task_t *otskp)$/;"	f	file:	signature:(struct task_t *otskp)
copy1_tchk	./v_fx.c	/^static struct tchk_t *copy1_tchk(struct tchk_t *otcp)$/;"	f	file:	signature:(struct tchk_t *otcp)
copy_1dfp_gref_flds	./v_fx.c	/^static void copy_1dfp_gref_flds(struct gref_t *ngrp, struct gref_t *ogrp)$/;"	f	file:	signature:(struct gref_t *ngrp, struct gref_t *ogrp)
copy_1gate	./v_fx.c	/^static void copy_1gate(struct gate_t *ngp, struct gate_t *ogp)$/;"	f	file:	signature:(struct gate_t *ngp, struct gate_t *ogp)
copy_1inst	./v_fx.c	/^static void copy_1inst(struct inst_t *nip, struct inst_t *oip)$/;"	f	file:	signature:(struct inst_t *nip, struct inst_t *oip)
copy_1symtab	./v_fx.c	/^static struct symtab_t *copy_1symtab(struct symtab_t *osytp)$/;"	f	file:	signature:(struct symtab_t *osytp)
copy_1wire_guts	./v_fx.c	/^static struct net_t *copy_1wire_guts(struct net_t *onp)$/;"	f	file:	signature:(struct net_t *onp)
copy_1xmr_gref_flds	./v_fx.c	/^static void copy_1xmr_gref_flds(struct gref_t *ngrp, struct gref_t *ogrp)$/;"	f	file:	signature:(struct gref_t *ngrp, struct gref_t *ogrp)
copy_attrs	./v_fx.c	/^static struct attr_t *copy_attrs(struct attr_t *oattrp)$/;"	f	file:	signature:(struct attr_t *oattrp)
copy_avl_sytab_to_wrkstab	./v_genfx.c	/^static void copy_avl_sytab_to_wrkstab(struct symtab_t *sytp)$/;"	f	file:	signature:(struct symtab_t *sytp)
copy_contas	./v_fx.c	/^static void copy_contas(void)$/;"	f	file:	signature:(void)
copy_csitemlst	./v_fx.c	/^static struct csitem_t *copy_csitemlst(struct csitem_t *ocsip)$/;"	f	file:	signature:(struct csitem_t *ocsip)
copy_defparams	./v_fx.c	/^static void copy_defparams(void)$/;"	f	file:	signature:(void)
copy_dfp_genitems	./v_fx.c	/^static void copy_dfp_genitems(struct genblk_t *ogblkp, struct genblk_t *ngblkp)$/;"	f	file:	signature:(struct genblk_t *ogblkp, struct genblk_t *ngblkp)
copy_expr_table	./v_fx.c	/^static void copy_expr_table(void)$/;"	f	file:	signature:(void)
copy_gates	./v_fx.c	/^static void copy_gates(void)$/;"	f	file:	signature:(void)
copy_gblk_tasks	./v_fx.c	/^static void copy_gblk_tasks(struct genblk_t *ngblkp,$/;"	f	file:	signature:(struct genblk_t *ngblkp, struct genblk_t *ogblkp)
copy_gblk_wires	./v_fx.c	/^static void copy_gblk_wires(struct genblk_t *ngblkp, struct genblk_t *ogblkp)$/;"	f	file:	signature:(struct genblk_t *ngblkp, struct genblk_t *ogblkp)
copy_genitem_lst	./v_fx.c	/^static struct genitem_t *copy_genitem_lst(struct genitem_t *ogip_hd,$/;"	f	file:	signature:(struct genitem_t *ogip_hd, struct genblk_t *par_gblkp)
copy_gref_genitems	./v_fx.c	/^static void copy_gref_genitems(struct genblk_t *ogblkp,$/;"	f	file:	signature:(struct genblk_t *ogblkp, struct genblk_t *ngblkp)
copy_ialst	./v_fx.c	/^static struct ialst_t *copy_ialst(struct ialst_t *oialp)$/;"	f	file:	signature:(struct ialst_t *oialp)
copy_insn	./v_bbgen3.c	/^static void copy_insn(int32 op1, int32 op2, int32 nbytes)$/;"	f	file:	signature:(int32 op1, int32 op2, int32 nbytes)
copy_insts	./v_fx.c	/^static void copy_insts(void)$/;"	f	file:	signature:(void)
copy_iploctab	./v_fx.c	/^static void copy_iploctab(void)$/;"	f	file:	signature:(void)
copy_iports	./v_fx.c	/^static void copy_iports(struct inst_t *nip, struct inst_t *oip)$/;"	f	file:	signature:(struct inst_t *nip, struct inst_t *oip)
copy_lowsymtab	./v_fx.c	/^static void copy_lowsymtab(struct symtab_t *osytp, struct symtab_t *nupsytp)$/;"	f	file:	signature:(struct symtab_t *osytp, struct symtab_t *nupsytp)
copy_mda	./v_fx.c	/^static struct mda_t *copy_mda(struct mda_t *omdap)$/;"	f	file:	signature:(struct mda_t *omdap)
copy_mdtasks	./v_fx.c	/^static void copy_mdtasks(void)$/;"	f	file:	signature:(void)
copy_mgrefs	./v_fx.c	/^static void copy_mgrefs(void)$/;"	f	file:	signature:(void)
copy_mod	./v_fx.c	/^static void copy_mod(struct mod_t *omdp, char *newnam)$/;"	f	file:	signature:(struct mod_t *omdp, char *newnam)
copy_mod_or_gen_symtabs	./v_fx.c	/^static struct symtab_t *copy_mod_or_gen_symtabs(struct symtab_t *osytp)$/;"	f	file:	signature:(struct symtab_t *osytp)
copy_modports	./v_fx.c	/^static void copy_modports(void)$/;"	f	file:	signature:(void)
copy_namparamlst	./v_src.c	/^static struct namparam_t *copy_namparamlst(struct namparam_t *old_npmp)  $/;"	f	file:	signature:(struct namparam_t *old_npmp)
copy_params	./v_fx.c	/^static struct net_t *copy_params(struct net_t *onptab, int32 oprmnum,$/;"	f	file:	signature:(struct net_t *onptab, int32 oprmnum, int32 pclass)
copy_spcpths	./v_fx.c	/^static void copy_spcpths(struct spfy_t *ospfyp, struct spfy_t *nspfyp)$/;"	f	file:	signature:(struct spfy_t *ospfyp, struct spfy_t *nspfyp)
copy_specify	./v_fx.c	/^static void copy_specify(void)$/;"	f	file:	signature:(void)
copy_stsyms	./v_fx.c	/^static struct sy_t **copy_stsyms(struct sy_t **osytab,$/;"	f	file:	signature:(struct sy_t **osytab, word32 nsyms)
copy_timchks	./v_fx.c	/^static void copy_timchks(struct spfy_t *ospfyp, struct spfy_t *nspfyp)$/;"	f	file:	signature:(struct spfy_t *ospfyp, struct spfy_t *nspfyp)
copy_tmp_list	./v_regasn.c	/^static struct tn_list_t *copy_tmp_list(struct tn_list_t *src_tlstp)$/;"	f	file:	signature:(struct tn_list_t *src_tlstp)
copy_tn_list	./v_regasn.c	/^static void copy_tn_list(struct tn_list_t *dst_tlstp, $/;"	f	file:	signature:(struct tn_list_t *dst_tlstp, struct tn_list_t *src_tlstp)
copy_tskargs	./v_fx.c	/^static struct task_pin_t *copy_tskargs(struct task_t *otskp)$/;"	f	file:	signature:(struct task_t *otskp)
copy_varinits	./v_fx.c	/^static struct varinitlst_t *copy_varinits(struct varinitlst_t *oinitp)$/;"	f	file:	signature:(struct varinitlst_t *oinitp)
copy_vpival_to_accval	./v_acc.c	/^static int32 copy_vpival_to_accval(s_setval_value *avp, s_vpi_value *vvp,$/;"	f	file:	signature:(s_setval_value *avp, s_vpi_value *vvp, int32 owid)
copy_wires	./v_fx.c	/^static void copy_wires(struct symtab_t *sytp, struct symtab_t *new_sytp)$/;"	f	file:	signature:(struct symtab_t *sytp, struct symtab_t *new_sytp)
copy_xpnd_	./v_bbgen3.c	754;"	d	file:
copy_xpnd_onelev_args	./cvc.c	/^static void copy_xpnd_onelev_args(void)$/;"	f	file:	signature:(void)
copy_xprlst	./v_fx.c	/^static struct exprlst_t *copy_xprlst(struct exprlst_t *oxplp)$/;"	f	file:	signature:(struct exprlst_t *oxplp)
copyright	./cvc.c	/^static char copyright[]$/;"	v	file:
correct_objtypval	./v_vpi3.c	/^static void correct_objtypval(p_vpi_value value_p, word32 ntyp,$/;"	f	file:	signature:(p_vpi_value value_p, word32 ntyp, word32 isavec, word32 is_stren, int32 is_bsel)
correct_walign_nb_rhs_area	./v_asmlnk.c	/^static int32 correct_walign_nb_rhs_area(int32 rhs_byt_siz)$/;"	f	file:	signature:(int32 rhs_byt_siz)
count2_flat_insts	./v_genfx.c	/^static void count2_flat_insts(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
count_1mod_npps	./v_prp.c	/^static int32 count_1mod_npps(struct mod_t *mdp) $/;"	f	file:	signature:(struct mod_t *mdp)
count_cells	./cvc.c	/^static int32 count_cells(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
count_fg_bblks	./v_bbopt.c	/^static int32 count_fg_bblks(struct flowg_t *fgp) $/;"	f	file:	signature:(struct flowg_t *fgp)
count_flat_insts	./v_genfx.c	/^static void count_flat_insts(void)$/;"	f	file:	signature:(void)
count_gates	./cvc.c	/^static int32 count_gates(struct mod_t *mdp, int32 *num1bitcas)$/;"	f	file:	signature:(struct mod_t *mdp, int32 *num1bitcas)
count_genitems	./v_genfx.c	/^static int32 count_genitems(int32 match_gityp)$/;"	f	file:	signature:(int32 match_gityp)
count_gref_genitems	./v_genfx.c	/^static int32 count_gref_genitems(void)$/;"	f	file:	signature:(void)
count_minum_and_mgnum	./v_fx.c	/^static int32 count_minum_and_mgnum(int32 *gnum, struct mod_t *mdp)$/;"	f	file:	signature:(int32 *gnum, struct mod_t *mdp)
count_mods	./v_prp.c	/^static void count_mods(void)$/;"	f	file:	signature:(void)
count_static_instances	./v_genfx.c	/^static int32 count_static_instances(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
count_tran_nets	./cvc.c	/^static int32 count_tran_nets(void)$/;"	f	file:	signature:(void)
count_tskvars	./v_prp.c	/^static int32 count_tskvars(struct task_t *tskp)$/;"	f	file:	signature:(struct task_t *tskp)
count_udps	./v_prp.c	/^static void count_udps(void)$/;"	f	file:	signature:(void)
cp_dofs_wval	./v_ex3.c	/^static void cp_dofs_wval(word32 *dwp, word32 *swp, int32 dbit1, int32 numbits)$/;"	f	file:	signature:(word32 *dwp, word32 *swp, int32 dbit1, int32 numbits)
cp_explicit	./v.h	/^ unsigned cp_explicit : 1;    \/* T => all explicit connection list *\/$/;"	m	struct:cell_t	access:public
cp_walign_	./cvmacros.h	481;"	d
cpblk_t	./v.h	/^struct cpblk_t {$/;"	s
cpblk_t::cpblknxt	./v.h	/^ struct cpblk_t *cpblknxt; $/;"	m	struct:cpblk_t	typeref:struct:cpblk_t::cpblk_t	access:public
cpblk_t::cpblks	./v.h	/^ struct cell_t *cpblks;$/;"	m	struct:cpblk_t	typeref:struct:cpblk_t::cell_t	access:public
cpblknxt	./v.h	/^ struct cpblk_t *cpblknxt; $/;"	m	struct:cpblk_t	typeref:struct:cpblk_t::cpblk_t	access:public
cpblks	./v.h	/^ struct cell_t *cpblks;$/;"	m	struct:cpblk_t	typeref:struct:cpblk_t::cell_t	access:public
cpfnam_ind	./v.h	/^ word32 cpfnam_ind;           \/* file symbol defined in *\/$/;"	m	struct:cell_pin_t	access:public
cpins	./v.h	/^ struct cell_pin_t *cpins;$/;"	m	struct:cell_t	typeref:struct:cell_t::cell_pin_t	access:public
cplin_cnt	./v.h	/^ int32 cplin_cnt;             \/* def. line no. *\/$/;"	m	struct:cell_pin_t	access:public
cpn_cmp	./v_fx.c	/^static int32 cpn_cmp(const void *cpp1, const void *cpp2)$/;"	f	file:	signature:(const void *cpp1, const void *cpp2)
cpn_end_sp	./v.h	/^ char *cpn_start_sp, *cpn_end_sp;$/;"	m	struct:cpnblk_t	access:public
cpn_start_sp	./v.h	/^ char *cpn_start_sp, *cpn_end_sp;$/;"	m	struct:cpnblk_t	access:public
cpnblk_t	./v.h	/^struct cpnblk_t {$/;"	s
cpnblk_t::cpn_end_sp	./v.h	/^ char *cpn_start_sp, *cpn_end_sp;$/;"	m	struct:cpnblk_t	access:public
cpnblk_t::cpn_start_sp	./v.h	/^ char *cpn_start_sp, *cpn_end_sp;$/;"	m	struct:cpnblk_t	access:public
cpnblk_t::cpnblknxt	./v.h	/^ struct cpnblk_t *cpnblknxt;$/;"	m	struct:cpnblk_t	typeref:struct:cpnblk_t::cpnblk_t	access:public
cpnblk_t::cpnblks	./v.h	/^ char *cpnblks;$/;"	m	struct:cpnblk_t	access:public
cpnblknxt	./v.h	/^ struct cpnblk_t *cpnblknxt;$/;"	m	struct:cpnblk_t	typeref:struct:cpnblk_t::cpnblk_t	access:public
cpnblks	./v.h	/^ char *cpnblks;$/;"	m	struct:cpnblk_t	access:public
cpnxt	./v.h	/^ struct cell_pin_t *cpnxt;$/;"	m	struct:cell_pin_t	typeref:struct:cell_pin_t::cell_pin_t	access:public
cppblk_t	./v.h	/^struct cppblk_t {$/;"	s
cppblk_t::cppblknxt	./v.h	/^ struct cppblk_t *cppblknxt;$/;"	m	struct:cppblk_t	typeref:struct:cppblk_t::cppblk_t	access:public
cppblk_t::cppblks	./v.h	/^ struct cell_pin_t *cppblks;$/;"	m	struct:cppblk_t	typeref:struct:cppblk_t::cell_pin_t	access:public
cppblknxt	./v.h	/^ struct cppblk_t *cppblknxt;$/;"	m	struct:cppblk_t	typeref:struct:cppblk_t::cppblk_t	access:public
cppblks	./v.h	/^ struct cell_pin_t *cppblks;$/;"	m	struct:cppblk_t	typeref:struct:cppblk_t::cell_pin_t	access:public
cpxnd	./v.h	/^ struct expr_t *cpxnd;        \/* connecting expression root node *\/$/;"	m	struct:cell_pin_t	typeref:struct:cell_pin_t::expr_t	access:public
create_cvclib_files	./v_asmlnk.c	/^static void create_cvclib_files(int32 is_pipe)$/;"	f	file:	signature:(int32 is_pipe)
create_disv	./v_del.c	/^static void create_disv(struct gate_t *gp, int32 numinsts, int32 nvals,$/;"	f	file:	signature:(struct gate_t *gp, int32 numinsts, int32 nvals, word64 *tim, int32 wid)
csinxt	./v.h	/^ struct csitem_t *csinxt;$/;"	m	struct:csitem_t	typeref:struct:csitem_t::csitem_t	access:public
csist	./v.h	/^ struct st_t *csist;          \/* for unnamed block can be list *\/$/;"	m	struct:csitem_t	typeref:struct:csitem_t::st_t	access:public
csitem	./igen.h	/^ struct csitem_t *csitem;     \/* item - contains stmt list ptr *\/$/;"	m	struct:icas_t	typeref:struct:icas_t::csitem_t	access:public
csitem_canbe_in_con_func	./v_src.c	/^static int32 csitem_canbe_in_con_func(struct task_t *ftskp,$/;"	f	file:	signature:(struct task_t *ftskp, struct csitem_t *csip)
csitem_t	./v.h	/^struct csitem_t {$/;"	s
csitem_t::csinxt	./v.h	/^ struct csitem_t *csinxt;$/;"	m	struct:csitem_t	typeref:struct:csitem_t::csitem_t	access:public
csitem_t::csist	./v.h	/^ struct st_t *csist;          \/* for unnamed block can be list *\/$/;"	m	struct:csitem_t	typeref:struct:csitem_t::st_t	access:public
csitem_t::csixlst	./v.h	/^ struct exprlst_t *csixlst;$/;"	m	struct:csitem_t	typeref:struct:csitem_t::exprlst_t	access:public
csitemlst_do_inpsel_set	./v_fx2.c	/^static void csitemlst_do_inpsel_set(struct csitem_t *csip)$/;"	f	file:	signature:(struct csitem_t *csip)
csitems	./v.h	/^ struct csitem_t *csitems;    \/* first item always default: place holder *\/  $/;"	m	struct:case_t	typeref:struct:case_t::csitem_t	access:public
csixlst	./v.h	/^ struct exprlst_t *csixlst;$/;"	m	struct:csitem_t	typeref:struct:csitem_t::exprlst_t	access:public
csixlst	./v.h	/^ struct exprlst_t *csixlst;$/;"	m	struct:gen_csitem_t	typeref:struct:gen_csitem_t::exprlst_t	access:public
cstmt_bbp	./igen.h	/^ struct bblk_t *cstmt_bbp;    \/* basic blk that starts case stmt list *\/$/;"	m	struct:icas_t	typeref:struct:icas_t::bblk_t	access:public
csx	./v.h	/^ struct expr_t *csx;$/;"	m	struct:case_t	typeref:struct:case_t::expr_t	access:public
csx	./v.h	/^ struct expr_t *csx;$/;"	m	struct:gen_case_t	typeref:struct:gen_case_t::expr_t	access:public
csym	./v.h	/^ struct sy_t *csym;$/;"	m	struct:cell_t	typeref:struct:cell_t::sy_t	access:public
ct	./v.h	/^ struct ncomp_t *ct;          \/* compile time value *\/$/;"	m	union:nx_u	typeref:struct:nx_u::ncomp_t	access:public
ct_comlab_typ	./v.h	/^ unsigned ct_comlab_typ : 6;  \/* comlab type (from original tn) *\/$/;"	m	struct:ctev_t	access:public
ct_el_ndx	./v.h	/^ int32 ct_el_ndx;             \/* index of the element (from original tn) *\/ $/;"	m	struct:ctev_t	access:public
ct_get_tev_enterptr_labnam	./v_asmlnk.c	/^static char *ct_get_tev_enterptr_labnam(char *labnam, struct ctev_t *ctevp)$/;"	f	file:	signature:(char *labnam, struct ctev_t *ctevp)
ctab_ndx	./igen.h	/^ int32 ctab_ndx;              \/* base index for label of per mod contab *\/$/;"	m	union:tn_const_u	access:public
ctev_gp	./v.h	/^ struct gate_t *ctev_gp;      \/* (unused?) gate ptr in ctev *\/$/;"	m	struct:ctev_t	typeref:struct:ctev_t::gate_t	access:public
ctev_idp_ofs	./v.h	/^ size_t ctev_idp_ofs;         \/* idp offset of this delay (tev) *\/$/;"	m	struct:ctev_t	access:public
ctev_list_hd	./v.h	/^ struct ctev_t *ctev_list_hd; \/* hd of this mods CT (static) ctevs structs *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::ctev_t	access:public
ctev_ndx	./v.h	/^ int32 ctev_ndx;              \/* the number (indentifier) for this event *\/$/;"	m	struct:ctev_t	access:public
ctev_t	./v.h	/^struct ctev_t {$/;"	s
ctev_t::ca_ndx	./v.h	/^ int32 ca_ndx;                \/* conta ndx needed by asmlnk tev write proc *\/$/;"	m	struct:ctev_t	access:public
ctev_t::ct_comlab_typ	./v.h	/^ unsigned ct_comlab_typ : 6;  \/* comlab type (from original tn) *\/$/;"	m	struct:ctev_t	access:public
ctev_t::ct_el_ndx	./v.h	/^ int32 ct_el_ndx;             \/* index of the element (from original tn) *\/ $/;"	m	struct:ctev_t	access:public
ctev_t::ctev_gp	./v.h	/^ struct gate_t *ctev_gp;      \/* (unused?) gate ptr in ctev *\/$/;"	m	struct:ctev_t	typeref:struct:ctev_t::gate_t	access:public
ctev_t::ctev_idp_ofs	./v.h	/^ size_t ctev_idp_ofs;         \/* idp offset of this delay (tev) *\/$/;"	m	struct:ctev_t	access:public
ctev_t::ctev_ndx	./v.h	/^ int32 ctev_ndx;              \/* the number (indentifier) for this event *\/$/;"	m	struct:ctev_t	access:public
ctev_t::ctevnxt	./v.h	/^ struct ctev_t *ctevnxt;      \/* list used by asmlnk writing code *\/$/;"	m	struct:ctev_t	typeref:struct:ctev_t::ctev_t	access:public
ctev_t::dctrl_ndx	./v.h	/^ int32 dctrl_ndx;             \/* delay control merged ndx (always @ blocks) *\/$/;"	m	struct:ctev_t	access:public
ctev_t::del_rep	./v.h	/^ unsigned del_rep : 5;        \/* type of delay *\/$/;"	m	struct:ctev_t	access:public
ctev_t::du	./v.h	/^ union del_u du;              \/* delay for this event *\/$/;"	m	struct:ctev_t	typeref:union:ctev_t::del_u	access:public
ctev_t::has_wire_ev	./v.h	/^ unsigned has_wire_ev : 1;    \/* is mipd wire event *\/$/;"	m	struct:ctev_t	access:public
ctev_t::in_list	./v.h	/^ unsigned in_list : 1;        \/* T => already in mdp->ctev_list *\/$/;"	m	struct:ctev_t	access:public
ctev_t::mdp	./v.h	/^ struct mod_t *mdp;           \/* module this event is in *\/$/;"	m	struct:ctev_t	typeref:struct:ctev_t::mod_t	access:public
ctev_t::nb_fg_num	./v.h	/^ int32 nb_fg_num;             \/* if non-blocking - its fg number *\/$/;"	m	struct:ctev_t	access:public
ctev_t::nb_rhs_byt_size	./v.h	/^ int32 nb_rhs_byt_size;       \/* byte size of nb rhs storage (-1 if none) *\/$/;"	m	struct:ctev_t	access:public
ctev_t::path_ndx	./v.h	/^ int32 path_ndx;              \/* path index *\/$/;"	m	struct:ctev_t	access:public
ctev_t::srep	./v.h	/^ unsigned srep : 6;           \/* srep type used for nb storage *\/$/;"	m	struct:ctev_t	access:public
ctev_t::wev_ndx	./v.h	/^ int32 wev_ndx;               \/* wire evnt ndx need by asmlnk tev write proc *\/$/;"	m	struct:ctev_t	access:public
ctev_t::wrapper_type	./v.h	/^ unsigned wrapper_type : 3;   \/* type of generic event wrapper handle type *\/$/;"	m	struct:ctev_t	access:public
ctevnxt	./v.h	/^ struct ctev_t *ctevnxt;      \/* list used by asmlnk writing code *\/$/;"	m	struct:ctev_t	typeref:struct:ctev_t::ctev_t	access:public
ctevp	./v.h	/^ struct ctev_t *ctevp;        \/* compile time info for building static tev_t *\/$/;"	m	struct:st_t	typeref:struct:st_t::ctev_t	access:public
ctevp	./v.h	/^ struct ctev_t *ctevp;$/;"	m	struct:conta_t	typeref:struct:conta_t::ctev_t	access:public
ctevp	./v.h	/^ struct ctev_t *ctevp;$/;"	m	struct:gate_t	typeref:struct:gate_t::ctev_t	access:public
curdef_ip	./igen.h	/^ struct insn_t **curdef_ip;   \/* per word insn most recent definer of tn *\/ $/;"	m	struct:tn_t	typeref:struct:tn_t::insn_t	access:public
curmdp	./v.h	/^ struct mod_t *curmdp;        \/* ptr. to current mod source line of call in *\/$/;"	m	struct:vpisystf_t	typeref:struct:vpisystf_t::mod_t	access:public
curr_flat_hier_nam	./fstapi.c	/^char *curr_flat_hier_nam;$/;"	m	struct:fstReaderContext	file:	access:public
curr_hier	./fstapi.c	/^struct fstCurrHier *curr_hier;$/;"	m	struct:fstReaderContext	typeref:struct:fstReaderContext::fstCurrHier	file:	access:public
current_handle	./fstapi.c	/^fstHandle current_handle;$/;"	m	struct:fstReaderContext	file:	access:public
curtime	./fstapi.c	/^uint64_t curtime;$/;"	m	struct:fstWriterContext	file:	access:public
curtskp	./v.h	/^ struct task_t *curtskp;      \/* ptr. to current task source line of call in *\/$/;"	m	struct:vpisystf_t	typeref:struct:vpisystf_t::task_t	access:public
curval_handle	./fstapi.c	/^FILE *curval_handle;$/;"	m	struct:fstWriterContext	file:	access:public
curval_handle_nam	./fstapi.c	/^char *curval_handle_nam;$/;"	m	struct:fstWriterContext	file:	access:public
curval_mem	./fstapi.c	/^unsigned char *curval_mem;$/;"	m	struct:fstWriterContext	file:	access:public
cv_onames_vpi	./v_vpi3.c	/^static struct onamvpi_t cv_onames_vpi[] = {$/;"	v	typeref:struct:onamvpi_t	file:
cvrt_local_dfp_back_to_xpr	./v_genfx.c	/^static int32 cvrt_local_dfp_back_to_xpr(struct gref_t *grp)$/;"	f	file:	signature:(struct gref_t *grp)
cvrt_local_xmr_back_to_xpr	./v_genfx.c	/^static int32 cvrt_local_xmr_back_to_xpr(struct gref_t *grp)$/;"	f	file:	signature:(struct gref_t *grp)
cvrt_udpedges	./v_src3.c	/^static int32 cvrt_udpedges(char *culine, char *uline)$/;"	f	file:	signature:(char *culine, char *uline)
cvt_wrdbool_	./cvmacros.h	466;"	d
cwid	./v.h	/^ int32 cwid;$/;"	m	struct:contab_info_t	access:public
cx1	./v.h	/^ struct expr_t *cx1, *cx2;    \/* for arrays of gates\/insts, the range *\/$/;"	m	struct:cell_t	typeref:struct:cell_t::expr_t	access:public
cx2	./v.h	/^ struct expr_t *cx1, *cx2;    \/* for arrays of gates\/insts, the range *\/$/;"	m	struct:cell_t	typeref:struct:cell_t::	access:public
cxf_fixup_case_gotos	./v_prp2.c	/^static void cxf_fixup_case_gotos(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
cxf_fixup_func_dsabl_gotos	./v_prp2.c	/^static void cxf_fixup_func_dsabl_gotos(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
cxf_fixup_loopend_goto	./v_prp2.c	/^static struct st_t *cxf_fixup_loopend_goto(struct st_t *begstp, $/;"	f	file:	signature:(struct st_t *begstp, struct st_t *targstp)
cxtyp	./igen.h	/^ unsigned cxtyp : 4;          \/* complexity of item expr *\/$/;"	m	struct:icasx_t	access:public
d16v	./v.h	/^ word64 *d16v;                \/* 16 constant IS form *\/$/;"	m	union:del_u	access:public
d1v	./v.h	/^ word64 *d1v;                 \/* 1 constant (non 0) delay value *\/$/;"	m	union:del_u	access:public
d1x	./v.h	/^ struct expr_t *d1x;          \/* 1 delay expr. *\/$/;"	m	union:del_u	typeref:struct:del_u::expr_t	access:public
d4v	./v.h	/^ word64 *d4v;                 \/* 4 value constant delay table *\/$/;"	m	union:del_u	access:public
d4x	./v.h	/^ struct expr_t **d4x;         \/* array of 4 expression ptrs *\/$/;"	m	union:del_u	typeref:struct:del_u::expr_t	access:public
d_edgval	./v.h	/^ unsigned d_edgval : 8;         \/* edge signature for filter (only pos\/neg) *\/$/;"	m	struct:delctrl_t	access:public
d_gt_one	./v.h	/^ unsigned d_gt_one : 2;         \/* == 2 has greater than one trigger net *\/$/;"	m	struct:delctrl_t	access:public
d_has_edge	./v.h	/^ unsigned d_has_edge : 1;       \/* T => has posedge\/negedge *\/$/;"	m	struct:delctrl_t	access:public
d_has_xmr	./v.h	/^ unsigned d_has_xmr : 1;        \/* T => xmr edge *\/ $/;"	m	struct:delctrl_t	access:public
d_only_edges	./v.h	/^ unsigned d_only_edges : 2;     \/* T => only pos\/edge edges *\/$/;"	m	struct:delctrl_t	access:public
d_only_scalars	./v.h	/^ unsigned d_only_scalars : 1;   \/* T => only scalar nets *\/$/;"	m	struct:delctrl_t	access:public
d_only_vectors	./v.h	/^ unsigned d_only_vectors : 1;   \/* T => only vectored nets *\/$/;"	m	struct:delctrl_t	access:public
d_same_edge	./v.h	/^ unsigned d_same_edge : 1;      \/* edge (pos\/neg) is the same *\/$/;"	m	struct:delctrl_t	access:public
d_uses_nets_on_rhs	./v.h	/^ unsigned d_uses_nets_on_rhs : 1;  \/* T => edge uses some nets on rhs body *\/$/;"	m	struct:delctrl_t	access:public
dadd	./v_ex2.c	/^static void dadd(word32 *z1p, word32 *z2p, int32 y, int32 n)$/;"	f	file:	signature:(word32 *z1p, word32 *z2p, int32 y, int32 n)
dargv	./v.h	/^ char **dargv;$/;"	m	struct:optlst_t	access:public
datasrcx	./v.h	/^ struct expr_t *datasrcx;     \/* non sim polarity expr, can be FCCOM list *\/$/;"	m	struct:spcpth_t	typeref:struct:spcpth_t::expr_t	access:public
date	./fstapi.c	/^char date[FST_HDR_DATE_SIZE + 1];$/;"	m	struct:fstReaderContext	file:	access:public
dbcmd_prefix_rep	./v_dbg.c	/^static int32 dbcmd_prefix_rep(int32 i, char *aval, int32 alen,$/;"	f	file:	signature:(int32 i, char *aval, int32 alen, struct namlst_t *cmdtab, int32 cmdnum)
dbcmds	./v_dbg.c	/^static struct namlst_t dbcmds[] = {$/;"	v	typeref:struct:namlst_t	file:
dbg_bld_expr_val	./v_dbg.c	/^static char *dbg_bld_expr_val(char *s, struct expr_t *prtx, int32 prtfmt,$/;"	f	file:	signature:(char *s, struct expr_t *prtx, int32 prtfmt, int32 prtwidth, int32 force_unsign)
dbg_bld_ver_item_list_str	./v_src3.c	/^static char *dbg_bld_ver_item_list_str(char *s, struct oc_vtok_t *ocvtp_hd)$/;"	f	file:	signature:(char *s, struct oc_vtok_t *ocvtp_hd)
dbg_brkpt_hlp	./v_dbg.c	/^static char *dbg_brkpt_hlp[] = { $/;"	v	file:
dbg_chgbrk_hlp	./v_dbg.c	/^static char *dbg_chgbrk_hlp[] = {$/;"	v	file:
dbg_chk_legal_wide_tn	./v_bbopt.c	/^static void dbg_chk_legal_wide_tn(struct amode_t *amp)$/;"	f	file:	signature:(struct amode_t *amp)
dbg_compiling_hlp	./v_dbg.c	/^static char *dbg_compiling_hlp[] = { $/;"	v	file:
dbg_data_hlp	./v_dbg.c	/^static char *dbg_data_hlp[] =  { $/;"	v	file:
dbg_dbg_hlp	./v_dbg.c	/^static char *dbg_dbg_hlp[] = { $/;"	v	file:
dbg_dif_hlp	./v_dbg.c	/^static char *dbg_dif_hlp[] =  { $/;"	v	file:
dbg_display	./v_dbg.c	/^static void dbg_display(void)$/;"	f	file:	signature:(void)
dbg_dmp_1cell	./v_cnv.c	/^static void dbg_dmp_1cell(FILE *f, struct cell_t *cp)$/;"	f	file:	signature:(FILE *f, struct cell_t *cp)
dbg_dmp_1gate	./v_cnv.c	/^static void dbg_dmp_1gate(FILE *f, struct gate_t *gp, char *gnam)$/;"	f	file:	signature:(FILE *f, struct gate_t *gp, char *gnam)
dbg_dmp_1inst	./v_cnv.c	/^static void dbg_dmp_1inst(FILE *f, struct inst_t *ip, char *inam)$/;"	f	file:	signature:(FILE *f, struct inst_t *ip, char *inam)
dbg_dmp_cells	./v_cnv.c	/^static void dbg_dmp_cells(FILE *f, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *f, struct mod_t *mdp)
dbg_dmp_dfpiis	./v_genfx.c	/^static void dbg_dmp_dfpiis(struct dfparam_t *dfpp, char *s1)$/;"	f	file:	signature:(struct dfparam_t *dfpp, char *s1)
dbg_dmp_gblk_body	./v_genfx.c	/^static void dbg_dmp_gblk_body(struct genblk_t *gblkp)$/;"	f	file:	signature:(struct genblk_t *gblkp)
dbg_dmp_grcmps	./v_genfx.c	/^static void dbg_dmp_grcmps(struct gref_t *grp)$/;"	f	file:	signature:(struct gref_t *grp)
dbg_dmp_insts_and_gates	./v_cnv.c	/^static void dbg_dmp_insts_and_gates(FILE *f, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *f, struct mod_t *mdp)
dbg_dmp_xmrcmptab	./v_genfx.c	/^static void dbg_dmp_xmrcmptab(struct gref_t *grp, struct xmrcmp_t **xmrcmptab,$/;"	f	file:	signature:(struct gref_t *grp, struct xmrcmp_t **xmrcmptab, int32 nxcmps)
dbg_get_trk_ipval	./v_bbopt.c	/^static int32 dbg_get_trk_ipval(struct insn_t *ip)$/;"	f	file:	signature:(struct insn_t *ip)
dbg_hist_hlp	./v_dbg.c	/^static char *dbg_hist_hlp[] = { $/;"	v	file:
dbg_info_disp	./v_dbg2.c	/^static void dbg_info_disp(void)$/;"	f	file:	signature:(void)
dbg_info_hlp	./v_dbg.c	/^static char *dbg_info_hlp[] = { $/;"	v	file:
dbg_print	./v_dbg.c	/^static void dbg_print(void)$/;"	f	file:	signature:(void)
dbg_reg_tostr	./v_asmlnk.c	/^static char *dbg_reg_tostr(char *s1, struct amode_t *amp)$/;"	f	file:	signature:(char *s1, struct amode_t *amp)
dbg_scope_hlp	./v_dbg.c	/^static char *dbg_scope_hlp[] =  { $/;"	v	file:
dbg_src_hlp	./v_dbg.c	/^static char *dbg_src_hlp[] =  { $/;"	v	file:
dbg_stmt_hlp	./v_dbg.c	/^static char *dbg_stmt_hlp[] =  { $/;"	v	file:
dbg_stsks_hlp	./v_dbg.c	/^static char *dbg_stsks_hlp[] = { $/;"	v	file:
dbg_topic_hlp	./v_dbg.c	/^static char *dbg_topic_hlp[] = {$/;"	v	file:
dbg_trc_hlp	./v_dbg.c	/^static char *dbg_trc_hlp[] = { $/;"	v	file:
dbg_unopt2_msg	./v_ex4.c	/^static void dbg_unopt2_msg(struct mod_t *mdp, struct inst_t *ip, int32 pi,$/;"	f	file:	signature:(struct mod_t *mdp, struct inst_t *ip, int32 pi, struct mod_pin_t *mpp, int32 pbi, char *reason)
dbg_unopt_msg	./v_ex4.c	/^static void dbg_unopt_msg(struct mod_t *mdp, struct mod_pin_t *mpp, int32 pbi,$/;"	f	file:	signature:(struct mod_t *mdp, struct mod_pin_t *mpp, int32 pbi, char *reason)
dc_delrep	./v.h	/^ unsigned dc_delrep : 5;      \/* normal gca delay type *\/$/;"	m	struct:delctrl_t	access:public
dc_du	./v.h	/^ union del_u dc_du;           \/* normal delay union (also used for ev ctrl) *\/$/;"	m	struct:delctrl_t	typeref:union:delctrl_t::del_u	access:public
dc_iact	./v.h	/^ unsigned dc_iact : 1;        \/* iact delay control *\/ $/;"	m	struct:delctrl_t	access:public
dc_id_ndx	./v.h	/^ int32 dc_id_ndx;               \/* index (id)  *\/$/;"	m	struct:delctrl_t	access:public
dc_is_always_comb_latch	./v.h	/^ unsigned dc_is_always_comb_latch : 1; \/* T => always_comb\/always_latch *\/$/;"	m	struct:delctrl_t	access:public
dc_is_always_ff	./v.h	/^ unsigned dc_is_always_ff : 1;         \/* T => always_ff *\/$/;"	m	struct:delctrl_t	access:public
dc_nblking	./v.h	/^ unsigned dc_nblking : 1;     \/* T => delay control is non blocking form *\/$/;"	m	struct:delctrl_t	access:public
dce2_u	./v.h	/^union dce2_u {$/;"	u
dce2_u::dce_fmon	./v.h	/^ struct fmonlst_t *dce_fmon;  \/* nil if monit else fmon record for monitors *\/$/;"	m	union:dce2_u	typeref:struct:dce2_u::fmonlst_t	access:public
dce2_u::dce_pvc_fcallx	./v.h	/^ struct expr_t *dce_pvc_fcallx; \/* pvc misctf fcall expr *\/$/;"	m	union:dce2_u	typeref:struct:dce2_u::expr_t	access:public
dce2_u::dce_pvc_stp	./v.h	/^ struct st_t *dce_pvc_stp;    \/* pvc misctf statment *\/$/;"	m	union:dce2_u	typeref:struct:dce2_u::st_t	access:public
dce2_u::dce_qcvalp	./v.h	/^ struct qcval_t *dce_qcvalp;  \/* for qcaf dce, stmts qcval record *\/ $/;"	m	union:dce2_u	typeref:struct:dce2_u::qcval_t	access:public
dce_1inst	./v.h	/^ unsigned dce_1inst : 1;      \/* one instance form must match match itp *\/$/;"	m	struct:dcevnt_t	access:public
dce_cbp	./v.h	/^ struct cbrec_t *dce_cbp;     \/* cbrec for vpi_ val chg callback *\/$/;"	m	union:dce_u	typeref:struct:dce_u::cbrec_t	access:public
dce_edge	./v.h	/^ unsigned dce_edge : 1;       \/* T => need edge filtering  *\/$/;"	m	struct:dcevnt_t	access:public
dce_edgval	./v.h	/^ unsigned dce_edgval : 8;     \/* edge signature for filter (only pos\/neg) *\/$/;"	m	struct:dcevnt_t	access:public
dce_expr	./v.h	/^ struct dce_expr_t *dce_expr; \/* for edge where need expr old val and expr *\/$/;"	m	struct:dcevnt_t	typeref:struct:dcevnt_t::dce_expr_t	access:public
dce_expr_info_t	./igen.h	/^struct dce_expr_info_t {$/;"	s
dce_expr_info_t::dcep	./igen.h	/^ struct dcevnt_t *dcep;      \/* the dcep that created this info *\/$/;"	m	struct:dce_expr_info_t	typeref:struct:dce_expr_info_t::dcevnt_t	access:public
dce_expr_info_t::tni	./igen.h	/^ int32 tni;                  \/* the tmp for the storage area *\/$/;"	m	struct:dce_expr_info_t	access:public
dce_expr_t	./v.h	/^struct dce_expr_t {$/;"	s
dce_expr_t::edgxp	./v.h	/^ struct expr_t *edgxp;$/;"	m	struct:dce_expr_t	typeref:struct:dce_expr_t::expr_t	access:public
dce_expr_t::expr_ofs	./v.h	/^ size_t expr_ofs;             \/* dce expr idp offset *\/ $/;"	m	struct:dce_expr_t	access:public
dce_expr_t::mast_dcep	./v.h	/^ struct dcevnt_t *mast_dcep;  \/* one master (first) for alloc and init *\/ $/;"	m	struct:dce_expr_t	typeref:struct:dce_expr_t::dcevnt_t	access:public
dce_fmon	./v.h	/^ struct fmonlst_t *dce_fmon;  \/* nil if monit else fmon record for monitors *\/$/;"	m	union:dce2_u	typeref:struct:dce2_u::fmonlst_t	access:public
dce_idp_info_t	./v.h	/^struct dce_idp_info_t {$/;"	s
dce_idp_info_t::match_idp_ofs	./v.h	/^ size_t match_idp_ofs;         \/* idp offset for dce_matchu *\/$/;"	m	struct:dce_idp_info_t	access:public
dce_idp_info_t::match_mdp	./v.h	/^ struct mod_t *match_mdp;     \/* matching mdp *\/$/;"	m	struct:dce_idp_info_t	typeref:struct:dce_idp_info_t::mod_t	access:public
dce_idp_info_t::ref_idp_ofs	./v.h	/^ size_t ref_idp_ofs;           \/* idp offset for dce_refu *\/$/;"	m	struct:dce_idp_info_t	access:public
dce_idp_info_t::ref_mdp	./v.h	/^ struct mod_t *ref_mdp;       \/* ref mdp *\/$/;"	m	struct:dce_idp_info_t	typeref:struct:dce_idp_info_t::mod_t	access:public
dce_info_t	./v.h	/^struct dce_info_t {$/;"	s
dce_info_t::dtable	./v.h	/^ struct dcevnt_t **dtable;  \/* dce table for linking *\/$/;"	m	struct:dce_info_t	typeref:struct:dce_info_t::dcevnt_t	access:public
dce_info_t::ndx	./v.h	/^ int32 ndx;                 \/* dce table current index *\/$/;"	m	struct:dce_info_t	access:public
dce_info_t::size	./v.h	/^ int32 size;                \/* dce table size *\/$/;"	m	struct:dce_info_t	access:public
dce_matchu	./v.h	/^ union itd_u dce_matchu;      \/* for 1 inst. must match this itree target *\/$/;"	m	struct:dcevnt_t	typeref:union:dcevnt_t::itd_u	access:public
dce_ndx	./v.h	/^ int32 dce_ndx;               \/* dce ndx from the table for +load_solib *\/$/;"	m	struct:dcevnt_t	access:public
dce_nomonstren	./v.h	/^ unsigned dce_nomonstren : 1; \/* T => ignore stren for monit of stren *\/$/;"	m	struct:dcevnt_t	access:public
dce_np	./v.h	/^ struct net_t *dce_np;        \/* net this dce is triggerd by *\/$/;"	m	struct:dcevnt_t	typeref:struct:dcevnt_t::net_t	access:public
dce_off	./v.h	/^ byte dce_off;                \/* for byte code PLI\/monitor need dce on\/off *\/ $/;"	m	struct:dcevnt_t	access:public
dce_pvc_fcallx	./v.h	/^ struct expr_t *dce_pvc_fcallx; \/* pvc misctf fcall expr *\/$/;"	m	union:dce2_u	typeref:struct:dce2_u::expr_t	access:public
dce_pvc_stp	./v.h	/^ struct st_t *dce_pvc_stp;    \/* pvc misctf statment *\/$/;"	m	union:dce2_u	typeref:struct:dce2_u::st_t	access:public
dce_qcvalp	./v.h	/^ struct qcval_t *dce_qcvalp;  \/* for qcaf dce, stmts qcval record *\/ $/;"	m	union:dce2_u	typeref:struct:dce2_u::qcval_t	access:public
dce_refu	./v.h	/^ union itd_u dce_refu;        \/* itree\/idp ref location *\/$/;"	m	struct:dcevnt_t	typeref:union:dcevnt_t::itd_u	access:public
dce_repcnt_ofs	./v.h	/^ size_t dce_repcnt_ofs;        \/* offset in per inst idp of counter now *\/   $/;"	m	struct:delctrl_t	access:public
dce_tfunc	./v.h	/^ unsigned dce_tfunc : 1;      \/* T => for pvc dce func. not task *\/$/;"	m	struct:dcevnt_t	access:public
dce_typ	./v.h	/^ unsigned dce_typ : 8;        \/* itree location and action match type *\/ $/;"	m	struct:dcevnt_t	access:public
dce_u	./v.h	/^union dce_u {$/;"	u
dce_u::dce_cbp	./v.h	/^ struct cbrec_t *dce_cbp;     \/* cbrec for vpi_ val chg callback *\/$/;"	m	union:dce_u	typeref:struct:dce_u::cbrec_t	access:public
dce_u::dcegrp	./v.h	/^ struct gref_t *dcegrp;       \/* xmr glb that needs normal downward proc. *\/$/;"	m	union:dce_u	typeref:struct:dce_u::gref_t	access:public
dce_u::dcemon_src_xp	./v.h	/^ struct expr_t *dcemon_src_xp;\/* during fill when no idps, save expr here *\/ $/;"	m	union:dce_u	typeref:struct:dce_u::expr_t	access:public
dce_u::pnum	./v.h	/^ int32 pnum;                  \/* for pvc dce tf routine port number *\/     $/;"	m	union:dce_u	access:public
dce_u::tskp	./v.h	/^ struct task_t *tskp;         \/* for dmpv dce, task variable in *\/$/;"	m	union:dce_u	typeref:struct:dce_u::task_t	access:public
dce_xmrtyp	./v.h	/^ unsigned dce_xmrtyp : 2;     \/* indicates if xmr and type *\/ $/;"	m	struct:dcevnt_t	access:public
dceauxlst_t	./v.h	/^struct dceauxlst_t {$/;"	s
dceauxlst_t::dclnxt	./v.h	/^ struct dceauxlst_t *dclnxt;$/;"	m	struct:dceauxlst_t	typeref:struct:dceauxlst_t::dceauxlst_t	access:public
dceauxlst_t::ldcep	./v.h	/^ struct dcevnt_t *ldcep;$/;"	m	struct:dceauxlst_t	typeref:struct:dceauxlst_t::dcevnt_t	access:public
dceauxlstlst_t	./v.h	/^struct dceauxlstlst_t {$/;"	s
dceauxlstlst_t::dcelstlstnxt	./v.h	/^ struct dceauxlstlst_t *dcelstlstnxt;$/;"	m	struct:dceauxlstlst_t	typeref:struct:dceauxlstlst_t::dceauxlstlst_t	access:public
dceauxlstlst_t::dcelsttab	./v.h	/^ struct dceauxlst_t **dcelsttab; \/* peri(\/bit) tab of ptrs to dce lsts *\/$/;"	m	struct:dceauxlstlst_t	typeref:struct:dceauxlstlst_t::dceauxlst_t	access:public
dcegrp	./v.h	/^ struct gref_t *dcegrp;       \/* xmr glb that needs normal downward proc. *\/$/;"	m	union:dce_u	typeref:struct:dce_u::gref_t	access:public
dcelist_needs_range	./v_bbgen2.c	/^static int32 dcelist_needs_range(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
dcelst	./v.h	/^ struct dcevnt_t *dcelst;     \/* fixed list of dce\/monit events *\/$/;"	m	struct:net_t	typeref:struct:net_t::dcevnt_t	access:public
dcelstlstnxt	./v.h	/^ struct dceauxlstlst_t *dcelstlstnxt;$/;"	m	struct:dceauxlstlst_t	typeref:struct:dceauxlstlst_t::dceauxlstlst_t	access:public
dcelsttab	./v.h	/^ struct dceauxlst_t **dcelsttab; \/* peri(\/bit) tab of ptrs to dce lsts *\/$/;"	m	struct:dceauxlstlst_t	typeref:struct:dceauxlstlst_t::dceauxlst_t	access:public
dcemon_src_xp	./v.h	/^ struct expr_t *dcemon_src_xp;\/* during fill when no idps, save expr here *\/ $/;"	m	union:dce_u	typeref:struct:dce_u::expr_t	access:public
dcenxt	./v.h	/^ struct dcevnt_t *dcenxt;     \/* next on wire dcelst *\/$/;"	m	struct:dcevnt_t	typeref:struct:dcevnt_t::dcevnt_t	access:public
dcep	./igen.h	/^ struct dcevnt_t *dcep;      \/* the dcep that created this info *\/$/;"	m	struct:dce_expr_info_t	typeref:struct:dce_expr_info_t::dcevnt_t	access:public
dcep_lst_xmrp	./v.h	/^ struct dceauxlst_t *dcep_lst_xmrp;  \/* dcep with dce_xprs xmr to this mod *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::dceauxlst_t	access:public
dcep_ref_mod	./v_prp2.c	/^static struct mod_t *dcep_ref_mod(struct dcevnt_t *dcep)$/;"	f	file:	signature:(struct dcevnt_t *dcep)
dcep_ref_mod_runtime	./v_vpi.c	/^static struct mod_t *dcep_ref_mod_runtime(struct dcevnt_t *dcep)$/;"	f	file:	signature:(struct dcevnt_t *dcep)
dces_blt	./v.h	/^ unsigned dces_blt : 1;       \/* T => dces already built for this monit *\/$/;"	m	struct:monaux_t	access:public
dceschd_tev_ofs	./v.h	/^ size_t dceschd_tev_ofs;       \/* offset of the i tev ndx sched tev for dce *\/$/;"	m	struct:delctrl_t	access:public
dcetable	./v.h	/^ struct dce_info_t *dcetable; \/* dce table for linked dces *\/$/;"	m	struct:net_t	typeref:struct:net_t::dce_info_t	access:public
dceu	./v.h	/^ union dce_u dceu;            \/* for xmr - propagation gref info *\/$/;"	m	struct:dcevnt_t	typeref:union:dcevnt_t::dce_u	access:public
dceu2	./v.h	/^ union dce2_u dceu2;          \/* nil if monit else fmon record *\/$/;"	m	struct:dcevnt_t	typeref:union:dcevnt_t::dce2_u	access:public
dcevnt_t	./v.h	/^struct dcevnt_t {$/;"	s
dcevnt_t::dce_1inst	./v.h	/^ unsigned dce_1inst : 1;      \/* one instance form must match match itp *\/$/;"	m	struct:dcevnt_t	access:public
dcevnt_t::dce_edge	./v.h	/^ unsigned dce_edge : 1;       \/* T => need edge filtering  *\/$/;"	m	struct:dcevnt_t	access:public
dcevnt_t::dce_edgval	./v.h	/^ unsigned dce_edgval : 8;     \/* edge signature for filter (only pos\/neg) *\/$/;"	m	struct:dcevnt_t	access:public
dcevnt_t::dce_expr	./v.h	/^ struct dce_expr_t *dce_expr; \/* for edge where need expr old val and expr *\/$/;"	m	struct:dcevnt_t	typeref:struct:dcevnt_t::dce_expr_t	access:public
dcevnt_t::dce_matchu	./v.h	/^ union itd_u dce_matchu;      \/* for 1 inst. must match this itree target *\/$/;"	m	struct:dcevnt_t	typeref:union:dcevnt_t::itd_u	access:public
dcevnt_t::dce_ndx	./v.h	/^ int32 dce_ndx;               \/* dce ndx from the table for +load_solib *\/$/;"	m	struct:dcevnt_t	access:public
dcevnt_t::dce_nomonstren	./v.h	/^ unsigned dce_nomonstren : 1; \/* T => ignore stren for monit of stren *\/$/;"	m	struct:dcevnt_t	access:public
dcevnt_t::dce_np	./v.h	/^ struct net_t *dce_np;        \/* net this dce is triggerd by *\/$/;"	m	struct:dcevnt_t	typeref:struct:dcevnt_t::net_t	access:public
dcevnt_t::dce_off	./v.h	/^ byte dce_off;                \/* for byte code PLI\/monitor need dce on\/off *\/ $/;"	m	struct:dcevnt_t	access:public
dcevnt_t::dce_refu	./v.h	/^ union itd_u dce_refu;        \/* itree\/idp ref location *\/$/;"	m	struct:dcevnt_t	typeref:union:dcevnt_t::itd_u	access:public
dcevnt_t::dce_tfunc	./v.h	/^ unsigned dce_tfunc : 1;      \/* T => for pvc dce func. not task *\/$/;"	m	struct:dcevnt_t	access:public
dcevnt_t::dce_typ	./v.h	/^ unsigned dce_typ : 8;        \/* itree location and action match type *\/ $/;"	m	struct:dcevnt_t	access:public
dcevnt_t::dce_xmrtyp	./v.h	/^ unsigned dce_xmrtyp : 2;     \/* indicates if xmr and type *\/ $/;"	m	struct:dcevnt_t	access:public
dcevnt_t::dcenxt	./v.h	/^ struct dcevnt_t *dcenxt;     \/* next on wire dcelst *\/$/;"	m	struct:dcevnt_t	typeref:struct:dcevnt_t::dcevnt_t	access:public
dcevnt_t::dceu	./v.h	/^ union dce_u dceu;            \/* for xmr - propagation gref info *\/$/;"	m	struct:dcevnt_t	typeref:union:dcevnt_t::dce_u	access:public
dcevnt_t::dceu2	./v.h	/^ union dce2_u dceu2;          \/* nil if monit else fmon record *\/$/;"	m	struct:dcevnt_t	typeref:union:dcevnt_t::dce2_u	access:public
dcevnt_t::dci1	./v.h	/^ int32 dci1;                  \/* for range dci2 union for IS param *\/ $/;"	m	struct:dcevnt_t	access:public
dcevnt_t::dci2	./v.h	/^ union intptr_u dci2;         \/* for IS param union rng ptr (dci1 = -2) *\/$/;"	m	struct:dcevnt_t	typeref:union:dcevnt_t::intptr_u	access:public
dcevnt_t::didp	./v.h	/^ struct dce_idp_info_t *didp; \/* idp offset information *\/$/;"	m	struct:dcevnt_t	typeref:struct:dcevnt_t::dce_idp_info_t	access:public
dcevnt_t::iact_idp	./v.h	/^ t_midat *iact_idp;           \/* for per inst. iact need inst. to match *\/$/;"	m	struct:dcevnt_t	access:public
dcevnt_t::is_fmon	./v.h	/^ unsigned is_fmon : 1;        \/* monitor is fmon *\/$/;"	m	struct:dcevnt_t	access:public
dcevnt_t::is_loaded	./v.h	/^ unsigned is_loaded : 1;      \/* T => dce is loaded (passed) to wrapper *\/$/;"	m	struct:dcevnt_t	access:public
dcevnt_t::is_printed	./v.h	/^ unsigned is_printed : 1;     \/* T => compiled global is printed *\/$/;"	m	struct:dcevnt_t	access:public
dcevnt_t::merged	./v.h	/^ unsigned merged : 1;         \/* T => dce has been merged *\/$/;"	m	struct:dcevnt_t	access:public
dcevnt_t::merged_count	./v.h	/^ int32 merged_count;            \/* number of merged dces *\/$/;"	m	struct:dcevnt_t	access:public
dcevnt_t::merged_dces	./v.h	/^ struct dcevnt_t **merged_dces; \/* dces on list merged into this one *\/$/;"	m	struct:dcevnt_t	typeref:struct:dcevnt_t::dcevnt_t	access:public
dcevnt_t::nd_chg_to_idp	./v.h	/^ unsigned nd_chg_to_idp : 1;  \/* T => in src monit dce add, chg to idp later *\/$/;"	m	struct:dcevnt_t	access:public
dcevnt_t::pli_prevval	./v.h	/^ union pck_u pli_prevval;     \/* storage for wire or range for PLI only *\/$/;"	m	struct:dcevnt_t	typeref:union:dcevnt_t::pck_u	access:public
dcevnt_t::prevval_ofs	./v.h	/^ size_t prevval_ofs;$/;"	m	struct:dcevnt_t	access:public
dcevnt_t::st_dctrl	./v.h	/^ struct delctrl_t *st_dctrl;  \/* statement's delay control record *\/$/;"	m	struct:dcevnt_t	typeref:struct:dcevnt_t::delctrl_t	access:public
dci1	./v.h	/^ int32 dci1;                  \/* for range dci2 union for IS param *\/ $/;"	m	struct:dcevnt_t	access:public
dci2	./v.h	/^ union intptr_u dci2;         \/* for IS param union rng ptr (dci1 = -2) *\/$/;"	m	struct:dcevnt_t	typeref:union:dcevnt_t::intptr_u	access:public
dcl_1undecl_wires	./v_src.c	/^static void dcl_1undecl_wires(struct sy_t *gate_syp, struct expr_t *ndp)$/;"	f	file:	signature:(struct sy_t *gate_syp, struct expr_t *ndp)
dclnxt	./v.h	/^ struct dceauxlst_t *dclnxt;$/;"	m	struct:dceauxlst_t	typeref:struct:dceauxlst_t::dceauxlst_t	access:public
dctrl_array	./v.h	/^ struct delctrl_t **dctrl_array; \/* array of dctrl events *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::delctrl_t	access:public
dctrl_goto	./v.h	/^ unsigned dctrl_goto : 1;     \/* T => this is next after dctrl chain goto *\/ $/;"	m	struct:st_t	access:public
dctrl_ndx	./v.h	/^ int32 dctrl_ndx;             \/* delay control merged ndx (always @ blocks) *\/$/;"	m	struct:ctev_t	access:public
dctrl_size	./v.h	/^ int32 dctrl_size;            \/* size of dctrl events array *\/$/;"	m	struct:mod_t	access:public
dctyp	./v.h	/^ unsigned dctyp : 8;          \/* event or delay *\/$/;"	m	struct:delctrl_t	access:public
decl_id_inexpr	./v_src2.c	/^static int32 decl_id_inexpr(struct expr_t *ndp, struct expridtab_t *xidp)$/;"	f	file:	signature:(struct expr_t *ndp, struct expridtab_t *xidp)
decl_idp_locals_	./cvmacros.h	180;"	d
decl_taskvar	./v_src.c	/^static struct net_t *decl_taskvar(word32 wtyp, struct expr_t *x1,$/;"	f	file:	signature:(word32 wtyp, struct expr_t *x1, struct expr_t *x2)
decl_undecl_cell_and_conta_conns	./v_src.c	/^static void decl_undecl_cell_and_conta_conns(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
decl_wirereg	./v_src.c	/^static struct net_t *decl_wirereg(word32 wtyp, struct expr_t *x1,$/;"	f	file:	signature:(word32 wtyp, struct expr_t *x1, struct expr_t *x2, struct sy_t *dsyp)
decompnum_to_str	./v_ms.c	/^static char *decompnum_to_str(char *s, char *digs, int32 base, int32 width)$/;"	f	file:	signature:(char *s, char *digs, int32 base, int32 width)
decompose_fg_non_leal_wide_amode_tns	./v_bbopt.c	/^static void decompose_fg_non_leal_wide_amode_tns(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
def_is_immed_pred	./v_bbopt.c	/^static int32 def_is_immed_pred(struct insn_t *def_ip, struct bblk_t *bbp)$/;"	f	file:	signature:(struct insn_t *def_ip, struct bblk_t *bbp)
defilst	./igen.h	/^ struct defilst_t *defilst;   \/* lst of live defs that can reach deflst insn *\/$/;"	m	union:i_extrainfo_u	typeref:struct:i_extrainfo_u::defilst_t	access:public
defilst_t	./igen.h	/^struct defilst_t {$/;"	s
defilst_t::defilstnxt	./igen.h	/^ struct defilst_t *defilstnxt;$/;"	m	struct:defilst_t	typeref:struct:defilst_t::defilst_t	access:public
defilst_t::defip	./igen.h	/^ struct insn_t *defip;$/;"	m	struct:defilst_t	typeref:struct:defilst_t::insn_t	access:public
defilstnxt	./igen.h	/^ struct defilst_t *defilstnxt;$/;"	m	struct:defilst_t	typeref:struct:defilst_t::defilst_t	access:public
defip	./igen.h	/^ struct insn_t *defip;$/;"	m	struct:defilst_t	typeref:struct:defilst_t::insn_t	access:public
deflst_added	./igen.h	/^ unsigned deflst_added : 1;   \/* T => phi already added for current tn *\/$/;"	m	struct:bblk_t	access:public
deflst_insn_tostr	./v_asmlnk.c	/^static char *deflst_insn_tostr(char *s, struct insn_t *ip)$/;"	f	file:	signature:(char *s, struct insn_t *ip)
deflst_processed	./igen.h	/^ unsigned deflst_processed : 1;\/* T => already processed for current tn *\/$/;"	m	struct:bblk_t	access:public
del_all_brkpts	./v_dbg2.c	/^static void del_all_brkpts(void)$/;"	f	file:	signature:(void)
del_all_disps	./v_dbg2.c	/^static void del_all_disps(void)$/;"	f	file:	signature:(void)
del_brkpt_num	./v_dbg2.c	/^static void del_brkpt_num(int32 bpnum)$/;"	f	file:	signature:(int32 bpnum)
del_disp_num	./v_dbg2.c	/^static void del_disp_num(void)$/;"	f	file:	signature:(void)
del_rep	./v.h	/^ unsigned del_rep : 5;        \/* type of delay *\/$/;"	m	struct:ctev_t	access:public
del_u	./v.h	/^union del_u {$/;"	u
del_u::d16v	./v.h	/^ word64 *d16v;                \/* 16 constant IS form *\/$/;"	m	union:del_u	access:public
del_u::d1v	./v.h	/^ word64 *d1v;                 \/* 1 constant (non 0) delay value *\/$/;"	m	union:del_u	access:public
del_u::d1x	./v.h	/^ struct expr_t *d1x;          \/* 1 delay expr. *\/$/;"	m	union:del_u	typeref:struct:del_u::expr_t	access:public
del_u::d4v	./v.h	/^ word64 *d4v;                 \/* 4 value constant delay table *\/$/;"	m	union:del_u	access:public
del_u::d4x	./v.h	/^ struct expr_t **d4x;         \/* array of 4 expression ptrs *\/$/;"	m	union:del_u	typeref:struct:del_u::expr_t	access:public
del_u::dis16v	./v.h	/^ word64 *dis16v;              \/* 16 constant (IS form) delay *\/$/;"	m	union:del_u	access:public
del_u::dis16v1	./v.h	/^ byte *dis16v1;               \/* 16 constant IS fits in one byte *\/$/;"	m	union:del_u	access:public
del_u::dis16v2	./v.h	/^ hword *dis16v2;              \/* 16 constant IS fits in two bytes *\/$/;"	m	union:del_u	access:public
del_u::dis1v	./v.h	/^ word64 *dis1v;               \/* 1 constant (IS form maybe some 0) delay *\/$/;"	m	union:del_u	access:public
del_u::dis1v1	./v.h	/^ byte *dis1v1;                \/* 1 constant IS fits in one byte *\/$/;"	m	union:del_u	access:public
del_u::dis1v2	./v.h	/^ hword *dis1v2;               \/* 1 constant IS fits in two byte *\/$/;"	m	union:del_u	access:public
del_u::dis4v	./v.h	/^ word64 *dis4v;               \/* 4 constant (IS form maybe some 0) delay *\/$/;"	m	union:del_u	access:public
del_u::dis4v1	./v.h	/^ byte *dis4v1;                \/* 4 constant IS fits in one byte *\/$/;"	m	union:del_u	access:public
del_u::dis4v2	./v.h	/^ hword *dis4v2;               \/* 4 constant IS fits in two byte *\/$/;"	m	union:del_u	access:public
del_u::pb_pthdst	./v.h	/^ struct pthdst_t **pb_pthdst; \/* per bit path dest. ptr to same dst. src *\/$/;"	m	union:del_u	typeref:struct:del_u::pthdst_t	access:public
del_u::pdels	./v.h	/^ struct paramlst_t *pdels;    \/* original compile time # delay form *\/$/;"	m	union:del_u	typeref:struct:del_u::paramlst_t	access:public
delay	./v.h	/^ word64 delay;                \/* constant delay value -1 for variable *\/$/;"	m	struct:tev_t	access:public
delay_cb_register	./v_vpi.c	/^static vpiHandle delay_cb_register(p_cb_data datp) $/;"	f	file:	signature:(p_cb_data datp)
delayed_datx	./v.h	/^ struct expr_t *delayed_datx; \/* optional setuphld\/recrem delayed data var x *\/$/;"	m	struct:tchk_t	typeref:struct:tchk_t::expr_t	access:public
delayed_mipd	./v.h	/^ word32 delayed_mipd;          \/* T - 2nd after schedule from ev process *\/$/;"	m	struct:nchglst_t	access:public
delayed_refx	./v.h	/^ struct expr_t *delayed_refx; \/* optional setuphld\/recrem delayed ref var x *\/$/;"	m	struct:tchk_t	typeref:struct:tchk_t::expr_t	access:public
delctrl_t	./v.h	/^struct delctrl_t {$/;"	s
delctrl_t::actionst	./v.h	/^ struct st_t *actionst;       \/* delctrl stmt list *\/$/;"	m	struct:delctrl_t	typeref:struct:delctrl_t::st_t	access:public
delctrl_t::d_edgval	./v.h	/^ unsigned d_edgval : 8;         \/* edge signature for filter (only pos\/neg) *\/$/;"	m	struct:delctrl_t	access:public
delctrl_t::d_gt_one	./v.h	/^ unsigned d_gt_one : 2;         \/* == 2 has greater than one trigger net *\/$/;"	m	struct:delctrl_t	access:public
delctrl_t::d_has_edge	./v.h	/^ unsigned d_has_edge : 1;       \/* T => has posedge\/negedge *\/$/;"	m	struct:delctrl_t	access:public
delctrl_t::d_has_xmr	./v.h	/^ unsigned d_has_xmr : 1;        \/* T => xmr edge *\/ $/;"	m	struct:delctrl_t	access:public
delctrl_t::d_only_edges	./v.h	/^ unsigned d_only_edges : 2;     \/* T => only pos\/edge edges *\/$/;"	m	struct:delctrl_t	access:public
delctrl_t::d_only_scalars	./v.h	/^ unsigned d_only_scalars : 1;   \/* T => only scalar nets *\/$/;"	m	struct:delctrl_t	access:public
delctrl_t::d_only_vectors	./v.h	/^ unsigned d_only_vectors : 1;   \/* T => only vectored nets *\/$/;"	m	struct:delctrl_t	access:public
delctrl_t::d_same_edge	./v.h	/^ unsigned d_same_edge : 1;      \/* edge (pos\/neg) is the same *\/$/;"	m	struct:delctrl_t	access:public
delctrl_t::d_uses_nets_on_rhs	./v.h	/^ unsigned d_uses_nets_on_rhs : 1;  \/* T => edge uses some nets on rhs body *\/$/;"	m	struct:delctrl_t	access:public
delctrl_t::dc_delrep	./v.h	/^ unsigned dc_delrep : 5;      \/* normal gca delay type *\/$/;"	m	struct:delctrl_t	access:public
delctrl_t::dc_du	./v.h	/^ union del_u dc_du;           \/* normal delay union (also used for ev ctrl) *\/$/;"	m	struct:delctrl_t	typeref:union:delctrl_t::del_u	access:public
delctrl_t::dc_iact	./v.h	/^ unsigned dc_iact : 1;        \/* iact delay control *\/ $/;"	m	struct:delctrl_t	access:public
delctrl_t::dc_id_ndx	./v.h	/^ int32 dc_id_ndx;               \/* index (id)  *\/$/;"	m	struct:delctrl_t	access:public
delctrl_t::dc_is_always_comb_latch	./v.h	/^ unsigned dc_is_always_comb_latch : 1; \/* T => always_comb\/always_latch *\/$/;"	m	struct:delctrl_t	access:public
delctrl_t::dc_is_always_ff	./v.h	/^ unsigned dc_is_always_ff : 1;         \/* T => always_ff *\/$/;"	m	struct:delctrl_t	access:public
delctrl_t::dc_nblking	./v.h	/^ unsigned dc_nblking : 1;     \/* T => delay control is non blocking form *\/$/;"	m	struct:delctrl_t	access:public
delctrl_t::dce_repcnt_ofs	./v.h	/^ size_t dce_repcnt_ofs;        \/* offset in per inst idp of counter now *\/   $/;"	m	struct:delctrl_t	access:public
delctrl_t::dceschd_tev_ofs	./v.h	/^ size_t dceschd_tev_ofs;       \/* offset of the i tev ndx sched tev for dce *\/$/;"	m	struct:delctrl_t	access:public
delctrl_t::dctyp	./v.h	/^ unsigned dctyp : 8;          \/* event or delay *\/$/;"	m	struct:delctrl_t	access:public
delctrl_t::head_ctevp	./v.h	/^ struct ctev_t *head_ctevp;     \/* compile time info building static tev_t *\/$/;"	m	struct:delctrl_t	typeref:struct:delctrl_t::ctev_t	access:public
delctrl_t::head_dctp	./v.h	/^ struct delctrl_t *head_dctp;   \/* head dctp this is merged into *\/$/;"	m	struct:delctrl_t	typeref:struct:delctrl_t::delctrl_t	access:public
delctrl_t::implicit_evxlst	./v.h	/^ unsigned implicit_evxlst : 1;\/* special all rhs's @(*) ev var-ndx list *\/ $/;"	m	struct:delctrl_t	access:public
delctrl_t::is_always	./v.h	/^ unsigned is_always : 1;        \/* T => used as always block trigger *\/ $/;"	m	struct:delctrl_t	access:public
delctrl_t::is_merged	./v.h	/^ unsigned is_merged : 1;        \/* T => has been merged into head dctl *\/ $/;"	m	struct:delctrl_t	access:public
delctrl_t::merged_dctp	./v.h	/^ struct delctrl_t *merged_dctp; \/* list of merged dctp off of head *\/$/;"	m	struct:delctrl_t	typeref:struct:delctrl_t::delctrl_t	access:public
delctrl_t::needs_thread	./v.h	/^ unsigned needs_thread : 1;     \/* T => always block uses thread *\/ $/;"	m	struct:delctrl_t	access:public
delctrl_t::nested_dctrl	./v.h	/^ unsigned nested_dctrl : 1;     \/* T => has nested dctrl *\/ $/;"	m	struct:delctrl_t	access:public
delctrl_t::repcntx	./v.h	/^ struct expr_t *repcntx;      \/* for rhs ev ctrl repeat form, rep cnt expr *\/$/;"	m	struct:delctrl_t	typeref:struct:delctrl_t::expr_t	access:public
delctrl_t::xprop_nb_actionst	./v.h	/^ struct st_t *xprop_nb_actionst;    \/* nb xprop copy action list *\/$/;"	m	struct:delctrl_t	typeref:struct:delctrl_t::st_t	access:public
delctrl_t::xprop_xedge_actionst	./v.h	/^ struct st_t *xprop_xedge_actionst; \/* xedge action list *\/$/;"	m	struct:delctrl_t	typeref:struct:delctrl_t::st_t	access:public
delete_msg	./v_dbg.c	/^static char *delete_msg[] = { $/;"	v	file:
dellst_err	./v_sdf.c	/^static void dellst_err(char *formnam, char *formnam2)$/;"	f	file:	signature:(char *formnam, char *formnam2)
delrm_rebld_npp_list	./v_prp.c	/^static void delrm_rebld_npp_list(struct net_t *np, int32 num_npps)$/;"	f	file:	signature:(struct net_t *np, int32 num_npps)
delx_to_deltim	./v_del.c	/^static word64 delx_to_deltim(struct expr_t *dxp, struct xstk_t *xsp)$/;"	f	file:	signature:(struct expr_t *dxp, struct xstk_t *xsp)
deslbnam	./v.h	/^ char *deslbnam;          \/* name of config design library *\/$/;"	m	struct:cfgdes_t	access:public
deslbp	./v.h	/^ struct cfglib_t *deslbp; \/* ptr to config design library *\/$/;"	m	struct:cfgdes_t	typeref:struct:cfgdes_t::cfglib_t	access:public
desnxt	./v.h	/^ struct cfgdes_t *desnxt;  $/;"	m	struct:cfgdes_t	typeref:struct:cfgdes_t::cfgdes_t	access:public
determine_2memref_class	./v_bbopt.c	/^static int32 determine_2memref_class(struct insn_t *ip)$/;"	f	file:	signature:(struct insn_t *ip)
dfi	./v.h	/^ int32 dfi;$/;"	m	struct:undef_t	access:public
dfp_allmodinsts_split	./v.h	/^ unsigned dfp_allmodinsts_split : 1; \/* T => defparam to mod - must splt all *\/$/;"	m	struct:mod_t	access:public
dfp_done	./v.h	/^ unsigned dfp_done : 1;       \/* during splitting, done with this one *\/$/;"	m	struct:dfparam_t	access:public
dfp_gblk_in	./v.h	/^ struct genblk_t *dfp_gblk_in; \/* for local def params, gblk in *\/ $/;"	m	struct:dfparam_t	typeref:struct:dfparam_t::genblk_t	access:public
dfp_gblk_in_pth	./v.h	/^ unsigned dfp_gblk_in_pth : 1;\/* T => defparam has gen blk in pth (down) *\/$/;"	m	struct:dfparam_t	access:public
dfp_gitems	./v.h	/^ struct genitem_t *dfp_gitems; \/* defparams appearing in gen blocks *\/$/;"	m	struct:genblk_t	typeref:struct:genblk_t::genitem_t	access:public
dfp_grp	./v.h	/^ struct gref_t *dfp_grp;      \/* for non local defparams, assoc. lhs gref *\/$/;"	m	struct:dfparam_t	typeref:struct:dfparam_t::gref_t	access:public
dfp_has_idents	./v.h	/^ unsigned dfp_has_idents : 1; \/* T => identical to other rooted defparam *\/$/;"	m	struct:dfparam_t	access:public
dfp_in_gen	./v.h	/^ unsigned dfp_in_gen : 1;     \/* T => defparam inside gen blk (always down) *\/$/;"	m	struct:dfparam_t	access:public
dfp_in_mdp	./v.h	/^ struct mod_t *dfp_in_mdp;    \/* module defparam stmt in *\/ $/;"	m	struct:dfparam_t	typeref:struct:dfparam_t::mod_t	access:public
dfp_local	./v.h	/^ unsigned dfp_local : 1;      \/* T => defparam is local or in top mod *\/$/;"	m	struct:dfparam_t	access:public
dfp_mustsplit	./v.h	/^ unsigned dfp_mustsplit : 1;  \/* T = mst split rng cat lhs dest. param *\/$/;"	m	struct:dfparam_t	access:public
dfp_rooted	./v.h	/^ unsigned dfp_rooted : 1;     \/* T => rooted lhs gref *\/$/;"	m	struct:dfparam_t	access:public
dfp_was_in_gen	./v.h	/^ unsigned dfp_was_in_gen : 1; \/* T => for 2nd pass in gblk history *\/$/;"	m	struct:dfparam_t	access:public
dfparam_t	./v.h	/^struct dfparam_t {$/;"	s
dfparam_t::dfp_done	./v.h	/^ unsigned dfp_done : 1;       \/* during splitting, done with this one *\/$/;"	m	struct:dfparam_t	access:public
dfparam_t::dfp_gblk_in	./v.h	/^ struct genblk_t *dfp_gblk_in; \/* for local def params, gblk in *\/ $/;"	m	struct:dfparam_t	typeref:struct:dfparam_t::genblk_t	access:public
dfparam_t::dfp_gblk_in_pth	./v.h	/^ unsigned dfp_gblk_in_pth : 1;\/* T => defparam has gen blk in pth (down) *\/$/;"	m	struct:dfparam_t	access:public
dfparam_t::dfp_grp	./v.h	/^ struct gref_t *dfp_grp;      \/* for non local defparams, assoc. lhs gref *\/$/;"	m	struct:dfparam_t	typeref:struct:dfparam_t::gref_t	access:public
dfparam_t::dfp_has_idents	./v.h	/^ unsigned dfp_has_idents : 1; \/* T => identical to other rooted defparam *\/$/;"	m	struct:dfparam_t	access:public
dfparam_t::dfp_in_gen	./v.h	/^ unsigned dfp_in_gen : 1;     \/* T => defparam inside gen blk (always down) *\/$/;"	m	struct:dfparam_t	access:public
dfparam_t::dfp_in_mdp	./v.h	/^ struct mod_t *dfp_in_mdp;    \/* module defparam stmt in *\/ $/;"	m	struct:dfparam_t	typeref:struct:dfparam_t::mod_t	access:public
dfparam_t::dfp_local	./v.h	/^ unsigned dfp_local : 1;      \/* T => defparam is local or in top mod *\/$/;"	m	struct:dfparam_t	access:public
dfparam_t::dfp_mustsplit	./v.h	/^ unsigned dfp_mustsplit : 1;  \/* T = mst split rng cat lhs dest. param *\/$/;"	m	struct:dfparam_t	access:public
dfparam_t::dfp_rooted	./v.h	/^ unsigned dfp_rooted : 1;     \/* T => rooted lhs gref *\/$/;"	m	struct:dfparam_t	access:public
dfparam_t::dfp_was_in_gen	./v.h	/^ unsigned dfp_was_in_gen : 1; \/* T => for 2nd pass in gblk history *\/$/;"	m	struct:dfparam_t	access:public
dfparam_t::dfpfnam_ind	./v.h	/^ unsigned dfpfnam_ind : 16;$/;"	m	struct:dfparam_t	access:public
dfparam_t::dfpiis	./v.h	/^ int32 *dfpiis;               \/* array of in its indices for path of defp *\/$/;"	m	struct:dfparam_t	access:public
dfparam_t::dfplin_cnt	./v.h	/^ int32 dfplin_cnt;$/;"	m	struct:dfparam_t	access:public
dfparam_t::dfpnxt	./v.h	/^ struct dfparam_t *dfpnxt;$/;"	m	struct:dfparam_t	typeref:struct:dfparam_t::dfparam_t	access:public
dfparam_t::dfptskp	./v.h	/^ struct task_t *dfptskp;      \/* if non NULL, task target declared in *\/$/;"	m	struct:dfparam_t	typeref:struct:dfparam_t::task_t	access:public
dfparam_t::dfpxlhs	./v.h	/^ struct expr_t *dfpxlhs;$/;"	m	struct:dfparam_t	typeref:struct:dfparam_t::expr_t	access:public
dfparam_t::dfpxrhs	./v.h	/^ struct expr_t *dfpxrhs;$/;"	m	struct:dfparam_t	typeref:struct:dfparam_t::expr_t	access:public
dfparam_t::gdfpnam	./v.h	/^ char *gdfpnam;               \/* lhs name from gref *\/$/;"	m	struct:dfparam_t	access:public
dfparam_t::idntmastdfp	./v.h	/^ struct dfparam_t *idntmastdfp;\/* ptr to master if >1 with identical path *\/$/;"	m	struct:dfparam_t	typeref:struct:dfparam_t::dfparam_t	access:public
dfparam_t::idntnxt	./v.h	/^ struct dfparam_t *idntnxt;   \/* list from master of identicals path *\/$/;"	m	struct:dfparam_t	typeref:struct:dfparam_t::dfparam_t	access:public
dfparam_t::indfp_itp	./v.h	/^ struct itree_t *indfp_itp;   \/* for rooted, itree place rhs evaled in *\/ $/;"	m	struct:dfparam_t	typeref:struct:dfparam_t::itree_t	access:public
dfparam_t::last_dfpi	./v.h	/^ int32 last_dfpi;             \/* last element of path *\/$/;"	m	struct:dfparam_t	access:public
dfparam_t::rooted_dfps	./v.h	/^ struct dfparam_t *rooted_dfps;\/* work for converting downward to rooted *\/$/;"	m	struct:dfparam_t	typeref:struct:dfparam_t::dfparam_t	access:public
dfparam_t::targsyp	./v.h	/^ struct sy_t *targsyp;        \/* target symbol from gref *\/$/;"	m	struct:dfparam_t	typeref:struct:dfparam_t::sy_t	access:public
dfpfnam_ind	./v.h	/^ unsigned dfpfnam_ind : 16;$/;"	m	struct:dfparam_t	access:public
dfpiis	./v.h	/^ int32 *dfpiis;               \/* array of in its indices for path of defp *\/$/;"	m	struct:dfparam_t	access:public
dfplin_cnt	./v.h	/^ int32 dfplin_cnt;$/;"	m	struct:dfparam_t	access:public
dfploc_cmp	./v_genfx.c	/^static int32 dfploc_cmp(const void *dfpp1, const void *dfpp2)$/;"	f	file:	signature:(const void *dfpp1, const void *dfpp2)
dfpnxt	./v.h	/^ struct dfparam_t *dfpnxt;$/;"	m	struct:dfparam_t	typeref:struct:dfparam_t::dfparam_t	access:public
dfptskp	./v.h	/^ struct task_t *dfptskp;      \/* if non NULL, task target declared in *\/$/;"	m	struct:dfparam_t	typeref:struct:dfparam_t::task_t	access:public
dfpxlhs	./v.h	/^ struct expr_t *dfpxlhs;$/;"	m	struct:dfparam_t	typeref:struct:dfparam_t::expr_t	access:public
dfpxrhs	./v.h	/^ struct expr_t *dfpxrhs;$/;"	m	struct:dfparam_t	typeref:struct:dfparam_t::expr_t	access:public
di	./v.h	/^ int32 di;                    \/* for mult. drivers the ndx no. in table *\/$/;"	m	struct:teputv_t	access:public
didp	./v.h	/^ struct dce_idp_info_t *didp; \/* idp offset information *\/$/;"	m	struct:dcevnt_t	typeref:struct:dcevnt_t::dce_idp_info_t	access:public
dig_attrprop_vpiget	./v_vpi2.c	/^static int32 dig_attrprop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
dig_attrstrpop_vpiget	./v_vpi2.c	/^static char *dig_attrstrpop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
dim	./v.h	/^ int32 dim;                    \/* foreach expanded array dimension *\/$/;"	m	struct:for_t	access:public
dim_mult	./v.h	/^ int32 *dim_mult;              \/* multiplier indexed by dimension *\/$/;"	m	struct:mda_t	access:public
dimension	./v.h	/^ int32 dimension;              \/* number of dimensions *\/$/;"	m	struct:mda_t	access:public
direction	./fstapi.h	/^                unsigned char direction; \/* FST_VD_MIN ... FST_VD_MAX *\/$/;"	m	struct:fstHier::__anon18::fstHierVar	access:public
dirfnam	./v.h	/^ char *dirfnam;$/;"	m	struct:mydir_t	access:public
dis16v	./v.h	/^ word64 *dis16v;              \/* 16 constant (IS form) delay *\/$/;"	m	union:del_u	access:public
dis16v1	./v.h	/^ byte *dis16v1;               \/* 16 constant IS fits in one byte *\/$/;"	m	union:del_u	access:public
dis16v2	./v.h	/^ hword *dis16v2;              \/* 16 constant IS fits in two bytes *\/$/;"	m	union:del_u	access:public
dis1v	./v.h	/^ word64 *dis1v;               \/* 1 constant (IS form maybe some 0) delay *\/$/;"	m	union:del_u	access:public
dis1v1	./v.h	/^ byte *dis1v1;                \/* 1 constant IS fits in one byte *\/$/;"	m	union:del_u	access:public
dis1v2	./v.h	/^ hword *dis1v2;               \/* 1 constant IS fits in two byte *\/$/;"	m	union:del_u	access:public
dis4v	./v.h	/^ word64 *dis4v;               \/* 4 constant (IS form maybe some 0) delay *\/$/;"	m	union:del_u	access:public
dis4v1	./v.h	/^ byte *dis4v1;                \/* 4 constant IS fits in one byte *\/$/;"	m	union:del_u	access:public
dis4v2	./v.h	/^ hword *dis4v2;               \/* 4 constant IS fits in two byte *\/$/;"	m	union:del_u	access:public
disable_msg	./v_dbg.c	/^static char *disable_msg[] = { $/;"	v	file:
disp	./igen.h	/^ size_t disp;                   \/* byte offset (above) within tmp name area *\/$/;"	m	struct:amode_t	access:public
disp_itree_idp_path_dpi	./v_dpi.c	/^static char *disp_itree_idp_path_dpi(t_midat *idp, struct task_t *tskp)$/;"	f	file:	signature:(t_midat *idp, struct task_t *tskp)
disp_itree_path_inst	./v_cnv.c	/^static void disp_itree_path_inst(struct itree_t *itp, struct task_t *tskp)$/;"	f	file:	signature:(struct itree_t *itp, struct task_t *tskp)
disp_msg	./v_dbg.c	/^static char *disp_msg[] = { $/;"	v	file:
disp_stvar	./v_cnv.c	/^static void disp_stvar(struct net_t *np, int32 i1, int32 i2)$/;"	f	file:	signature:(struct net_t *np, int32 i1, int32 i2)
disp_toexprline	./v_cnv.c	/^static void disp_toexprline(struct expr_t *axp, int32 dflt_fmt)$/;"	f	file:	signature:(struct expr_t *axp, int32 dflt_fmt)
disp_ufmt_binval	./v_cnv.c	/^static void disp_ufmt_binval(word32 *ap, word32 *bp, int32 blen)$/;"	f	file:	signature:(word32 *ap, word32 *bp, int32 blen)
disp_zfmt_binval	./v_cnv.c	/^static void disp_zfmt_binval(word32 *ap, word32 *bp, int32 blen)$/;"	f	file:	signature:(word32 *ap, word32 *bp, int32 blen)
dispx_t	./v.h	/^struct dispx_t {$/;"	s
dispx_t::dsp_enable	./v.h	/^ unsigned dsp_enable : 1;$/;"	m	struct:dispx_t	access:public
dispx_t::dsp_frc_unsign	./v.h	/^ unsigned dsp_frc_unsign : 1;$/;"	m	struct:dispx_t	access:public
dispx_t::dsp_idp	./v.h	/^ t_midat *dsp_idp;$/;"	m	struct:dispx_t	access:public
dispx_t::dsp_num	./v.h	/^ int32 dsp_num;$/;"	m	struct:dispx_t	access:public
dispx_t::dsp_nxt	./v.h	/^ struct dispx_t *dsp_nxt;$/;"	m	struct:dispx_t	typeref:struct:dispx_t::dispx_t	access:public
dispx_t::dsp_prtfmt	./v.h	/^ int32 dsp_prtfmt;$/;"	m	struct:dispx_t	access:public
dispx_t::dsp_prtwidth	./v.h	/^ int32 dsp_prtwidth;$/;"	m	struct:dispx_t	access:public
dispx_t::dsp_tskp	./v.h	/^ struct task_t *dsp_tskp;$/;"	m	struct:dispx_t	typeref:struct:dispx_t::task_t	access:public
dispx_t::dsp_xp	./v.h	/^ struct expr_t *dsp_xp;$/;"	m	struct:dispx_t	typeref:struct:dispx_t::expr_t	access:public
dlbi	./v.h	/^ int32 dlbi;$/;"	m	struct:xldlvtx_t	access:public
dlitp	./v.h	/^ struct itree_t *dlitp;$/;"	m	struct:xldlvtx_t	typeref:struct:xldlvtx_t::itree_t	access:public
dlnp	./v.h	/^ struct net_t *dlnp;$/;"	m	struct:xldlvtx_t	typeref:struct:xldlvtx_t::net_t	access:public
dltevlst_t	./v.h	/^struct dltevlst_t {$/;"	s
dltevlst_t::telp	./v.h	/^ struct dltevlst_t *telp, *terp;$/;"	m	struct:dltevlst_t	typeref:struct:dltevlst_t::dltevlst_t	access:public
dltevlst_t::terp	./v.h	/^ struct dltevlst_t *telp, *terp;$/;"	m	struct:dltevlst_t	typeref:struct:dltevlst_t::	access:public
dltevlst_t::tevp	./v.h	/^ struct tev_t *tevp;$/;"	m	struct:dltevlst_t	typeref:struct:dltevlst_t::tev_t	access:public
dmp1_dpctrl_rec	./v_ex4.c	/^static void dmp1_dpctrl_rec(struct dpctrl_t *dpcp, struct mod_t *mdp,$/;"	f	file:	signature:(struct dpctrl_t *dpcp, struct mod_t *mdp, struct net_t *np, int32 bi)
dmp1_dpinstel	./v_ex4.c	/^static void dmp1_dpinstel(struct dpinstel_t *dpip)$/;"	f	file:	signature:(struct dpinstel_t *dpip)
dmp1_fildesc	./v_ex4.c	/^static void dmp1_fildesc(struct dp_fildesc_t *fdescp) $/;"	f	file:	signature:(struct dp_fildesc_t *fdescp)
dmp1_gen_item	./v_cnv.c	/^static void dmp1_gen_item(FILE *f, struct genitem_t *gip)$/;"	f	file:	signature:(FILE *f, struct genitem_t *gip)
dmp1_optlst	./v_cnv.c	/^static void dmp1_optlst(struct optlst_t *olp, char *emsg)$/;"	f	file:	signature:(struct optlst_t *olp, char *emsg)
dmp1n_nplst	./v_cnv.c	/^static void dmp1n_nplst(struct mod_t *mdp, struct net_t *np, int32 dces_only)$/;"	f	file:	signature:(struct mod_t *mdp, struct net_t *np, int32 dces_only)
dmp_1bitconta	./v_cnv.c	/^static void dmp_1bitconta(FILE *f, struct gate_t *gp)$/;"	f	file:	signature:(FILE *f, struct gate_t *gp)
dmp_1conta	./v_cnv.c	/^static void dmp_1conta(FILE *f, struct conta_t *cap)$/;"	f	file:	signature:(FILE *f, struct conta_t *cap)
dmp_1fg_predom_trees	./v_bbopt.c	/^static void dmp_1fg_predom_trees(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
dmp_1fg_rev_po_bblktab	./v_bbopt.c	/^static void dmp_1fg_rev_po_bblktab(int32 numblks)$/;"	f	file:	signature:(int32 numblks)
dmp_1gate	./v_cnv.c	/^static void dmp_1gate(FILE *f, struct gate_t *gp, struct gia_aux_t *giap)$/;"	f	file:	signature:(FILE *f, struct gate_t *gp, struct gia_aux_t *giap)
dmp_1initalw	./v_cnv.c	/^static void dmp_1initalw(FILE *f, struct ialst_t *ialp)$/;"	f	file:	signature:(FILE *f, struct ialst_t *ialp)
dmp_1inst	./v_cnv.c	/^static void dmp_1inst(FILE *f, struct inst_t *ip, struct gia_aux_t *giap)$/;"	f	file:	signature:(FILE *f, struct inst_t *ip, struct gia_aux_t *giap)
dmp_1mod_gen_items	./v_cnv.c	/^static void dmp_1mod_gen_items(FILE *f, struct mod_t *mdp, int32 nd_nl) $/;"	f	file:	signature:(FILE *f, struct mod_t *mdp, int32 nd_nl)
dmp_1netdecl	./v_cnv.c	/^static void dmp_1netdecl(FILE *f, struct net_t *np)$/;"	f	file:	signature:(FILE *f, struct net_t *np)
dmp_1portdecl	./v_cnv.c	/^static void dmp_1portdecl(FILE *f, struct expr_t *ndp)$/;"	f	file:	signature:(FILE *f, struct expr_t *ndp)
dmp_arr	./v_cnv.c	/^static void dmp_arr(struct net_t *np, int32 mifr, int32 mito, int32 inum)$/;"	f	file:	signature:(struct net_t *np, int32 mifr, int32 mito, int32 inum)
dmp_arr_insts	./v_cnv.c	/^static void dmp_arr_insts(struct net_t *np, int32 ifr, int32 ito)$/;"	f	file:	signature:(struct net_t *np, int32 ifr, int32 ito)
dmp_arr_unfolded_ndx_lst	./v_cnv.c	/^static void dmp_arr_unfolded_ndx_lst(FILE *f, struct expr_t *ndp)$/;"	f	file:	signature:(FILE *f, struct expr_t *ndp)
dmp_bblk_insns	./v_cvcms.c	/^static void dmp_bblk_insns(struct bblk_t *bbp, struct flowg_t *fgp)$/;"	f	file:	signature:(struct bblk_t *bbp, struct flowg_t *fgp)
dmp_buf_t	./v.h	/^struct dmp_buf_t {$/;"	s
dmp_buf_t::arr_flat_ndx	./v.h	/^ int32 arr_flat_ndx;        \/* array index for array dumping *\/$/;"	m	struct:dmp_buf_t	access:public
dmp_buf_t::bval	./v.h	/^ word32 bval;               \/* <= WBITS bpart value *\/$/;"	m	struct:dmp_buf_t	access:public
dmp_buf_t::dvsu	./v.h	/^ union dv_storage_u dvsu;   \/* storage for apart or alloc buf *\/$/;"	m	struct:dmp_buf_t	typeref:union:dmp_buf_t::dv_storage_u	access:public
dmp_buf_t::idcode	./v.h	/^ int32 idcode;              \/* idcode *\/$/;"	m	struct:dmp_buf_t	access:public
dmp_buf_t::np	./v.h	/^ struct net_t *np;          \/* net it is dumping *\/$/;"	m	struct:dmp_buf_t	typeref:struct:dmp_buf_t::net_t	access:public
dmp_case	./v_cnv.c	/^static void dmp_case(FILE *f, struct st_t *stp)$/;"	f	file:	signature:(FILE *f, struct st_t *stp)
dmp_case_dflt	./v_cnv.c	/^static void dmp_case_dflt(FILE *f, struct csitem_t *dflt_csip)$/;"	f	file:	signature:(FILE *f, struct csitem_t *dflt_csip)
dmp_casesel	./v_cnv.c	/^static void dmp_casesel(FILE *f, struct st_t *stp)$/;"	f	file:	signature:(FILE *f, struct st_t *stp)
dmp_catel	./v_cnv.c	/^static void dmp_catel(FILE *f, struct expr_t *ndp)$/;"	f	file:	signature:(FILE *f, struct expr_t *ndp)
dmp_catexpr	./v_cnv.c	/^static void dmp_catexpr(FILE *f, struct expr_t *ndp)$/;"	f	file:	signature:(FILE *f, struct expr_t *ndp)
dmp_comb_udptab	./v_prp.c	/^static void dmp_comb_udptab(struct udp_t *udpp)$/;"	f	file:	signature:(struct udp_t *udpp)
dmp_contas	./v_cnv.c	/^static void dmp_contas(FILE *f, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *f, struct mod_t *mdp)
dmp_decls	./v_cnv.c	/^static void dmp_decls(FILE *f, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *f, struct mod_t *mdp)
dmp_delay	./v_cnv.c	/^static void dmp_delay(FILE *f, union del_u du, word32 drep, char *sharps)$/;"	f	file:	signature:(FILE *f, union del_u du, word32 drep, char *sharps)
dmp_dellst	./v_cnv.c	/^static void dmp_dellst(FILE *f, struct paramlst_t *pmp)$/;"	f	file:	signature:(FILE *f, struct paramlst_t *pmp)
dmp_dfps	./v_genfx.c	/^static void dmp_dfps(int32 emit_pth, int32 now_rted)$/;"	f	file:	signature:(int32 emit_pth, int32 now_rted)
dmp_dig_attr_list	./v_cnv.c	/^static void dmp_dig_attr_list(FILE *f, struct attr_t *attr_hd, int32 nd_nl)$/;"	f	file:	signature:(FILE *f, struct attr_t *attr_hd, int32 nd_nl)
dmp_doms	./v_bbopt.c	/^static void dmp_doms(int32 *idoms, int32 num_bblks)$/;"	f	file:	signature:(int32 *idoms, int32 num_bblks)
dmp_down_itree	./v_genfx.c	/^static int32 dmp_down_itree(struct itree_t *itp, int32 lev, int32 more_down)$/;"	f	file:	signature:(struct itree_t *itp, int32 lev, int32 more_down)
dmp_dsgn_optcfgs	./v_src3.c	/^static void dmp_dsgn_optcfgs(void)$/;"	f	file:	signature:(void)
dmp_edge_udptab	./v_prp.c	/^static void dmp_edge_udptab(struct udp_t *udpp)$/;"	f	file:	signature:(struct udp_t *udpp)
dmp_evor_chain	./v_cnv.c	/^static void dmp_evor_chain(FILE *f, struct expr_t *ndp) $/;"	f	file:	signature:(FILE *f, struct expr_t *ndp)
dmp_expr	./v_cnv.c	/^static void dmp_expr(FILE *f, struct expr_t *ndp)$/;"	f	file:	signature:(FILE *f, struct expr_t *ndp)
dmp_fcallx	./v_cnv.c	/^static void dmp_fcallx(FILE *f, struct expr_t *ndp)$/;"	f	file:	signature:(FILE *f, struct expr_t *ndp)
dmp_fg_tn_info	./v_bbopt.c	/^static void dmp_fg_tn_info(struct flowg_t* fgp)$/;"	f	file:	signature:(struct flowg_t* fgp)
dmp_fj_stlst	./v_cnv.c	/^static void dmp_fj_stlst(FILE *f, struct st_t *stp)$/;"	f	file:	signature:(FILE *f, struct st_t *stp)
dmp_formal_tmp_table	./v_cvcms.c	/^static void dmp_formal_tmp_table(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
dmp_func_decl	./v_cnv.c	/^static void dmp_func_decl(FILE *f, struct task_t *tskp)$/;"	f	file:	signature:(FILE *f, struct task_t *tskp)
dmp_funcu	./v.h	/^union dmp_funcu {$/;"	u
dmp_funcu::parallel	./v.h	/^ void (*parallel)(struct net_t *, t_midat *, struct dmp_buf_t *);$/;"	m	union:dmp_funcu	access:public
dmp_funcu::single	./v.h	/^ void (*single)(struct net_t *, t_midat *);     $/;"	m	union:dmp_funcu	access:public
dmp_gblk	./v_cnv.c	/^static void dmp_gblk(FILE *f, struct genblk_t *gblkp)$/;"	f	file:	signature:(FILE *f, struct genblk_t *gblkp)
dmp_gen_case	./v_cnv.c	/^static void dmp_gen_case(FILE *f, struct genitem_t *gip)$/;"	f	file:	signature:(FILE *f, struct genitem_t *gip)
dmp_gen_for	./v_cnv.c	/^static void dmp_gen_for(FILE *f, struct genitem_t *gip)$/;"	f	file:	signature:(FILE *f, struct genitem_t *gip)
dmp_gen_if	./v_cnv.c	/^static void dmp_gen_if(FILE *f, struct genitem_t *gip)$/;"	f	file:	signature:(FILE *f, struct genitem_t *gip)
dmp_gen_items_lst	./v_cnv.c	/^static void dmp_gen_items_lst(FILE *f, struct genitem_t *gihd)$/;"	f	file:	signature:(FILE *f, struct genitem_t *gihd)
dmp_ialst	./v_cnv.c	/^static void dmp_ialst(FILE *f, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *f, struct mod_t *mdp)
dmp_insts_and_gates	./v_cnv.c	/^static void dmp_insts_and_gates(FILE *f, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *f, struct mod_t *mdp)
dmp_insts_ofwire	./v_ex4.c	/^static void dmp_insts_ofwire(struct mod_t *mdp, struct net_t *np)$/;"	f	file:	signature:(struct mod_t *mdp, struct net_t *np)
dmp_insts_ofwire_array	./v_ex4.c	/^static void dmp_insts_ofwire_array(struct mod_t *mdp, struct net_t *np)$/;"	f	file:	signature:(struct mod_t *mdp, struct net_t *np)
dmp_iports	./v_cnv.c	/^static void dmp_iports(FILE *f, struct inst_t *ip, struct expr_t **iptab)$/;"	f	file:	signature:(FILE *f, struct inst_t *ip, struct expr_t **iptab)
dmp_lstofsts	./v_cnv.c	/^static void dmp_lstofsts(FILE *f, struct st_t *hdstp)$/;"	f	file:	signature:(FILE *f, struct st_t *hdstp)
dmp_macdef_exptab	./v_ms.c	/^static void dmp_macdef_exptab(char *dnam, struct macexp_t *mxp)$/;"	f	file:	signature:(char *dnam, struct macexp_t *mxp)
dmp_mda_arr	./v_cnv.c	/^static void dmp_mda_arr(struct net_t *np, int32 inum, int32 base)$/;"	f	file:	signature:(struct net_t *np, int32 inum, int32 base)
dmp_mdim_arr_ndx_list	./v_cnv.c	/^static void dmp_mdim_arr_ndx_list(FILE *f, struct expr_t *ndp)$/;"	f	file:	signature:(FILE *f, struct expr_t *ndp)
dmp_mdspfy	./v_cnv.c	/^static void dmp_mdspfy(FILE *f, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *f, struct mod_t *mdp)
dmp_mdtasks	./v_cnv.c	/^static void dmp_mdtasks(FILE *f, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *f, struct mod_t *mdp)
dmp_mod_grefs	./v_cnv.c	/^static void dmp_mod_grefs(FILE *f, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *f, struct mod_t *mdp)
dmp_mod_lofp_hdr	./v_cnv.c	/^static void dmp_mod_lofp_hdr(FILE *f, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *f, struct mod_t *mdp)
dmp_modports	./v_cnv.c	/^static void dmp_modports(FILE *f, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *f, struct mod_t *mdp)
dmp_multi_dim_array_range	./v_cnv.c	/^static void dmp_multi_dim_array_range(FILE *f, struct net_t *np) $/;"	f	file:	signature:(FILE *f, struct net_t *np)
dmp_nblock	./v_cnv.c	/^static void dmp_nblock(FILE *f, struct task_t *tskp, char *bnam)$/;"	f	file:	signature:(FILE *f, struct task_t *tskp, char *bnam)
dmp_one_dp_val	./v_ex4.c	/^static void dmp_one_dp_val(struct dpinstel_t *dpip, struct net_t *np)$/;"	f	file:	signature:(struct dpinstel_t *dpip, struct net_t *np)
dmp_paramdecls	./v_cnv.c	/^static void dmp_paramdecls(FILE *f, struct net_t *parm_nptab, int32 pnum,$/;"	f	file:	signature:(FILE *f, struct net_t *parm_nptab, int32 pnum, char *pclassnam, int32 also_dmp_gen)
dmp_perturb_list	./v_trch.c	/^static void dmp_perturb_list(void)$/;"	f	file:	signature:(void)
dmp_pnd_params	./v_cnv.c	/^static void dmp_pnd_params(FILE *f, struct inst_t *ip, struct mod_t *imdp)$/;"	f	file:	signature:(FILE *f, struct inst_t *ip, struct mod_t *imdp)
dmp_predom_frontier_lists	./v_bbopt.c	/^static void dmp_predom_frontier_lists(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
dmp_pthel	./v_cnv.c	/^static void dmp_pthel(FILE *f, struct pathel_t *pelp)$/;"	f	file:	signature:(FILE *f, struct pathel_t *pelp)
dmp_pthlst	./v_cnv.c	/^static void dmp_pthlst(FILE *f, struct spcpth_t *pthp, int32 is_pein)$/;"	f	file:	signature:(FILE *f, struct spcpth_t *pthp, int32 is_pein)
dmp_specpths	./v_cnv.c	/^static void dmp_specpths(FILE *f, struct spcpth_t *pthp)$/;"	f	file:	signature:(FILE *f, struct spcpth_t *pthp)
dmp_stmt	./v.h	/^ unsigned dmp_stmt : 1;       \/* T => statement has been printed for coverage *\/$/;"	m	struct:st_t	access:public
dmp_task	./v_cnv.c	/^static void dmp_task(FILE *f, struct task_t *tskp)$/;"	f	file:	signature:(FILE *f, struct task_t *tskp)
dmp_tchk_selector	./v_cnv.c	/^static void dmp_tchk_selector(FILE *f, word32 edgval, struct expr_t *xp,$/;"	f	file:	signature:(FILE *f, word32 edgval, struct expr_t *xp, struct expr_t *condx)
dmp_tchks	./v_cnv.c	/^static void dmp_tchks(FILE *f, struct tchk_t *tcp)$/;"	f	file:	signature:(FILE *f, struct tchk_t *tcp)
dmp_tf_lofp_hdr	./v_cnv.c	/^static void dmp_tf_lofp_hdr(FILE *f, struct task_t *tskp)$/;"	f	file:	signature:(FILE *f, struct task_t *tskp)
dmp_tfdecls	./v_cnv.c	/^static void dmp_tfdecls(FILE *f, struct task_t *tskp)$/;"	f	file:	signature:(FILE *f, struct task_t *tskp)
dmp_udp2b_etab	./v_prp.c	/^static void dmp_udp2b_etab(word32 *tabp, word32 nstates, int32 eipnum,$/;"	f	file:	signature:(word32 *tabp, word32 nstates, int32 eipnum, int32 e1val)
dmp_udp2b_tab	./v_prp.c	/^static void dmp_udp2b_tab(word32 *tabp, word32 nstates)$/;"	f	file:	signature:(word32 *tabp, word32 nstates)
dmp_udp3v_etab	./v_prp.c	/^static void dmp_udp3v_etab(word32 *tabp, word32 nstates, int32 eipnum,$/;"	f	file:	signature:(word32 *tabp, word32 nstates, int32 eipnum, int32 e1val)
dmp_udp3v_tab	./v_prp.c	/^static void dmp_udp3v_tab(word32 *tabp, word32 nstates) $/;"	f	file:	signature:(word32 *tabp, word32 nstates)
dmp_udp_lines	./v_src3.c	/^static void dmp_udp_lines(FILE *f, struct udp_t *udpp)$/;"	f	file:	signature:(FILE *f, struct udp_t *udpp)
dmp_verbose_mem_info	./v_bbgen.c	/^static void dmp_verbose_mem_info(struct mod_t *mdp, long save_mem_use, $/;"	f	file:	signature:(struct mod_t *mdp, long save_mem_use, int32 save_insn_count)
dmp_vtx_and_out_edges	./v_trch.c	/^static void dmp_vtx_and_out_edges(struct vtx_t *vtxp,$/;"	f	file:	signature:(struct vtx_t *vtxp, struct itree_t *oside_itp)
dmp_vtx_edges	./v_trch.c	/^static void dmp_vtx_edges(struct vtx_t *vtxp, struct itree_t *vt1_itp)$/;"	f	file:	signature:(struct vtx_t *vtxp, struct itree_t *vt1_itp)
dmp_xpnd_olist	./cvc.c	/^static void dmp_xpnd_olist(struct optlst_t *olp)$/;"	f	file:	signature:(struct optlst_t *olp)
dmpp_in_src	./v.h	/^ unsigned dmpp_in_src : 1;    \/* T => dumpports for net in src *\/$/;"	m	struct:net_t	access:public
dmpv_funcu	./v.h	/^ union dmp_funcu dmpv_funcu; \/* dmpv function *\/$/;"	m	struct:net_t	typeref:union:net_t::dmp_funcu	access:public
dmpv_in_src	./v.h	/^ unsigned dmpv_in_src : 1;    \/* T => dumpvars for net in src *\/$/;"	m	struct:net_t	access:public
dmpv_in_src	./v.h	/^ unsigned dmpv_in_src : 1;    \/* if not all dummpvar => has mon\/fmon in src *\/$/;"	m	struct:ncomp_t	access:public
dmpv_sdispb	./v_ex4.c	/^static void dmpv_sdispb(word32 *ap, word32 *bp, int32 blen)$/;"	f	file:	signature:(word32 *ap, word32 *bp, int32 blen)
dmpv_sdispb_1w	./v_ex4.c	/^static void dmpv_sdispb_1w(word32 aval, word32 bval, int32 blen)$/;"	f	file:	signature:(word32 aval, word32 bval, int32 blen)
dmpv_sdispb_1w_2state	./v_ex4.c	/^static void dmpv_sdispb_1w_2state(word32 aval, int32 blen)$/;"	f	file:	signature:(word32 aval, int32 blen)
dmpv_sdispb_2state	./v_ex4.c	/^static void dmpv_sdispb_2state(word32 *ap, int32 blen)$/;"	f	file:	signature:(word32 *ap, int32 blen)
dmul	./v_ex2.c	/^static void dmul(word32 *destp, int32 dest_len, word32 *z1p, int32 z1_len, $/;"	f	file:	signature:(word32 *destp, int32 dest_len, word32 *z1p, int32 z1_len, __uint128_t mul)
dmul	./v_ex2.c	/^static void dmul(word32 *destp, int32 dest_len, word32 *z1p, int32 z1_len, word64 mul)$/;"	f	file:	signature:(word32 *destp, int32 dest_len, word32 *z1p, int32 z1_len, word64 mul)
do_1bit_wireforce	./v_ex3.c	/^static void do_1bit_wireforce(struct st_t *qcstp, struct net_t *np,$/;"	f	file:	signature:(struct st_t *qcstp, struct net_t *np, int32 ibase, int32 lhsbi, int32 rhsbi, t_midat *xmr_idp, struct dceauxlst_t *qcdcep, t_midat *save_idp)
do_acc_child_topmod	./v_acc.c	/^static handle do_acc_child_topmod(char *rtnnam, handle child)$/;"	f	file:	signature:(char *rtnnam, handle child)
do_acc_next_hilo_conn	./v_acc.c	/^static handle do_acc_next_hilo_conn(char *rtnnam, handle port, handle conn,$/;"	f	file:	signature:(char *rtnnam, handle port, handle conn, int32 is_hiconn)
do_acc_next_ld_drv	./v_acc.c	/^static handle do_acc_next_ld_drv(char *rtnnam, handle net_handle, $/;"	f	file:	signature:(char *rtnnam, handle net_handle, handle ld_drv)
do_addto_gsens_lst	./v_genfx.c	/^static void do_addto_gsens_lst(struct expr_t *xp)$/;"	f	file:	signature:(struct expr_t *xp)
do_argmacdefine	./v_ms.c	/^static void do_argmacdefine(char *dnam, struct macexp_t *mxp, int32 nformal_args)$/;"	f	file:	signature:(char *dnam, struct macexp_t *mxp, int32 nformal_args)
do_args	./cvc.c	/^static void do_args(void )$/;"	f	file:	signature:(void )
do_cmdmacdef	./cvc.c	/^static void do_cmdmacdef(char *defarg, struct optlst_t *olp) $/;"	f	file:	signature:(char *defarg, struct optlst_t *olp)
do_compiled_sim	./v_sim.c	/^static void do_compiled_sim(void)$/;"	f	file:	signature:(void)
do_dbg_cmd	./v_dbg.c	/^static int32 do_dbg_cmd(void)$/;"	f	file:	signature:(void)
do_dbg_expris	./v_dbg.c	/^static void do_dbg_expris(void)$/;"	f	file:	signature:(void)
do_dbg_help	./v_dbg.c	/^static void do_dbg_help(void)$/;"	f	file:	signature:(void)
do_dbg_varis	./v_dbg.c	/^static void do_dbg_varis(void)$/;"	f	file:	signature:(void)
do_dbg_whatis	./v_dbg.c	/^static void do_dbg_whatis(void)$/;"	f	file:	signature:(void)
do_defparam_splitting	./v_genfx.c	/^static void do_defparam_splitting(void)$/;"	f	file:	signature:(void)
do_dfp_fnd_needto_split	./v_genfx.c	/^static void do_dfp_fnd_needto_split(void)$/;"	f	file:	signature:(void)
do_dfp_resolve	./v_genfx.c	/^static int32 do_dfp_resolve(struct gref_t *grp)$/;"	f	file:	signature:(struct gref_t *grp)
do_dmp	./v_genfx.c	/^static void do_dmp(struct itree_t *itp, int32 lev)$/;"	f	file:	signature:(struct itree_t *itp, int32 lev)
do_iarr_splitting	./v_genfx.c	/^static void do_iarr_splitting(void)$/;"	f	file:	signature:(void)
do_mdim_rm_reading	./v_ex2.c	/^static void do_mdim_rm_reading(FILE *f, int32 base, struct net_t *np,$/;"	f	file:	signature:(FILE *f, int32 base, struct net_t *np, int32 lft_arr1, int32 lft_arr2)
do_mdim_rm_writing	./v_ex2.c	/^static void do_mdim_rm_writing(FILE *f, int32 base, struct net_t *np,$/;"	f	file:	signature:(FILE *f, int32 base, struct net_t *np, int32 lft_arr1, int32 lft_arr2)
do_not_load_idp	./igen.h	/^ unsigned do_not_load_idp : 1;\/* T => do not use dedicated reg for idp *\/$/;"	m	struct:flowg_t	access:public
do_pclose	./v_asmlnk.c	/^static void do_pclose(FILE *pp)$/;"	f	file:	signature:(FILE *pp)
do_popen	./v_asmlnk.c	/^static FILE *do_popen(char *cmd, char *rw)$/;"	f	file:	signature:(char *cmd, char *rw)
do_poundparam_splitting	./v_genfx.c	/^static void do_poundparam_splitting(void)$/;"	f	file:	signature:(void)
do_putv_wire_intran_softforce	./v_trch.c	/^static void do_putv_wire_intran_softforce(struct net_t *np, int32 ndx,$/;"	f	file:	signature:(struct net_t *np, int32 ndx, word32 *ap, word32 *bp)
do_q_add	./v_ex.c	/^static void do_q_add(struct expr_t *argxp)$/;"	f	file:	signature:(struct expr_t *argxp)
do_q_examine	./v_ex.c	/^static void do_q_examine(struct expr_t *argxp)$/;"	f	file:	signature:(struct expr_t *argxp)
do_q_init	./v_ex.c	/^static void do_q_init(struct expr_t *argxp)$/;"	f	file:	signature:(struct expr_t *argxp)
do_q_remove	./v_ex.c	/^static void do_q_remove(struct expr_t *argxp)$/;"	f	file:	signature:(struct expr_t *argxp)
do_qc2_regstore	./v_ex3.c	/^static void do_qc2_regstore(struct net_t *np, struct qcval_t *qcvalp,$/;"	f	file:	signature:(struct net_t *np, struct qcval_t *qcvalp, struct xstk_t *xsp)
do_qc2_wirestore	./v_ex3.c	/^static void do_qc2_wirestore(struct net_t *np, struct qcval_t *qcvalp,$/;"	f	file:	signature:(struct net_t *np, struct qcval_t *qcvalp, struct xstk_t *xsp)
do_qc_assign	./v_ex3.c	/^static void do_qc_assign(struct st_t *qcastp, struct expr_t *lhsx,$/;"	f	file:	signature:(struct st_t *qcastp, struct expr_t *lhsx, int32 rhsbi, struct dceauxlstlst_t *dcllp)
do_qc_deassign	./v_ex3.c	/^static void do_qc_deassign(struct expr_t *lhsx)$/;"	f	file:	signature:(struct expr_t *lhsx)
do_qc_regforce	./v_ex3.c	/^static void do_qc_regforce(struct st_t *qcastp, struct expr_t *lhsx,$/;"	f	file:	signature:(struct st_t *qcastp, struct expr_t *lhsx, int32 rhsbi, struct dceauxlstlst_t *dcllp)
do_qc_regrelease	./v_ex3.c	/^static void do_qc_regrelease(struct expr_t *lhsx)$/;"	f	file:	signature:(struct expr_t *lhsx)
do_qc_wire_intran_force	./v_trch.c	/^static void do_qc_wire_intran_force(struct net_t *np, int32 biti, word32 aval,$/;"	f	file:	signature:(struct net_t *np, int32 biti, word32 aval, word32 bval, t_midat *lhs_idp)
do_qc_wire_intran_release	./v_trch.c	/^static void do_qc_wire_intran_release(struct net_t *np, int32 biti,$/;"	f	file:	signature:(struct net_t *np, int32 biti, struct expr_t *lhsx, t_midat *idp)
do_qc_wireforce	./v_ex3.c	/^static void do_qc_wireforce(struct st_t *qcfstp, struct expr_t *lhsx,$/;"	f	file:	signature:(struct st_t *qcfstp, struct expr_t *lhsx, int32 rhsbi, struct dceauxlstlst_t *dcllp)
do_qc_wirerelease	./v_ex3.c	/^static void do_qc_wirerelease(struct expr_t *lhsx)$/;"	f	file:	signature:(struct expr_t *lhsx)
do_reg_assign	./v_regasn.c	/^static void do_reg_assign(struct flowg_t *fgp, $/;"	f	file:	signature:(struct flowg_t *fgp, struct avlnode_t **tn_ref_avltab, int32 num_tnrefs, int32 uses_idp_tmp)
do_repl_id_forincvar	./v_genfx.c	/^static void do_repl_id_forincvar(struct expr_t *xp)$/;"	f	file:	signature:(struct expr_t *xp)
do_repl_id_genvar	./v_genfx.c	/^static void do_repl_id_genvar(struct expr_t *xp)$/;"	f	file:	signature:(struct expr_t *xp)
do_reset	./v_ex.c	/^static void do_reset(struct expr_t *axp)$/;"	f	file:	signature:(struct expr_t *axp)
do_rewind	./fstapi.c	/^unsigned do_rewind : 1;$/;"	m	struct:fstReaderContext	file:	access:public
do_rm_reading	./v_ex2.c	/^static void do_rm_reading(FILE *f, int32 base, struct net_t *np,$/;"	f	file:	signature:(FILE *f, int32 base, struct net_t *np, int32 arr1, int32 arr2, int32 ri1, int32 ri2)
do_rm_writing	./v_ex2.c	/^static void do_rm_writing(FILE *f, int32 base, struct net_t *np, int32 arr1,$/;"	f	file:	signature:(FILE *f, int32 base, struct net_t *np, int32 arr1, int32 arr2, int32 ri1, int32 ri2)
do_sdf_annotate	./v_sdf.c	/^static void do_sdf_annotate(char *sdf_fnam, int32 fnind, int32 slcnt)$/;"	f	file:	signature:(char *sdf_fnam, int32 fnind, int32 slcnt)
do_sdflocdef	./cvc.c	/^static void do_sdflocdef(char *sdfloc, char *optfnam, int32 oplin_cnt)$/;"	f	file:	signature:(char *sdfloc, char *optfnam, int32 oplin_cnt)
do_showscopes	./v_ex.c	/^static void do_showscopes(struct expr_t *axp)$/;"	f	file:	signature:(struct expr_t *axp)
do_showvars_stask	./v_ex.c	/^static void do_showvars_stask(struct expr_t *argxp)$/;"	f	file:	signature:(struct expr_t *argxp)
do_sim	./v_sim.c	/^static void do_sim(void)$/;"	f	file:	signature:(void)
do_srm_xtrct	./v_ex2.c	/^static void do_srm_xtrct(struct expr_t *xp, int32 base, struct net_t *np,$/;"	f	file:	signature:(struct expr_t *xp, int32 base, struct net_t *np, int32 arr1, int32 arr2, int32 ri1, int32 ri2, int32 arrwid)
do_systsk_sdf_annotate	./v_sdf.c	/^static void do_systsk_sdf_annotate(char *sdf_fnam, struct itree_t *itp, $/;"	f	file:	signature:(char *sdf_fnam, struct itree_t *itp, int32 fnind, int32 slcnt)
do_timescale	./cvc.c	/^static void do_timescale(void)$/;"	f	file:	signature:(void)
do_vpi_cb_onoff	./v_vpi3.c	/^static int32 do_vpi_cb_onoff(vpiHandle cbobj, int32 turn_cb_on)$/;"	f	file:	signature:(vpiHandle cbobj, int32 turn_cb_on)
do_vpi_iact_scopchg	./v_vpi3.c	/^static int32 do_vpi_iact_scopchg(vpiHandle newscopobj)$/;"	f	file:	signature:(vpiHandle newscopobj)
do_vpi_wire_intran_force	./v_trch.c	/^static void do_vpi_wire_intran_force(struct net_t *np, int32 ndx,$/;"	f	file:	signature:(struct net_t *np, int32 ndx, word32 *ap, word32 *bp)
do_vpi_wire_intran_release	./v_trch.c	/^static void do_vpi_wire_intran_release(struct net_t *np, int32 ndx)$/;"	f	file:	signature:(struct net_t *np, int32 ndx)
do_warn_supp_chg	./v_ex.c	/^static void do_warn_supp_chg(char *stnam, struct expr_t *argxp, int32 supp)$/;"	f	file:	signature:(char *stnam, struct expr_t *argxp, int32 supp)
do_wdecl_assgn	./v_src.c	/^static int32 do_wdecl_assgn(struct sy_t *syp, struct paramlst_t *pmphdr,$/;"	f	file:	signature:(struct sy_t *syp, struct paramlst_t *pmphdr, int32 first_time)
does_not_exist	./v.h	/^ unsigned does_not_exist : 1;$/;"	m	struct:sv_lib_t	access:public
double_endian_match	./fstapi.c	/^unsigned double_endian_match : 1;$/;"	m	struct:fstReaderContext	file:	access:public
down_hasgiarngdet_param	./v_genfx.c	/^static int32 down_hasgiarngdet_param(struct mod_t *ipmdp)$/;"	f	file:	signature:(struct mod_t *ipmdp)
dp	./v.h	/^ double *dp;$/;"	m	union:pck_u	access:public
dp_buffer	./v.h	/^ char *dp_buffer;             \/* buffer to speed up dumpports output *\/$/;"	m	struct:dp_fildesc_t	access:public
dp_chgnethdr	./v.h	/^ struct dvchgnets_t *dp_chgnethdr;  \/* curr. time var chg list hdr for file *\/$/;"	m	struct:dp_fildesc_t	typeref:struct:dp_fildesc_t::dvchgnets_t	access:public
dp_dumplimit_size	./v.h	/^ int32 dp_dumplimit_size;     \/* user set limit of dv file size (0 none) *\/$/;"	m	struct:dp_fildesc_t	access:public
dp_eval_typ	./v.h	/^ unsigned dp_eval_typ : 8;    \/* type of eval needed for this port net\/bit *\/$/;"	m	struct:dpctrl_t	access:public
dp_evaltyp_to_str	./v_ex4.c	/^static char *dp_evaltyp_to_str(char *s, int32 eval_typ)$/;"	f	file:	signature:(char *s, int32 eval_typ)
dp_fd	./v.h	/^ int32 dp_fd;                 \/* file number of dmpports fd *\/$/;"	m	struct:dp_fildesc_t	access:public
dp_fildesc_t	./v.h	/^struct dp_fildesc_t {$/;"	s
dp_fildesc_t::dp_buffer	./v.h	/^ char *dp_buffer;             \/* buffer to speed up dumpports output *\/$/;"	m	struct:dp_fildesc_t	access:public
dp_fildesc_t::dp_chgnethdr	./v.h	/^ struct dvchgnets_t *dp_chgnethdr;  \/* curr. time var chg list hdr for file *\/$/;"	m	struct:dp_fildesc_t	typeref:struct:dp_fildesc_t::dvchgnets_t	access:public
dp_fildesc_t::dp_dumplimit_size	./v.h	/^ int32 dp_dumplimit_size;     \/* user set limit of dv file size (0 none) *\/$/;"	m	struct:dp_fildesc_t	access:public
dp_fildesc_t::dp_fd	./v.h	/^ int32 dp_fd;                 \/* file number of dmpports fd *\/$/;"	m	struct:dp_fildesc_t	access:public
dp_fildesc_t::dp_file_size	./v.h	/^ int32 dp_file_size;          \/* current size of dumpports file *\/$/;"	m	struct:dp_fildesc_t	access:public
dp_fildesc_t::dp_fnam	./v.h	/^ char *dp_fnam;               \/* name of dumpports output file *\/$/;"	m	struct:dp_fildesc_t	access:public
dp_fildesc_t::dp_func	./v.h	/^ int32 dp_func;               \/* global set with type of dumpports dumping *\/$/;"	m	struct:dp_fildesc_t	access:public
dp_fildesc_t::dp_nxti	./v.h	/^ int32 dp_nxti;               \/* next free location *\/$/;"	m	struct:dp_fildesc_t	access:public
dp_fildesc_t::dp_outlinpos	./v.h	/^ int32 dp_outlinpos;          \/* line postion in dump ports file *\/ $/;"	m	struct:dp_fildesc_t	access:public
dp_fildesc_t::dp_slotend_action	./v.h	/^ word32 dp_slotend_action;    \/* slotend actions - per file *\/ $/;"	m	struct:dp_fildesc_t	access:public
dp_fildesc_t::dp_state	./v.h	/^ int32 dp_state;              \/* processing state of dumpports for this file *\/$/;"	m	struct:dp_fildesc_t	access:public
dp_fildesc_t::dp_time_emitted	./v.h	/^ int32 dp_time_emitted;       \/* flag to stop repeated same #[time] *\/$/;"	m	struct:dp_fildesc_t	access:public
dp_fildesc_t::dpi_end	./v.h	/^ struct dpinstel_t *dpi_end; \/* end of dumpports rec. list for this file *\/$/;"	m	struct:dp_fildesc_t	typeref:struct:dp_fildesc_t::dpinstel_t	access:public
dp_fildesc_t::dpi_hdr	./v.h	/^ struct dpinstel_t *dpi_hdr; \/* hdr of mast dmpports rec. list for this file *\/$/;"	m	struct:dp_fildesc_t	typeref:struct:dp_fildesc_t::dpinstel_t	access:public
dp_file_size	./v.h	/^ int32 dp_file_size;          \/* current size of dumpports file *\/$/;"	m	struct:dp_fildesc_t	access:public
dp_fnam	./v.h	/^ char *dp_fnam;               \/* name of dumpports output file *\/$/;"	m	struct:dp_fildesc_t	access:public
dp_func	./v.h	/^ int32 dp_func;               \/* global set with type of dumpports dumping *\/$/;"	m	struct:dp_fildesc_t	access:public
dp_indrvs	./v.h	/^ struct dpdrvr_t *dp_indrvs;  \/* for hiconn (input) drivers *\/$/;"	m	struct:dpctrl_t	typeref:struct:dpctrl_t::dpdrvr_t	access:public
dp_inoutvaltoch_tab	./v_ex4.c	/^static const char dp_inoutvaltoch_tab[] = { '0', '1', 'F', '?' };$/;"	v	file:
dp_invaltoch_tab	./v_ex4.c	/^static const char dp_invaltoch_tab[] = { 'D', 'U', 'Z', 'N' };$/;"	v	file:
dp_ld_driver	./v_ex4.c	/^static word32 dp_ld_driver(int32 drvbi, struct net_pin_t *npp)$/;"	f	file:	signature:(int32 drvbi, struct net_pin_t *npp)
dp_ld_stdriver	./v_ex4.c	/^static word32 dp_ld_stdriver(int32 drvbi, struct net_pin_t *npp)$/;"	f	file:	signature:(int32 drvbi, struct net_pin_t *npp)
dp_nxti	./v.h	/^ int32 dp_nxti;               \/* next free location *\/$/;"	m	struct:dp_fildesc_t	access:public
dp_outdrvs	./v.h	/^ struct dpdrvr_t *dp_outdrvs; \/* for loconn (output) drivers *\/$/;"	m	struct:dpctrl_t	typeref:struct:dpctrl_t::dpdrvr_t	access:public
dp_outlinpos	./v.h	/^ int32 dp_outlinpos;          \/* line postion in dump ports file *\/ $/;"	m	struct:dp_fildesc_t	access:public
dp_outvaltoch_tab	./v_ex4.c	/^static const char dp_outvaltoch_tab[] = { 'L', 'H', 'T', 'X' };$/;"	v	file:
dp_set_cnt_driving_vals	./v_ex4.c	/^static void dp_set_cnt_driving_vals(int32 *num_indrvs, int32 *num_outdrvrs,$/;"	f	file:	signature:(int32 *num_indrvs, int32 *num_outdrvrs, struct dpctrl_t *dpcp, int32 drvbi, int32 is_st)
dp_slotend_action	./v.h	/^ word32 dp_slotend_action;    \/* slotend actions - per file *\/ $/;"	m	struct:dp_fildesc_t	access:public
dp_state	./v.h	/^ int32 dp_state;              \/* processing state of dumpports for this file *\/$/;"	m	struct:dp_fildesc_t	access:public
dp_time_emitted	./v.h	/^ int32 dp_time_emitted;       \/* flag to stop repeated same #[time] *\/$/;"	m	struct:dp_fildesc_t	access:public
dp_wr	./v_ex4.c	/^static void dp_wr(struct dp_fildesc_t *fdescp, int32 nd_nl)$/;"	f	file:	signature:(struct dp_fildesc_t *fdescp, int32 nd_nl)
dpc_bi	./v.h	/^ int32 dpc_bi;$/;"	m	struct:dpctrl_t	access:public
dpc_np	./v.h	/^ struct net_t *dpc_np;$/;"	m	struct:dpctrl_t	typeref:struct:dpctrl_t::net_t	access:public
dpctrl_t	./v.h	/^struct dpctrl_t {$/;"	s
dpctrl_t::dp_eval_typ	./v.h	/^ unsigned dp_eval_typ : 8;    \/* type of eval needed for this port net\/bit *\/$/;"	m	struct:dpctrl_t	access:public
dpctrl_t::dp_indrvs	./v.h	/^ struct dpdrvr_t *dp_indrvs;  \/* for hiconn (input) drivers *\/$/;"	m	struct:dpctrl_t	typeref:struct:dpctrl_t::dpdrvr_t	access:public
dpctrl_t::dp_outdrvs	./v.h	/^ struct dpdrvr_t *dp_outdrvs; \/* for loconn (output) drivers *\/$/;"	m	struct:dpctrl_t	typeref:struct:dpctrl_t::dpdrvr_t	access:public
dpctrl_t::dpc_bi	./v.h	/^ int32 dpc_bi;$/;"	m	struct:dpctrl_t	access:public
dpctrl_t::dpc_np	./v.h	/^ struct net_t *dpc_np;$/;"	m	struct:dpctrl_t	typeref:struct:dpctrl_t::net_t	access:public
dpd_itp	./v.h	/^ struct itree_t *dpd_itp;     \/* since drvs all over design - itree loc *\/$/;"	m	struct:dpdrvr_t	typeref:struct:dpdrvr_t::itree_t	access:public
dpd_npp	./v.h	/^ struct net_pin_t *dpd_npp;$/;"	m	struct:dpdrvr_t	typeref:struct:dpdrvr_t::net_pin_t	access:public
dpdrvnxt	./v.h	/^ struct dpdrvr_t *dpdrvnxt; $/;"	m	struct:dpdrvr_t	typeref:struct:dpdrvr_t::dpdrvr_t	access:public
dpdrvr_t	./v.h	/^struct dpdrvr_t {$/;"	s
dpdrvr_t::dpd_itp	./v.h	/^ struct itree_t *dpd_itp;     \/* since drvs all over design - itree loc *\/$/;"	m	struct:dpdrvr_t	typeref:struct:dpdrvr_t::itree_t	access:public
dpdrvr_t::dpd_npp	./v.h	/^ struct net_pin_t *dpd_npp;$/;"	m	struct:dpdrvr_t	typeref:struct:dpdrvr_t::net_pin_t	access:public
dpdrvr_t::dpdrvnxt	./v.h	/^ struct dpdrvr_t *dpdrvnxt; $/;"	m	struct:dpdrvr_t	typeref:struct:dpdrvr_t::dpdrvr_t	access:public
dpdrvr_t::drv_biti	./v.h	/^ int32 drv_biti;              \/* if vec drvr bit to select *\/$/;"	m	struct:dpdrvr_t	access:public
dpdrvr_t::drv_val	./v.h	/^ word32 drv_val;              \/* value of driver with stren (added if need) *\/ $/;"	m	struct:dpdrvr_t	access:public
dpfildesc_ndx_from_fnam	./v_ex4.c	/^static int32 dpfildesc_ndx_from_fnam(char *fnam)$/;"	f	file:	signature:(char *fnam)
dpi_ainfo	./v.h	/^ struct dpiarg_t *dpi_ainfo; \/* arg info for each dpi task arg (port\/pin) *\/$/;"	m	struct:dpi_t	typeref:struct:dpi_t::dpiarg_t	access:public
dpi_call_type	./v.h	/^ unsigned dpi_call_type : 8; \/* DPI call type - function\/task *\/$/;"	m	struct:dpi_t	access:public
dpi_cnt_tskpins	./v_dpi.c	/^static int32 dpi_cnt_tskpins(struct task_t *tskp) $/;"	f	file:	signature:(struct task_t *tskp)
dpi_end	./v.h	/^ struct dpinstel_t *dpi_end; \/* end of dumpports rec. list for this file *\/$/;"	m	struct:dp_fildesc_t	typeref:struct:dp_fildesc_t::dpinstel_t	access:public
dpi_fdescp	./v.h	/^ struct dp_fildesc_t *dpi_fdescp; \/* ptr to file rec for I\/O and state info *\/$/;"	m	struct:dpinstel_t	typeref:struct:dpinstel_t::dp_fildesc_t	access:public
dpi_hdr	./v.h	/^ struct dpinstel_t *dpi_hdr; \/* hdr of mast dmpports rec. list for this file *\/$/;"	m	struct:dp_fildesc_t	typeref:struct:dp_fildesc_t::dpinstel_t	access:public
dpi_language	./v.h	/^ unsigned dpi_language : 1;  \/* DPI language - always 'C' for now *\/$/;"	m	struct:dpi_t	access:public
dpi_nargs	./v.h	/^ int32 dpi_nargs;            \/* number of dpi world t\/f args *\/$/;"	m	struct:dpi_t	access:public
dpi_proc_ndx	./v.h	/^ int dpi_proc_ndx;           \/* for interp C gen index of wrapper to call *\/$/;"	m	struct:dpi_t	access:public
dpi_t	./v.h	/^struct dpi_t {$/;"	s
dpi_t::arg_u_tab	./v.h	/^ union adpi_u *arg_u_tab;    \/* array of union of dpi arg values *\/$/;"	m	struct:dpi_t	typeref:union:dpi_t::adpi_u	access:public
dpi_t::cname	./v.h	/^ char *cname;                \/* name of actual C function *\/$/;"	m	struct:dpi_t	access:public
dpi_t::dpi_ainfo	./v.h	/^ struct dpiarg_t *dpi_ainfo; \/* arg info for each dpi task arg (port\/pin) *\/$/;"	m	struct:dpi_t	typeref:struct:dpi_t::dpiarg_t	access:public
dpi_t::dpi_call_type	./v.h	/^ unsigned dpi_call_type : 8; \/* DPI call type - function\/task *\/$/;"	m	struct:dpi_t	access:public
dpi_t::dpi_language	./v.h	/^ unsigned dpi_language : 1;  \/* DPI language - always 'C' for now *\/$/;"	m	struct:dpi_t	access:public
dpi_t::dpi_nargs	./v.h	/^ int32 dpi_nargs;            \/* number of dpi world t\/f args *\/$/;"	m	struct:dpi_t	access:public
dpi_t::dpi_proc_ndx	./v.h	/^ int dpi_proc_ndx;           \/* for interp C gen index of wrapper to call *\/$/;"	m	struct:dpi_t	access:public
dpi_t::dpi_tskp	./v.h	/^ struct task_t *dpi_tskp;    \/* back link from dpi to its t\/f *\/ $/;"	m	struct:dpi_t	typeref:struct:dpi_t::task_t	access:public
dpi_t::dpi_type	./v.h	/^ unsigned dpi_type : 8;      \/* DPI type - import\/export *\/$/;"	m	struct:dpi_t	access:public
dpi_t::dpinxt	./v.h	/^ struct dpi_t *dpinxt;       \/* next dpi struct on list *\/$/;"	m	struct:dpi_t	typeref:struct:dpi_t::dpi_t	access:public
dpi_t::dsym	./v.h	/^ struct sy_t *dsym;          \/* Verilog named symbol *\/$/;"	m	struct:dpi_t	typeref:struct:dpi_t::sy_t	access:public
dpi_t::has_ret	./v.h	/^ unsigned has_ret : 1;       \/* T => has a return type *\/$/;"	m	struct:dpi_t	access:public
dpi_t::imp_fnd_in_lib	./v.h	/^ unsigned imp_fnd_in_lib : 1;\/* T => during checking phase for comp, fnd *\/$/;"	m	struct:dpi_t	access:public
dpi_t::import_property	./v.h	/^ unsigned import_property : 2; \/* context\/pure *\/$/;"	m	struct:dpi_t	access:public
dpi_tskp	./v.h	/^ struct task_t *dpi_tskp;    \/* back link from dpi to its t\/f *\/ $/;"	m	struct:dpi_t	typeref:struct:dpi_t::task_t	access:public
dpi_type	./v.h	/^ unsigned dpi_type : 8;      \/* DPI type - import\/export *\/$/;"	m	struct:dpi_t	access:public
dpiarg_t	./v.h	/^struct dpiarg_t {$/;"	s
dpiarg_t::arg_arr	./v.h	/^ unsigned arg_arr : 1;        \/* T => arg is verilog array name *\/$/;"	m	struct:dpiarg_t	access:public
dpiarg_t::arg_iotyp	./v.h	/^ unsigned arg_iotyp : 3;      \/* arg direction - using ver side vals *\/$/;"	m	struct:dpiarg_t	access:public
dpiarg_t::arg_nbytes	./v.h	/^ int32 arg_nbytes;            \/* if alloced size, else 0 *\/ $/;"	m	struct:dpiarg_t	access:public
dpiarg_t::arg_srep	./v.h	/^ unsigned arg_srep : 6;       \/* extended storage reps (for passed arrays) *\/$/;"	m	struct:dpiarg_t	access:public
dpiarg_t::nd_lval_ptr	./v.h	/^ unsigned nd_lval_ptr : 1;    \/* T => arg is lval (array or out) use addr *\/$/;"	m	struct:dpiarg_t	access:public
dpiarg_t::ver_side_svtyp	./v.h	/^ unsigned ver_side_svtyp : 8; \/* Ver side SV type constant from imp\/exp decl *\/$/;"	m	struct:dpiarg_t	access:public
dpinst_idp	./v.h	/^ t_midat *dpinst_idp;       \/* itree location from which all ports dumped *\/$/;"	m	struct:dpinstel_t	access:public
dpinstel_t	./v.h	/^struct dpinstel_t {$/;"	s
dpinstel_t::dpi_fdescp	./v.h	/^ struct dp_fildesc_t *dpi_fdescp; \/* ptr to file rec for I\/O and state info *\/$/;"	m	struct:dpinstel_t	typeref:struct:dpinstel_t::dp_fildesc_t	access:public
dpinstel_t::dpinst_idp	./v.h	/^ t_midat *dpinst_idp;       \/* itree location from which all ports dumped *\/$/;"	m	struct:dpinstel_t	access:public
dpinstel_t::dpinxt	./v.h	/^ struct dpinstel_t *dpinxt;     $/;"	m	struct:dpinstel_t	typeref:struct:dpinstel_t::dpinstel_t	access:public
dpinstel_t::net_dpctrl_tab	./v.h	/^ struct dpctrl_t **net_dpctrl_tab;\/* ptr to pb tab of dp ctrl for each i\/o net*\/$/;"	m	struct:dpinstel_t	typeref:struct:dpinstel_t::dpctrl_t	access:public
dpinxt	./v.h	/^ struct dpi_t *dpinxt;       \/* next dpi struct on list *\/$/;"	m	struct:dpi_t	typeref:struct:dpi_t::dpi_t	access:public
dpinxt	./v.h	/^ struct dpinstel_t *dpinxt;     $/;"	m	struct:dpinstel_t	typeref:struct:dpinstel_t::dpinstel_t	access:public
dputp_tedlst	./v.h	/^ struct dltevlst_t **dputp_tedlst;\/* per inst ptr to list of delputps *\/$/;"	m	struct:tfarg_t	typeref:struct:tfarg_t::dltevlst_t	access:public
drive_tostr	./v_ex4.c	/^static char *drive_tostr(char *s, word32 *ap, word32 *bp,$/;"	f	file:	signature:(char *s, word32 *ap, word32 *bp, struct net_pin_t *npp, int32 rhswid, int32 nonz_only)
drv_biti	./v.h	/^ int32 drv_biti;              \/* if vec drvr bit to select *\/$/;"	m	struct:dpdrvr_t	access:public
drv_val	./v.h	/^ word32 drv_val;              \/* value of driver with stren (added if need) *\/ $/;"	m	struct:dpdrvr_t	access:public
drvr_netbit_vtx_is_hiconn	./v_ex4.c	/^static int32 drvr_netbit_vtx_is_hiconn(struct itree_t *vtx_itp,$/;"	f	file:	signature:(struct itree_t *vtx_itp, struct itree_t *dp_itp)
dsa_brk_ndx	./v.h	/^ int32 dsa_brk_ndx;           \/* index for glob func dsabl nb jmp *\/$/;"	m	struct:task_t	access:public
dsable_t	./v.h	/^struct dsable_t {$/;"	s
dsable_t::dsablx	./v.h	/^ struct expr_t *dsablx;       \/* expr. (ID\/GLB) of disable task\/func\/blk *\/$/;"	m	struct:dsable_t	typeref:struct:dsable_t::expr_t	access:public
dsable_t::func_nxtstp	./v.h	/^ struct st_t *func_nxtstp;    \/* for functions disable is goto *\/$/;"	m	struct:dsable_t	typeref:struct:dsable_t::st_t	access:public
dsable_xpr_canbe_in_con_func	./v_src.c	/^static int32 dsable_xpr_canbe_in_con_func(struct task_t *ftskp,$/;"	f	file:	signature:(struct task_t *ftskp, struct expr_t *dsxp)
dsablx	./v.h	/^ struct expr_t *dsablx;       \/* expr. (ID\/GLB) of disable task\/func\/blk *\/$/;"	m	struct:dsable_t	typeref:struct:dsable_t::expr_t	access:public
dsgn_tot_insts_drvn_const_bits	./v_cvr.c	/^static void dsgn_tot_insts_drvn_const_bits(int *tot_insts, int32 *tot_wires,$/;"	f	file:	signature:(int *tot_insts, int32 *tot_wires, int32 *tot_bits, int32 *tot_drvn_const)
dsgn_tot_insts_sigs_bits	./v_cvr.c	/^static void dsgn_tot_insts_sigs_bits(int *tot_insts, int32 *tot_sigs,$/;"	f	file:	signature:(int *tot_insts, int32 *tot_sigs, int32 *tot_bits, int32 *tot_tgls, int32 *tot_01_tgls, int32 *tot_10_tgls, int32 *tot_excl_bits, int32 *tot_drvn_con_bits, int32 *tot_drvn_con_sigs)
dsp_enable	./v.h	/^ unsigned dsp_enable : 1;$/;"	m	struct:dispx_t	access:public
dsp_frc_unsign	./v.h	/^ unsigned dsp_frc_unsign : 1;$/;"	m	struct:dispx_t	access:public
dsp_idp	./v.h	/^ t_midat *dsp_idp;$/;"	m	struct:dispx_t	access:public
dsp_num	./v.h	/^ int32 dsp_num;$/;"	m	struct:dispx_t	access:public
dsp_nxt	./v.h	/^ struct dispx_t *dsp_nxt;$/;"	m	struct:dispx_t	typeref:struct:dispx_t::dispx_t	access:public
dsp_prtfmt	./v.h	/^ int32 dsp_prtfmt;$/;"	m	struct:dispx_t	access:public
dsp_prtwidth	./v.h	/^ int32 dsp_prtwidth;$/;"	m	struct:dispx_t	access:public
dsp_tskp	./v.h	/^ struct task_t *dsp_tskp;$/;"	m	struct:dispx_t	typeref:struct:dispx_t::task_t	access:public
dsp_xp	./v.h	/^ struct expr_t *dsp_xp;$/;"	m	struct:dispx_t	typeref:struct:dispx_t::expr_t	access:public
dsrc_polar	./v.h	/^ unsigned dsrc_polar : 2;     \/* if edge sensitive polarity *\/$/;"	m	struct:spcpth_t	access:public
dsub	./v_ex2.c	/^static int32 dsub(word32 *z1p, int32 z1_len, word32 *z2p, int32 z2_len, int32 y, int32 n)$/;"	f	file:	signature:(word32 *z1p, int32 z1_len, word32 *z2p, int32 z2_len, int32 y, int32 n)
dsym	./v.h	/^ struct sy_t *dsym;          \/* Verilog named symbol *\/$/;"	m	struct:dpi_t	typeref:struct:dpi_t::sy_t	access:public
dtable	./v.h	/^ struct dcevnt_t **dtable;  \/* dce table for linking *\/$/;"	m	struct:dce_info_t	typeref:struct:dce_info_t::dcevnt_t	access:public
dtyparg	./v_dbg2.c	/^static struct namlst_t dtyparg[] = {$/;"	v	typeref:struct:namlst_t	file:
du	./v.h	/^ union del_u du;              \/* delay for this event *\/$/;"	m	struct:ctev_t	typeref:union:ctev_t::del_u	access:public
dump_1inst_allports_vals	./v_ex4.c	/^static void dump_1inst_allports_vals(struct dpinstel_t *dpip)$/;"	f	file:	signature:(struct dpinstel_t *dpip)
dump_allvars_vals	./v_ex4.c	/^static void dump_allvars_vals(void)$/;"	f	file:	signature:(void)
dump_config_info	./v_src3.c	/^static void dump_config_info(void)$/;"	f	file:	signature:(void)
dump_lib_expand	./v_src3.c	/^static void dump_lib_expand(void)$/;"	f	file:	signature:(void)
dump_liveness_in_out_round	./v_regasn.c	/^static void dump_liveness_in_out_round(struct flowg_t *fgp, int32 nround)$/;"	f	file:	signature:(struct flowg_t *fgp, int32 nround)
dump_nest_vpi_argv	./v_cnv.c	/^static void dump_nest_vpi_argv(int32 lev, char **argv)$/;"	f	file:	signature:(int32 lev, char **argv)
dump_size_limit	./fstapi.c	/^uint64_t dump_size_limit;$/;"	m	struct:fstWriterContext	file:	access:public
dump_tmp_defuse_list	./v_regasn.c	/^static void dump_tmp_defuse_list(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
dump_tmp_list	./v_regasn.c	/^static void dump_tmp_list(struct tn_list_t *tlstp)$/;"	f	file:	signature:(struct tn_list_t *tlstp)
dump_vpi_argv	./v_cnv.c	/^static void dump_vpi_argv(int32 argc, char **argv)$/;"	f	file:	signature:(int32 argc, char **argv)
dv_flat_ndx	./v.h	/^ int32 dv_flat_ndx;            \/* if not -1 - flat array (maybe mda) index *\/$/;"	m	struct:dvchgnets_t	access:public
dv_storage_u	./v.h	/^union dv_storage_u {$/;"	u
dv_storage_u::buf	./v.h	/^ byte *buf; $/;"	m	union:dv_storage_u	access:public
dv_storage_u::mtime	./v.h	/^ word32 mtime;$/;"	m	union:dv_storage_u	access:public
dv_storage_u::val	./v.h	/^ word32 val;$/;"	m	union:dv_storage_u	access:public
dv_wr	./v_ex4.c	/^static void dv_wr(int32 nd_nl)$/;"	f	file:	signature:(int32 nd_nl)
dvchg_idp	./v.h	/^ t_midat *dvchg_idp;$/;"	m	struct:dvchgnets_t	access:public
dvchg_np	./v.h	/^ struct net_t *dvchg_np; $/;"	m	struct:dvchgnets_t	typeref:struct:dvchgnets_t::net_t	access:public
dvchgnets_t	./v.h	/^struct dvchgnets_t {$/;"	s
dvchgnets_t::dv_flat_ndx	./v.h	/^ int32 dv_flat_ndx;            \/* if not -1 - flat array (maybe mda) index *\/$/;"	m	struct:dvchgnets_t	access:public
dvchgnets_t::dvchg_idp	./v.h	/^ t_midat *dvchg_idp;$/;"	m	struct:dvchgnets_t	access:public
dvchgnets_t::dvchg_np	./v.h	/^ struct net_t *dvchg_np; $/;"	m	struct:dvchgnets_t	typeref:struct:dvchgnets_t::net_t	access:public
dvchgnets_t::dvchgnxt	./v.h	/^ struct dvchgnets_t *dvchgnxt;$/;"	m	struct:dvchgnets_t	typeref:struct:dvchgnets_t::dvchgnets_t	access:public
dvchgnets_t::idu	./v.h	/^ union dvid_u idu;$/;"	m	struct:dvchgnets_t	typeref:union:dvchgnets_t::dvid_u	access:public
dvchgnets_t::on_list	./v.h	/^ unsigned on_list : 1;         \/* array element is on list *\/ $/;"	m	struct:dvchgnets_t	access:public
dvchgnxt	./v.h	/^ struct dvchgnets_t *dvchgnxt;$/;"	m	struct:dvchgnets_t	typeref:struct:dvchgnets_t::dvchgnets_t	access:public
dvcodp	./v.h	/^ char *dvcodp;$/;"	m	union:dvid_u	access:public
dvid_u	./v.h	/^union dvid_u {$/;"	u
dvid_u::dvcodp	./v.h	/^ char *dvcodp;$/;"	m	union:dvid_u	access:public
dvid_u::idcode	./v.h	/^ int32 idcode;$/;"	m	union:dvid_u	access:public
dvns	./v.h	/^ struct dvchgnets_t *dvns;    \/* dump var nets *\/$/;"	m	struct:net_t	typeref:struct:net_t::dvchgnets_t	access:public
dvsu	./v.h	/^ union dv_storage_u dvsu;   \/* storage for apart or alloc buf *\/$/;"	m	struct:dmp_buf_t	typeref:union:dmp_buf_t::dv_storage_u	access:public
dynblst	./v.h	/^ struct dynboot_t *dynblst;   \/* list of boot routines (can be empty) *\/ $/;"	m	struct:loadpli_t	typeref:struct:loadpli_t::dynboot_t	access:public
dynboot_t	./v.h	/^struct dynboot_t {$/;"	s
dynboot_t::bootrout_nam	./v.h	/^ char *bootrout_nam;$/;"	m	struct:dynboot_t	access:public
dynboot_t::dynbootnxt	./v.h	/^ struct dynboot_t *dynbootnxt;$/;"	m	struct:dynboot_t	typeref:struct:dynboot_t::dynboot_t	access:public
dynboot_t::dynu	./v.h	/^ union dynlb_u dynu;$/;"	m	struct:dynboot_t	typeref:union:dynboot_t::dynlb_u	access:public
dynboot_t::ret_veriusertf	./v.h	/^ struct t_tfcell *ret_veriusertf;$/;"	m	struct:dynboot_t	typeref:struct:dynboot_t::t_tfcell	access:public
dynbootnxt	./v.h	/^ struct dynboot_t *dynbootnxt;$/;"	m	struct:dynboot_t	typeref:struct:dynboot_t::dynboot_t	access:public
dynlb_u	./v.h	/^union dynlb_u {$/;"	u
dynlb_u::tf_rout	./v.h	/^ void *(*tf_rout)(void);$/;"	m	union:dynlb_u	access:public
dynlb_u::vpi_rout	./v.h	/^ void (*vpi_rout)(void);$/;"	m	union:dynlb_u	access:public
dynu	./v.h	/^ union dynlb_u dynu;$/;"	m	struct:dynboot_t	typeref:union:dynboot_t::dynlb_u	access:public
eamacp	./v.h	/^ struct amac_t *eamacp;       \/* value for macro with arguments *\/$/;"	m	union:el_u	typeref:struct:el_u::amac_t	access:public
eanyp	./v.h	/^ void *eanyp;                 \/* castable void * for special cases *\/$/;"	m	union:el_u	access:public
earlyEnd_directive	./lz4.c	/^typedef enum { full = 0, partial = 1 } earlyEnd_directive;$/;"	t	typeref:enum:__anon10	file:
early_mark_reachable	./v_bbopt.c	/^static void early_mark_reachable(struct bblk_t *bbp)$/;"	f	file:	signature:(struct bblk_t *bbp)
eat_cells	./v_prp.c	/^static void eat_cells(int32 *some_eaten)$/;"	f	file:	signature:(int32 *some_eaten)
eat_gates	./v_prp.c	/^static void eat_gates(void)$/;"	f	file:	signature:(void)
eat_nets	./v_prp.c	/^static void eat_nets(int32 first_time)$/;"	f	file:	signature:(int32 first_time)
ebi1	./v.h	/^ int32 ebi1;                 \/* exclude lsb *\/$/;"	m	struct:oc_vtok_t	access:public
ebi2	./v.h	/^ int32 ebi2;                 \/* exclude rsb *\/$/;"	m	struct:oc_vtok_t	access:public
eblkp	./igen.h	/^ struct bblk_t *eblkp;$/;"	m	struct:bbedge_t	typeref:struct:bbedge_t::bblk_t	access:public
ebp_wrd_area_siz	./igen.h	/^ int32 ebp_wrd_area_siz;      \/* size of flow graph stk spill area in wrds *\/ $/;"	m	struct:flowg_t	access:public
ecap	./v.h	/^ struct conta_t *ecap;        \/* pointer to conta *\/$/;"	m	union:el_u	typeref:struct:el_u::conta_t	access:public
echktchgp	./v.h	/^ struct chktchg_t *echktchgp; \/* check time change record *\/$/;"	m	union:el_u	typeref:struct:el_u::chktchg_t	access:public
ecp	./v.h	/^ struct cell_t *ecp;$/;"	m	union:el_u	typeref:struct:el_u::cell_t	access:public
edctp	./v.h	/^ struct delctrl_t *edctp;     \/* delay ctrl for re prep pnps *\/$/;"	m	union:el_u	typeref:struct:el_u::delctrl_t	access:public
edfchp	./v.h	/^ char *edfchp;                \/* value of `define macros in defsyms table *\/$/;"	m	union:el_u	access:public
edge_t	./v.h	/^struct edge_t { $/;"	s
edge_t::edgoside_itp	./v.h	/^ struct itree_t *edgoside_itp; \/* edge other side itree loc (nil if same) *\/$/;"	m	struct:edge_t	typeref:struct:edge_t::itree_t	access:public
edge_t::enpp	./v.h	/^ struct net_pin_t *enpp;      \/* npp of connecting edge (npp) *\/$/;"	m	struct:edge_t	typeref:struct:edge_t::net_pin_t	access:public
edge_t::enxt	./v.h	/^ struct edge_t *enxt;$/;"	m	struct:edge_t	typeref:struct:edge_t::edge_t	access:public
edge_t::ev2	./v.h	/^ struct vtx_t *ev2;           \/* other side edge, this side is cur vtx *\/$/;"	m	struct:edge_t	typeref:struct:edge_t::vtx_t	access:public
edgoside_itp	./v.h	/^ struct itree_t *edgoside_itp; \/* edge other side itree loc (nil if same) *\/$/;"	m	struct:edge_t	typeref:struct:edge_t::itree_t	access:public
edgxp	./v.h	/^ struct expr_t *edgxp;$/;"	m	struct:dce_expr_t	typeref:struct:dce_expr_t::expr_t	access:public
egblkp	./v.h	/^ struct genblk_t *egblkp;     \/* link from sym to gblk for LGB type *\/$/;"	m	union:el_u	typeref:struct:el_u::genblk_t	access:public
egp	./v.h	/^ struct gate_t *egp;$/;"	m	union:el_u	typeref:struct:el_u::gate_t	access:public
eii	./v.h	/^ int32 eii;                   \/* index of inst. in mod inst list or ni *\/$/;"	m	union:el_u	access:public
eip	./v.h	/^ struct inst_t *eip;$/;"	m	union:el_u	typeref:struct:el_u::inst_t	access:public
el	./v.h	/^ union el_u el;$/;"	m	struct:sy_t	typeref:union:sy_t::el_u	access:public
el2_ndx	./igen.h	/^ int32 el2_ndx;$/;"	m	struct:tn_syadr_t	access:public
el_ndx	./igen.h	/^ int32 el_ndx;                \/* addr field depending on type of of com lab *\/ $/;"	m	union:tn_const_u	access:public
el_u	./v.h	/^union el_u {$/;"	u
el_u::eamacp	./v.h	/^ struct amac_t *eamacp;       \/* value for macro with arguments *\/$/;"	m	union:el_u	typeref:struct:el_u::amac_t	access:public
el_u::eanyp	./v.h	/^ void *eanyp;                 \/* castable void * for special cases *\/$/;"	m	union:el_u	access:public
el_u::ecap	./v.h	/^ struct conta_t *ecap;        \/* pointer to conta *\/$/;"	m	union:el_u	typeref:struct:el_u::conta_t	access:public
el_u::echktchgp	./v.h	/^ struct chktchg_t *echktchgp; \/* check time change record *\/$/;"	m	union:el_u	typeref:struct:el_u::chktchg_t	access:public
el_u::ecp	./v.h	/^ struct cell_t *ecp;$/;"	m	union:el_u	typeref:struct:el_u::cell_t	access:public
el_u::edctp	./v.h	/^ struct delctrl_t *edctp;     \/* delay ctrl for re prep pnps *\/$/;"	m	union:el_u	typeref:struct:el_u::delctrl_t	access:public
el_u::edfchp	./v.h	/^ char *edfchp;                \/* value of `define macros in defsyms table *\/$/;"	m	union:el_u	access:public
el_u::egblkp	./v.h	/^ struct genblk_t *egblkp;     \/* link from sym to gblk for LGB type *\/$/;"	m	union:el_u	typeref:struct:el_u::genblk_t	access:public
el_u::egp	./v.h	/^ struct gate_t *egp;$/;"	m	union:el_u	typeref:struct:el_u::gate_t	access:public
el_u::eii	./v.h	/^ int32 eii;                   \/* index of inst. in mod inst list or ni *\/$/;"	m	union:el_u	access:public
el_u::eip	./v.h	/^ struct inst_t *eip;$/;"	m	union:el_u	typeref:struct:el_u::inst_t	access:public
el_u::emdp	./v.h	/^ struct mod_t *emdp;          \/* for mods in modsyms table *\/$/;"	m	union:el_u	typeref:struct:el_u::mod_t	access:public
el_u::emipdbits	./v.h	/^ struct mipd_t *emipdbits;    \/* ptr to per bit mipd record for MIPD npp *\/$/;"	m	union:el_u	typeref:struct:el_u::mipd_t	access:public
el_u::empp	./v.h	/^ struct mod_pin_t *empp;      \/* udp port or net-pin list mod. I\/O port *\/$/;"	m	union:el_u	typeref:struct:el_u::mod_pin_t	access:public
el_u::enp	./v.h	/^ struct net_t *enp;$/;"	m	union:el_u	typeref:struct:el_u::net_t	access:public
el_u::eprimp	./v.h	/^ struct primtab_t *eprimp;    \/* for prims (gates) in modsyms table *\/$/;"	m	union:el_u	typeref:struct:el_u::primtab_t	access:public
el_u::epthp	./v.h	/^ struct spcpth_t *epthp;      \/* point back to path for special id symbol *\/    $/;"	m	union:el_u	typeref:struct:el_u::spcpth_t	access:public
el_u::estp	./v.h	/^ struct st_t *estp;$/;"	m	union:el_u	typeref:struct:el_u::st_t	access:public
el_u::esyftbp	./v.h	/^ struct sysfunc_t *esyftbp;   \/* pointer to system func. table entry *\/$/;"	m	union:el_u	typeref:struct:el_u::sysfunc_t	access:public
el_u::esytbp	./v.h	/^ struct systsk_t *esytbp;     \/* pointer to system task table entry *\/$/;"	m	union:el_u	typeref:struct:el_u::systsk_t	access:public
el_u::etchgp	./v.h	/^ struct tchg_t *etchgp;       \/* time change record *\/ $/;"	m	union:el_u	typeref:struct:el_u::tchg_t	access:public
el_u::etcp	./v.h	/^ struct tchk_t *etcp;         \/* and back to time check *\/      $/;"	m	union:el_u	typeref:struct:el_u::tchk_t	access:public
el_u::etfrp	./v.h	/^ struct tfrec_t *etfrp;       \/* ptr to tf_ func\/task record *\/$/;"	m	union:el_u	typeref:struct:el_u::tfrec_t	access:public
el_u::etskp	./v.h	/^ struct task_t *etskp;        \/* also named block and function *\/$/;"	m	union:el_u	typeref:struct:el_u::task_t	access:public
el_u::eudpp	./v.h	/^ struct udp_t *eudpp;         \/* for udps in modsysm table *\/$/;"	m	union:el_u	typeref:struct:el_u::udp_t	access:public
el_u::eundefp	./v.h	/^ struct undef_t *eundefp;     \/* for undefined temp. link to list el. *\/$/;"	m	union:el_u	typeref:struct:el_u::undef_t	access:public
eligible_xprop_stmt	./v_xprop.c	/^static struct st_t *eligible_xprop_stmt(struct st_t *stp, int32 *not_eligible)$/;"	f	file:	signature:(struct st_t *stp, int32 *not_eligible)
elim_brkpt_fromcond	./v_dbg2.c	/^static int32 elim_brkpt_fromcond(struct brkpt_t *bpp)$/;"	f	file:	signature:(struct brkpt_t *bpp)
elnpp	./v.h	/^ union el_u elnpp;            \/* net pin connecting objects *\/$/;"	m	struct:net_pin_t	typeref:union:net_pin_t::el_u	access:public
elpnp	./v.h	/^ union el_u elpnp;            \/* in mod element with delay *\/$/;"	m	struct:parmnet_pin_t	typeref:union:parmnet_pin_t::el_u	access:public
elsest	./v.h	/^ struct st_t *elsest;$/;"	m	struct:if_t	typeref:struct:if_t::st_t	access:public
emdp	./v.h	/^ struct mod_t *emdp;          \/* for mods in modsyms table *\/$/;"	m	union:el_u	typeref:struct:el_u::mod_t	access:public
emipdbits	./v.h	/^ struct mipd_t *emipdbits;    \/* ptr to per bit mipd record for MIPD npp *\/$/;"	m	union:el_u	typeref:struct:el_u::mipd_t	access:public
emit1_driver	./v_ex4.c	/^static void emit1_driver(struct net_t *np, struct net_pin_t *npp,$/;"	f	file:	signature:(struct net_t *np, struct net_pin_t *npp, int32 nonz_only)
emit1_load	./v_ex4.c	/^static void emit1_load(struct net_t *np, struct net_pin_t *npp)$/;"	f	file:	signature:(struct net_t *np, struct net_pin_t *npp)
emit_1ctev_is1v_dels	./v_asmlnk.c	/^static void emit_1ctev_is1v_dels(FILE *fp, struct mod_t *mdp,$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp, struct ctev_t *ctevp, int32 *first_time)
emit_1mod_asm_insns	./v_asmlnk.c	/^static void emit_1mod_asm_insns(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
emit_1mod_commlabs	./v_asmlnk.c	/^static void emit_1mod_commlabs(FILE *fp, struct mod_t *mdp, int32 is_comm_file)$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp, int32 is_comm_file)
emit_1mod_constants	./v_asmlnk.c	/^static void emit_1mod_constants(FILE *fp, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp)
emit_1mod_data_section	./v_asmlnk.c	/^static void emit_1mod_data_section(FILE *fp, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp)
emit_1mod_nchg_glbs	./v_asmlnk.c	/^static void emit_1mod_nchg_glbs(FILE *fp, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp)
emit_1mod_pth_del_adr_labs	./v_asmlnk.c	/^static void emit_1mod_pth_del_adr_labs(FILE *fp, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp)
emit_1mod_tchk_tchg_adr_labs	./v_asmlnk.c	/^static void emit_1mod_tchk_tchg_adr_labs(FILE *fp, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp)
emit_1mod_tev_glbs	./v_asmlnk.c	/^static void emit_1mod_tev_glbs(FILE *fp, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp)
emit_1net_shorted_informs	./v_fx2.c	/^static void emit_1net_shorted_informs(struct mod_pin_t *mpp,$/;"	f	file:	signature:(struct mod_pin_t *mpp, int32 pi, struct net_t *np, int32 pnum)
emit_adradd_addl	./v_bbgen3.c	/^static int32 emit_adradd_addl(int32 srep, int32 blen, int32 op1_ti, $/;"	f	file:	signature:(int32 srep, int32 blen, int32 op1_ti, int32 op2_ti)
emit_boiler_plate_enter_next_events	./v_asmlnk.c	/^static void emit_boiler_plate_enter_next_events(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
emit_call_asl_func	./v_bbgen3.c	/^static void emit_call_asl_func(int32 call_op, int32 nargs, ...)$/;"	f	file:	signature:(int32 call_op, int32 nargs, ...)
emit_call_asl_funcandproc	./v_bbgen3.c	/^static void emit_call_asl_funcandproc(int32 call_op, int32 is_func,$/;"	f	file:	signature:(int32 call_op, int32 is_func, int32 nargs, va_list va)
emit_call_asl_proc	./v_bbgen3.c	/^static void emit_call_asl_proc(int32 call_op, int32 nargs, ...)$/;"	f	file:	signature:(int32 call_op, int32 nargs, ...)
emit_chan_size_table	./v_trch.c	/^static void emit_chan_size_table(void)$/;"	f	file:	signature:(void)
emit_comb_1bit_onebyte	./v_bbgen3.c	/^static void emit_comb_1bit_onebyte(word32 ntyp, int32 accum_sbpti, $/;"	f	file:	signature:(word32 ntyp, int32 accum_sbpti, int32 sbpti)
emit_comm_task_jmptable	./v_asmlnk.c	/^static void emit_comm_task_jmptable(FILE *fp) $/;"	f	file:	signature:(FILE *fp)
emit_dbg_idp_info_symbols	./v_asmlnk.c	/^static void emit_dbg_idp_info_symbols(FILE *fp, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp)
emit_downrel_nam_collision_informs	./v_genfx.c	/^static void emit_downrel_nam_collision_informs(char *ncmp, struct gref_t *grp)$/;"	f	file:	signature:(char *ncmp, struct gref_t *grp)
emit_dpi_1tf_export_def_wrapper	./v_dpi.c	/^static void emit_dpi_1tf_export_def_wrapper(FILE *fp, struct dpi_t *dpip)$/;"	f	file:	signature:(FILE *fp, struct dpi_t *dpip)
emit_dpi_1tf_import_call_wrapper	./v_dpi.c	/^static void emit_dpi_1tf_import_call_wrapper(FILE *fp, struct dpi_t *dpip)$/;"	f	file:	signature:(FILE *fp, struct dpi_t *dpip)
emit_dpi_arg_union_decl	./v_dpi.c	/^static void emit_dpi_arg_union_decl(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
emit_dpi_cside_proto	./v_dpi.c	/^static void emit_dpi_cside_proto(FILE *fp, struct dpi_t *dpip,$/;"	f	file:	signature:(FILE *fp, struct dpi_t *dpip, int32 assume_svdpi)
emit_dsgn_idparea	./v_asmlnk.c	/^static void emit_dsgn_idparea(FILE *fp, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp)
emit_dsgn_udptab_adr_labs	./v_asmlnk.c	/^static void emit_dsgn_udptab_adr_labs(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
emit_dsgn_wide_asm_file	./v_asmlnk.c	/^static void emit_dsgn_wide_asm_file(FILE *fp, char *comm_fnam)$/;"	f	file:	signature:(FILE *fp, char *comm_fnam)
emit_dump_scalar_port_template	./v_asmlnk.c	/^static void emit_dump_scalar_port_template(FILE *fp, struct mod_t *downmdp, $/;"	f	file:	signature:(FILE *fp, struct mod_t *downmdp, struct net_t *downnp, int32 jmp_nchg_nxt)
emit_executable_args_str	./v_asmlnk.c	/^static void emit_executable_args_str(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
emit_fixed_scalar_iconn	./v_asmlnk.c	/^static void emit_fixed_scalar_iconn(FILE *fp, int32 is_nchg_nxt, int32 is_mipd)$/;"	f	file:	signature:(FILE *fp, int32 is_nchg_nxt, int32 is_mipd)
emit_fixed_text_boiler_plate	./v_asmlnk.c	/^static void emit_fixed_text_boiler_plate(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
emit_fixed_wrapper_ptrs	./v_asmlnk.c	/^static void emit_fixed_wrapper_ptrs(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
emit_free_next_event	./v_asmlnk.c	/^static void emit_free_next_event(FILE *fp, int32 is_nbmem)$/;"	f	file:	signature:(FILE *fp, int32 is_nbmem)
emit_gev_trace	./v_sim.c	/^static void emit_gev_trace(struct gate_t *gp, struct tev_t *tevp)$/;"	f	file:	signature:(struct gate_t *gp, struct tev_t *tevp)
emit_ialst_enter_points_array	./v_asmlnk.c	/^static void emit_ialst_enter_points_array(FILE *fp, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp)
emit_jump_to_next_event	./v_asmlnk.c	/^static void emit_jump_to_next_event(FILE *fp, int32 tevp_reg)$/;"	f	file:	signature:(FILE *fp, int32 tevp_reg)
emit_last_nchglst_fence	./v_asmlnk.c	/^static void emit_last_nchglst_fence(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
emit_move_time_routine	./v_asmlnk.c	/^static void emit_move_time_routine(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
emit_move_time_routine_nonb	./v_asmlnk.c	/^static void emit_move_time_routine_nonb(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
emit_nchglds_trmsg	./v_sim.c	/^static void emit_nchglds_trmsg(struct net_t *np, struct net_pin_t *npp)$/;"	f	file:	signature:(struct net_t *np, struct net_pin_t *npp)
emit_next_event	./v_asmlnk.c	/^static void emit_next_event(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
emit_nonbid_shortwarn	./v_fx2.c	/^static void emit_nonbid_shortwarn(struct mod_pin_t *mpp,$/;"	f	file:	signature:(struct mod_pin_t *mpp, struct expr_t *ndp)
emit_one_insn	./v_asmlnk.c	/^static void emit_one_insn(FILE *fp, char *s, ...)$/;"	f	file:	signature:(FILE *fp, char *s, ...)
emit_one_mod_init_asm_file	./v_asmlnk.c	/^static void emit_one_mod_init_asm_file(FILE *fp, char *comm_fnam,$/;"	f	file:	signature:(FILE *fp, char *comm_fnam, struct mod_t *mdp, int32 is_first_mod)
emit_one_scalar_port_optim	./v_asmlnk.c	/^static void emit_one_scalar_port_optim(FILE *fp, struct net_t *downnp, $/;"	f	file:	signature:(FILE *fp, struct net_t *downnp, struct net_t *upnp, int32 inum)
emit_one_scalar_port_optim_1inst	./v_asmlnk.c	/^static void emit_one_scalar_port_optim_1inst(FILE *fp, struct mod_t *downmdp, $/;"	f	file:	signature:(FILE *fp, struct mod_t *downmdp, struct mod_t *upmdp, struct net_t *downnp, struct net_t *upnp, struct itree_t *downitp)
emit_one_scalar_port_optim_1inst_dmpv	./v_asmlnk.c	/^static void emit_one_scalar_port_optim_1inst_dmpv(FILE *fp, $/;"	f	file:	signature:(FILE *fp, struct mod_t *downmdp, struct mod_t *upmdp, struct net_t *downnp, struct net_t *upnp, struct itree_t *downitp)
emit_one_scalar_port_optim_dmpv	./v_asmlnk.c	/^static void emit_one_scalar_port_optim_dmpv(FILE *fp, struct mod_t *downmdp,$/;"	f	file:	signature:(FILE *fp, struct mod_t *downmdp, struct net_t *downnp, struct net_t *upnp, int32 inum)
emit_one_scalar_port_optim_nchg	./v_asmlnk.c	/^static void emit_one_scalar_port_optim_nchg(FILE *fp, $/;"	f	file:	signature:(FILE *fp, struct net_t *downnp, struct net_t *upnp, int32 inum, int32 jmp_nchg_nxt)
emit_one_scalar_port_optim_nchg_1inst	./v_asmlnk.c	/^static void emit_one_scalar_port_optim_nchg_1inst(FILE *fp, $/;"	f	file:	signature:(FILE *fp, struct mod_t *downmdp, struct mod_t *upmdp, struct net_t *downnp, struct net_t *upnp, struct itree_t *downitp, int32 jmp_nchg_nxt)
emit_one_scalar_port_optim_nchg_1inst_dmpv	./v_asmlnk.c	/^static void emit_one_scalar_port_optim_nchg_1inst_dmpv(FILE *fp, $/;"	f	file:	signature:(FILE *fp, struct mod_t *downmdp, struct mod_t *upmdp, struct net_t *downnp, struct net_t *upnp, struct itree_t *downitp, int32 jmp_nchg_nxt)
emit_one_scalar_port_optim_nchg_dmpv	./v_asmlnk.c	/^static void emit_one_scalar_port_optim_nchg_dmpv(FILE *fp, $/;"	f	file:	signature:(FILE *fp, struct mod_t *downmdp, struct net_t *downnp, struct net_t *upnp, int32 inum, int32 jmp_nchg_nxt)
emit_oneflowg_asm	./v_asmlnk.c	/^static void emit_oneflowg_asm(FILE *fp, struct flowg_t *fgp, struct mod_t *mdp,$/;"	f	file:	signature:(FILE *fp, struct flowg_t *fgp, struct mod_t *mdp, int32 dbg_flg)
emit_oneword_and	./v_bbgen3.c	/^static int32 emit_oneword_and(int32 op1_ti, int32 op2_ti, int32 nds_srep,$/;"	f	file:	signature:(int32 op1_ti, int32 op2_ti, int32 nds_srep, int32 srep, int32 blen)
emit_oneword_sgn_shift	./v_bbgen3.c	/^static int32 emit_oneword_sgn_shift(int32 opcod, int32 op1_ti, int32 op2_ti)$/;"	f	file:	signature:(int32 opcod, int32 op1_ti, int32 op2_ti)
emit_oneword_shift	./v_bbgen3.c	/^static int32 emit_oneword_shift(int32 opcod, int32 op1_ti, int32 op2_ti)$/;"	f	file:	signature:(int32 opcod, int32 op1_ti, int32 op2_ti)
emit_oneword_unop	./v_bbgen3.c	/^static int32 emit_oneword_unop(int32 iop, int32 op_ti)$/;"	f	file:	signature:(int32 iop, int32 op_ti)
emit_optim_scalar_port_npps	./v_asmlnk.c	/^static void emit_optim_scalar_port_npps(FILE *fp, struct flowg_t *fgp, $/;"	f	file:	signature:(FILE *fp, struct flowg_t *fgp, struct mod_t *upmdp, int32 dbg_flg)
emit_process_next_event	./v_asmlnk.c	/^static void emit_process_next_event(FILE *fp, char *jmpto_blk, $/;"	f	file:	signature:(FILE *fp, char *jmpto_blk, int32 need_pnd0_check)
emit_pthdst_bit_informs	./v_prp2.c	/^static void emit_pthdst_bit_informs(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
emit_real_binop	./v_bbgen3.c	/^static int32 emit_real_binop(int32 opcod, int32 op1_ti, int32 op2_ti)$/;"	f	file:	signature:(int32 opcod, int32 op1_ti, int32 op2_ti)
emit_real_cmp	./v_bbgen3.c	/^static void emit_real_cmp(struct bblk_t *t_bbp, struct bblk_t *f_bbp,$/;"	f	file:	signature:(struct bblk_t *t_bbp, struct bblk_t *f_bbp, int32 op1_ti, int32 op2_ti,int32 cc)
emit_reprepconta_verbmsg	./v_del.c	/^static void emit_reprepconta_verbmsg(struct conta_t *cap, struct gate_t *ogp,$/;"	f	file:	signature:(struct conta_t *cap, struct gate_t *ogp, struct mod_t *mdp, struct itree_t *itp, int32 from_vpi)
emit_reprepdev_verbmsg	./v_del.c	/^static void emit_reprepdev_verbmsg(struct gate_t *gp, struct gate_t *ogp,$/;"	f	file:	signature:(struct gate_t *gp, struct gate_t *ogp, struct mod_t *mdp, struct itree_t *itp, int32 from_vpi)
emit_reprepiopath_verbmsg	./v_del.c	/^static void emit_reprepiopath_verbmsg(struct spcpth_t *pthp,$/;"	f	file:	signature:(struct spcpth_t *pthp, struct gate_t *ogp, struct mod_t *mdp, struct itree_t *itp, int32 from_vpi)
emit_reprepnet_verbmsg	./v_del.c	/^static void emit_reprepnet_verbmsg(struct net_t *np, struct gate_t *ogp,$/;"	f	file:	signature:(struct net_t *np, struct gate_t *ogp, struct mod_t *mdp, struct itree_t *itp, int32 from_vpi)
emit_reprepstmt_verbmsg	./v_del.c	/^static void emit_reprepstmt_verbmsg(struct st_t *stp, struct gate_t *ogp,$/;"	f	file:	signature:(struct st_t *stp, struct gate_t *ogp, struct mod_t *mdp, struct itree_t *itp, int32 from_vpi)
emit_repreptclim_verbmsg	./v_del.c	/^static void emit_repreptclim_verbmsg(struct tchk_t *tcp, struct gate_t *ogp,$/;"	f	file:	signature:(struct tchk_t *tcp, struct gate_t *ogp, struct mod_t *mdp, struct itree_t *itp, word32 pnptyp, int32 from_vpi)
emit_scalar_optim_temp_no_nchg	./v_asmlnk.c	/^static void emit_scalar_optim_temp_no_nchg(FILE *fp, struct mod_t *downmdp, $/;"	f	file:	signature:(FILE *fp, struct mod_t *downmdp, struct net_t *downnp)
emit_sdfdev_verbmsg	./v_sdf.c	/^static void emit_sdfdev_verbmsg(struct gate_t *gp, struct gate_t *ogp,$/;"	f	file:	signature:(struct gate_t *gp, struct gate_t *ogp, char *celloc)
emit_sdfiopath_verbmsg	./v_sdf.c	/^static void emit_sdfiopath_verbmsg(struct spcpth_t *pthp, struct gate_t *ogp,$/;"	f	file:	signature:(struct spcpth_t *pthp, struct gate_t *ogp, char *celloc)
emit_sdflblverb_msg	./v_sdf.c	/^static void emit_sdflblverb_msg(struct net_t *np, struct xstk_t *xsp,$/;"	f	file:	signature:(struct net_t *np, struct xstk_t *xsp, char *celloc)
emit_sdftchk_verbmsg	./v_sdf.c	/^static void emit_sdftchk_verbmsg(struct tchk_t *tcp, char *tcnam,$/;"	f	file:	signature:(struct tchk_t *tcp, char *tcnam, struct gate_t *ogp, char *celloc, char *lim)
emit_shorted_informs	./v_fx2.c	/^static void emit_shorted_informs(int32 pnum)$/;"	f	file:	signature:(int32 pnum)
emit_slotend_action	./v_asmlnk.c	/^static void emit_slotend_action(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
emit_slotend_action_call	./v_asmlnk.c	/^static void emit_slotend_action_call(FILE *fp, int32 type, int32 check_monit,$/;"	f	file:	signature:(FILE *fp, int32 type, int32 check_monit, int32 slot_ndx)
emit_slotend_monit_code	./v_asmlnk.c	/^static void emit_slotend_monit_code(FILE *fp, int32 check_monit, int32 slot_ndx)$/;"	f	file:	signature:(FILE *fp, int32 check_monit, int32 slot_ndx)
emit_static_tev_events	./v_asmlnk.c	/^static void emit_static_tev_events(FILE *fp, char *s1, char *s2)$/;"	f	file:	signature:(FILE *fp, char *s1, char *s2)
emit_varunused_informs	./v_prp.c	/^static void emit_varunused_informs(struct net_t *np, struct task_t *tskp)$/;"	f	file:	signature:(struct net_t *np, struct task_t *tskp)
emit_vpiputv_evtrmsg	./v_vpi3.c	/^static void emit_vpiputv_evtrmsg(struct net_t *np, struct teputv_t *tepvp,$/;"	f	file:	signature:(struct net_t *np, struct teputv_t *tepvp, int32 nbi)
emit_vpiputv_schd_trmsg	./v_vpi3.c	/^static void emit_vpiputv_schd_trmsg(struct net_t *np, struct xstk_t *xsp,$/;"	f	file:	signature:(struct net_t *np, struct xstk_t *xsp, struct dltevlst_t *dlp, word64 *schdtimp, int32 dtyp, char *putvnam)
emit_wrapper_routine	./v_asmlnk.c	/^static void emit_wrapper_routine(FILE *fp, char *wrapper, char *call, $/;"	f	file:	signature:(FILE *fp, char *wrapper, char *call, int32 reset_suspend, int32 is_global)
emit_xprop_not_eligible	./v_xprop.c	/^static void emit_xprop_not_eligible(struct st_t *stp, struct st_t *ne_stp, $/;"	f	file:	signature:(struct st_t *stp, struct st_t *ne_stp, struct st_t *ostp, struct net_t *np, int32 reason)
empp	./v.h	/^ struct mod_pin_t *empp;      \/* udp port or net-pin list mod. I\/O port *\/$/;"	m	union:el_u	typeref:struct:el_u::mod_pin_t	access:public
empthist_msg	./v_dbg.c	/^static char *empthist_msg[] = { $/;"	v	file:
empty_dfp_flds	./v_genfx.c	/^static void empty_dfp_flds(struct dfparam_t *dfpp)$/;"	f	file:	signature:(struct dfparam_t *dfpp)
emsg_has_undef_sym_str	./v_dpi.c	/^static int32 emsg_has_undef_sym_str(char *emsg) $/;"	f	file:	signature:(char *emsg)
enable_msg	./v_dbg.c	/^static char *enable_msg[] = { $/;"	v	file:
endCondition_directive	./lz4.c	/^typedef enum { endOnOutputSize = 0, endOnInputSize = 1 } endCondition_directive;$/;"	t	typeref:enum:__anon9	file:
endOnInputSize	./lz4.c	/^typedef enum { endOnOutputSize = 0, endOnInputSize = 1 } endCondition_directive;$/;"	e	enum:__anon9	file:
endOnOutputSize	./lz4.c	/^typedef enum { endOnOutputSize = 0, endOnInputSize = 1 } endCondition_directive;$/;"	e	enum:__anon9	file:
end_gblk_tsk	./v.h	/^ struct task_t *end_gblk_tsk; $/;"	m	struct:genblk_t	typeref:struct:genblk_t::task_t	access:public
end_mark	./igen.h	/^ unsigned end_mark : 1;       \/* T => end fence of table *\/$/;"	m	struct:icas_t	access:public
end_of_stmtndx	./v.h	/^ int32 end_of_stmtndx;         \/* end of stmt index for this task *\/$/;"	m	struct:task_t	access:public
end_time	./fstapi.c	/^uint64_t start_time, end_time;$/;"	m	struct:fstReaderContext	file:	access:public
enp	./v.h	/^ struct net_t *enp;$/;"	m	union:el_u	typeref:struct:el_u::net_t	access:public
enpp	./v.h	/^ struct net_pin_t *enpp;      \/* npp of connecting edge (npp) *\/$/;"	m	struct:edge_t	typeref:struct:edge_t::net_pin_t	access:public
enter_bblks	./igen.h	/^ struct bblklst_t *enter_bblks;\/* list of entry (jump to and AFS) bblks *\/$/;"	m	struct:flowg_t	typeref:struct:flowg_t::bblklst_t	access:public
enter_cndx	./v.h	/^ int32 enter_cndx;            \/* index for enter del assign place *\/$/;"	m	struct:conta_t	access:public
enter_created	./v.h	/^ unsigned enter_created : 1;  \/* T => stmt already has an enter loc in asm *\/$/;"	m	struct:st_t	access:public
enter_dce	./v.h	/^ void (*enter_dce)(void);     \/* enter address *\/ $/;"	m	struct:net_t	access:public
enter_npp	./v.h	/^ void (*enter_npp)(void);     \/* enter address *\/ $/;"	m	struct:net_t	access:public
enter_tim	./v.h	/^ word64 enter_tim;$/;"	m	struct:q_val_t	access:public
enterptr	./v.h	/^ void (*enterptr)(void);      \/* enter address *\/ $/;"	m	struct:st_t	access:public
enterptr	./v.h	/^ void (*enterptr)(void);      \/* enter address for this event *\/ $/;"	m	struct:tev_t	access:public
enterptr	./v.h	/^ void *enterptr;             \/* enter address for cvc enter *\/$/;"	m	struct:ialst_t	access:public
enumvaluetypes	./fstapi.c	/^static const char *enumvaluetypes[] = {$/;"	v	file:
enxt	./v.h	/^ struct edge_t *enxt;$/;"	m	struct:edge_t	typeref:struct:edge_t::edge_t	access:public
eprimp	./v.h	/^ struct primtab_t *eprimp;    \/* for prims (gates) in modsyms table *\/$/;"	m	union:el_u	typeref:struct:el_u::primtab_t	access:public
epthp	./v.h	/^ struct spcpth_t *epthp;      \/* point back to path for special id symbol *\/    $/;"	m	union:el_u	typeref:struct:el_u::spcpth_t	access:public
erlangian	./v_ex2.c	/^static double erlangian(int32 *seed, int32 k, int32 mean)$/;"	f	file:	signature:(int32 *seed, int32 k, int32 mean)
estp	./v.h	/^ struct st_t *estp;$/;"	m	union:el_u	typeref:struct:el_u::st_t	access:public
esyftbp	./v.h	/^ struct sysfunc_t *esyftbp;   \/* pointer to system func. table entry *\/$/;"	m	union:el_u	typeref:struct:el_u::sysfunc_t	access:public
esytbp	./v.h	/^ struct systsk_t *esytbp;     \/* pointer to system task table entry *\/$/;"	m	union:el_u	typeref:struct:el_u::systsk_t	access:public
etchgp	./v.h	/^ struct tchg_t *etchgp;       \/* time change record *\/ $/;"	m	union:el_u	typeref:struct:el_u::tchg_t	access:public
etcp	./v.h	/^ struct tchk_t *etcp;         \/* and back to time check *\/      $/;"	m	union:el_u	typeref:struct:el_u::tchk_t	access:public
etfrp	./v.h	/^ struct tfrec_t *etfrp;       \/* ptr to tf_ func\/task record *\/$/;"	m	union:el_u	typeref:struct:el_u::tfrec_t	access:public
etime	./v.h	/^ word64 etime;                \/* absolute time not delay *\/$/;"	m	struct:tev_t	access:public
etskp	./v.h	/^ struct task_t *etskp;        \/* also named block and function *\/$/;"	m	union:el_u	typeref:struct:el_u::task_t	access:public
eudpp	./v.h	/^ struct udp_t *eudpp;         \/* for udps in modsysm table *\/$/;"	m	union:el_u	typeref:struct:el_u::udp_t	access:public
eudptabs	./v.h	/^ word32 **eudptabs;$/;"	m	struct:udptab_t	access:public
eundefp	./v.h	/^ struct undef_t *eundefp;     \/* for undefined temp. link to list el. *\/$/;"	m	union:el_u	typeref:struct:el_u::undef_t	access:public
ev2	./v.h	/^ struct vtx_t *ev2;           \/* other side edge, this side is cur vtx *\/$/;"	m	struct:edge_t	typeref:struct:edge_t::vtx_t	access:public
eval	./v_sdf.c	/^ int32 ti1, ti2, eval;$/;"	m	struct:tcterm_t	file:	access:public
eval1_arr_of_gates_rng	./v_genfx.c	/^static void eval1_arr_of_gates_rng(struct gate_t *gp, struct itree_t *itp)$/;"	f	file:	signature:(struct gate_t *gp, struct itree_t *itp)
eval1_arr_of_insts_rng	./v_genfx.c	/^static void eval1_arr_of_insts_rng(struct inst_t *ip, struct itree_t *itp)$/;"	f	file:	signature:(struct inst_t *ip, struct itree_t *itp)
eval_all_param_expr_to_nums	./v_src.c	/^static void eval_all_param_expr_to_nums(void)$/;"	f	file:	signature:(void)
eval_assign_bid_chan	./v_trch.c	/^static void eval_assign_bid_chan(struct chanrec_t *chanp) $/;"	f	file:	signature:(struct chanrec_t *chanp)
eval_assign_stbid_chan	./v_trch.c	/^static void eval_assign_stbid_chan(struct chanrec_t *chanp)$/;"	f	file:	signature:(struct chanrec_t *chanp)
eval_binary	./v_ex2.c	/^static void eval_binary(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
eval_con_oneword_binop	./v_bbgen3.c	/^static int32 eval_con_oneword_binop(int32 opcod, int32 blen, int32 op1_ti,$/;"	f	file:	signature:(int32 opcod, int32 blen, int32 op1_ti, int32 op2_ti)
eval_in_1drvr	./v_ex4.c	/^static char eval_in_1drvr(int32 *retst0, int32 *retst1, struct net_t *np,$/;"	f	file:	signature:(int32 *retst0, int32 *retst1, struct net_t *np, int32 drvbi, t_midat *loc_idp)
eval_insn	./v_bbgen3.c	/^static int32 eval_insn(int32 tntyp, int32 opcod, int32 src_amode, ...)$/;"	f	file:	signature:(int32 tntyp, int32 opcod, int32 src_amode, ...)
eval_netchg_lds	./v_sim.c	/^static void eval_netchg_lds(struct net_t *np, int32 chgi1, int32 chgi2,$/;"	f	file:	signature:(struct net_t *np, int32 chgi1, int32 chgi2, int32 is_delayed_mipd)
eval_out_1drvr	./v_ex4.c	/^static char eval_out_1drvr(int32 *retst0, int32 *retst1, struct net_t *np,$/;"	f	file:	signature:(int32 *retst0, int32 *retst1, struct net_t *np, int32 drvbi, t_midat *loc_idp)
eval_srep_insn	./v_bbgen3.c	/^static int32 eval_srep_insn(int32 tntyp, int32 opcod, int32 srtyp, int32 blen, $/;"	f	file:	signature:(int32 tntyp, int32 opcod, int32 srtyp, int32 blen, int32 src_amode, ...)
eval_srep_insn2	./v_bbgen3.c	/^static int32 eval_srep_insn2(int32 tntyp, int32 opcod, int32 srtyp, int32 blen, $/;"	f	file:	signature:(int32 tntyp, int32 opcod, int32 srtyp, int32 blen, int32 src_amode, va_list va)
eval_st_1drvr	./v_ex4.c	/^static char eval_st_1drvr(int32 *retst0, int32 *retst1, struct net_t *np,$/;"	f	file:	signature:(int32 *retst0, int32 *retst1, struct net_t *np, int32 drvbi, t_midat *loc_idp, int32 is_input)
eval_string_binary	./v_ex2.c	/^static void eval_string_binary(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
eval_tranif_onoff	./v_sim.c	/^static void eval_tranif_onoff(struct gate_t *gp)$/;"	f	file:	signature:(struct gate_t *gp)
eval_unary	./v_ex2.c	/^static void eval_unary(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
eval_wide_binary	./v_ex2.c	/^static void eval_wide_binary(struct expr_t *ndp, struct xstk_t *xsp1,$/;"	f	file:	signature:(struct expr_t *ndp, struct xstk_t *xsp1, struct xstk_t *xsp2)
eval_wide_gate	./v_ex3.c	/^static void eval_wide_gate(struct gate_t *gp, struct xstk_t *xsp)$/;"	f	file:	signature:(struct gate_t *gp, struct xstk_t *xsp)
eval_wide_unary	./v_ex2.c	/^static void eval_wide_unary(struct expr_t *ndp, struct xstk_t *xsp)$/;"	f	file:	signature:(struct expr_t *ndp, struct xstk_t *xsp)
evndxtab	./v.h	/^ struct tev_t **evndxtab; $/;"	m	struct:schdev_t	typeref:struct:schdev_t::tev_t	access:public
evnp	./v.h	/^ struct net_t *evnp;$/;"	m	struct:schdev_t	typeref:struct:schdev_t::net_t	access:public
evnt_done	./v.h	/^ unsigned evnt_done : 1;      \/* for vpi schd event, event happened *\/$/;"	m	struct:hrec_t	access:public
evnt_hp	./v.h	/^ struct h_t *evnt_hp;         \/* ptr back to event for cancelling *\/$/;"	m	struct:teputv_t	typeref:struct:teputv_t::h_t	access:public
evtr_eval_conta_rhs_ld	./v_sim.c	/^static void evtr_eval_conta_rhs_ld(struct net_pin_t *npp)$/;"	f	file:	signature:(struct net_pin_t *npp)
evtr_prop_gatechg	./v_sim.c	/^static void evtr_prop_gatechg(struct gate_t *gp, word32 i, int32 outchg)$/;"	f	file:	signature:(struct gate_t *gp, word32 i, int32 outchg)
evtr_schd_1bitpthdrvr	./v_trch.c	/^static int32 evtr_schd_1bitpthdrvr(struct net_t *np, int32 biti,$/;"	f	file:	signature:(struct net_t *np, int32 biti, struct tev_t **itevp)
evtr_schd_1pthwirebit	./v_ex3.c	/^static void evtr_schd_1pthwirebit(struct net_t *np, int32 biti, word32 nval,$/;"	f	file:	signature:(struct net_t *np, int32 biti, word32 nval, word32 oval)
evtr_sched_mipd_nchg	./v_ex3.c	/^static void evtr_sched_mipd_nchg(struct net_t *np, int32 bi,$/;"	f	file:	signature:(struct net_t *np, int32 bi, struct mipd_t *mipdp)
evtr_wdel_schd_1wirebit	./v_ex3.c	/^static void evtr_wdel_schd_1wirebit(struct net_t *np, int32 biti, word32 nval,$/;"	f	file:	signature:(struct net_t *np, int32 biti, word32 nval, word32 oval, int32 tr_decay)
exec_1arg_transcendental	./v_ex.c	/^static void exec_1arg_transcendental(int32 syfnum, struct expr_t *fax)$/;"	f	file:	signature:(int32 syfnum, struct expr_t *fax)
exec_1file_slotend_dp	./v_sim.c	/^static void exec_1file_slotend_dp(struct dp_fildesc_t *fdescp)$/;"	f	file:	signature:(struct dp_fildesc_t *fdescp)
exec_acc_gateout_vclcb	./v_acc.c	/^static int32 exec_acc_gateout_vclcb(struct t_cb_data *cbp)$/;"	f	file:	signature:(struct t_cb_data *cbp)
exec_acc_set_delays	./v_acc.c	/^static int32 exec_acc_set_delays(struct h_t *hp, int32 is_append, va_list va)$/;"	f	file:	signature:(struct h_t *hp, int32 is_append, va_list va)
exec_acc_vclcb	./v_acc.c	/^static int32 exec_acc_vclcb(struct t_cb_data *cbp)$/;"	f	file:	signature:(struct t_cb_data *cbp)
exec_casex	./v_ex.c	/^static struct st_t *exec_casex(struct st_t *stp, struct xstk_t *selxsp)$/;"	f	file:	signature:(struct st_t *stp, struct xstk_t *selxsp)
exec_casez	./v_ex.c	/^static struct st_t *exec_casez(struct st_t *stp, struct xstk_t *selxsp)$/;"	f	file:	signature:(struct st_t *stp, struct xstk_t *selxsp)
exec_cause	./v_ex.c	/^static void exec_cause(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
exec_command_file	./v_asmlnk.c	/^static int32 exec_command_file(char *cmd, char *fname)$/;"	f	file:	signature:(char *cmd, char *fname)
exec_count_drivers	./v_ex.c	/^static void exec_count_drivers(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
exec_countones	./v_ex.c	/^static void exec_countones(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
exec_dctrl	./v_ex.c	/^static int32 exec_dctrl(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
exec_expr_schg	./v_ex.c	/^static void exec_expr_schg(struct expr_t *xp)$/;"	f	file:	signature:(struct expr_t *xp)
exec_isunknown	./v_ex.c	/^static void exec_isunknown(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
exec_log_fnamchg	./v_ex.c	/^static void exec_log_fnamchg(struct expr_t *axp)$/;"	f	file:	signature:(struct expr_t *axp)
exec_namblk	./v_ex.c	/^static void exec_namblk(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
exec_onehot	./v_ex.c	/^static void exec_onehot(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
exec_onehot0	./v_ex.c	/^static void exec_onehot0(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
exec_prttimscale	./v_ex.c	/^static void exec_prttimscale(struct expr_t *axp)$/;"	f	file:	signature:(struct expr_t *axp)
exec_putv_reg_assign	./v_vpi3.c	/^static void exec_putv_reg_assign(struct net_t *np, word32 *ap, word32 *bp,$/;"	f	file:	signature:(struct net_t *np, word32 *ap, word32 *bp, int32 ndx)
exec_putv_wire_softforce	./v_vpi3.c	/^static void exec_putv_wire_softforce(struct net_t *np, word32 *ap, word32 *bp,$/;"	f	file:	signature:(struct net_t *np, word32 *ap, word32 *bp, int32 ndx)
exec_qfull	./v_ex.c	/^static void exec_qfull(struct expr_t *argxp)$/;"	f	file:	signature:(struct expr_t *argxp)
exec_real_case	./v_ex.c	/^static struct st_t *exec_real_case(struct st_t *stp, struct xstk_t *selxsp)$/;"	f	file:	signature:(struct st_t *stp, struct xstk_t *selxsp)
exec_rep_ectl_setup	./v_ex.c	/^static struct st_t *exec_rep_ectl_setup(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
exec_scanplusargs	./v_ex.c	/^static void exec_scanplusargs(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
exec_severity_disp	./v_ex.c	/^static void exec_severity_disp(struct st_t *stp, int32 stsknum, $/;"	f	file:	signature:(struct st_t *stp, int32 stsknum, struct expr_t *targs, char *sname)
exec_testplusargs	./v_ex.c	/^static void exec_testplusargs(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
exec_timefmt	./v_ex.c	/^static void exec_timefmt(struct expr_t *argxp) $/;"	f	file:	signature:(struct expr_t *argxp)
exec_trace_fnamchg	./v_ex.c	/^static void exec_trace_fnamchg(struct expr_t *argvx)$/;"	f	file:	signature:(struct expr_t *argvx)
exec_transcendental_atan2	./v_ex.c	/^static void exec_transcendental_atan2(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
exec_transcendental_hypot	./v_ex.c	/^static void exec_transcendental_hypot(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
exec_transcendental_int	./v_ex.c	/^static void exec_transcendental_int(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
exec_transcendental_minmax	./v_ex.c	/^static void exec_transcendental_minmax(int32 syfnum, struct expr_t *ndp)$/;"	f	file:	signature:(int32 syfnum, struct expr_t *ndp)
exec_transcendental_powsign	./v_ex.c	/^static void exec_transcendental_powsign(int32 sysfnum, struct expr_t *ndp)$/;"	f	file:	signature:(int32 sysfnum, struct expr_t *ndp)
exec_transcendental_sign	./v_ex.c	/^static void exec_transcendental_sign(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
exec_valueplusargs	./v_ex.c	/^static void exec_valueplusargs(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
exec_vpi_actioncbs	./v_vpi.c	/^static void exec_vpi_actioncbs(int32 cbtyp)$/;"	f	file:	signature:(int32 cbtyp)
exec_vpi_delaycbs	./v_vpi.c	/^static void exec_vpi_delaycbs(int32 cbtyp)$/;"	f	file:	signature:(int32 cbtyp)
exec_vpi_tchkerr	./v_vpi.c	/^static void exec_vpi_tchkerr(int32 cbtyp, struct tchk_t *tcp,$/;"	f	file:	signature:(int32 cbtyp, struct tchk_t *tcp, struct itree_t *itp)
exec_vpisysfunc_compiletf	./v_vpi.c	/^static void exec_vpisysfunc_compiletf(struct vpisystf_t *vstfp)$/;"	f	file:	signature:(struct vpisystf_t *vstfp)
exec_vpisystask_compiletf	./v_vpi.c	/^static void exec_vpisystask_compiletf(struct vpisystf_t *vstfp)$/;"	f	file:	signature:(struct vpisystf_t *vstfp)
exec_wait	./v_ex.c	/^static int32 exec_wait(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
exec_xprop_stmts	./v_xprop.c	/^static struct st_t *exec_xprop_stmts(struct st_t *hd_stp, $/;"	f	file:	signature:(struct st_t *hd_stp, struct xprop_t *xprop, int32 slevel)
expand_arg_macro	./v_ms.c	/^static char *expand_arg_macro(struct sy_t *syp, int32 *explen)$/;"	f	file:	signature:(struct sy_t *syp, int32 *explen)
expand_dir_pats	./v_src3.c	/^static void expand_dir_pats(struct cfglib_t *lbp, struct libel_t *lbep,$/;"	f	file:	signature:(struct cfglib_t *lbp, struct libel_t *lbep, char *pat)
expand_fg_asl_calls	./v_bbopt.c	/^static void expand_fg_asl_calls(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
expand_fg_copies	./v_bbopt.c	/^static void expand_fg_copies(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
expand_hier_files	./v_src3.c	/^static void expand_hier_files(struct cfglib_t *lbp, struct libel_t *lbep,$/;"	f	file:	signature:(struct cfglib_t *lbp, struct libel_t *lbep, struct xpndfile_t *xfp_hd)
expand_libel	./v_src3.c	/^static void expand_libel(struct libel_t *lbep, char *file)$/;"	f	file:	signature:(struct libel_t *lbep, char *file)
expand_one_asl_call	./v_bbopt.c	/^static void expand_one_asl_call(struct insn_t *ip)$/;"	f	file:	signature:(struct insn_t *ip)
expand_one_dim_foreach	./v_src2.c	/^static struct st_t *expand_one_dim_foreach(struct sy_t *array_syp, $/;"	f	file:	signature:(struct sy_t *array_syp, struct sy_t **index_syms, int32 slcnt, int32 sfnind, int32 cur_dim, int32 numdim)
expand_op_assign	./v_src2.c	/^static struct expr_t *expand_op_assign(int32 assign_toktyp, $/;"	f	file:	signature:(int32 assign_toktyp, struct expr_t *lhsndp, struct expr_t *rhsndp)
expand_single_hier	./v_src3.c	/^static int32 expand_single_hier(struct cfglib_t *lbp, struct libel_t *lbep,$/;"	f	file:	signature:(struct cfglib_t *lbp, struct libel_t *lbep, char *path)
expanded	./v.h	/^ unsigned expanded : 1;       \/* T => file has been expanded  *\/ $/;"	m	struct:libel_t	access:public
expect	./lz4.c	148;"	d	file:
expect	./lz4.c	150;"	d	file:
exponential	./v_ex2.c	/^static double exponential(int32 *seed, int32 mean) $/;"	f	file:	signature:(int32 *seed, int32 mean)
expr_canbe_in_con_func	./v_src.c	/^static int32 expr_canbe_in_con_func(struct task_t *ftskp, struct expr_t *xp,$/;"	f	file:	signature:(struct task_t *ftskp, struct expr_t *xp, int32 is_con_cntxt)
expr_correct_objtypval	./v_vpi3.c	/^static void expr_correct_objtypval(struct expr_t *xp, p_vpi_value value_p)  $/;"	f	file:	signature:(struct expr_t *xp, p_vpi_value value_p)
expr_decl_lvalue	./v_fx2.c	/^static int32 expr_decl_lvalue(struct expr_t *xp)$/;"	f	file:	signature:(struct expr_t *xp)
expr_has_nonpth	./v_fx3.c	/^static int32 expr_has_nonpth(struct expr_t *cndx, word32 *badop)$/;"	f	file:	signature:(struct expr_t *cndx, word32 *badop)
expr_ofs	./v.h	/^ size_t expr_ofs;             \/* dce expr idp offset *\/ $/;"	m	struct:dce_expr_t	access:public
expr_t	./v.h	/^struct expr_t {$/;"	s
expr_t::arr_select	./v.h	/^ unsigned arr_select : 1;     \/* last dimension access of array is bsel\/psel *\/$/;"	m	struct:expr_t	access:public
expr_t::cnvt_to_real	./v.h	/^ unsigned cnvt_to_real : 1;   \/* T => non real operand of real expr *\/$/;"	m	struct:expr_t	access:public
expr_t::cnvt_to_string	./v.h	/^ unsigned cnvt_to_string : 1; \/* T => convert to SV string *\/$/;"	m	struct:expr_t	access:public
expr_t::con_fcall	./v.h	/^ unsigned con_fcall : 1;      \/* T => in const cntxt, call of const func *\/$/;"	m	struct:expr_t	access:public
expr_t::consub_is	./v.h	/^ unsigned consub_is : 1;      \/* T => node will eval to IS number *\/$/;"	m	struct:expr_t	access:public
expr_t::consubxpr	./v.h	/^ unsigned consubxpr : 1;      \/* T => node will evaluate to number *\/$/;"	m	struct:expr_t	access:public
expr_t::folded	./v.h	/^ unsigned folded : 1;         \/* T => const. folded (also empty cat rep rem) *\/$/;"	m	struct:expr_t	access:public
expr_t::folded_ndx	./v.h	/^ unsigned folded_ndx : 1;     \/* constant value for multi dim array folded *\/$/;"	m	struct:expr_t	access:public
expr_t::getpatlhs	./v.h	/^ unsigned getpatlhs : 1;      \/* T => expressions is lhs of get pattern *\/$/;"	m	struct:expr_t	access:public
expr_t::has_sign	./v.h	/^ unsigned has_sign : 1;       \/* T => result must be signed *\/$/;"	m	struct:expr_t	access:public
expr_t::ibase	./v.h	/^ unsigned ibase : 3;          \/* for sized no., base char. *\/$/;"	m	struct:expr_t	access:public
expr_t::ind_noth0	./v.h	/^ unsigned ind_noth0 : 1;      \/* T => constant index has been normalized *\/$/;"	m	struct:expr_t	access:public
expr_t::is_loaded	./v.h	/^ unsigned is_loaded : 1;      \/* T => expr is loaded (passed) to wrapper *\/$/;"	m	struct:expr_t	access:public
expr_t::is_norm_ndx	./v.h	/^ unsigned is_norm_ndx : 1;    \/* T => expr is already normalize ndx *\/$/;"	m	struct:expr_t	access:public
expr_t::is_real	./v.h	/^ unsigned is_real : 1;        \/* T => expr. value is real number *\/$/;"	m	struct:expr_t	access:public
expr_t::is_string	./v.h	/^ unsigned is_string : 1;      \/* T => constant in src as string (quoted) *\/$/;"	m	struct:expr_t	access:public
expr_t::is_sv_string	./v.h	/^ unsigned is_sv_string : 1;   \/* T => expr is a SystemVerilog 'string' *\/$/;"	m	struct:expr_t	access:public
expr_t::lhsx_ndel	./v.h	/^ unsigned lhsx_ndel : 1;      \/* T => wire in lhs expr. has net delay *\/$/;"	m	struct:expr_t	access:public
expr_t::locqualnam	./v.h	/^ unsigned locqualnam : 1;     \/* T => if printing name is local qualified *\/$/;"	m	struct:expr_t	access:public
expr_t::lu	./v.h	/^ union l_u lu;                \/* left sub expr. or symbol union *\/$/;"	m	struct:expr_t	typeref:union:expr_t::l_u	access:public
expr_t::next_ndx	./v.h	/^ struct expr_t *next_ndx;     \/* pointer to next mult-dim index (select) *\/$/;"	m	struct:expr_t	typeref:struct:expr_t::expr_t	access:public
expr_t::optyp	./v.h	/^ unsigned optyp : 10;         \/* token type of node *\/$/;"	m	struct:expr_t	access:public
expr_t::post_inc_dec	./v.h	/^ unsigned post_inc_dec : 1;   \/* T => is id++ not ++id *\/$/;"	m	struct:expr_t	access:public
expr_t::rel_ndssign	./v.h	/^ unsigned rel_ndssign : 1;    \/* T => 1 bit result relational needs sign *\/$/;"	m	struct:expr_t	access:public
expr_t::ru	./v.h	/^ union r_u ru;                \/* right sub expr. or ptr. to value union *\/$/;"	m	struct:expr_t	typeref:union:expr_t::r_u	access:public
expr_t::sizdflt	./v.h	/^ unsigned sizdflt : 1;        \/* T => '[base] form but no width *\/$/;"	m	struct:expr_t	access:public
expr_t::szu	./v.h	/^ union sz_u szu;              \/* size of func tf rec. union *\/ $/;"	m	struct:expr_t	typeref:union:expr_t::sz_u	access:public
expr_t::tf_isrw	./v.h	/^ unsigned tf_isrw : 1;        \/* T => for user tf arg. - assignable (rw) *\/$/;"	m	struct:expr_t	access:public
expr_t::tgl_cant_be_const	./v.h	/^ unsigned tgl_cant_be_const: 1;\/* T => for tgl, know rhs can't be const *\/$/;"	m	struct:expr_t	access:public
expr_t::unbas_unsiz_num	./v.h	/^ unsigned unbas_unsiz_num : 1;\/* SV unsized \/unbased '0 number *\/$/;"	m	struct:expr_t	access:public
expr_t::unc_pull	./v.h	/^ unsigned unc_pull : 2;       \/* unc. pull directive value for OPEMPTY *\/$/;"	m	struct:expr_t	access:public
expr_t::unsgn_widen	./v.h	/^ unsigned unsgn_widen : 1;    \/* T => for cases unsigned widen if needed *\/$/;"	m	struct:expr_t	access:public
expr_t::unsiznum	./v.h	/^ unsigned unsiznum : 1;       \/* T => constant is unsized *\/$/;"	m	struct:expr_t	access:public
expr_t::x_is2state	./v.h	/^ unsigned x_is2state : 1;     \/* T => can be evaled as 2 state (no b part) *\/$/;"	m	struct:expr_t	access:public
expr_t::x_islhs	./v.h	/^ unsigned x_islhs : 1;        \/* T => expr. is lhs *\/$/;"	m	struct:expr_t	access:public
expr_t::x_multfi	./v.h	/^ unsigned x_multfi : 1;       \/* T => expr has multi fan-in or stren wire *\/$/;"	m	struct:expr_t	access:public
expr_t::x_stren	./v.h	/^ unsigned x_stren : 1;        \/* T => expr. is strength wire\/bs\/ps *\/$/;"	m	struct:expr_t	access:public
expr_tab	./v.h	/^ struct expr_tab_t *expr_tab; \/* table info of all sys calls in mod *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::expr_tab_t	access:public
expr_tab_t	./v.h	/^struct expr_tab_t {$/;"	s
expr_tab_t::num	./v.h	/^ int32 num;              \/* size of sys call tab *\/$/;"	m	struct:expr_tab_t	access:public
expr_tab_t::size	./v.h	/^ size_t size;            \/* mod sys call expr size *\/$/;"	m	struct:expr_tab_t	access:public
expr_tab_t::table	./v.h	/^ struct expr_t **table;  \/* per mod table of sys func call records *\/    $/;"	m	struct:expr_tab_t	typeref:struct:expr_tab_t::expr_t	access:public
exprclass_prop_vpiget	./v_vpi2.c	/^static int32 exprclass_prop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
expridtab_t	./v.h	/^struct expridtab_t {$/;"	s
expridtab_t::idfldwid	./v.h	/^ int32 idfldwid;$/;"	m	struct:expridtab_t	access:public
expridtab_t::idfnam_ind	./v.h	/^ int32 idfnam_ind;$/;"	m	struct:expridtab_t	access:public
expridtab_t::idlin_cnt	./v.h	/^ int32 idlin_cnt;$/;"	m	struct:expridtab_t	access:public
expridtab_t::idnam	./v.h	/^ char *idnam;$/;"	m	struct:expridtab_t	access:public
expris_msg	./v_dbg.c	/^static char *expris_msg[] = { $/;"	v	file:
exprlst_canbe_in_con_func	./v_src.c	/^static int32 exprlst_canbe_in_con_func(struct task_t *ftskp,$/;"	f	file:	signature:(struct task_t *ftskp, struct exprlst_t *xplp)
exprlst_t	./v.h	/^struct exprlst_t {$/;"	s
exprlst_t::num_xmatch	./v.h	/^ int32 num_xmatch;            \/* number of x\/zs in this case item *\/$/;"	m	struct:exprlst_t	access:public
exprlst_t::xp	./v.h	/^ struct expr_t *xp;$/;"	m	struct:exprlst_t	typeref:struct:exprlst_t::expr_t	access:public
exprlst_t::xpnxt	./v.h	/^ struct exprlst_t *xpnxt;$/;"	m	struct:exprlst_t	typeref:struct:exprlst_t::exprlst_t	access:public
exprobj_to_itreeloc	./v_vpi.c	/^static void exprobj_to_itreeloc(struct itree_t **itpp, struct task_t **tskpp, $/;"	f	file:	signature:(struct itree_t **itpp, struct task_t **tskpp, struct expr_t *idndp, struct h_t *hp, struct task_t *tskp)
extra_chk_edgeudp	./v_src3.c	/^static void extra_chk_edgeudp(struct udp_t *udpp)$/;"	f	file:	signature:(struct udp_t *udpp)
extra_confunc_prep	./v_prp.c	/^static void extra_confunc_prep(struct task_t *confp)$/;"	f	file:	signature:(struct task_t *confp)
extra_confunc_prep_csitemlst	./v_prp.c	/^static void extra_confunc_prep_csitemlst(struct csitem_t *csip)$/;"	f	file:	signature:(struct csitem_t *csip)
extra_confunc_prep_stlst	./v_prp.c	/^static void extra_confunc_prep_stlst(struct st_t *hdstp)$/;"	f	file:	signature:(struct st_t *hdstp)
extra_confunc_prep_stmt	./v_prp.c	/^static void extra_confunc_prep_stmt(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
extract_design_nam	./v_src3.c	/^static int32 extract_design_nam(char *libnam, char *celnam, char *desnam)$/;"	f	file:	signature:(char *libnam, char *celnam, char *desnam)
extract_libcell_nam	./v_src3.c	/^static int32 extract_libcell_nam(char *libnam, char *celnam, char *nam)$/;"	f	file:	signature:(char *libnam, char *celnam, char *nam)
extract_use_nam	./v_src3.c	/^static int32 extract_use_nam(char *libnam, char *celnam, int32 *has_config,$/;"	f	file:	signature:(char *libnam, char *celnam, int32 *has_config, char *use_spec)
extrau	./igen.h	/^ union i_extrainfo_u extrau;  \/* for special case insns ptr to extra info *\/$/;"	m	struct:insn_t	typeref:union:insn_t::i_extrainfo_u	access:public
f	./fstapi.c	/^FILE *f, *fh;$/;"	m	struct:fstReaderContext	file:	access:public
f_nam	./fstapi.c	/^char *f_nam;$/;"	m	struct:fstReaderContext	file:	access:public
fastlz_compress	./fastlz.c	/^int fastlz_compress(const void* input, int length, void* output)$/;"	f	signature:(const void* input, int length, void* output)
fastlz_compress_level	./fastlz.c	/^int fastlz_compress_level(int level, const void* input, int length, void* output)$/;"	f	signature:(int level, const void* input, int length, void* output)
fastlz_decompress	./fastlz.c	/^int fastlz_decompress(const void* input, int length, void* output, int maxout)$/;"	f	signature:(const void* input, int length, void* output, int maxout)
fastpack	./fstapi.c	/^unsigned fastpack : 1;$/;"	m	struct:fstWriterContext	file:	access:public
fcallprop_vpiget	./v_vpi2.c	/^static int32 fcallprop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
fcallstrprop_vpiget	./v_vpi2.c	/^static char *fcallstrprop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
fd_error	./v.h	/^ unsigned fd_error : 1;      \/* error indicator *\/$/;"	m	struct:fiofd_t	access:public
fd_name	./v.h	/^ char *fd_name;              \/* name of stdio file *\/$/;"	m	struct:fiofd_t	access:public
fd_s	./v.h	/^ FILE *fd_s;                 \/* corresponding OS FILE * descriptor *\/ $/;"	m	struct:fiofd_t	access:public
fg_bblkend	./igen.h	/^ struct bblk_t *fg_bblkend;   \/* end of fg alloc order bblk list *\/$/;"	m	struct:flowg_t	typeref:struct:flowg_t::bblk_t	access:public
fg_bblks	./igen.h	/^ struct bblk_t *fg_bblks;     \/* list of bblks in fg in alloc order *\/$/;"	m	struct:flowg_t	typeref:struct:flowg_t::bblk_t	access:public
fg_ihd	./igen.h	/^ struct insn_t *fg_ihd;       \/* machine insn list head for this fg *\/$/;"	m	struct:flowg_t	typeref:struct:flowg_t::insn_t	access:public
fg_itail	./igen.h	/^ struct insn_t *fg_itail;     \/* and machine list tail *\/$/;"	m	struct:flowg_t	typeref:struct:flowg_t::insn_t	access:public
fg_num_bblks	./igen.h	/^ int32 fg_num_bblks;          \/* number of bblks in flow graph *\/ $/;"	m	struct:flowg_t	access:public
fg_remove	./igen.h	/^ unsigned fg_remove : 1;      \/* T => mark for linking out *\/$/;"	m	struct:flowg_t	access:public
fg_seqno	./igen.h	/^ word32 fg_seqno;             \/* number to identify flowg *\/$/;"	m	struct:flowg_t	access:public
fg_tn_ref_tree	./igen.h	/^ struct avlhd_t *fg_tn_ref_tree;\/* tree of tmps refed (use or def) in flowg *\/$/;"	m	struct:flowg_t	typeref:struct:flowg_t::avlhd_t	access:public
fgp	./igen.h	/^ struct flowg_t *fgp;             \/* flow graph *\/$/;"	m	struct:gate_da_list_t	typeref:struct:gate_da_list_t::flowg_t	access:public
fgp	./igen.h	/^ struct flowg_t *fgp;           \/* the flowg generated for this gate *\/$/;"	m	struct:gate_conta_t	typeref:struct:gate_conta_t::flowg_t	access:public
fgp	./igen.h	/^ struct flowg_t *fgp;           \/* the flowg generated for this iconn *\/$/;"	m	struct:np_iconn_t	typeref:struct:np_iconn_t::flowg_t	access:public
fh	./fstapi.c	/^FILE *f, *fh;$/;"	m	struct:fstReaderContext	file:	access:public
fh_nam	./fstapi.c	/^char *fh_nam;$/;"	m	struct:fstReaderContext	file:	access:public
fhas_fcall	./v.h	/^ unsigned fhas_fcall : 1;     \/* T => func contains non sys fcall *\/$/;"	m	struct:task_t	access:public
fil_lin_toscope	./v_dbg2.c	/^static int32 fil_lin_toscope(int32 ifi, int32 lini, t_midat **in_idp,$/;"	f	file:	signature:(int32 ifi, int32 lini, t_midat **in_idp, struct task_t **in_tskp)
filename	./fstapi.c	/^char *filename, *filename_unpacked;$/;"	m	struct:fstReaderContext	file:	access:public
filename	./fstapi.c	/^char *filename;$/;"	m	struct:fstWriterContext	file:	access:public
filename_unpacked	./fstapi.c	/^char *filename, *filename_unpacked;$/;"	m	struct:fstReaderContext	file:	access:public
filetype	./fstapi.c	/^unsigned char filetype; \/* default is 0, FST_FT_VERILOG *\/$/;"	m	struct:fstWriterContext	file:	access:public
filetype	./fstapi.c	/^unsigned char filetype;$/;"	m	struct:fstReaderContext	file:	access:public
fill_1col_isdel	./v_del.c	/^static void fill_1col_isdel(word64 *dtab, int32 coli, struct expr_t *xp,$/;"	f	file:	signature:(word64 *dtab, int32 coli, struct expr_t *xp, int32 stride)
fill_1mod_ctevs	./v_asmlnk.c	/^static void fill_1mod_ctevs(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
fill_addtolst_ctev_flds	./v_asmlnk.c	/^static void fill_addtolst_ctev_flds(struct mod_t *mdp, struct ctev_t *ctevp,$/;"	f	file:	signature:(struct mod_t *mdp, struct ctev_t *ctevp, struct ctev_t **last_ctevpp, int32 ca_ndx, int32 wev_ndx, struct gate_t *gp)
fill_all_dpi_recs	./v_dpi.c	/^static void fill_all_dpi_recs(void)$/;"	f	file:	signature:(void)
fill_bit_drv_handle	./v_vpi2.c	/^static int32 fill_bit_drv_handle(struct h_t *hp, struct hrec_t *hrp, int32 bi,$/;"	f	file:	signature:(struct h_t *hp, struct hrec_t *hrp, int32 bi, int32 ri1, int32 ri2, struct net_pin_t *npp)
fill_bit_ld_handle	./v_vpi2.c	/^static int32 fill_bit_ld_handle(struct h_t *hp, struct hrec_t *hrp, int32 bi,$/;"	f	file:	signature:(struct h_t *hp, struct hrec_t *hrp, int32 bi, int32 ri1, int32 ri2, struct net_pin_t *npp)
fill_castabs	./v_bbgen.c	/^static void fill_castabs(struct st_t *stp, struct icas_t *icastab, $/;"	f	file:	signature:(struct st_t *stp, struct icas_t *icastab, struct icasx_t *icasxtab)
fill_dpi_arginfo_tab	./v_dpi.c	/^static void fill_dpi_arginfo_tab(struct task_t *tskp)$/;"	f	file:	signature:(struct task_t *tskp)
fill_drv_handle	./v_vpi2.c	/^static int32 fill_drv_handle(struct h_t *hp, struct hrec_t *hrp,$/;"	f	file:	signature:(struct h_t *hp, struct hrec_t *hrp, struct net_pin_t *npp)
fill_glbcmps_from_xmrcmp	./v_genfx.c	/^static void fill_glbcmps_from_xmrcmp(struct gref_t *grp)$/;"	f	file:	signature:(struct gref_t *grp)
fill_gref_from_xmrcmps	./v_genfx.c	/^static void fill_gref_from_xmrcmps(struct gref_t *grp)$/;"	f	file:	signature:(struct gref_t *grp)
fill_ld_handle	./v_vpi2.c	/^static int32 fill_ld_handle(struct h_t *hp, struct hrec_t *hrp,$/;"	f	file:	signature:(struct h_t *hp, struct hrec_t *hrp, struct net_pin_t *npp)
fill_mda_wire_sym_wrkstab	./v_prp2.c	/^static void fill_mda_wire_sym_wrkstab(struct net_t *np, struct mda_t *mdap,$/;"	f	file:	signature:(struct net_t *np, struct mda_t *mdap, char *s1, int32 dim, struct mod_t *decl_mdp)
fill_mda_wire_wrkstab	./v_fx2.c	/^static void fill_mda_wire_wrkstab(struct net_t *np, struct mda_t *mdap,$/;"	f	file:	signature:(struct net_t *np, struct mda_t *mdap, char *s1, int32 dim)
fill_near_evtab	./v_dbg2.c	/^static void fill_near_evtab(int32 ntevs, int32 tefilt)$/;"	f	file:	signature:(int32 ntevs, int32 tefilt)
fill_new_ft_node	./v_bbgen3.c	/^static struct ftval_t *fill_new_ft_node(int32 *res_ti, int32 tntyp,$/;"	f	file:	signature:(int32 *res_ti, int32 tntyp, int32 srtyp, int32 opwid, struct ftval_t *new_ftvalp)
fill_port_npps	./v_trch.c	/^static void fill_port_npps(struct net_t *np, int32 bi,$/;"	f	file:	signature:(struct net_t *np, int32 bi, struct itree_t *cur_itp)
fill_scopehandle	./v_vpi.c	/^static void fill_scopehandle(struct hrec_t *hrp, struct symtab_t *sytp)$/;"	f	file:	signature:(struct hrec_t *hrp, struct symtab_t *sytp)
fill_valuep	./v_vpi3.c	/^static void fill_valuep(p_vpi_value value_p, struct xstk_t *xsp,$/;"	f	file:	signature:(p_vpi_value value_p, struct xstk_t *xsp, word32 vwtyp, int32 vwid)
fill_vec_bidvtxs	./v_trch.c	/^static void fill_vec_bidvtxs(struct chanrec_t *nvec_chanp,$/;"	f	file:	signature:(struct chanrec_t *nvec_chanp, struct chanrec_t *chanp)
fill_vpi_delay	./v_vpi3.c	/^static void fill_vpi_delay(p_vpi_delay delay_p, word64 *tim, int32 nvals,$/;"	f	file:	signature:(p_vpi_delay delay_p, word64 *tim, int32 nvals, word32 otyp, struct mod_t *mdp)
fill_vpival_fromacc	./v_acc.c	/^static int32 fill_vpival_fromacc(struct t_vpi_value *vpivalp,$/;"	f	file:	signature:(struct t_vpi_value *vpivalp, struct t_setval_value *accvalp)
fill_wire_arr_wrkstab	./v_fx2.c	/^static void fill_wire_arr_wrkstab(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
fillchk_tim	./v_vpi3.c	/^static int32 fillchk_tim(word64 *tim, int32 *negdel, p_vpi_delay delay_p,  $/;"	f	file:	signature:(word64 *tim, int32 *negdel, p_vpi_delay delay_p, t_midat *idp)
filpos_t	./v.h	/^struct filpos_t {$/;"	s
filpos_t::lpostab	./v.h	/^ int32 *lpostab;$/;"	m	struct:filpos_t	access:public
filpos_t::nlines	./v.h	/^ int32 nlines;$/;"	m	struct:filpos_t	access:public
filter_bitchange	./v_sim.c	/^static int32 filter_bitchange(word32 new_eval, size_t old_ofs,$/;"	f	file:	signature:(word32 new_eval, size_t old_ofs, word32 signat, struct expr_t *condx)
filter_edge_expr	./v_sim.c	/^static int32 filter_edge_expr(struct dce_expr_t *dcexp, word32 *oval,$/;"	f	file:	signature:(struct dce_expr_t *dcexp, word32 *oval, word32 *nval)
filtidp	./v.h	/^ t_midat *filtidp;            \/* for root or uprel xmr filt to 1 inst *\/$/;"	m	union:np_u	access:public
final_machine_insn_fixup	./v_bbopt.c	/^static void final_machine_insn_fixup(struct flowg_t *fgp, struct mod_t *mdp)$/;"	f	file:	signature:(struct flowg_t *fgp, struct mod_t *mdp)
find2_incloc	./v_dbg2.c	/^static struct incloc_t *find2_incloc(int32 ifi)$/;"	f	file:	signature:(int32 ifi)
find3_incloc	./v_dbg2.c	/^static struct incloc_t *find3_incloc(int32 ifi, int32 call_ifi)$/;"	f	file:	signature:(int32 ifi, int32 call_ifi)
find_1timchg_psnpp	./v_prp2.c	/^static struct net_pin_t *find_1timchg_psnpp(struct net_t *snp, int32 bi,$/;"	f	file:	signature:(struct net_t *snp, int32 bi, int32 subtyp)
find_1under_itp	./v_sdf.c	/^static struct itree_t *find_1under_itp(struct mod_t *ctmdp)$/;"	f	file:	signature:(struct mod_t *ctmdp)
find_acc_attr_param	./v_acc.c	/^static struct h_t *find_acc_attr_param(struct h_t *hp, char *anam, char *rtnam)$/;"	f	file:	signature:(struct h_t *hp, char *anam, char *rtnam)
find_add_formal_tmptab	./v_bbgen3.c	/^static int32 find_add_formal_tmptab(int32 opcode, int32 tntyp, int32 srtyp,$/;"	f	file:	signature:(int32 opcode, int32 tntyp, int32 srtyp, int32 reswid, struct amode_t *amp1, struct amode_t *amp2)
find_add_np_iconn_expr	./v_bbgen3.c	/^static struct np_iconn_t *find_add_np_iconn_expr(struct avlhd_t *avlhp,$/;"	f	file:	signature:(struct avlhd_t *avlhp, struct expr_t *up_rhsx, struct net_pin_t *npp)
find_addradd_tn	./v_bbgen3.c	/^static struct adradd_dup_t *find_addradd_tn(int32 srep, int32 blen,$/;"	f	file:	signature:(int32 srep, int32 blen, int32 par_ti, size_t offset)
find_afterdflt	./v_dbg2.c	/^static struct st_t *find_afterdflt(struct csitem_t *dflt_csip)$/;"	f	file:	signature:(struct csitem_t *dflt_csip)
find_aiter_rec	./v_acc.c	/^static struct acciter_t *find_aiter_rec(struct acciter_t *aip,$/;"	f	file:	signature:(struct acciter_t *aip, struct h_t *lasthp)
find_bldxpr_tfsy	./v_src2.c	/^static struct expr_t *find_bldxpr_tfsy(char *nam, int32 tfsytyp)$/;"	f	file:	signature:(char *nam, int32 tfsytyp)
find_bpp	./v_dbg2.c	/^static struct brkpt_t *find_bpp(int32 bpnum)$/;"	f	file:	signature:(int32 bpnum)
find_case_item	./v_xprop.c	/^static int32 find_case_item(struct expr_t *xp, struct expr_t **xptab, int32 num)$/;"	f	file:	signature:(struct expr_t *xp, struct expr_t **xptab, int32 num)
find_case_stp	./v_dbg2.c	/^static struct st_t *find_case_stp(struct st_t *last_stp, int32 ifi, int32 lini)$/;"	f	file:	signature:(struct st_t *last_stp, int32 ifi, int32 lini)
find_cat_oside_xp	./v_trch.c	/^static struct expr_t *find_cat_oside_xp(struct expr_t *xp, int32 catbi,$/;"	f	file:	signature:(struct expr_t *xp, int32 catbi, int32 *catel_bi)
find_catxp_frombit	./v_vpi.c	/^static struct expr_t *find_catxp_frombit(struct expr_t *catxp, int32 bi,$/;"	f	file:	signature:(struct expr_t *catxp, int32 bi, int32 *newbi)
find_cell_in_cfglib	./v_src3.c	/^static struct mod_t *find_cell_in_cfglib(char *celnam, struct cfglib_t *lbp)$/;"	f	file:	signature:(char *celnam, struct cfglib_t *lbp)
find_cfglib	./v_src3.c	/^static struct cfglib_t *find_cfglib(char *lbnam)$/;"	f	file:	signature:(char *lbnam)
find_chgvtx_vicinity	./v_trch.c	/^static void find_chgvtx_vicinity(struct vtxlst_t *vtxlp)$/;"	f	file:	signature:(struct vtxlst_t *vtxlp)
find_deepest_level	./v_cnv.c	/^static int32 find_deepest_level(struct optlst_t *olphd)$/;"	f	file:	signature:(struct optlst_t *olphd)
find_dfp_inmod_sym	./v_genfx.c	/^static struct sy_t *find_dfp_inmod_sym(struct gref_t *grp,$/;"	f	file:	signature:(struct gref_t *grp, struct expr_t *gcmp_ndp, struct sy_t *syp, struct symtab_t *cur_sytp)
find_dfpbot_mod	./v_genfx.c	/^static struct mod_t *find_dfpbot_mod(struct dfparam_t *dfpp)$/;"	f	file:	signature:(struct dfparam_t *dfpp)
find_gate_drvr	./v_sdf.c	/^static struct net_pin_t *find_gate_drvr(struct net_pin_t *nxt_npp,$/;"	f	file:	signature:(struct net_pin_t *nxt_npp, struct net_t *np, int32 bi)
find_gate_expr	./v_bbgen3.c	/^static struct gate_conta_t *find_gate_expr(struct avlhd_t *avlhp,$/;"	f	file:	signature:(struct avlhd_t *avlhp, struct expr_t *xp)
find_gen_case_gblk	./v_genfx.c	/^static struct genblk_t *find_gen_case_gblk(struct genitem_t *gip)$/;"	f	file:	signature:(struct genitem_t *gip)
find_hgh_sametskthrd	./v_ex.c	/^static struct thread_t *find_hgh_sametskthrd(struct thread_t *dsthp)$/;"	f	file:	signature:(struct thread_t *dsthp)
find_hier	./v_src3.c	/^static void find_hier(struct libel_t *lbep, struct xpndfile_t *xfp_hd, $/;"	f	file:	signature:(struct libel_t *lbep, struct xpndfile_t *xfp_hd, char *bpath, char *path)
find_incloc	./v_dbg2.c	/^static struct incloc_t *find_incloc(int32 ifi)$/;"	f	file:	signature:(int32 ifi)
find_infil_ind	./v_dbg2.c	/^static int32 find_infil_ind(char *nam)$/;"	f	file:	signature:(char *nam)
find_intercon_gate_drvr	./v_sdf.c	/^static struct net_pin_t *find_intercon_gate_drvr(struct itree_t **in_itp,$/;"	f	file:	signature:(struct itree_t **in_itp, struct mod_pin_t *mpp, int32 i1, struct mod_t *mdp, char *sdfkw)
find_lstofsts_stp	./v_dbg2.c	/^static struct st_t *find_lstofsts_stp(struct st_t *hdrstp, int32 ifi, int32 lini)$/;"	f	file:	signature:(struct st_t *hdrstp, int32 ifi, int32 lini)
find_mac_formal_arg	./v_ms.c	/^static int32 find_mac_formal_arg(char *argnam)$/;"	f	file:	signature:(char *argnam)
find_max_rng_drvr_state	./v_fx2.c	/^static int32 find_max_rng_drvr_state(struct net_t *np, int32 ri1, int32 ri2)$/;"	f	file:	signature:(struct net_t *np, int32 ri1, int32 ri2)
find_mustsplit_dfps	./v_genfx.c	/^static void find_mustsplit_dfps(void)$/;"	f	file:	signature:(void)
find_nxtstp	./v_dbg2.c	/^static struct st_t *find_nxtstp(struct st_t *last_stp, int32 ifi, int32 lini)$/;"	f	file:	signature:(struct st_t *last_stp, int32 ifi, int32 lini)
find_opt	./cvc.c	/^static int32 find_opt(char *aval)$/;"	f	file:	signature:(char *aval)
find_optcfg_xmr_object	./v_src3.c	/^static struct sy_t *find_optcfg_xmr_object(struct oc_vtok_t *ocvtp,$/;"	f	file:	signature:(struct oc_vtok_t *ocvtp, struct itree_t **ret_itp)
find_q_from_id	./v_ex.c	/^static struct q_hdr_t *find_q_from_id(int32 id)$/;"	f	file:	signature:(int32 id)
find_split_mod	./v_genfx.c	/^static struct mod_t *find_split_mod(struct mod_t *imdp, struct inst_t *new_ip,$/;"	f	file:	signature:(struct mod_t *imdp, struct inst_t *new_ip, int32 mlevel)
find_systf_sym	./v_src2.c	/^static struct sy_t *find_systf_sym(struct expridtab_t *xidp)$/;"	f	file:	signature:(struct expridtab_t *xidp)
find_time	./v_sim.c	/^static struct tqnode_t *find_time(word64 t, struct tqnode_t **pn)$/;"	f	file:	signature:(word64 t, struct tqnode_t **pn)
find_tni	./v_regasn.c	/^static int32 find_tni(struct tn_list_t *tlstp, int32 val)$/;"	f	file:	signature:(struct tn_list_t *tlstp, int32 val)
find_var_in_xpr	./v_prp2.c	/^static int32 find_var_in_xpr(struct expr_t *xp, struct net_t *np, $/;"	f	file:	signature:(struct expr_t *xp, struct net_t *np, int32 *wire_sel)
find_xbase	./v_fx3.c	/^static int32 find_xbase(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
find_xmr_inmod_sym	./v_genfx.c	/^static struct sy_t *find_xmr_inmod_sym(struct gref_t *grp, int32 cur_xmri,$/;"	f	file:	signature:(struct gref_t *grp, int32 cur_xmri, struct sy_t *syp, struct symtab_t *cur_sytp)
findmatch_net_vcl_dce	./v_acc.c	/^static struct vclrec_t *findmatch_net_vcl_dce(struct h_t *hp, int32 (*consumer)(),$/;"	f	file:	signature:(struct h_t *hp, int32 (*consumer)(), char *user_data)
findmatch_term_vcl_dce	./v_acc.c	/^static struct vclrec_t *findmatch_term_vcl_dce(struct h_t *hp,$/;"	f	file:	signature:(struct h_t *hp, int32 (*consumer)(), char *user_data)
fio_arr_fread	./v_ex.c	/^static int32 fio_arr_fread(struct expr_t *lhsx, int32 fd,$/;"	f	file:	signature:(struct expr_t *lhsx, int32 fd, struct expr_t *startxp, struct expr_t *cntxp)
fio_do_fclose	./v_ex.c	/^static void fio_do_fclose(struct expr_t *axp)$/;"	f	file:	signature:(struct expr_t *axp)
fio_do_fopen	./v_ex.c	/^static word32 fio_do_fopen(struct expr_t *axp, struct expr_t *mode_xp)$/;"	f	file:	signature:(struct expr_t *axp, struct expr_t *mode_xp)
fio_exec_scanf	./v_ex.c	/^static int32 fio_exec_scanf(FILE *f, struct expr_t *axp)$/;"	f	file:	signature:(FILE *f, struct expr_t *axp)
fio_ferror	./v_ex.c	/^static int32 fio_ferror(struct expr_t *fdxp, struct expr_t *str_xp)$/;"	f	file:	signature:(struct expr_t *fdxp, struct expr_t *str_xp)
fio_fflush	./v_ex.c	/^static void fio_fflush(struct expr_t *axp)$/;"	f	file:	signature:(struct expr_t *axp)
fio_fgets	./v_ex.c	/^static int32 fio_fgets(struct expr_t *str_xp, struct expr_t *fdxp)$/;"	f	file:	signature:(struct expr_t *str_xp, struct expr_t *fdxp)
fio_fopen	./v_ex.c	/^static word32 fio_fopen(char *chp, char *fmode)$/;"	f	file:	signature:(char *chp, char *fmode)
fio_fread	./v_ex.c	/^static int32 fio_fread(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
fio_fscanf	./v_ex.c	/^static int32 fio_fscanf(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
fio_fseek	./v_ex.c	/^static int32 fio_fseek(struct expr_t *fdxp, struct expr_t *ofs_xp,$/;"	f	file:	signature:(struct expr_t *fdxp, struct expr_t *ofs_xp, struct expr_t *whence_xp)
fio_psprintf	./v_ex.c	/^static void fio_psprintf(struct expr_t *axp)$/;"	f	file:	signature:(struct expr_t *axp)
fio_rewind	./v_ex.c	/^static int32 fio_rewind(struct expr_t *fdxp)$/;"	f	file:	signature:(struct expr_t *fdxp)
fio_sformat	./v_ex.c	/^static void fio_sformat(struct expr_t *axp)$/;"	f	file:	signature:(struct expr_t *axp)
fio_sscanf	./v_ex.c	/^static int32 fio_sscanf(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
fio_swrite	./v_ex.c	/^static void fio_swrite(struct expr_t *axp, int32 dflt_fmt)$/;"	f	file:	signature:(struct expr_t *axp, int32 dflt_fmt)
fio_ungetc	./v_ex.c	/^static int32 fio_ungetc(struct expr_t *chxp, struct expr_t *fdxp)$/;"	f	file:	signature:(struct expr_t *chxp, struct expr_t *fdxp)
fiofd_t	./v.h	/^struct fiofd_t {$/;"	s
fiofd_t::fd_error	./v.h	/^ unsigned fd_error : 1;      \/* error indicator *\/$/;"	m	struct:fiofd_t	access:public
fiofd_t::fd_name	./v.h	/^ char *fd_name;              \/* name of stdio file *\/$/;"	m	struct:fiofd_t	access:public
fiofd_t::fd_s	./v.h	/^ FILE *fd_s;                 \/* corresponding OS FILE * descriptor *\/ $/;"	m	struct:fiofd_t	access:public
firsttime	./fstapi.c	/^uint64_t firsttime;$/;"	m	struct:fstWriterContext	file:	access:public
fix_binop_trk_opand	./v_bbopt.c	/^static void fix_binop_trk_opand(struct insn_t *ip, int32 is_src)$/;"	f	file:	signature:(struct insn_t *ip, int32 is_src)
fix_gen_msytab_conflict	./v_genfx.c	/^static void fix_gen_msytab_conflict(char *s1, struct mod_t *mdp)$/;"	f	file:	signature:(char *s1, struct mod_t *mdp)
fix_modcell_nl	./v_genfx.c	/^static int32 fix_modcell_nl(void)$/;"	f	file:	signature:(void)
fix_nlo_arrndx_insn	./v_bbopt.c	/^static void fix_nlo_arrndx_insn(struct insn_t *ip)$/;"	f	file:	signature:(struct insn_t *ip)
fix_port_conns	./v_fx.c	/^static void fix_port_conns(void)$/;"	f	file:	signature:(void)
fix_rmbblk_ndxjmp_insn	./v_bbopt.c	/^static void fix_rmbblk_ndxjmp_insn(struct bblk_t *new_bbp,$/;"	f	file:	signature:(struct bblk_t *new_bbp, struct insn_t *ndxjmp_ip, int32 rm_seqno)
fixup_1dfp_xmrcmps	./v_genfx.c	/^static void fixup_1dfp_xmrcmps(struct gref_t *grp)$/;"	f	file:	signature:(struct gref_t *grp)
fixup_1fg_2memrefs	./v_bbopt.c	/^static void fixup_1fg_2memrefs(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
fixup_64bit_constants	./v_bbopt.c	/^static void fixup_64bit_constants(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
fixup_coalesced_away_tns	./v_bbopt.c	/^static void fixup_coalesced_away_tns(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
fixup_dpi_export_args	./v_bbopt.c	/^static void fixup_dpi_export_args(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
fixup_idps_where_used_itp	./v_prp.c	/^static void fixup_idps_where_used_itp(void)$/;"	f	file:	signature:(void)
fixup_large_model	./v_bbopt.c	/^static void fixup_large_model(struct flowg_t *fgp, struct mod_t *mdp)$/;"	f	file:	signature:(struct flowg_t *fgp, struct mod_t *mdp)
fixup_nl	./v_genfx.c	/^static int32 fixup_nl(void)$/;"	f	file:	signature:(void)
fixup_nl_linkout_gencells	./v_genfx.c	/^static void fixup_nl_linkout_gencells(void)$/;"	f	file:	signature:(void)
fixup_one_generate_mod	./v_genfx.c	/^static int32 fixup_one_generate_mod(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
fixup_reverse_cond_jumps	./v_bbopt.c	/^static void fixup_reverse_cond_jumps(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
fj	./v.h	/^ struct fj_t fj;              \/* fj 2 tabs (1 stps and 1 fj c code labs *\/$/;"	m	union:st_u	typeref:struct:st_u::fj_t	access:public
fj_t	./v.h	/^struct fj_t {$/;"	s
fj_t::fjlabs	./v.h	/^ int32 *fjlabs;               \/* ptr to tab of fj start lab nums *\/$/;"	m	struct:fj_t	access:public
fj_t::fjstps	./v.h	/^ struct st_t **fjstps;        \/* ptr to tab (nil ended) fork-join stmts *\/$/;"	m	struct:fj_t	typeref:struct:fj_t::st_t	access:public
fjlabs	./v.h	/^ int32 *fjlabs;               \/* ptr to tab of fj start lab nums *\/$/;"	m	struct:fj_t	access:public
fjstps	./v.h	/^ struct st_t **fjstps;        \/* ptr to tab (nil ended) fork-join stmts *\/$/;"	m	struct:fj_t	typeref:struct:fj_t::st_t	access:public
flat_hier_alloc_len	./fstapi.c	/^int flat_hier_alloc_len;$/;"	m	struct:fstReaderContext	file:	access:public
flatinum	./v.h	/^ int32 flatinum;              \/* num. of flattened instances of module *\/$/;"	m	struct:mod_t	access:public
flow_graphs_needs_call_save_regs	./v_asmlnk.c	/^static int32 flow_graphs_needs_call_save_regs(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
flowg	./v.h	/^ struct flowg_t *flowg;       \/* aux flow graph for conta *\/$/;"	m	struct:conta_t	typeref:struct:conta_t::flowg_t	access:public
flowg_jumps_to_next_event	./v_bbgen3.c	/^static int32 flowg_jumps_to_next_event(int32 flowgtyp)$/;"	f	file:	signature:(int32 flowgtyp)
flowg_t	./igen.h	/^struct flowg_t {$/;"	s
flowg_t::do_not_load_idp	./igen.h	/^ unsigned do_not_load_idp : 1;\/* T => do not use dedicated reg for idp *\/$/;"	m	struct:flowg_t	access:public
flowg_t::ebp_wrd_area_siz	./igen.h	/^ int32 ebp_wrd_area_siz;      \/* size of flow graph stk spill area in wrds *\/ $/;"	m	struct:flowg_t	access:public
flowg_t::enter_bblks	./igen.h	/^ struct bblklst_t *enter_bblks;\/* list of entry (jump to and AFS) bblks *\/$/;"	m	struct:flowg_t	typeref:struct:flowg_t::bblklst_t	access:public
flowg_t::fg_bblkend	./igen.h	/^ struct bblk_t *fg_bblkend;   \/* end of fg alloc order bblk list *\/$/;"	m	struct:flowg_t	typeref:struct:flowg_t::bblk_t	access:public
flowg_t::fg_bblks	./igen.h	/^ struct bblk_t *fg_bblks;     \/* list of bblks in fg in alloc order *\/$/;"	m	struct:flowg_t	typeref:struct:flowg_t::bblk_t	access:public
flowg_t::fg_ihd	./igen.h	/^ struct insn_t *fg_ihd;       \/* machine insn list head for this fg *\/$/;"	m	struct:flowg_t	typeref:struct:flowg_t::insn_t	access:public
flowg_t::fg_itail	./igen.h	/^ struct insn_t *fg_itail;     \/* and machine list tail *\/$/;"	m	struct:flowg_t	typeref:struct:flowg_t::insn_t	access:public
flowg_t::fg_num_bblks	./igen.h	/^ int32 fg_num_bblks;          \/* number of bblks in flow graph *\/ $/;"	m	struct:flowg_t	access:public
flowg_t::fg_remove	./igen.h	/^ unsigned fg_remove : 1;      \/* T => mark for linking out *\/$/;"	m	struct:flowg_t	access:public
flowg_t::fg_seqno	./igen.h	/^ word32 fg_seqno;             \/* number to identify flowg *\/$/;"	m	struct:flowg_t	access:public
flowg_t::fg_tn_ref_tree	./igen.h	/^ struct avlhd_t *fg_tn_ref_tree;\/* tree of tmps refed (use or def) in flowg *\/$/;"	m	struct:flowg_t	typeref:struct:flowg_t::avlhd_t	access:public
flowg_t::flowgnxt	./igen.h	/^ struct flowg_t *flowgnxt;$/;"	m	struct:flowg_t	typeref:struct:flowg_t::flowg_t	access:public
flowg_t::flowgtyp	./igen.h	/^ unsigned flowgtyp : 8;$/;"	m	struct:flowg_t	access:public
flowg_t::has_nb_pnd0s	./igen.h	/^ unsigned has_nb_pnd0s : 1;   \/* T => fg is nb which checks if pnd0 *\/$/;"	m	struct:flowg_t	access:public
flowg_t::has_overflow	./igen.h	/^ unsigned has_overflow : 1;   \/* T => has overflow tmps *\/$/;"	m	struct:flowg_t	access:public
flowg_t::has_real_ops	./igen.h	/^ unsigned has_real_ops : 1;   \/* T => flowgraph uses special xmm regs *\/$/;"	m	struct:flowg_t	access:public
flowg_t::has_thread_ctrl	./igen.h	/^ unsigned has_thread_ctrl : 1; \/* T => has thread entered from stp->enterptr *\/$/;"	m	struct:flowg_t	access:public
flowg_t::is_nb	./igen.h	/^ unsigned is_nb : 1;          \/* T => fg is nb *\/$/;"	m	struct:flowg_t	access:public
flowg_t::is_nb_free	./igen.h	/^ unsigned is_nb_free : 1;     \/* T => nb has free version *\/$/;"	m	struct:flowg_t	access:public
flowg_t::is_nb_rhs_mem	./igen.h	/^ unsigned is_nb_rhs_mem : 1;  \/* T => fg is nb with possible malloc mem *\/$/;"	m	struct:flowg_t	access:public
flowg_t::max_call_args	./igen.h	/^ int32 max_call_args;         \/* max num args passed to call *\/$/;"	m	struct:flowg_t	access:public
flowg_t::max_dpi_wrds	./igen.h	/^ int32 max_dpi_wrds;          \/* max num args (wrds) passed to dpi call *\/$/;"	m	struct:flowg_t	access:public
flowg_t::optim_port_np	./igen.h	/^ struct net_t *optim_port_np; \/* optimize port net for fixed style fg *\/$/;"	m	struct:flowg_t	typeref:struct:flowg_t::net_t	access:public
flowg_t::optim_scalar_port	./igen.h	/^ unsigned optim_scalar_port : 1; \/* T => has optimized scalar port *\/$/;"	m	struct:flowg_t	access:public
flowg_t::predoms	./igen.h	/^ int32 *predoms;              \/* predominator tree stored as array *\/$/;"	m	struct:flowg_t	access:public
flowg_t::uses_ebp	./igen.h	/^ unsigned uses_ebp : 1;       \/* T => uses %ebp in xjmp region *\/$/;"	m	struct:flowg_t	access:public
flowg_t::uses_ebx	./igen.h	/^ unsigned uses_ebx : 1;       \/* T => uses %ebx in xjmp region *\/$/;"	m	struct:flowg_t	access:public
flowg_t::uses_edi	./igen.h	/^ unsigned uses_edi : 1;       \/* T => uses %edi in xjmp region *\/$/;"	m	struct:flowg_t	access:public
flowg_t::uses_esi	./igen.h	/^ unsigned uses_esi : 1;       \/* T => uses %esi in xjmp region *\/$/;"	m	struct:flowg_t	access:public
flowg_t::uses_idp	./igen.h	/^ unsigned uses_idp : 1;       \/* T => uses accesses __idp storage area *\/$/;"	m	struct:flowg_t	access:public
flowg_t::uses_r12	./igen.h	/^ unsigned uses_r12 : 1;       \/* T => uses r12 in fg *\/$/;"	m	struct:flowg_t	access:public
flowg_t::uses_r13	./igen.h	/^ unsigned uses_r13 : 1;       \/* T => uses r12 in fg *\/$/;"	m	struct:flowg_t	access:public
flowg_t::uses_r14	./igen.h	/^ unsigned uses_r14 : 1;       \/* T => uses r12 in fg *\/$/;"	m	struct:flowg_t	access:public
flowg_t::uses_r15	./igen.h	/^ unsigned uses_r15 : 1;       \/* T => uses r12 in fg *\/$/;"	m	struct:flowg_t	access:public
flowgnxt	./igen.h	/^ struct flowg_t *flowgnxt;$/;"	m	struct:flowg_t	typeref:struct:flowg_t::flowg_t	access:public
flowgtyp	./igen.h	/^ unsigned flowgtyp : 8;$/;"	m	struct:flowg_t	access:public
flush_context_pending	./fstapi.c	/^unsigned flush_context_pending : 1;$/;"	m	struct:fstWriterContext	file:	access:public
flush_verbose_dumpports_files	./cvc.c	/^static void flush_verbose_dumpports_files(void)$/;"	f	file:	signature:(void)
flzuint16	./fastlz.h	33;"	d
flzuint32	./fastlz.h	34;"	d
flzuint8	./fastlz.h	32;"	d
fmon	./v.h	/^ struct fmonlst_t *fmon;$/;"	m	struct:fmselst_t	typeref:struct:fmselst_t::fmonlst_t	access:public
fmon_dcehdr	./v.h	/^ struct dceauxlst_t *fmon_dcehdr;$/;"	m	struct:fmonlst_t	typeref:struct:fmonlst_t::dceauxlst_t	access:public
fmon_forcewrite	./v.h	/^ word32 fmon_forcewrite;$/;"	m	struct:fmonlst_t	access:public
fmon_idp	./v.h	/^ t_midat *fmon_idp;$/;"	m	struct:fmonlst_t	access:public
fmon_stp	./v.h	/^ struct st_t *fmon_stp;$/;"	m	struct:fmonlst_t	typeref:struct:fmonlst_t::st_t	access:public
fmonlst_t	./v.h	/^struct fmonlst_t {$/;"	s
fmonlst_t::fmon_dcehdr	./v.h	/^ struct dceauxlst_t *fmon_dcehdr;$/;"	m	struct:fmonlst_t	typeref:struct:fmonlst_t::dceauxlst_t	access:public
fmonlst_t::fmon_forcewrite	./v.h	/^ word32 fmon_forcewrite;$/;"	m	struct:fmonlst_t	access:public
fmonlst_t::fmon_idp	./v.h	/^ t_midat *fmon_idp;$/;"	m	struct:fmonlst_t	access:public
fmonlst_t::fmon_stp	./v.h	/^ struct st_t *fmon_stp;$/;"	m	struct:fmonlst_t	typeref:struct:fmonlst_t::st_t	access:public
fmonlst_t::fmonnxt	./v.h	/^ struct fmonlst_t *fmonnxt;$/;"	m	struct:fmonlst_t	typeref:struct:fmonlst_t::fmonlst_t	access:public
fmonlst_t::fmse_trig	./v.h	/^ struct fmselst_t *fmse_trig; \/* set when monitor triggered 1st time *\/$/;"	m	struct:fmonlst_t	typeref:struct:fmonlst_t::fmselst_t	access:public
fmonnxt	./v.h	/^ struct fmonlst_t *fmonnxt;$/;"	m	struct:fmonlst_t	typeref:struct:fmonlst_t::fmonlst_t	access:public
fmse_trig	./v.h	/^ struct fmselst_t *fmse_trig; \/* set when monitor triggered 1st time *\/$/;"	m	struct:fmonlst_t	typeref:struct:fmonlst_t::fmselst_t	access:public
fmselst_t	./v.h	/^struct fmselst_t {$/;"	s
fmselst_t::fmon	./v.h	/^ struct fmonlst_t *fmon;$/;"	m	struct:fmselst_t	typeref:struct:fmselst_t::fmonlst_t	access:public
fmselst_t::fmsenxt	./v.h	/^ struct fmselst_t *fmsenxt;$/;"	m	struct:fmselst_t	typeref:struct:fmselst_t::fmselst_t	access:public
fmsenxt	./v.h	/^ struct fmselst_t *fmsenxt;$/;"	m	struct:fmselst_t	typeref:struct:fmselst_t::fmselst_t	access:public
fn_cmp	./v_fx.c	/^static int32 fn_cmp(const void *dp1, const void *dp2)$/;"	f	file:	signature:(const void *dp1, const void *dp2)
fnam	./v.h	/^ char *fnam;$/;"	m	struct:sdfnamlst_t	access:public
fnd_bbedge	./v_bbopt.c	/^static int32 fnd_bbedge(struct bblk_t *jmpto_bbp, struct bblk_t *jmpfr_bbp) $/;"	f	file:	signature:(struct bblk_t *jmpto_bbp, struct bblk_t *jmpfr_bbp)
fnd_case_sizes	./v_bbgen.c	/^static void fnd_case_sizes(struct st_t *stp, int32 *num_items,$/;"	f	file:	signature:(struct st_t *stp, int32 *num_items, int32 *num_xprs)
fnd_cfg_by_name	./v_src3.c	/^static struct cfg_t *fnd_cfg_by_name(char *confnam)$/;"	f	file:	signature:(char *confnam)
fnd_genfor_genvar_rng	./v_genfx.c	/^static int32 fnd_genfor_genvar_rng(struct genitem_t *gip, int32 *h_rng,$/;"	f	file:	signature:(struct genitem_t *gip, int32 *h_rng, int32 *l_rng)
fnd_pth_sep	./v_sdf.c	/^static char *fnd_pth_sep(char *chp)$/;"	f	file:	signature:(char *chp)
fnd_same_drvn_const_select	./v_cvr.c	/^static int32 fnd_same_drvn_const_select(struct net_t *np, int32 selbi,$/;"	f	file:	signature:(struct net_t *np, int32 selbi, int32 *last_same_down_bi, struct itree_t *itp)
fnd_same_tgl_select	./v_cvr.c	/^static int32 fnd_same_tgl_select(struct rt_tgl_t *togp, int32 selbi,$/;"	f	file:	signature:(struct rt_tgl_t *togp, int32 selbi, int32 *last_same_down_bi, int32 ii)
fnd_tskfunc_inscope	./v_genfx.c	/^static struct sy_t *fnd_tskfunc_inscope(char *ncmp, struct symtab_t *scope_sytp)$/;"	f	file:	signature:(char *ncmp, struct symtab_t *scope_sytp)
fnd_uprel_inst	./v_genfx.c	/^static struct itree_t *fnd_uprel_inst(char *ncmp, struct itree_t *in_itp)$/;"	f	file:	signature:(char *ncmp, struct itree_t *in_itp)
fnd_uprel_mod	./v_genfx.c	/^static struct itree_t *fnd_uprel_mod(struct sy_t *modsyp,$/;"	f	file:	signature:(struct sy_t *modsyp, struct itree_t *in_itp)
fnd_uprel_tskfunc	./v_genfx.c	/^static struct mod_t *fnd_uprel_tskfunc(struct sy_t **scope_syp, char *ncmp,$/;"	f	file:	signature:(struct sy_t **scope_syp, char *ncmp, struct itree_t *in_itp)
fnd_xlflat_one_gate_drvr	./v_sdf.c	/^static struct net_pin_t *fnd_xlflat_one_gate_drvr(struct net_t *np,$/;"	f	file:	signature:(struct net_t *np, int32 bi, struct itree_t **in_itp)
fold_casx_vals	./v_bbgen.c	/^static int32 fold_casx_vals(struct icasx_t *icasxtab, int32 *has_xznum) $/;"	f	file:	signature:(struct icasx_t *icasxtab, int32 *has_xznum)
fold_const	./v_fx3.c	/^static void fold_const(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
fold_constant_bin_cvt_bool	./v_bbgen.c	/^static word32 fold_constant_bin_cvt_bool(int32 term_apti, int32 term_bpti,$/;"	f	file:	signature:(int32 term_apti, int32 term_bpti, int32 do_xprop, int32 *has_bpart)
fold_for_inc	./v.h	/^ unsigned fold_for_inc : 1;   \/* T => folding for loop inc *\/$/;"	m	struct:net_t	access:public
fold_for_loop	./v_prp2.c	/^static struct st_t *fold_for_loop(struct st_t *for_stp, int32 from_val, $/;"	f	file:	signature:(struct st_t *for_stp, int32 from_val, int32 to_val, struct net_t *inc_np, int32 is_inc)
fold_subexpr	./v_fx3.c	/^static void fold_subexpr(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
folded	./v.h	/^ unsigned folded : 1;         \/* T => const. folded (also empty cat rep rem) *\/$/;"	m	struct:expr_t	access:public
folded_ndx	./v.h	/^ unsigned folded_ndx : 1;     \/* constant value for multi dim array folded *\/$/;"	m	struct:expr_t	access:public
for_not_done	./v_ex.c	/^static int32 for_not_done(struct for_t *frs)$/;"	f	file:	signature:(struct for_t *frs)
for_t	./v.h	/^struct for_t {$/;"	s
for_t::dim	./v.h	/^ int32 dim;                    \/* foreach expanded array dimension *\/$/;"	m	struct:for_t	access:public
for_t::forassgn	./v.h	/^ struct st_t *forassgn;$/;"	m	struct:for_t	typeref:struct:for_t::st_t	access:public
for_t::forbody	./v.h	/^ struct st_t *forbody;$/;"	m	struct:for_t	typeref:struct:for_t::st_t	access:public
for_t::foreach_syp	./v.h	/^ struct sy_t *foreach_syp;     \/* foreach expanded array symbol *\/$/;"	m	struct:for_t	typeref:struct:for_t::sy_t	access:public
for_t::forinc	./v.h	/^ struct st_t *forinc;$/;"	m	struct:for_t	typeref:struct:for_t::st_t	access:public
for_t::forinc_tail	./v.h	/^ struct st_t *forinc_tail;$/;"	m	struct:for_t	typeref:struct:for_t::st_t	access:public
for_t::fortermx	./v.h	/^ struct expr_t *fortermx;$/;"	m	struct:for_t	typeref:struct:for_t::expr_t	access:public
for_t::has_break	./v.h	/^ unsigned has_break : 1;       \/* T => has break statement *\/$/;"	m	struct:for_t	access:public
for_t::has_continue	./v.h	/^ unsigned has_continue : 1;    \/* T => has continue statement *\/$/;"	m	struct:for_t	access:public
for_t::is_expanded_foreach	./v.h	/^ unsigned is_expanded_foreach : 1;    \/* T => is expanded foreach statement *\/$/;"	m	struct:for_t	access:public
forassgn	./v.h	/^ struct st_t *forassgn;$/;"	m	struct:for_t	typeref:struct:for_t::st_t	access:public
forbody	./v.h	/^ struct st_t *forbody;$/;"	m	struct:for_t	typeref:struct:for_t::st_t	access:public
force_inhibit_wireassign	./v_sim.c	/^static int32 force_inhibit_wireassign(struct net_t *np, int32 biti,$/;"	f	file:	signature:(struct net_t *np, int32 biti, t_midat *te_idp)
forced_assign_to_psel	./v_ex3.c	/^static int32 forced_assign_to_psel(struct expr_t *idndp, int32 ri1, int32 ri2,$/;"	f	file:	signature:(struct expr_t *idndp, int32 ri1, int32 ri2, struct net_t *np, word32 *ap, word32 *bp)
foreach_syp	./v.h	/^ struct sy_t *foreach_syp;     \/* foreach expanded array symbol *\/$/;"	m	struct:for_t	typeref:struct:for_t::sy_t	access:public
forinc	./v.h	/^ struct st_t *forinc;$/;"	m	struct:for_t	typeref:struct:for_t::st_t	access:public
forinc_tail	./v.h	/^ struct st_t *forinc_tail;$/;"	m	struct:for_t	typeref:struct:for_t::st_t	access:public
formal_tmp_node_free	./v_cvcms.c	/^static void formal_tmp_node_free(void *ftp)$/;"	f	file:	signature:(void *ftp)
formaltmp_alloc	./v_bbgen3.c	/^static struct avlnode_t *formaltmp_alloc(void *valp)$/;"	f	file:	signature:(void *valp)
formend_err	./v_sdf.c	/^static void formend_err(char *formnam)$/;"	f	file:	signature:(char *formnam)
fortermx	./v.h	/^ struct expr_t *fortermx;$/;"	m	struct:for_t	typeref:struct:for_t::expr_t	access:public
fourpack	./fstapi.c	/^unsigned fourpack : 1;$/;"	m	struct:fstWriterContext	file:	access:public
fpat	./v.h	/^ char *fpat;                  \/* the original pattern per dir, split by '\/' *\/$/;"	m	struct:xpndfile_t	access:public
fr_accfmt_to_vpifmt	./v_acc.c	/^static int32 fr_accfmt_to_vpifmt(int32 accfmt)$/;"	f	file:	signature:(int32 accfmt)
frc_assgn_allocated	./v.h	/^ unsigned frc_assgn_allocated : 1; \/* T => force\/assign in src or PLI added *\/$/;"	m	struct:net_t	access:public
frc_assgn_in_src	./v.h	/^ unsigned frc_assgn_in_src : 1; \/* T => force or assign appears in src *\/$/;"	m	struct:ncomp_t	access:public
fread_onto_stk	./v_ex.c	/^static void fread_onto_stk(struct xstk_t *xsp, byte *buf, int32 bufi)$/;"	f	file:	signature:(struct xstk_t *xsp, byte *buf, int32 bufi)
free2_flat_itree	./v_genfx.c	/^static void free2_flat_itree(struct itree_t *cur_itp)$/;"	f	file:	signature:(struct itree_t *cur_itp)
free_1parm_pnps	./v_prp.c	/^static void free_1parm_pnps(struct net_t *prmp)$/;"	f	file:	signature:(struct net_t *prmp)
free_1xmrcmp	./v_genfx.c	/^static void free_1xmrcmp(struct xmrcmp_t *xmp)$/;"	f	file:	signature:(struct xmrcmp_t *xmp)
free_adj_info	./v_regasn.c	/^static void free_adj_info(struct flowg_t *fgp, $/;"	f	file:	signature:(struct flowg_t *fgp, struct avlnode_t **tn_ref_avltab, int32 tnrefs)
free_adj_insn_fields	./v_regasn.c	/^static void free_adj_insn_fields(struct insn_t *ip) $/;"	f	file:	signature:(struct insn_t *ip)
free_all_param_vals	./v_genfx.c	/^static void free_all_param_vals(void)$/;"	f	file:	signature:(void)
free_cbrec	./v_vpi.c	/^static void free_cbrec(struct cbrec_t *cbp)$/;"	f	file:	signature:(struct cbrec_t *cbp)
free_compile_time_structs	./v_bbgen.c	/^static void free_compile_time_structs(void)$/;"	f	file:	signature:(void)
free_cpblks	./v_fx.c	/^static void free_cpblks(void)$/;"	f	file:	signature:(void)
free_cppblks	./v_fx.c	/^static void free_cppblks(void)$/;"	f	file:	signature:(void)
free_csitemlst	./v_prp2.c	/^static void free_csitemlst(struct csitem_t *csip)$/;"	f	file:	signature:(struct csitem_t *csip)
free_dctrl	./v_prp2.c	/^static void free_dctrl(struct delctrl_t *dctp, int32 free_action)$/;"	f	file:	signature:(struct delctrl_t *dctp, int32 free_action)
free_design_ndrvrs	./v_fx2.c	/^static void free_design_ndrvrs(void)$/;"	f	file:	signature:(void)
free_done_iact_control	./v_dbg.c	/^static void free_done_iact_control(struct hctrl_t *hcp, int32 lv_ctrl)$/;"	f	file:	signature:(struct hctrl_t *hcp, int32 lv_ctrl)
free_dpinst_lst	./v_ex4.c	/^static void free_dpinst_lst(struct dpinstel_t *dpi_hd)$/;"	f	file:	signature:(struct dpinstel_t *dpi_hd)
free_drvn_const_tgl_ds	./v_cvr.c	/^static void free_drvn_const_tgl_ds(void)$/;"	f	file:	signature:(void)
free_dsgn_cvc_storage	./v_bbgen.c	/^static void free_dsgn_cvc_storage(void) $/;"	f	file:	signature:(void)
free_dup_trees	./v_cvcms.c	/^static void free_dup_trees(void)$/;"	f	file:	signature:(void)
free_expr_next_ndx_list	./v_src2.c	/^static void free_expr_next_ndx_list(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
free_frozen_symtab	./v_fx3.c	/^static void free_frozen_symtab(struct symtab_t *sytp)$/;"	f	file:	signature:(struct symtab_t *sytp)
free_gone_glbs	./v_genfx.c	/^static void free_gone_glbs(void)$/;"	f	file:	signature:(void)
free_iact_glbs	./v_dbg.c	/^static void free_iact_glbs(struct gref_t *grtab, int32 grnum)$/;"	f	file:	signature:(struct gref_t *grtab, int32 grnum)
free_it	./v.h	/^ unsigned free_it : 1;        \/* this event needs to be freed at rt *\/$/;"	m	struct:tev_t	access:public
free_macexplst	./v_ms.c	/^static void free_macexplst(struct macexp_t *mxp)$/;"	f	file:	signature:(struct macexp_t *mxp)
free_mods_split_list	./v_fx.c	/^static void free_mods_split_list(void)$/;"	f	file:	signature:(void)
free_mv_gitem_lst	./v_genfx.c	/^static void free_mv_gitem_lst(struct genitem_t *gip)$/;"	f	file:	signature:(struct genitem_t *gip)
free_ncablks	./v_prp.c	/^static void free_ncablks(void)$/;"	f	file:	signature:(void)
free_net_comptime_events	./v_bbgen.c	/^static void free_net_comptime_events(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
free_netbitdrv_putv_sched	./v_vpi3.c	/^static void free_netbitdrv_putv_sched(struct net_t *np, int32 bi,$/;"	f	file:	signature:(struct net_t *np, int32 bi, t_midat *idp, struct tev_t *tevp)
free_param_listform	./v_fx.c	/^static void free_param_listform(struct net_t *parm_np)$/;"	f	file:	signature:(struct net_t *parm_np)
free_pthlst	./v_sdf.c	/^static void free_pthlst(struct pthlst_t *pthlhd)$/;"	f	file:	signature:(struct pthlst_t *pthlhd)
free_putv_sched	./v_vpi3.c	/^static void free_putv_sched(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
free_regwir_putv_sched	./v_vpi3.c	/^static void free_regwir_putv_sched(struct net_t *np, t_midat *idp,$/;"	f	file:	signature:(struct net_t *np, t_midat *idp, struct tev_t *tevp)
free_sdf_hdrvals	./v_sdf.c	/^static void free_sdf_hdrvals(void)$/;"	f	file:	signature:(void)
free_spcparms	./v_fx3.c	/^static void free_spcparms(struct net_t *nptab, int32 pnum)$/;"	f	file:	signature:(struct net_t *nptab, int32 pnum)
free_spcpths	./v_fx3.c	/^static void free_spcpths(struct spcpth_t *pthp)$/;"	f	file:	signature:(struct spcpth_t *pthp)
free_tclst	./v_sdf.c	/^static void free_tclst(struct tclst_t *tclhd)$/;"	f	file:	signature:(struct tclst_t *tclhd)
free_tct_insides	./v_sdf.c	/^static void free_tct_insides(struct tcterm_t *tctp)$/;"	f	file:	signature:(struct tcterm_t *tctp)
free_thd_stuff	./v_ex.c	/^static void free_thd_stuff(struct thread_t *thp)$/;"	f	file:	signature:(struct thread_t *thp)
free_thd_subtree	./v_ex.c	/^static void free_thd_subtree(struct thread_t *thp)$/;"	f	file:	signature:(struct thread_t *thp)
free_tmp	./v_cvcms.c	/^static void free_tmp(struct tn_t *tnp)$/;"	f	file:	signature:(struct tn_t *tnp)
free_tmp_list	./v_regasn.c	/^static void free_tmp_list(struct tn_list_t *tlstp)$/;"	f	file:	signature:(struct tn_list_t *tlstp)
free_tn_avl_node	./v_cvcms.c	/^static void free_tn_avl_node(struct avlnode_t *nodp, void (*avl_free)(void *))$/;"	f	file:	signature:(struct avlnode_t *nodp, void (*avl_free)(void *))
free_tnblks	./v_fx.c	/^static void free_tnblks(void)$/;"	f	file:	signature:(void)
free_udp_lines	./v_prp.c	/^static void free_udp_lines(struct udp_t *udpp)$/;"	f	file:	signature:(struct udp_t *udpp)
free_undef_list	./v_src3.c	/^static void free_undef_list(void)$/;"	f	file:	signature:(void)
free_unused_cfgmods	./v_src3.c	/^static void free_unused_cfgmods(void)$/;"	f	file:	signature:(void)
free_vtx_and_edge_freelsts	./v_trch.c	/^static void free_vtx_and_edge_freelsts(void)$/;"	f	file:	signature:(void)
free_with_iter	./v.h	/^ unsigned free_with_iter : 1; \/* for in iter, free when iter freed *\/$/;"	m	struct:hrec_t	access:public
free_xmrcmptab	./v_genfx.c	/^static void free_xmrcmptab(struct gref_t *grp)$/;"	f	file:	signature:(struct gref_t *grp)
free_xpr	./v.h	/^ unsigned free_xpr : 1;       \/* free expr. when free handle *\/$/;"	m	struct:hrec_t	access:public
freeset_is0del	./v_fx2.c	/^static void freeset_is0del(struct expr_t *ndp, int32 insts)$/;"	f	file:	signature:(struct expr_t *ndp, int32 insts)
freezes	./v.h	/^ unsigned freezes : 1;$/;"	m	struct:symtab_t	access:public
fretreal	./v.h	/^ unsigned fretreal : 1;       \/* func. returns real *\/$/;"	m	struct:tfrec_t	access:public
fretsiz	./v.h	/^ int32 fretsiz;               \/* for function return size (sizetf ret. val) *\/  $/;"	m	struct:tfrec_t	access:public
from_cap	./igen.h	/^ struct conta_t *from_cap;  \/* conta insn from *\/$/;"	m	union:ifrom_u	typeref:struct:ifrom_u::conta_t	access:public
from_gateca	./igen.h	/^ int32 from_gateca;         \/* from gate scalar conta ndx *\/$/;"	m	union:ifrom_u	access:public
from_gateda	./igen.h	/^ int32 from_gateda;         \/* from gate back end delay assign *\/$/;"	m	union:ifrom_u	access:public
from_gen_mark_all_parm_widthdet	./v_fx2.c	/^static void from_gen_mark_all_parm_widthdet(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
from_iconn	./igen.h	/^ int32 from_iconn;          \/* from iconn ndx *\/$/;"	m	union:ifrom_u	access:public
from_mdprt	./igen.h	/^ int32 from_mdprt;          \/* from mdprt *\/$/;"	m	union:ifrom_u	access:public
from_np	./igen.h	/^ struct net_t *from_np;     \/* net insn from *\/$/;"	m	union:ifrom_u	typeref:struct:ifrom_u::net_t	access:public
from_sdf_tctyp	./v_sdf.c	/^static int32 from_sdf_tctyp(int32 sdf_tctyp)$/;"	f	file:	signature:(int32 sdf_tctyp)
from_stp	./igen.h	/^ struct st_t *from_stp;     \/* statement insn from *\/ $/;"	m	union:ifrom_u	typeref:struct:ifrom_u::st_t	access:public
fseek_failed	./fstapi.c	/^unsigned fseek_failed : 1;$/;"	m	struct:fstReaderContext	file:	access:public
fseek_failed	./fstapi.c	/^unsigned fseek_failed : 1;$/;"	m	struct:fstWriterContext	file:	access:public
fseeko	./fstapi.c	144;"	d	file:
fstArrayType	./fstapi.h	/^enum fstArrayType {$/;"	g
fstAttrType	./fstapi.h	/^enum fstAttrType {$/;"	g
fstBlackoutChain	./fstapi.c	/^struct fstBlackoutChain$/;"	s	file:
fstBlackoutChain::active	./fstapi.c	/^unsigned active : 1;$/;"	m	struct:fstBlackoutChain	file:	access:public
fstBlackoutChain::next	./fstapi.c	/^struct fstBlackoutChain *next;$/;"	m	struct:fstBlackoutChain	typeref:struct:fstBlackoutChain::fstBlackoutChain	file:	access:public
fstBlackoutChain::tim	./fstapi.c	/^uint64_t tim;$/;"	m	struct:fstBlackoutChain	file:	access:public
fstBlockType	./fstapi.h	/^enum fstBlockType {$/;"	g
fstCopyVarint32ToLeft	./fstapi.c	/^static unsigned char *fstCopyVarint32ToLeft(unsigned char *pnt, uint32_t v)$/;"	f	file:	signature:(unsigned char *pnt, uint32_t v)
fstCopyVarint64ToRight	./fstapi.c	/^static unsigned char *fstCopyVarint64ToRight(unsigned char *pnt, uint64_t v)$/;"	f	file:	signature:(unsigned char *pnt, uint64_t v)
fstCurrHier	./fstapi.c	/^struct fstCurrHier$/;"	s	file:
fstCurrHier::len	./fstapi.c	/^int len;$/;"	m	struct:fstCurrHier	file:	access:public
fstCurrHier::prev	./fstapi.c	/^struct fstCurrHier *prev;$/;"	m	struct:fstCurrHier	typeref:struct:fstCurrHier::fstCurrHier	file:	access:public
fstCurrHier::user_info	./fstapi.c	/^void *user_info;$/;"	m	struct:fstCurrHier	file:	access:public
fstDestroyMmaps	./fstapi.c	/^static void fstDestroyMmaps(struct fstWriterContext *xc, int is_closing)$/;"	f	file:	signature:(struct fstWriterContext *xc, int is_closing)
fstDetermineBreakSize	./fstapi.c	/^static void fstDetermineBreakSize(struct fstWriterContext *xc)$/;"	f	file:	signature:(struct fstWriterContext *xc)
fstEnumValueType	./fstapi.h	/^enum fstEnumValueType {$/;"	g
fstExtractRvatDataFromFrame	./fstapi.c	/^static char *fstExtractRvatDataFromFrame(struct fstReaderContext *xc, fstHandle facidx, char *buf)$/;"	f	file:	signature:(struct fstReaderContext *xc, fstHandle facidx, char *buf)
fstFileType	./fstapi.h	/^enum fstFileType {$/;"	g
fstFread	./fstapi.c	/^static size_t fstFread(void *buf, size_t siz, size_t cnt, FILE *fp)$/;"	f	file:	signature:(void *buf, size_t siz, size_t cnt, FILE *fp)
fstFtruncate	./fstapi.c	/^static int fstFtruncate(int fd, off_t length)$/;"	f	file:	signature:(int fd, off_t length)
fstFwrite	./fstapi.c	/^static size_t fstFwrite(const void *buf, size_t siz, size_t cnt, FILE *fp)$/;"	f	file:	signature:(const void *buf, size_t siz, size_t cnt, FILE *fp)
fstGetSVarint64	./fstapi.c	/^static int64_t fstGetSVarint64(unsigned char *mem, int *skiplen)$/;"	f	file:	signature:(unsigned char *mem, int *skiplen)
fstGetUint32	./fstapi.c	/^static uint32_t fstGetUint32(unsigned char *mem)$/;"	f	file:	signature:(unsigned char *mem)
fstGetUint32	./fstapi.c	346;"	d	file:
fstGetVarint32	./fstapi.c	/^static uint32_t fstGetVarint32(unsigned char *mem, int *skiplen)$/;"	f	file:	signature:(unsigned char *mem, int *skiplen)
fstGetVarint32Length	./fstapi.c	/^static uint32_t fstGetVarint32Length(unsigned char *mem)$/;"	f	file:	signature:(unsigned char *mem)
fstGetVarint32NoSkip	./fstapi.c	/^static uint32_t fstGetVarint32NoSkip(unsigned char *mem)$/;"	f	file:	signature:(unsigned char *mem)
fstGetVarint64	./fstapi.c	/^static uint64_t fstGetVarint64(unsigned char *mem, int *skiplen)$/;"	f	file:	signature:(unsigned char *mem, int *skiplen)
fstHandle	./fstapi.h	/^typedef uint32_t fstHandle;$/;"	t
fstHier	./fstapi.h	/^struct fstHier$/;"	s
fstHier::__anon18::attr	./fstapi.h	/^                } attr;$/;"	m	union:fstHier::__anon18	typeref:struct:fstHier::__anon18::fstHierAttr	access:public
fstHier::__anon18::fstHierAttr	./fstapi.h	/^        struct fstHierAttr {$/;"	s	union:fstHier::__anon18	access:public
fstHier::__anon18::fstHierAttr::arg	./fstapi.h	/^                uint64_t arg; \/* number of array elements, struct members, or some other payload (possibly ignored) *\/$/;"	m	struct:fstHier::__anon18::fstHierAttr	access:public
fstHier::__anon18::fstHierAttr::arg_from_name	./fstapi.h	/^                uint64_t arg_from_name; \/* for when name is overloaded as a variable-length integer (FST_AT_MISC + FST_MT_SOURCESTEM) *\/$/;"	m	struct:fstHier::__anon18::fstHierAttr	access:public
fstHier::__anon18::fstHierAttr::name	./fstapi.h	/^                const char *name;$/;"	m	struct:fstHier::__anon18::fstHierAttr	access:public
fstHier::__anon18::fstHierAttr::name_length	./fstapi.h	/^                uint32_t name_length; \/* strlen(u.attr.name) *\/$/;"	m	struct:fstHier::__anon18::fstHierAttr	access:public
fstHier::__anon18::fstHierAttr::subtype	./fstapi.h	/^                unsigned char subtype; \/* from fstMiscType, fstArrayType, fstEnumValueType, fstPackType *\/$/;"	m	struct:fstHier::__anon18::fstHierAttr	access:public
fstHier::__anon18::fstHierAttr::typ	./fstapi.h	/^                unsigned char typ; \/* FST_AT_MIN ... FST_AT_MAX *\/$/;"	m	struct:fstHier::__anon18::fstHierAttr	access:public
fstHier::__anon18::fstHierScope	./fstapi.h	/^        struct fstHierScope {$/;"	s	union:fstHier::__anon18	access:public
fstHier::__anon18::fstHierScope::component	./fstapi.h	/^                const char *component;$/;"	m	struct:fstHier::__anon18::fstHierScope	access:public
fstHier::__anon18::fstHierScope::component_length	./fstapi.h	/^                uint32_t component_length;      \/* strlen(u.scope.component) *\/$/;"	m	struct:fstHier::__anon18::fstHierScope	access:public
fstHier::__anon18::fstHierScope::name	./fstapi.h	/^                const char *name;$/;"	m	struct:fstHier::__anon18::fstHierScope	access:public
fstHier::__anon18::fstHierScope::name_length	./fstapi.h	/^                uint32_t name_length;           \/* strlen(u.scope.name) *\/$/;"	m	struct:fstHier::__anon18::fstHierScope	access:public
fstHier::__anon18::fstHierScope::typ	./fstapi.h	/^                unsigned char typ; \/* FST_ST_MIN ... FST_ST_MAX *\/$/;"	m	struct:fstHier::__anon18::fstHierScope	access:public
fstHier::__anon18::fstHierVar	./fstapi.h	/^        struct fstHierVar {$/;"	s	union:fstHier::__anon18	access:public
fstHier::__anon18::fstHierVar::direction	./fstapi.h	/^                unsigned char direction; \/* FST_VD_MIN ... FST_VD_MAX *\/$/;"	m	struct:fstHier::__anon18::fstHierVar	access:public
fstHier::__anon18::fstHierVar::handle	./fstapi.h	/^                fstHandle handle;$/;"	m	struct:fstHier::__anon18::fstHierVar	access:public
fstHier::__anon18::fstHierVar::is_alias	./fstapi.h	/^                unsigned is_alias : 1;$/;"	m	struct:fstHier::__anon18::fstHierVar	access:public
fstHier::__anon18::fstHierVar::length	./fstapi.h	/^                uint32_t length;$/;"	m	struct:fstHier::__anon18::fstHierVar	access:public
fstHier::__anon18::fstHierVar::name	./fstapi.h	/^                const char *name;$/;"	m	struct:fstHier::__anon18::fstHierVar	access:public
fstHier::__anon18::fstHierVar::name_length	./fstapi.h	/^                uint32_t name_length; \/* strlen(u.var.name) *\/$/;"	m	struct:fstHier::__anon18::fstHierVar	access:public
fstHier::__anon18::fstHierVar::sdt_workspace	./fstapi.h	/^                unsigned char sdt_workspace; \/* zeroed out by FST reader, for client code use *\/$/;"	m	struct:fstHier::__anon18::fstHierVar	access:public
fstHier::__anon18::fstHierVar::svt_workspace	./fstapi.h	/^                unsigned char svt_workspace; \/* zeroed out by FST reader, for client code use *\/$/;"	m	struct:fstHier::__anon18::fstHierVar	access:public
fstHier::__anon18::fstHierVar::sxt_workspace	./fstapi.h	/^                unsigned int  sxt_workspace; \/* zeroed out by FST reader, for client code use *\/$/;"	m	struct:fstHier::__anon18::fstHierVar	access:public
fstHier::__anon18::fstHierVar::typ	./fstapi.h	/^                unsigned char typ; \/* FST_VT_MIN ... FST_VT_MAX *\/$/;"	m	struct:fstHier::__anon18::fstHierVar	access:public
fstHier::__anon18::scope	./fstapi.h	/^                } scope;$/;"	m	union:fstHier::__anon18	typeref:struct:fstHier::__anon18::fstHierScope	access:public
fstHier::__anon18::var	./fstapi.h	/^                } var;$/;"	m	union:fstHier::__anon18	typeref:struct:fstHier::__anon18::fstHierVar	access:public
fstHier::htyp	./fstapi.h	/^unsigned char htyp;$/;"	m	struct:fstHier	access:public
fstHier::u	./fstapi.h	/^        } u;$/;"	m	struct:fstHier	typeref:union:fstHier::__anon18	access:public
fstHierAttr	./fstapi.h	/^        struct fstHierAttr {$/;"	s	union:fstHier::__anon18	access:public
fstHierScope	./fstapi.h	/^        struct fstHierScope {$/;"	s	union:fstHier::__anon18	access:public
fstHierType	./fstapi.h	/^enum fstHierType {$/;"	g
fstHierVar	./fstapi.h	/^        struct fstHierVar {$/;"	s	union:fstHier::__anon18	access:public
fstMiscType	./fstapi.h	/^enum fstMiscType {$/;"	g
fstMmap	./fstapi.c	313;"	d	file:
fstMmap	./fstapi.c	337;"	d	file:
fstMmap2	./fstapi.c	/^static void *fstMmap2(size_t __len, int __fd, off_t __off)$/;"	f	file:	signature:(size_t __len, int __fd, off_t __off)
fstMunmap	./fstapi.c	314;"	d	file:
fstMunmap	./fstapi.c	338;"	d	file:
fstPackType	./fstapi.h	/^enum fstPackType {$/;"	g
fstReaderClose	./fstapi.c	/^void fstReaderClose(void *ctx)$/;"	f	signature:(void *ctx)
fstReaderClrFacProcessMask	./fstapi.c	/^void fstReaderClrFacProcessMask(void *ctx, fstHandle facidx)$/;"	f	signature:(void *ctx, fstHandle facidx)
fstReaderClrFacProcessMaskAll	./fstapi.c	/^void fstReaderClrFacProcessMaskAll(void *ctx)$/;"	f	signature:(void *ctx)
fstReaderContext	./fstapi.c	/^struct fstReaderContext$/;"	s	file:
fstReaderContext::blackout_activity	./fstapi.c	/^unsigned char *blackout_activity;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::blackout_times	./fstapi.c	/^uint64_t *blackout_times;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::contains_geom_section	./fstapi.c	/^unsigned contains_geom_section : 1;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::contains_hier_section	./fstapi.c	/^unsigned contains_hier_section : 1;        \/* valid for hier_pos *\/$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::contains_hier_section_lz4	./fstapi.c	/^unsigned contains_hier_section_lz4 : 1;    \/* valid for hier_pos *\/$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::contains_hier_section_lz4duo	./fstapi.c	/^unsigned contains_hier_section_lz4duo : 1; \/* valid for hier_pos (contains_hier_section_lz4 always also set) *\/$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::curr_flat_hier_nam	./fstapi.c	/^char *curr_flat_hier_nam;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::curr_hier	./fstapi.c	/^struct fstCurrHier *curr_hier;$/;"	m	struct:fstReaderContext	typeref:struct:fstReaderContext::fstCurrHier	file:	access:public
fstReaderContext::current_handle	./fstapi.c	/^fstHandle current_handle;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::date	./fstapi.c	/^char date[FST_HDR_DATE_SIZE + 1];$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::do_rewind	./fstapi.c	/^unsigned do_rewind : 1;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::double_endian_match	./fstapi.c	/^unsigned double_endian_match : 1;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::end_time	./fstapi.c	/^uint64_t start_time, end_time;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::f	./fstapi.c	/^FILE *f, *fh;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::f_nam	./fstapi.c	/^char *f_nam;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::fh	./fstapi.c	/^FILE *f, *fh;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::fh_nam	./fstapi.c	/^char *fh_nam;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::filename	./fstapi.c	/^char *filename, *filename_unpacked;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::filename_unpacked	./fstapi.c	/^char *filename, *filename_unpacked;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::filetype	./fstapi.c	/^unsigned char filetype;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::flat_hier_alloc_len	./fstapi.c	/^int flat_hier_alloc_len;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::fseek_failed	./fstapi.c	/^unsigned fseek_failed : 1;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::hier	./fstapi.c	/^struct fstHier hier;$/;"	m	struct:fstReaderContext	typeref:struct:fstReaderContext::fstHier	file:	access:public
fstReaderContext::hier_pos	./fstapi.c	/^off_t hier_pos;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::limit_range_end	./fstapi.c	/^uint64_t limit_range_start, limit_range_end;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::limit_range_start	./fstapi.c	/^uint64_t limit_range_start, limit_range_end;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::limit_range_valid	./fstapi.c	/^unsigned limit_range_valid : 1;            \/* valid for limit_range_start, limit_range_end *\/$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::longest_signal_value_len	./fstapi.c	/^uint32_t longest_signal_value_len;      \/* longest len value encountered *\/$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::maxhandle	./fstapi.c	/^fstHandle maxhandle;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::mem_used_by_writer	./fstapi.c	/^uint64_t mem_used_by_writer;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::native_doubles_for_cb	./fstapi.c	/^unsigned native_doubles_for_cb : 1;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::num_alias	./fstapi.c	/^uint64_t num_alias;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::num_blackouts	./fstapi.c	/^uint32_t num_blackouts;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::process_mask	./fstapi.c	/^unsigned char *process_mask;            \/* maxhandle-based, bitwise sized *\/$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::rvat_beg_tim	./fstapi.c	/^uint64_t rvat_beg_tim, rvat_end_tim;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::rvat_chain_facidx	./fstapi.c	/^fstHandle rvat_chain_facidx;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::rvat_chain_len	./fstapi.c	/^uint32_t rvat_chain_len;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::rvat_chain_mem	./fstapi.c	/^unsigned char *rvat_chain_mem;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::rvat_chain_pos_idx	./fstapi.c	/^uint32_t rvat_chain_pos_idx;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::rvat_chain_pos_tidx	./fstapi.c	/^uint32_t rvat_chain_pos_tidx;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::rvat_chain_pos_time	./fstapi.c	/^uint64_t rvat_chain_pos_time;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::rvat_chain_pos_valid	./fstapi.c	/^unsigned rvat_chain_pos_valid : 1;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::rvat_chain_table	./fstapi.c	/^off_t *rvat_chain_table;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::rvat_chain_table_lengths	./fstapi.c	/^uint32_t *rvat_chain_table_lengths;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::rvat_data_valid	./fstapi.c	/^unsigned rvat_data_valid : 1;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::rvat_end_tim	./fstapi.c	/^uint64_t rvat_beg_tim, rvat_end_tim;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::rvat_frame_data	./fstapi.c	/^unsigned char *rvat_frame_data;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::rvat_frame_maxhandle	./fstapi.c	/^uint64_t rvat_frame_maxhandle;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::rvat_sig_offs	./fstapi.c	/^uint32_t *rvat_sig_offs;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::rvat_time_table	./fstapi.c	/^uint64_t *rvat_time_table;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::rvat_vc_maxhandle	./fstapi.c	/^uint64_t rvat_vc_maxhandle;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::rvat_vc_start	./fstapi.c	/^off_t rvat_vc_start;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::scope_count	./fstapi.c	/^uint64_t scope_count;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::signal_lens	./fstapi.c	/^uint32_t *signal_lens;                  \/* maxhandle sized *\/$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::signal_typs	./fstapi.c	/^unsigned char *signal_typs;             \/* maxhandle sized *\/$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::start_time	./fstapi.c	/^uint64_t start_time, end_time;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::str_scope_comp	./fstapi.c	/^char str_scope_comp[FST_ID_NAM_SIZ+1];$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::str_scope_nam	./fstapi.c	/^char str_scope_nam[FST_ID_NAM_SIZ+1];$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::temp_signal_value_buf	./fstapi.c	/^unsigned char *temp_signal_value_buf;   \/* malloced for len in longest_signal_value_len *\/$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::timescale	./fstapi.c	/^signed char timescale;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::timezero	./fstapi.c	/^int64_t timezero;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::use_vcd_extensions	./fstapi.c	/^unsigned use_vcd_extensions : 1;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::var_count	./fstapi.c	/^uint64_t var_count;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::vc_section_count	./fstapi.c	/^uint64_t vc_section_count;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::version	./fstapi.c	/^char version[FST_HDR_SIM_VERSION_SIZE + 1];$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::writex_buf	./fstapi.c	/^unsigned char writex_buf[FST_WRITEX_MAX];$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::writex_fd	./fstapi.c	/^int writex_fd;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderContext::writex_pos	./fstapi.c	/^int writex_pos;$/;"	m	struct:fstReaderContext	file:	access:public
fstReaderDeallocateRvatData	./fstapi.c	/^static void fstReaderDeallocateRvatData(void *ctx)$/;"	f	file:	signature:(void *ctx)
fstReaderDeallocateScopeData	./fstapi.c	/^static void fstReaderDeallocateScopeData(struct fstReaderContext *xc)$/;"	f	file:	signature:(struct fstReaderContext *xc)
fstReaderFseeko	./fstapi.c	/^int fstReaderFseeko(struct fstReaderContext *xc, FILE *stream, off_t offset, int whence)$/;"	f	signature:(struct fstReaderContext *xc, FILE *stream, off_t offset, int whence)
fstReaderGetAliasCount	./fstapi.c	/^uint64_t fstReaderGetAliasCount(void *ctx)$/;"	f	signature:(void *ctx)
fstReaderGetCurrentFlatScope	./fstapi.c	/^const char *fstReaderGetCurrentFlatScope(void *ctx)$/;"	f	signature:(void *ctx)
fstReaderGetCurrentScopeLen	./fstapi.c	/^int fstReaderGetCurrentScopeLen(void *ctx)$/;"	f	signature:(void *ctx)
fstReaderGetCurrentScopeUserInfo	./fstapi.c	/^void *fstReaderGetCurrentScopeUserInfo(void *ctx)$/;"	f	signature:(void *ctx)
fstReaderGetDateString	./fstapi.c	/^const char *fstReaderGetDateString(void *ctx)$/;"	f	signature:(void *ctx)
fstReaderGetDoubleEndianMatchState	./fstapi.c	/^int fstReaderGetDoubleEndianMatchState(void *ctx)$/;"	f	signature:(void *ctx)
fstReaderGetDumpActivityChangeTime	./fstapi.c	/^uint64_t fstReaderGetDumpActivityChangeTime(void *ctx, uint32_t idx)$/;"	f	signature:(void *ctx, uint32_t idx)
fstReaderGetDumpActivityChangeValue	./fstapi.c	/^unsigned char fstReaderGetDumpActivityChangeValue(void *ctx, uint32_t idx)$/;"	f	signature:(void *ctx, uint32_t idx)
fstReaderGetEndTime	./fstapi.c	/^uint64_t fstReaderGetEndTime(void *ctx)$/;"	f	signature:(void *ctx)
fstReaderGetFacProcessMask	./fstapi.c	/^int fstReaderGetFacProcessMask(void *ctx, fstHandle facidx)$/;"	f	signature:(void *ctx, fstHandle facidx)
fstReaderGetFileType	./fstapi.c	/^int fstReaderGetFileType(void *ctx)$/;"	f	signature:(void *ctx)
fstReaderGetFseekFailed	./fstapi.c	/^int fstReaderGetFseekFailed(void *ctx)$/;"	f	signature:(void *ctx)
fstReaderGetMaxHandle	./fstapi.c	/^fstHandle fstReaderGetMaxHandle(void *ctx)$/;"	f	signature:(void *ctx)
fstReaderGetMemoryUsedByWriter	./fstapi.c	/^uint64_t fstReaderGetMemoryUsedByWriter(void *ctx)$/;"	f	signature:(void *ctx)
fstReaderGetNumberDumpActivityChanges	./fstapi.c	/^uint32_t fstReaderGetNumberDumpActivityChanges(void *ctx)$/;"	f	signature:(void *ctx)
fstReaderGetScopeCount	./fstapi.c	/^uint64_t fstReaderGetScopeCount(void *ctx)$/;"	f	signature:(void *ctx)
fstReaderGetStartTime	./fstapi.c	/^uint64_t fstReaderGetStartTime(void *ctx)$/;"	f	signature:(void *ctx)
fstReaderGetTimescale	./fstapi.c	/^signed char fstReaderGetTimescale(void *ctx)$/;"	f	signature:(void *ctx)
fstReaderGetTimezero	./fstapi.c	/^int64_t fstReaderGetTimezero(void *ctx)$/;"	f	signature:(void *ctx)
fstReaderGetValueChangeSectionCount	./fstapi.c	/^uint64_t fstReaderGetValueChangeSectionCount(void *ctx)$/;"	f	signature:(void *ctx)
fstReaderGetValueFromHandleAtTime	./fstapi.c	/^char *fstReaderGetValueFromHandleAtTime(void *ctx, uint64_t tim, fstHandle facidx, char *buf)$/;"	f	signature:(void *ctx, uint64_t tim, fstHandle facidx, char *buf)
fstReaderGetVarCount	./fstapi.c	/^uint64_t fstReaderGetVarCount(void *ctx)$/;"	f	signature:(void *ctx)
fstReaderGetVersionString	./fstapi.c	/^const char *fstReaderGetVersionString(void *ctx)$/;"	f	signature:(void *ctx)
fstReaderInit	./fstapi.c	/^int fstReaderInit(struct fstReaderContext *xc)$/;"	f	signature:(struct fstReaderContext *xc)
fstReaderIterBlocks	./fstapi.c	/^int fstReaderIterBlocks(void *ctx,$/;"	f	signature:(void *ctx, void (*value_change_callback)(void *user_callback_data_pointer, uint64_t time, fstHandle facidx, const unsigned char *value), void *user_callback_data_pointer, FILE *fv)
fstReaderIterBlocks2	./fstapi.c	/^int fstReaderIterBlocks2(void *ctx,$/;"	f	signature:(void *ctx, void (*value_change_callback)(void *user_callback_data_pointer, uint64_t time, fstHandle facidx, const unsigned char *value), void (*value_change_callback_varlen)(void *user_callback_data_pointer, uint64_t time, fstHandle facidx, const unsigned char *value, uint32_t len), void *user_callback_data_pointer, FILE *fv)
fstReaderIterBlocksSetNativeDoublesOnCallback	./fstapi.c	/^void fstReaderIterBlocksSetNativeDoublesOnCallback(void *ctx, int enable)$/;"	f	signature:(void *ctx, int enable)
fstReaderIterateHier	./fstapi.c	/^struct fstHier *fstReaderIterateHier(void *ctx)$/;"	f	signature:(void *ctx)
fstReaderIterateHierRewind	./fstapi.c	/^int fstReaderIterateHierRewind(void *ctx)$/;"	f	signature:(void *ctx)
fstReaderOpen	./fstapi.c	/^void *fstReaderOpen(const char *nam)$/;"	f	signature:(const char *nam)
fstReaderOpenForUtilitiesOnly	./fstapi.c	/^void *fstReaderOpenForUtilitiesOnly(void)$/;"	f	signature:(void)
fstReaderPopScope	./fstapi.c	/^const char *fstReaderPopScope(void *ctx)$/;"	f	signature:(void *ctx)
fstReaderProcessHier	./fstapi.c	/^int fstReaderProcessHier(void *ctx, FILE *fv)$/;"	f	signature:(void *ctx, FILE *fv)
fstReaderPushScope	./fstapi.c	/^const char *fstReaderPushScope(void *ctx, const char *nam, void *user_info)$/;"	f	signature:(void *ctx, const char *nam, void *user_info)
fstReaderRecreateHierFile	./fstapi.c	/^static int fstReaderRecreateHierFile(struct fstReaderContext *xc)$/;"	f	file:	signature:(struct fstReaderContext *xc)
fstReaderResetScope	./fstapi.c	/^void fstReaderResetScope(void *ctx)$/;"	f	signature:(void *ctx)
fstReaderSetFacProcessMask	./fstapi.c	/^void fstReaderSetFacProcessMask(void *ctx, fstHandle facidx)$/;"	f	signature:(void *ctx, fstHandle facidx)
fstReaderSetFacProcessMaskAll	./fstapi.c	/^void fstReaderSetFacProcessMaskAll(void *ctx)$/;"	f	signature:(void *ctx)
fstReaderSetLimitTimeRange	./fstapi.c	/^void fstReaderSetLimitTimeRange(void *ctx, uint64_t start_time, uint64_t end_time)$/;"	f	signature:(void *ctx, uint64_t start_time, uint64_t end_time)
fstReaderSetUnlimitedTimeRange	./fstapi.c	/^void fstReaderSetUnlimitedTimeRange(void *ctx)$/;"	f	signature:(void *ctx)
fstReaderSetVcdExtensions	./fstapi.c	/^void fstReaderSetVcdExtensions(void *ctx, int enable)$/;"	f	signature:(void *ctx, int enable)
fstReaderUint64	./fstapi.c	/^static uint64_t fstReaderUint64(FILE *f)$/;"	f	file:	signature:(FILE *f)
fstReaderVarint32	./fstapi.c	/^static uint32_t fstReaderVarint32(FILE *f)$/;"	f	file:	signature:(FILE *f)
fstReaderVarint32WithSkip	./fstapi.c	/^static uint32_t fstReaderVarint32WithSkip(FILE *f, uint32_t *skiplen)$/;"	f	file:	signature:(FILE *f, uint32_t *skiplen)
fstReaderVarint64	./fstapi.c	/^static uint64_t fstReaderVarint64(FILE *f)$/;"	f	file:	signature:(FILE *f)
fstRealpath	./fstapi.c	/^static char *fstRealpath(const char *path, char *resolved_path)$/;"	f	file:	signature:(const char *path, char *resolved_path)
fstScopeType	./fstapi.h	/^enum fstScopeType {$/;"	g
fstSupplementalDataType	./fstapi.h	/^enum fstSupplementalDataType {$/;"	g
fstSupplementalVarType	./fstapi.h	/^enum fstSupplementalVarType {$/;"	g
fstUtilityBinToEsc	./fstapi.c	/^int fstUtilityBinToEsc(unsigned char *d, unsigned char *s, int len)$/;"	f	signature:(unsigned char *d, unsigned char *s, int len)
fstUtilityEscToBin	./fstapi.c	/^int fstUtilityEscToBin(unsigned char *d, unsigned char *s, int len)$/;"	f	signature:(unsigned char *d, unsigned char *s, int len)
fstVarDir	./fstapi.h	/^enum fstVarDir {$/;"	g
fstVarType	./fstapi.h	/^enum fstVarType {$/;"	g
fstVcdID	./fstapi.c	/^static void fstVcdID(char *buf, unsigned int value)$/;"	f	file:	signature:(char *buf, unsigned int value)
fstVcdIDForFwrite	./fstapi.c	/^static int fstVcdIDForFwrite(char *buf, unsigned int value)$/;"	f	file:	signature:(char *buf, unsigned int value)
fstWriterClose	./fstapi.c	/^void fstWriterClose(void *ctx)$/;"	f	signature:(void *ctx)
fstWriterContext	./fstapi.c	/^struct fstWriterContext$/;"	s	file:
fstWriterContext::already_in_close	./fstapi.c	/^unsigned char already_in_close; \/* in case control-c handlers interrupt *\/$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::already_in_flush	./fstapi.c	/^unsigned char already_in_flush; \/* in case control-c handlers interrupt *\/$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::blackout_curr	./fstapi.c	/^struct fstBlackoutChain *blackout_curr;$/;"	m	struct:fstWriterContext	typeref:struct:fstWriterContext::fstBlackoutChain	file:	access:public
fstWriterContext::blackout_head	./fstapi.c	/^struct fstBlackoutChain *blackout_head;$/;"	m	struct:fstWriterContext	typeref:struct:fstWriterContext::fstBlackoutChain	file:	access:public
fstWriterContext::compress_hier	./fstapi.c	/^unsigned compress_hier : 1;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::curtime	./fstapi.c	/^uint64_t curtime;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::curval_handle	./fstapi.c	/^FILE *curval_handle;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::curval_handle_nam	./fstapi.c	/^char *curval_handle_nam;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::curval_mem	./fstapi.c	/^unsigned char *curval_mem;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::dump_size_limit	./fstapi.c	/^uint64_t dump_size_limit;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::fastpack	./fstapi.c	/^unsigned fastpack : 1;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::filename	./fstapi.c	/^char *filename;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::filetype	./fstapi.c	/^unsigned char filetype; \/* default is 0, FST_FT_VERILOG *\/$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::firsttime	./fstapi.c	/^uint64_t firsttime;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::flush_context_pending	./fstapi.c	/^unsigned flush_context_pending : 1;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::fourpack	./fstapi.c	/^unsigned fourpack : 1;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::fseek_failed	./fstapi.c	/^unsigned fseek_failed : 1;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::fst_break_add_size	./fstapi.c	/^size_t fst_break_add_size;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::fst_break_size	./fstapi.c	/^size_t fst_break_size;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::fst_huge_break_size	./fstapi.c	/^size_t fst_huge_break_size;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::fst_orig_break_add_size	./fstapi.c	/^size_t fst_orig_break_add_size;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::fst_orig_break_size	./fstapi.c	/^size_t fst_orig_break_size;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::geom_handle	./fstapi.c	/^FILE *geom_handle;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::geom_handle_nam	./fstapi.c	/^char *geom_handle_nam;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::handle	./fstapi.c	/^FILE *handle;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::hier_file_len	./fstapi.c	/^off_t hier_file_len;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::hier_handle	./fstapi.c	/^FILE *hier_handle;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::is_initial_time	./fstapi.c	/^unsigned is_initial_time : 1;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::maxhandle	./fstapi.c	/^fstHandle maxhandle;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::maxvalpos	./fstapi.c	/^uint32_t maxvalpos;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::mutex	./fstapi.c	/^pthread_mutex_t mutex;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::nan	./fstapi.c	/^double nan; \/* nan value for uninitialized doubles *\/$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::next_huge_break	./fstapi.c	/^fstHandle next_huge_break;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::num_blackouts	./fstapi.c	/^uint32_t num_blackouts;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::numscopes	./fstapi.c	/^uint32_t numscopes;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::numsigs	./fstapi.c	/^fstHandle numsigs;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::parallel_enabled	./fstapi.c	/^unsigned parallel_enabled : 1;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::parallel_was_enabled	./fstapi.c	/^unsigned parallel_was_enabled : 1;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::path_array	./fstapi.c	/^Pvoid_t path_array;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::path_array_count	./fstapi.c	/^uint32_t path_array_count;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::repack_on_close	./fstapi.c	/^unsigned repack_on_close : 1;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::secnum	./fstapi.c	/^uint32_t secnum;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::section_header_only	./fstapi.c	/^unsigned section_header_only : 1;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::section_header_truncpos	./fstapi.c	/^off_t section_header_truncpos;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::section_start	./fstapi.c	/^off_t section_start;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::size_limit_locked	./fstapi.c	/^unsigned size_limit_locked : 1;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::skip_writing_section_hdr	./fstapi.c	/^unsigned skip_writing_section_hdr : 1;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::tchn_cnt	./fstapi.c	/^uint32_t tchn_cnt, tchn_idx;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::tchn_handle	./fstapi.c	/^FILE *tchn_handle;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::tchn_handle_nam	./fstapi.c	/^char *tchn_handle_nam;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::tchn_idx	./fstapi.c	/^uint32_t tchn_cnt, tchn_idx;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::thread	./fstapi.c	/^pthread_t thread;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::thread_attr	./fstapi.c	/^pthread_attr_t thread_attr;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::timezero	./fstapi.c	/^int64_t timezero;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::valpos_handle	./fstapi.c	/^FILE *valpos_handle;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::valpos_handle_nam	./fstapi.c	/^char *valpos_handle_nam;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::valpos_mem	./fstapi.c	/^uint32_t *valpos_mem;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::vc_emitted	./fstapi.c	/^unsigned vc_emitted : 1;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::vchg_alloc_siz	./fstapi.c	/^uint32_t vchg_alloc_siz;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::vchg_mem	./fstapi.c	/^unsigned char *vchg_mem;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::vchg_siz	./fstapi.c	/^uint32_t vchg_siz;$/;"	m	struct:fstWriterContext	file:	access:public
fstWriterContext::xc_parent	./fstapi.c	/^struct fstWriterContext *xc_parent;$/;"	m	struct:fstWriterContext	typeref:struct:fstWriterContext::fstWriterContext	file:	access:public
fstWriterCreate	./fstapi.c	/^void *fstWriterCreate(const char *nam, int use_compressed_hier)$/;"	f	signature:(const char *nam, int use_compressed_hier)
fstWriterCreateMmaps	./fstapi.c	/^static void fstWriterCreateMmaps(struct fstWriterContext *xc)$/;"	f	file:	signature:(struct fstWriterContext *xc)
fstWriterCreateVar	./fstapi.c	/^fstHandle fstWriterCreateVar(void *ctx, enum fstVarType vt, enum fstVarDir vd,$/;"	f	signature:(void *ctx, enum fstVarType vt, enum fstVarDir vd, uint32_t len, const char *nam, fstHandle aliasHandle)
fstWriterCreateVar2	./fstapi.c	/^fstHandle fstWriterCreateVar2(void *ctx, enum fstVarType vt, enum fstVarDir vd,$/;"	f	signature:(void *ctx, enum fstVarType vt, enum fstVarDir vd, uint32_t len, const char *nam, fstHandle aliasHandle, const char *type, enum fstSupplementalVarType svt, enum fstSupplementalDataType sdt)
fstWriterEmitDumpActive	./fstapi.c	/^void fstWriterEmitDumpActive(void *ctx, int enable)$/;"	f	signature:(void *ctx, int enable)
fstWriterEmitHdrBytes	./fstapi.c	/^static void fstWriterEmitHdrBytes(struct fstWriterContext *xc)$/;"	f	file:	signature:(struct fstWriterContext *xc)
fstWriterEmitSectionHeader	./fstapi.c	/^static void fstWriterEmitSectionHeader(void *ctx)$/;"	f	file:	signature:(void *ctx)
fstWriterEmitTimeChange	./fstapi.c	/^void fstWriterEmitTimeChange(void *ctx, uint64_t tim)$/;"	f	signature:(void *ctx, uint64_t tim)
fstWriterEmitValueChange	./fstapi.c	/^void fstWriterEmitValueChange(void *ctx, fstHandle handle, const void *val)$/;"	f	signature:(void *ctx, fstHandle handle, const void *val)
fstWriterEmitVariableLengthValueChange	./fstapi.c	/^void fstWriterEmitVariableLengthValueChange(void *ctx, fstHandle handle, const void *val, uint32_t len)$/;"	f	signature:(void *ctx, fstHandle handle, const void *val, uint32_t len)
fstWriterFlushContext	./fstapi.c	/^void fstWriterFlushContext(void *ctx)$/;"	f	signature:(void *ctx)
fstWriterFlushContextPrivate	./fstapi.c	/^static void fstWriterFlushContextPrivate(void *ctx)$/;"	f	file:	signature:(void *ctx)
fstWriterFlushContextPrivate1	./fstapi.c	/^static void *fstWriterFlushContextPrivate1(void *ctx)$/;"	f	file:	signature:(void *ctx)
fstWriterFlushContextPrivate2	./fstapi.c	/^static void fstWriterFlushContextPrivate2(void *ctx)$/;"	f	file:	signature:(void *ctx)
fstWriterFseeko	./fstapi.c	/^static int fstWriterFseeko(struct fstWriterContext *xc, FILE *stream, off_t offset, int whence)$/;"	f	file:	signature:(struct fstWriterContext *xc, FILE *stream, off_t offset, int whence)
fstWriterGetDumpSizeLimitReached	./fstapi.c	/^int fstWriterGetDumpSizeLimitReached(void *ctx)$/;"	f	signature:(void *ctx)
fstWriterGetFseekFailed	./fstapi.c	/^int fstWriterGetFseekFailed(void *ctx)$/;"	f	signature:(void *ctx)
fstWriterPackType	./fstapi.h	/^enum fstWriterPackType {$/;"	g
fstWriterSVarint	./fstapi.c	/^static int fstWriterSVarint(FILE *handle, int64_t v)$/;"	f	file:	signature:(FILE *handle, int64_t v)
fstWriterSetAttrBegin	./fstapi.c	/^void fstWriterSetAttrBegin(void *ctx, enum fstAttrType attrtype, int subtype,$/;"	f	signature:(void *ctx, enum fstAttrType attrtype, int subtype, const char *attrname, uint64_t arg)
fstWriterSetAttrDoubleArgGeneric	./fstapi.c	/^static void fstWriterSetAttrDoubleArgGeneric(void *ctx, int typ, uint64_t arg1, uint64_t arg2)$/;"	f	file:	signature:(void *ctx, int typ, uint64_t arg1, uint64_t arg2)
fstWriterSetAttrEnd	./fstapi.c	/^void fstWriterSetAttrEnd(void *ctx)$/;"	f	signature:(void *ctx)
fstWriterSetAttrGeneric	./fstapi.c	/^static void fstWriterSetAttrGeneric(void *ctx, const char *comm, int typ, uint64_t arg)$/;"	f	file:	signature:(void *ctx, const char *comm, int typ, uint64_t arg)
fstWriterSetComment	./fstapi.c	/^void fstWriterSetComment(void *ctx, const char *comm)$/;"	f	signature:(void *ctx, const char *comm)
fstWriterSetDate	./fstapi.c	/^void fstWriterSetDate(void *ctx, const char *dat)$/;"	f	signature:(void *ctx, const char *dat)
fstWriterSetDumpSizeLimit	./fstapi.c	/^void fstWriterSetDumpSizeLimit(void *ctx, uint64_t numbytes)$/;"	f	signature:(void *ctx, uint64_t numbytes)
fstWriterSetEnvVar	./fstapi.c	/^void fstWriterSetEnvVar(void *ctx, const char *envvar)$/;"	f	signature:(void *ctx, const char *envvar)
fstWriterSetFileType	./fstapi.c	/^void fstWriterSetFileType(void *ctx, enum fstFileType filetype)$/;"	f	signature:(void *ctx, enum fstFileType filetype)
fstWriterSetPackType	./fstapi.c	/^void fstWriterSetPackType(void *ctx, enum fstWriterPackType typ)$/;"	f	signature:(void *ctx, enum fstWriterPackType typ)
fstWriterSetParallelMode	./fstapi.c	/^void fstWriterSetParallelMode(void *ctx, int enable)$/;"	f	signature:(void *ctx, int enable)
fstWriterSetRepackOnClose	./fstapi.c	/^void fstWriterSetRepackOnClose(void *ctx, int enable)$/;"	f	signature:(void *ctx, int enable)
fstWriterSetScope	./fstapi.c	/^void fstWriterSetScope(void *ctx, enum fstScopeType scopetype,$/;"	f	signature:(void *ctx, enum fstScopeType scopetype, const char *scopename, const char *scopecomp)
fstWriterSetSourceInstantiationStem	./fstapi.c	/^void fstWriterSetSourceInstantiationStem(void *ctx, const char *path, unsigned int line, unsigned int use_realpath)$/;"	f	signature:(void *ctx, const char *path, unsigned int line, unsigned int use_realpath)
fstWriterSetSourceStem	./fstapi.c	/^void fstWriterSetSourceStem(void *ctx, const char *path, unsigned int line, unsigned int use_realpath)$/;"	f	signature:(void *ctx, const char *path, unsigned int line, unsigned int use_realpath)
fstWriterSetSourceStem_2	./fstapi.c	/^static void fstWriterSetSourceStem_2(void *ctx, const char *path, unsigned int line, unsigned int use_realpath, int typ)$/;"	f	file:	signature:(void *ctx, const char *path, unsigned int line, unsigned int use_realpath, int typ)
fstWriterSetTimescale	./fstapi.c	/^void fstWriterSetTimescale(void *ctx, int ts)$/;"	f	signature:(void *ctx, int ts)
fstWriterSetTimescaleFromString	./fstapi.c	/^void fstWriterSetTimescaleFromString(void *ctx, const char *s)$/;"	f	signature:(void *ctx, const char *s)
fstWriterSetTimezero	./fstapi.c	/^void fstWriterSetTimezero(void *ctx, int64_t tim)$/;"	f	signature:(void *ctx, int64_t tim)
fstWriterSetUpscope	./fstapi.c	/^void fstWriterSetUpscope(void *ctx)$/;"	f	signature:(void *ctx)
fstWriterSetVersion	./fstapi.c	/^void fstWriterSetVersion(void *ctx, const char *vers)$/;"	f	signature:(void *ctx, const char *vers)
fstWriterUint32WithVarint32	./fstapi.c	/^static uint32_t fstWriterUint32WithVarint32(struct fstWriterContext *xc, uint32_t *u, uint32_t v, const void *dbuf, uint32_t siz)$/;"	f	file:	signature:(struct fstWriterContext *xc, uint32_t *u, uint32_t v, const void *dbuf, uint32_t siz)
fstWriterUint32WithVarint32AndLength	./fstapi.c	/^static uint32_t fstWriterUint32WithVarint32AndLength(struct fstWriterContext *xc, uint32_t *u, uint32_t v, const void *dbuf, uint32_t siz)$/;"	f	file:	signature:(struct fstWriterContext *xc, uint32_t *u, uint32_t v, const void *dbuf, uint32_t siz)
fstWriterUint64	./fstapi.c	/^static int fstWriterUint64(FILE *handle, uint64_t v)$/;"	f	file:	signature:(FILE *handle, uint64_t v)
fstWriterVarint	./fstapi.c	/^static int fstWriterVarint(FILE *handle, uint64_t v)$/;"	f	file:	signature:(FILE *handle, uint64_t v)
fstWritex	./fstapi.c	/^static void fstWritex(struct fstReaderContext *xc, void *v, int len)$/;"	f	file:	signature:(struct fstReaderContext *xc, void *v, int len)
fstWritex	./fstapi.c	100;"	d	file:
fst_1argdvhdr	./v_ex4.c	/^static void fst_1argdvhdr(struct mdvmast_t *mdvp)$/;"	f	file:	signature:(struct mdvmast_t *mdvp)
fst_1inst_dvhdrs	./v_ex4.c	/^static void fst_1inst_dvhdrs(struct itree_t *itp)$/;"	f	file:	signature:(struct itree_t *itp)
fst_1subtree_allvars	./v_ex4.c	/^static void fst_1subtree_allvars(struct itree_t *itp, int32 level)$/;"	f	file:	signature:(struct itree_t *itp, int32 level)
fst_bld1_dmpv_event	./v_ex4.c	/^static void fst_bld1_dmpv_event(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
fst_bld1_dmpv_event_thrd	./v_ex4.c	/^static void fst_bld1_dmpv_event_thrd(struct net_t *np, t_midat *idp, $/;"	f	file:	signature:(struct net_t *np, t_midat *idp, struct dmp_buf_t *dbp)
fst_bld1_dmpv_real	./v_ex4.c	/^static void fst_bld1_dmpv_real(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
fst_bld1_dmpv_real_array	./v_ex4.c	/^static void fst_bld1_dmpv_real_array(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
fst_bld1_dmpv_real_array_thrd	./v_ex4.c	/^static void fst_bld1_dmpv_real_array_thrd(struct net_t *np, t_midat *idp,$/;"	f	file:	signature:(struct net_t *np, t_midat *idp, struct dmp_buf_t *dbp)
fst_bld1_dmpv_real_thrd	./v_ex4.c	/^static void fst_bld1_dmpv_real_thrd(struct net_t *np, t_midat *idp,$/;"	f	file:	signature:(struct net_t *np, t_midat *idp, struct dmp_buf_t *dbp)
fst_bld1_dmpv_scalar	./v_ex4.c	/^static void fst_bld1_dmpv_scalar(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
fst_bld1_dmpv_scalar_2state_array	./v_ex4.c	/^static void fst_bld1_dmpv_scalar_2state_array(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
fst_bld1_dmpv_scalar_2state_array_thrd	./v_ex4.c	/^static void fst_bld1_dmpv_scalar_2state_array_thrd(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, t_midat *idp, struct dmp_buf_t *dbp)
fst_bld1_dmpv_scalar_array	./v_ex4.c	/^static void fst_bld1_dmpv_scalar_array(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
fst_bld1_dmpv_scalar_array_thrd	./v_ex4.c	/^static void fst_bld1_dmpv_scalar_array_thrd(struct net_t *np, t_midat *idp,$/;"	f	file:	signature:(struct net_t *np, t_midat *idp, struct dmp_buf_t *dbp)
fst_bld1_dmpv_scalar_thrd	./v_ex4.c	/^static void fst_bld1_dmpv_scalar_thrd(struct net_t *np, t_midat *idp,$/;"	f	file:	signature:(struct net_t *np, t_midat *idp, struct dmp_buf_t *dbp)
fst_bld1_dmpv_vector_1w	./v_ex4.c	/^static void fst_bld1_dmpv_vector_1w(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
fst_bld1_dmpv_vector_1w_packed_array	./v_ex4.c	/^static void fst_bld1_dmpv_vector_1w_packed_array(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
fst_bld1_dmpv_vector_1w_packed_array_thrd	./v_ex4.c	/^static void fst_bld1_dmpv_vector_1w_packed_array_thrd(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, t_midat *idp, struct dmp_buf_t *dbp)
fst_bld1_dmpv_vector_1w_thrd	./v_ex4.c	/^static void fst_bld1_dmpv_vector_1w_thrd(struct net_t *np, t_midat *idp,$/;"	f	file:	signature:(struct net_t *np, t_midat *idp, struct dmp_buf_t *dbp)
fst_bld1_dmpv_vector_2state_1w	./v_ex4.c	/^static void fst_bld1_dmpv_vector_2state_1w(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
fst_bld1_dmpv_vector_2state_1w_array	./v_ex4.c	/^static void fst_bld1_dmpv_vector_2state_1w_array(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
fst_bld1_dmpv_vector_2state_1w_array_thrd	./v_ex4.c	/^static void fst_bld1_dmpv_vector_2state_1w_array_thrd(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, t_midat *idp, struct dmp_buf_t *dbp)
fst_bld1_dmpv_vector_2state_1w_thrd	./v_ex4.c	/^static void fst_bld1_dmpv_vector_2state_1w_thrd(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, t_midat *idp, struct dmp_buf_t *dbp)
fst_bld1_dmpv_vector_2state_wide	./v_ex4.c	/^static void fst_bld1_dmpv_vector_2state_wide(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
fst_bld1_dmpv_vector_2state_wide_array	./v_ex4.c	/^static void fst_bld1_dmpv_vector_2state_wide_array(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
fst_bld1_dmpv_vector_2state_wide_array_thrd	./v_ex4.c	/^static void fst_bld1_dmpv_vector_2state_wide_array_thrd(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, t_midat *idp, struct dmp_buf_t *dbp)
fst_bld1_dmpv_vector_2state_wide_thrd	./v_ex4.c	/^static void fst_bld1_dmpv_vector_2state_wide_thrd(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, t_midat *idp, struct dmp_buf_t *dbp)
fst_bld1_dmpv_vector_notpacked_1w_array	./v_ex4.c	/^static void fst_bld1_dmpv_vector_notpacked_1w_array(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
fst_bld1_dmpv_vector_notpacked_1w_array_thrd	./v_ex4.c	/^static void fst_bld1_dmpv_vector_notpacked_1w_array_thrd(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, t_midat *idp, struct dmp_buf_t *dbp)
fst_bld1_dmpv_vector_svec	./v_ex4.c	/^static void fst_bld1_dmpv_vector_svec(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
fst_bld1_dmpv_vector_svec_thrd	./v_ex4.c	/^static void fst_bld1_dmpv_vector_svec_thrd(struct net_t *np, t_midat *idp,$/;"	f	file:	signature:(struct net_t *np, t_midat *idp, struct dmp_buf_t *dbp)
fst_bld1_dmpv_vector_wide	./v_ex4.c	/^static void fst_bld1_dmpv_vector_wide(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
fst_bld1_dmpv_vector_wide_array	./v_ex4.c	/^static void fst_bld1_dmpv_vector_wide_array(struct net_t *np, t_midat *idp)$/;"	f	file:	signature:(struct net_t *np, t_midat *idp)
fst_bld1_dmpv_vector_wide_array_thrd	./v_ex4.c	/^static void fst_bld1_dmpv_vector_wide_array_thrd(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, t_midat *idp, struct dmp_buf_t *dbp)
fst_bld1_dmpv_vector_wide_thrd	./v_ex4.c	/^static void fst_bld1_dmpv_vector_wide_thrd(struct net_t *np, t_midat *idp,$/;"	f	file:	signature:(struct net_t *np, t_midat *idp, struct dmp_buf_t *dbp)
fst_break_add_size	./fstapi.c	/^size_t fst_break_add_size;$/;"	m	struct:fstWriterContext	file:	access:public
fst_break_size	./fstapi.c	/^size_t fst_break_size;$/;"	m	struct:fstWriterContext	file:	access:public
fst_byte_to_chars	./v_ex4.c	/^static const word64 fst_byte_to_chars[256] = {$/;"	v	file:
fst_create_one_var	./v_ex4.c	/^static void fst_create_one_var(struct net_t *np, t_midat *idp, $/;"	f	file:	signature:(struct net_t *np, t_midat *idp, struct dvchgnets_t *dvchgp, int32 ninsts, int32 ndx1, int32 ndx2, int32 flatndx)
fst_create_vars	./v_ex4.c	/^static void fst_create_vars(struct net_t *np, t_midat *idp, int32 ninsts,$/;"	f	file:	signature:(struct net_t *np, t_midat *idp, int32 ninsts, struct mdvmast_t *mdvp)
fst_dir_type	./v_ex4.c	/^static enum fstVarDir fst_dir_type(int32 iotyp)$/;"	f	file:	signature:(int32 iotyp)
fst_dmpv_sdispb	./v_ex4.c	/^static void fst_dmpv_sdispb(word32 *ap, word32 *bp, int32 blen)$/;"	f	file:	signature:(word32 *ap, word32 *bp, int32 blen)
fst_dmpv_sdispb_1w	./v_ex4.c	/^static void fst_dmpv_sdispb_1w(word32 aval, word32 bval, int32 blen)$/;"	f	file:	signature:(word32 aval, word32 bval, int32 blen)
fst_dmpv_sdispb_1w_2state	./v_ex4.c	/^static void fst_dmpv_sdispb_1w_2state(word32 aval, int32 blen)$/;"	f	file:	signature:(word32 aval, int32 blen)
fst_dmpv_sdispb_2state	./v_ex4.c	/^static void fst_dmpv_sdispb_2state(word32 *ap, int32 blen)$/;"	f	file:	signature:(word32 *ap, int32 blen)
fst_dvtsktyp	./v_ex4.c	/^static enum fstScopeType fst_dvtsktyp(word32 tskt)$/;"	f	file:	signature:(word32 tskt)
fst_exec_slotend	./v_sim.c	/^static void fst_exec_slotend(void)$/;"	f	file:	signature:(void)
fst_fromtop_iscopeto	./v_ex4.c	/^static void fst_fromtop_iscopeto(struct itree_t *itp)$/;"	f	file:	signature:(struct itree_t *itp)
fst_huge_break_size	./fstapi.c	/^size_t fst_huge_break_size;$/;"	m	struct:fstWriterContext	file:	access:public
fst_insts_ofwire	./v_ex4.c	/^static void fst_insts_ofwire(struct mod_t *mdp, struct net_t *np, $/;"	f	file:	signature:(struct mod_t *mdp, struct net_t *np, int32 is_dumpoff)
fst_insts_ofwire_array	./v_ex4.c	/^static void fst_insts_ofwire_array(struct mod_t *mdp, struct net_t *np, $/;"	f	file:	signature:(struct mod_t *mdp, struct net_t *np, int32 is_dumpoff)
fst_net_type	./v_ex4.c	/^static enum fstVarType fst_net_type(int32 ntyp)$/;"	f	file:	signature:(int32 ntyp)
fst_orig_break_add_size	./fstapi.c	/^size_t fst_orig_break_add_size;$/;"	m	struct:fstWriterContext	file:	access:public
fst_orig_break_size	./fstapi.c	/^size_t fst_orig_break_size;$/;"	m	struct:fstWriterContext	file:	access:public
fst_rmv_dollar_module_name	./v_ex4.c	/^static const char *fst_rmv_dollar_module_name(const char *s)$/;"	f	file:	signature:(const char *s)
fst_set_dmpv_bld_func	./v_ex4.c	/^static void fst_set_dmpv_bld_func(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
fst_set_dmpv_bld_func_thrd	./v_ex4.c	/^static void fst_set_dmpv_bld_func_thrd(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
fst_set_time	./v_ex4.c	/^static void fst_set_time(void)$/;"	f	file:	signature:(void)
fst_setup	./v_ex4.c	/^static void fst_setup(void)$/;"	f	file:	signature:(void)
fst_tasks_dvhdrs	./v_ex4.c	/^static void fst_tasks_dvhdrs(struct itree_t *itp,$/;"	f	file:	signature:(struct itree_t *itp, struct symtab_t *sytp)
fst_to_timunitnam	./v_ex4.c	/^static char *fst_to_timunitnam(char *s, word32 unit)$/;"	f	file:	signature:(char *s, word32 unit)
fst_totop_iscopeback	./v_ex4.c	/^static void fst_totop_iscopeback(struct itree_t *itp)$/;"	f	file:	signature:(struct itree_t *itp)
fst_tskscopeback	./v_ex4.c	/^static void fst_tskscopeback(struct symtab_t *sytp)$/;"	f	file:	signature:(struct symtab_t *sytp)
fst_tskscopeto	./v_ex4.c	/^static void fst_tskscopeto(struct symtab_t *sytp)$/;"	f	file:	signature:(struct symtab_t *sytp)
fst_valtoch_tab	./v_ex4.c	/^static const char fst_valtoch_tab[] = { '0', '1', 'z', 'x' };$/;"	v	file:
fst_writer_thread	./v_ex4.c	/^static void *fst_writer_thread(void *pa)$/;"	f	file:	signature:(void *pa)
ft_node_cmp	./v_bbgen3.c	/^static cmpsword ft_node_cmp(const void *valp, const struct avlnode_t *nodp)$/;"	f	file:	signature:(const void *valp, const struct avlnode_t *nodp)
ftello	./fstapi.c	143;"	d	file:
ftval_t	./igen.h	/^struct ftval_t {$/;"	s
ftval_t::am1	./igen.h	/^ struct amode_t am1;$/;"	m	struct:ftval_t	typeref:struct:ftval_t::amode_t	access:public
ftval_t::am2	./igen.h	/^ struct amode_t am2;$/;"	m	struct:ftval_t	typeref:struct:ftval_t::amode_t	access:public
ftval_t::res_tni	./igen.h	/^ int32 res_tni;$/;"	m	struct:ftval_t	access:public
ftval_t::res_tnwid	./igen.h	/^ unsigned res_tnwid : 24;$/;"	m	struct:ftval_t	access:public
ftval_t::srtyp	./igen.h	/^ unsigned srtyp : 6;$/;"	m	struct:ftval_t	access:public
ftval_t::tn_typ	./igen.h	/^ unsigned tn_typ : 4;           \/* type of tmp name *\/  $/;"	m	struct:ftval_t	access:public
fudp	./igen.h	/^ struct iusedef_t *fudp;      \/* ptrs to use <bblk, insn> or deflst insn *\/$/;"	m	union:optim_u	typeref:struct:optim_u::iusedef_t	access:public
full	./lz4.c	/^typedef enum { full = 0, partial = 1 } earlyEnd_directive;$/;"	e	enum:__anon10	file:
fullhash	./fstapi.c	/^uint32_t fullhash, length;$/;"	m	struct:collchain_t	file:	access:public
func_add_vpi_systf	./v_vpi.c	/^static struct sy_t *func_add_vpi_systf(char *fnam, int32 fnum)$/;"	f	file:	signature:(char *fnam, int32 fnum)
func_canbe_const	./v_src.c	/^static int32 func_canbe_const(struct task_t *ftskp)$/;"	f	file:	signature:(struct task_t *ftskp)
func_nxtstp	./v.h	/^ struct st_t *func_nxtstp;    \/* for functions disable is goto *\/$/;"	m	struct:dsable_t	typeref:struct:dsable_t::st_t	access:public
funcdefprop_vpiget	./v_vpi2.c	/^static int32 funcdefprop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
g_class	./v.h	/^ unsigned g_class : 3;        \/* gate class for processing case *\/$/;"	m	struct:gate_t	access:public
g_delrep	./v.h	/^ unsigned g_delrep : 5;$/;"	m	struct:gate_t	access:public
g_du	./v.h	/^ union del_u g_du;            \/* per type delay union *\/$/;"	m	struct:gate_t	typeref:union:gate_t::del_u	access:public
g_giap	./v.h	/^ struct gia_aux_t *g_giap;    \/* arr of gates info gia aux record *\/$/;"	m	struct:gate_t	typeref:struct:gate_t::gia_aux_t	access:public
g_gone	./v.h	/^ unsigned g_gone : 1;         \/* gate removed, no state *\/ $/;"	m	struct:gate_t	access:public
g_hasst	./v.h	/^ unsigned g_hasst : 1;        \/* T => stren in src or tran(if) cycle break *\/$/;"	m	struct:gate_t	access:public
g_pdst	./v.h	/^ unsigned g_pdst : 1;         \/* T => gate drives del\/pth *\/$/;"	m	struct:gate_t	access:public
g_stval	./v.h	/^ unsigned g_stval : 6;        \/* (3 bit each 0 and 1 st.) <ST:ST> if none *\/$/;"	m	struct:gate_t	access:public
g_unam	./v.h	/^ unsigned g_unam : 1;         \/* primitive has no instance name *\/$/;"	m	struct:gate_t	access:public
gate_conta_node_alloc	./v_bbgen3.c	/^static struct avlnode_t *gate_conta_node_alloc(void *tnsydup)$/;"	f	file:	signature:(void *tnsydup)
gate_conta_node_cmp	./v_bbgen3.c	/^static cmpsword gate_conta_node_cmp(const void *valp, $/;"	f	file:	signature:(const void *valp, const struct avlnode_t *nodp)
gate_conta_t	./igen.h	/^struct gate_conta_t {$/;"	s
gate_conta_t::fgp	./igen.h	/^ struct flowg_t *fgp;           \/* the flowg generated for this gate *\/$/;"	m	struct:gate_conta_t	typeref:struct:gate_conta_t::flowg_t	access:public
gate_conta_t::gc_ndx	./igen.h	/^ int32 gc_ndx;                  \/* enter index for generate flow graph *\/$/;"	m	struct:gate_conta_t	access:public
gate_conta_t::mdp	./igen.h	/^ struct mod_t *mdp;             \/* instance to move to during fg gen *\/$/;"	m	struct:gate_conta_t	typeref:struct:gate_conta_t::mod_t	access:public
gate_conta_t::npp	./igen.h	/^ struct net_pin_t *npp;         \/* net pin from which this is gened *\/$/;"	m	struct:gate_conta_t	typeref:struct:gate_conta_t::net_pin_t	access:public
gate_conta_t::xp	./igen.h	/^ struct expr_t *xp;             \/* gate expression *\/$/;"	m	struct:gate_conta_t	typeref:struct:gate_conta_t::expr_t	access:public
gate_da_list_t	./igen.h	/^struct gate_da_list_t {$/;"	s
gate_da_list_t::fgp	./igen.h	/^ struct flowg_t *fgp;             \/* flow graph *\/$/;"	m	struct:gate_da_list_t	typeref:struct:gate_da_list_t::flowg_t	access:public
gate_da_list_t::nxt	./igen.h	/^ struct gate_da_list_t *nxt;      \/* nxt delay assign fg *\/$/;"	m	struct:gate_da_list_t	typeref:struct:gate_da_list_t::gate_da_list_t	access:public
gate_errifn	./v_fx2.c	/^static void gate_errifn(struct gate_t *gp, int32 n)$/;"	f	file:	signature:(struct gate_t *gp, int32 n)
gate_initeval	./v_sim.c	/^static void gate_initeval(struct gate_t *gp)$/;"	f	file:	signature:(struct gate_t *gp)
gate_out_ofs	./v.h	/^ size_t gate_out_ofs;         \/* gate output value index into idp *\/$/;"	m	struct:gate_t	access:public
gate_st_bit	./v_sim.c	/^static void gate_st_bit(word32 *wp, int32 blen, int32 biti, int32 srep,$/;"	f	file:	signature:(word32 *wp, int32 blen, int32 biti, int32 srep, word32 av, word32 bv)
gate_t	./v.h	/^struct gate_t {$/;"	s
gate_t::ctevp	./v.h	/^ struct ctev_t *ctevp;$/;"	m	struct:gate_t	typeref:struct:gate_t::ctev_t	access:public
gate_t::g_class	./v.h	/^ unsigned g_class : 3;        \/* gate class for processing case *\/$/;"	m	struct:gate_t	access:public
gate_t::g_delrep	./v.h	/^ unsigned g_delrep : 5;$/;"	m	struct:gate_t	access:public
gate_t::g_du	./v.h	/^ union del_u g_du;            \/* per type delay union *\/$/;"	m	struct:gate_t	typeref:union:gate_t::del_u	access:public
gate_t::g_giap	./v.h	/^ struct gia_aux_t *g_giap;    \/* arr of gates info gia aux record *\/$/;"	m	struct:gate_t	typeref:struct:gate_t::gia_aux_t	access:public
gate_t::g_gone	./v.h	/^ unsigned g_gone : 1;         \/* gate removed, no state *\/ $/;"	m	struct:gate_t	access:public
gate_t::g_hasst	./v.h	/^ unsigned g_hasst : 1;        \/* T => stren in src or tran(if) cycle break *\/$/;"	m	struct:gate_t	access:public
gate_t::g_pdst	./v.h	/^ unsigned g_pdst : 1;         \/* T => gate drives del\/pth *\/$/;"	m	struct:gate_t	access:public
gate_t::g_stval	./v.h	/^ unsigned g_stval : 6;        \/* (3 bit each 0 and 1 st.) <ST:ST> if none *\/$/;"	m	struct:gate_t	access:public
gate_t::g_unam	./v.h	/^ unsigned g_unam : 1;         \/* primitive has no instance name *\/$/;"	m	struct:gate_t	access:public
gate_t::gate_out_ofs	./v.h	/^ size_t gate_out_ofs;         \/* gate output value index into idp *\/$/;"	m	struct:gate_t	access:public
gate_t::gattrs	./v.h	/^ struct attr_t *gattrs;       \/* optional gate attribute *\/$/;"	m	struct:gate_t	typeref:struct:gate_t::attr_t	access:public
gate_t::gchg_func	./v.h	/^ void (*gchg_func)(register struct gate_t *, register word32);$/;"	m	struct:gate_t	access:public
gate_t::gmsym	./v.h	/^ struct sy_t *gmsym;          \/* gate type symbol *\/$/;"	m	struct:gate_t	typeref:struct:gate_t::sy_t	access:public
gate_t::gpins	./v.h	/^ struct expr_t **gpins;       \/* ptr to table of input port expr ptrs *\/$/;"	m	struct:gate_t	typeref:struct:gate_t::expr_t	access:public
gate_t::gpnum	./v.h	/^ unsigned gpnum : 14;         \/* number of gate ports (limit 16k) *\/$/;"	m	struct:gate_t	access:public
gate_t::gstate_ofs	./v.h	/^ size_t gstate_ofs;           \/* idp index storage of state vector *\/$/;"	m	struct:gate_t	access:public
gate_t::gsym	./v.h	/^ struct sy_t *gsym;$/;"	m	struct:gate_t	typeref:struct:gate_t::sy_t	access:public
gate_t::schd_tevs_ofs	./v.h	/^ size_t schd_tevs_ofs;        \/* idp index storage of scheduled events ndxes *\/$/;"	m	struct:gate_t	access:public
gateid	./v.h	/^ unsigned gateid : 8;$/;"	m	struct:primtab_t	access:public
gateout_valchg_register	./v_vpi.c	/^static vpiHandle gateout_valchg_register(struct h_t *hp,$/;"	f	file:	signature:(struct h_t *hp, struct t_cb_data *datp)
gateprop_vpiget	./v_vpi2.c	/^static int32 gateprop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
gatestrprop_vpiget	./v_vpi2.c	/^static char *gatestrprop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
gather_add_1mod_gened_items	./v_genfx.c	/^static void gather_add_1mod_gened_items(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
gatnam	./v.h	/^ char *gatnam;$/;"	m	struct:primtab_t	access:public
gattrs	./v.h	/^ struct attr_t *gattrs;       \/* optional gate attribute *\/$/;"	m	struct:gate_t	typeref:struct:gate_t::attr_t	access:public
gblk_has_grefs	./v.h	/^ unsigned gblk_has_grefs : 1;$/;"	m	struct:genblk_t	access:public
gblk_in_gfor	./v.h	/^ unsigned gblk_in_gfor : 1;$/;"	m	struct:genblk_t	access:public
gblk_mod_in	./v.h	/^ struct mod_t *gblk_mod_in;    \/* mdp that this gblk in defined in *\/$/;"	m	struct:genblk_t	typeref:struct:genblk_t::mod_t	access:public
gblk_sytab	./v.h	/^ struct symtab_t *gblk_sytab;$/;"	m	struct:genblk_t	typeref:struct:genblk_t::symtab_t	access:public
gblk_tsks	./v.h	/^ struct task_t *gblk_tsks;  \/* for tsks (now all t\/f\/lb need gblk tsk list) *\/$/;"	m	struct:genblk_t	typeref:struct:genblk_t::task_t	access:public
gblk_under_genfor	./v_genfx.c	/^static int32 gblk_under_genfor(struct genblk_t *gblkp)$/;"	f	file:	signature:(struct genblk_t *gblkp)
gblknam	./v.h	/^ char *gblknam;$/;"	m	struct:genblk_t	access:public
gblkofsyt	./v.h	/^ struct genblk_t *gblkofsyt;  \/* for gen blk symtabs, gen blk symtab in *\/$/;"	m	struct:symtab_t	typeref:struct:symtab_t::genblk_t	access:public
gc_ndx	./igen.h	/^ int32 gc_ndx;                  \/* enter index for generate flow graph *\/$/;"	m	struct:gate_conta_t	access:public
gchg_func	./v.h	/^ void (*gchg_func)(register struct gate_t *, register word32);$/;"	m	struct:gate_t	access:public
gclass	./v.h	/^ unsigned gclass : 8;         \/* class of gate *\/$/;"	m	struct:primtab_t	access:public
gcmp_ndp	./v.h	/^ struct expr_t *gcmp_ndp;     \/* from XMR parse expr, the XMR expr *\/$/;"	m	struct:xmrcmp_t	typeref:struct:xmrcmp_t::expr_t	access:public
gcsinxt	./v.h	/^ struct gen_csitem_t *gcsinxt;$/;"	m	struct:gen_csitem_t	typeref:struct:gen_csitem_t::gen_csitem_t	access:public
gcsitems	./v.h	/^ struct gen_csitem_t *gcsitems;\/* first item always default: place holder *\/ $/;"	m	struct:gen_case_t	typeref:struct:gen_case_t::gen_csitem_t	access:public
gdflt_i	./v.h	/^ unsigned gdflt_i : 1;$/;"	m	struct:gen_csitem_t	access:public
gdfpnam	./v.h	/^ char *gdfpnam;               \/* lhs name from gref *\/$/;"	m	struct:dfparam_t	access:public
gen2_proc_assign	./v_bbgen.c	/^static void gen2_proc_assign(struct expr_t *lhsx, int32 rhs_apti)$/;"	f	file:	signature:(struct expr_t *lhsx, int32 rhs_apti)
gen_1bit_sched	./v_bbgen2.c	/^static void gen_1bit_sched(struct net_t *np, int32 np_ti, int32 bi, $/;"	f	file:	signature:(struct net_t *np, int32 np_ti, int32 bi, int32 new_apti, int32 addr_apti)
gen_1dce_trigger_insns	./v_bbgen2.c	/^static void gen_1dce_trigger_insns(struct net_t *np, struct dcevnt_t *dcep,$/;"	f	file:	signature:(struct net_t *np, struct dcevnt_t *dcep, struct bblk_t *after_bbp, int32 range_check, int32 processing_pnd0s)
gen_1inst_np_mdprt_insns	./v_bbgen2.c	/^static void gen_1inst_np_mdprt_insns(struct net_pin_t *npp,$/;"	f	file:	signature:(struct net_pin_t *npp, struct mod_pin_t *mpp, int32 ii, struct mod_t *downmdp, int32 oneinst, int32 has_lds_after, int32 has_shared_blocks)
gen_1inst_np_mdprt_insns_optim_mixed_xpr	./v_bbgen2.c	/^static void gen_1inst_np_mdprt_insns_optim_mixed_xpr(struct net_pin_t *npp,$/;"	f	file:	signature:(struct net_pin_t *npp, struct mod_pin_t *mpp, struct mod_t *downmdp, int32 has_all_nchg, int32 has_some_nchg, int32 has_dmpvs, int32 has_dmpps, int32 has_empty, int32 has_all_bsel, int32 all_bsel_1w, int32 has_toggle)
gen_1inst_np_mdprt_insns_scalar_optim	./v_bbgen2.c	/^static void gen_1inst_np_mdprt_insns_scalar_optim(struct net_pin_t *npp,$/;"	f	file:	signature:(struct net_pin_t *npp, struct mod_pin_t *mpp, struct mod_t *downmdp)
gen_1inst_tran_chan_no_vtxs	./v_bbgen2.c	/^static int32 gen_1inst_tran_chan_no_vtxs(struct net_t *np, int32 chanid, $/;"	f	file:	signature:(struct net_t *np, int32 chanid, int32 idp_saved, int32 bi)
gen_1inst_tran_chan_no_vtxs_inline	./v_bbgen2.c	/^static int32 gen_1inst_tran_chan_no_vtxs_inline(struct net_t *np, int32 chanid, $/;"	f	file:	signature:(struct net_t *np, int32 chanid, int32 idp_saved, int32 bi)
gen_1inst_tran_chan_no_vtxs_wrappers	./v_bbgen2.c	/^static int32 gen_1inst_tran_chan_no_vtxs_wrappers(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, int32 chanid, int32 idp_saved, int32 bi)
gen_1net_npp_insns	./v_bbgen2.c	/^static int32 gen_1net_npp_insns(struct net_t *np, int32 needs_range, int32 i1,$/;"	f	file:	signature:(struct net_t *np, int32 needs_range, int32 i1, int32 i2, int32 is_nchg_fg)
gen_1net_wakeup_insns	./v_bbgen2.c	/^static int32 gen_1net_wakeup_insns(struct net_t *np, int32 i1, int32 i2, $/;"	f	file:	signature:(struct net_t *np, int32 i1, int32 i2, int32 range_check, int32 processing_pnd0s)
gen_2state_vec_to_4state	./v_bbgen2.c	/^static int32 gen_2state_vec_to_4state(int32 two_ti, int32 nwid)$/;"	f	file:	signature:(int32 two_ti, int32 nwid)
gen_4state_vec_to_2state	./v_bbgen2.c	/^static int32 gen_4state_vec_to_2state(int32 four_ti, int32 ndwid)$/;"	f	file:	signature:(int32 four_ti, int32 ndwid)
gen_ab_setx	./v_bbgen.c	/^static void gen_ab_setx(int32 res_apti, int32 skip_2state_zero)$/;"	f	file:	signature:(int32 res_apti, int32 skip_2state_zero)
gen_access_stbsel	./v_bbgen2.c	/^static int32 gen_access_stbsel(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
gen_access_stbsel_const	./v_bbgen2.c	/^static int32 gen_access_stbsel_const(struct expr_t *ndp, int32 bi)$/;"	f	file:	signature:(struct expr_t *ndp, int32 bi)
gen_access_stpsel	./v_bbgen2.c	/^static int32 gen_access_stpsel(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
gen_add_mstab	./v.h	/^ unsigned gen_add_mstab : 1;  \/* T => qualified gen nam moves to mod sym tab *\/$/;"	m	struct:sy_t	access:public
gen_add_static_nchglst	./v_bbgen2.c	/^static void gen_add_static_nchglst(int32 has_n_mipd, int32 nchg_reg_ti)$/;"	f	file:	signature:(int32 has_n_mipd, int32 nchg_reg_ti)
gen_arg_dpi	./v_bbgen.c	/^static int32 gen_arg_dpi(struct net_t *np, int32 *pass_as_adr, $/;"	f	file:	signature:(struct net_t *np, int32 *pass_as_adr, struct expr_t *lhsx, int32 *input_tmps, int32 **wide_tmps, int32 argno, int32 trtyp, int32 *string_tmps)
gen_array_pck_element_select	./v_bbgen.c	/^static int32 gen_array_pck_element_select(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, struct expr_t *sel_ndp, int32 val_ti, int32 rhs_ti, int32 srtyp, int32 sel_ti)
gen_arrsel	./v_bbgen.c	/^static int32 gen_arrsel(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
gen_asm_insns_for_all_mods	./v_bbgen.c	/^static void gen_asm_insns_for_all_mods(void)$/;"	f	file:	signature:(void)
gen_assgn_to_arr	./v_bbgen.c	/^static void gen_assgn_to_arr(struct expr_t *lhsx, int32 rhs_ti)$/;"	f	file:	signature:(struct expr_t *lhsx, int32 rhs_ti)
gen_assgn_to_bit_var	./v_bbgen.c	/^static void gen_assgn_to_bit_var(struct expr_t *lhsx, int32 biti_ti,$/;"	f	file:	signature:(struct expr_t *lhsx, int32 biti_ti, int32 rhs_apti, int32 xmr_pushed)
gen_assgn_to_index_width_psel	./v_bbgen.c	/^static void gen_assgn_to_index_width_psel(struct expr_t *lhsx, int32 rhs_ti,$/;"	f	file:	signature:(struct expr_t *lhsx, int32 rhs_ti, int32 r1_ti, int32 arrel_ti)
gen_assgn_to_regbit	./v_bbgen.c	/^static void gen_assgn_to_regbit(struct expr_t *lhsx, int32 rhs_apti) $/;"	f	file:	signature:(struct expr_t *lhsx, int32 rhs_apti)
gen_assgn_to_regpsel	./v_bbgen.c	/^static void gen_assgn_to_regpsel(struct expr_t *lhsx, int32 rhs_apti)$/;"	f	file:	signature:(struct expr_t *lhsx, int32 rhs_apti)
gen_assign_1mdrwire	./v_bbgen2.c	/^static void gen_assign_1mdrwire(struct net_t *np, int32 rhs_apti, $/;"	f	file:	signature:(struct net_t *np, int32 rhs_apti, int32 ri1, int32 ri2)
gen_assign_1stmdrwire	./v_bbgen2.c	/^static void gen_assign_1stmdrwire(struct net_t *np, int32 sbp_ti, $/;"	f	file:	signature:(struct net_t *np, int32 sbp_ti, int32 ri1, int32 ri2)
gen_assign_1tran_bit	./v_bbgen2.c	/^static void gen_assign_1tran_bit(struct net_t *np, int32 bi, int32 val_ti, $/;"	f	file:	signature:(struct net_t *np, int32 bi, int32 val_ti, int32 is_stren)
gen_assign_dpi_outputs	./v_bbgen.c	/^static void gen_assign_dpi_outputs(struct expr_t *argshd_xp, $/;"	f	file:	signature:(struct expr_t *argshd_xp, struct task_pin_t *thdp, int32 *input_tmps, int32 *wide_tmps)
gen_assign_lhsx_to_accum	./v_bbgen.c	/^static void gen_assign_lhsx_to_accum(struct expr_t *lhsx, int32 rhs_ti,$/;"	f	file:	signature:(struct expr_t *lhsx, int32 rhs_ti, struct st_t *stp, struct st_t *xprop_stp)
gen_assign_simtime_to_lasttime	./v_bbgen2.c	/^static void gen_assign_simtime_to_lasttime(int32 ofs)$/;"	f	file:	signature:(int32 ofs)
gen_assign_xprop_accum_values	./v_bbgen.c	/^static void gen_assign_xprop_accum_values(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
gen_assign_xprop_value	./v_bbgen.c	/^static void gen_assign_xprop_value(struct st_t *stp, struct expr_t *rhsx,$/;"	f	file:	signature:(struct st_t *stp, struct expr_t *rhsx, int32 accum_ti, struct net_t *np)
gen_bin_arithop	./v_bbgen.c	/^static int32 gen_bin_arithop(struct expr_t *ndp, int32 op1_ti,$/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti, int32 op2_ti, int32 nd_signop)
gen_bin_arithop_2state	./v_bbgen.c	/^static int32 gen_bin_arithop_2state(struct expr_t *ndp, int32 op1_ti,$/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti, int32 op2_ti, int32 nd_signop, int32 srtyp)
gen_bin_ashiftr	./v_bbgen.c	/^static int32 gen_bin_ashiftr(struct expr_t *ndp, int32 op1_ti, int32 op2_ti,$/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti, int32 op2_ti, int32 op1_nd_wid, int32 op2_nd_wid)
gen_bin_ashiftr_2state	./v_bbgen.c	/^static int32 gen_bin_ashiftr_2state(struct expr_t *ndp, int32 op1_ti, $/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti, int32 op2_ti, int32 op1_nd_wid, int32 op2_nd_wid)
gen_bin_ashiftr_const	./v_bbgen.c	/^static int32 gen_bin_ashiftr_const(struct expr_t *ndp, int32 op1_ti, $/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti, int32 op2_ti)
gen_bin_ashiftr_const_2state	./v_bbgen.c	/^static int32 gen_bin_ashiftr_const_2state(struct expr_t *ndp, int32 op1_ti, $/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti, int32 op2_ti)
gen_bin_bitredand	./v_bbgen.c	/^static int32 gen_bin_bitredand(struct expr_t *ndp, int32 op1_ti, int32 op2_ti)$/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti, int32 op2_ti)
gen_bin_bitredor	./v_bbgen.c	/^static int32 gen_bin_bitredor(int32 op1_ti, int32 op2_ti)$/;"	f	file:	signature:(int32 op1_ti, int32 op2_ti)
gen_bin_bitredor_try	./v_bbgen.c	/^static int32 gen_bin_bitredor_try(int32 op1_ti, int32 op2_ti)$/;"	f	file:	signature:(int32 op1_ti, int32 op2_ti)
gen_bin_bitredxnor	./v_bbgen.c	/^static int32 gen_bin_bitredxnor(struct expr_t *ndp, int32 op1_ti, $/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti, int32 op2_ti)
gen_bin_bitredxnor_2state	./v_bbgen.c	/^static int32 gen_bin_bitredxnor_2state(struct expr_t *ndp, int32 op1_ti, $/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti, int32 op2_ti, int32 srtyp)
gen_bin_bitredxor	./v_bbgen.c	/^static int32 gen_bin_bitredxor(struct expr_t *ndp, int32 op1_ti, int32 op2_ti)$/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti, int32 op2_ti)
gen_bin_booland	./v_bbgen.c	/^static int32 gen_bin_booland(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
gen_bin_booland_2state	./v_bbgen.c	/^static int32 gen_bin_booland_2state(struct expr_t *ndp, int32 op1_ti)$/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti)
gen_bin_boolor	./v_bbgen.c	/^static int32 gen_bin_boolor(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
gen_bin_boolor_2state	./v_bbgen.c	/^static int32 gen_bin_boolor_2state(struct expr_t *ndp, int32 op1_ti)$/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti)
gen_bin_cneeq	./v_bbgen.c	/^static int32 gen_bin_cneeq(struct expr_t *ndp, int32 op1_ti, int32 op2_ti)$/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti, int32 op2_ti)
gen_bin_cvt_bool	./v_bbgen.c	/^static int32 gen_bin_cvt_bool(int32 term_apti, int32 term_bpti)$/;"	f	file:	signature:(int32 term_apti, int32 term_bpti)
gen_bin_neeq	./v_bbgen.c	/^static int32 gen_bin_neeq(struct expr_t *ndp, int32 op1_ti, int32 op2_ti)$/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti, int32 op2_ti)
gen_bin_neeq_2state	./v_bbgen.c	/^static int32 gen_bin_neeq_2state(struct expr_t *ndp, int32 op1_ti, int32 op2_ti)$/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti, int32 op2_ti)
gen_bin_neeq_wide	./v_bbgen.c	/^static int32 gen_bin_neeq_wide(struct expr_t *ndp, int32 op1_ti, int32 op2_ti, $/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti, int32 op2_ti, int32 opwid)
gen_bin_notsgn_shift	./v_bbgen.c	/^static int32 gen_bin_notsgn_shift(struct expr_t *ndp, int32 op1_ti,$/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti, int32 op2_ti, int32 op1_nd_wid, int32 op2_nd_wid)
gen_bin_notsgn_shift_2state	./v_bbgen.c	/^static int32 gen_bin_notsgn_shift_2state(struct expr_t *ndp, int32 op1_ti,$/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti, int32 op2_ti, int32 op1_nd_wid, int32 op2_nd_wid)
gen_bin_notsgn_shift_const	./v_bbgen.c	/^static int32 gen_bin_notsgn_shift_const(struct expr_t *ndp, int32 op1_ti,$/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti, int32 op2_ti)
gen_bin_notsgn_shift_const_2state	./v_bbgen.c	/^static int32 gen_bin_notsgn_shift_const_2state(struct expr_t *ndp, int32 op1_ti,$/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti, int32 op2_ti)
gen_bin_power	./v_bbgen.c	/^static int32 gen_bin_power(struct expr_t *ndp, int32 op1_ti, int32 op2_ti,$/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti, int32 op2_ti, int32 is_2state)
gen_bin_real_booland	./v_bbgen.c	/^static int32 gen_bin_real_booland(struct expr_t *ndp, int32 op1_ti,$/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti, int32 op2_ti)
gen_bin_real_boolor	./v_bbgen.c	/^static int32 gen_bin_real_boolor(struct expr_t *ndp, int32 op1_ti,$/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti, int32 op2_ti)
gen_bin_real_relcomp	./v_bbgen.c	/^static int32 gen_bin_real_relcomp(struct expr_t *ndp, int32 op1_ti,$/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti, int32 op2_ti)
gen_bin_relcomp	./v_bbgen.c	/^static int32 gen_bin_relcomp(struct expr_t *ndp, int32 op1_ti, int32 op2_ti,$/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti, int32 op2_ti, int32 srtyp)
gen_bin_relcomp_wide	./v_bbgen.c	/^static int32 gen_bin_relcomp_wide(struct expr_t *ndp, int32 op1_ti, $/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti, int32 op2_ti, int32 srtyp)
gen_bin_sgn_power	./v_bbgen.c	/^static int32 gen_bin_sgn_power(struct expr_t *ndp, int32 op1_ti, int32 op2_ti,$/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti, int32 op2_ti, int32 is_2state)
gen_bin_sign_div	./v_bbgen.c	/^static int32 gen_bin_sign_div(struct expr_t *ndp, int32 res_ti,$/;"	f	file:	signature:(struct expr_t *ndp, int32 res_ti, int32 op1_ti, int32 op2_ti, int32 is_mod, int32 is_2state)
gen_bin_sign_mult	./v_bbgen.c	/^static int32 gen_bin_sign_mult(struct expr_t *ndp, int32 res_ti,$/;"	f	file:	signature:(struct expr_t *ndp, int32 res_ti, int32 op1_ti, int32 op2_ti, int32 is_2state)
gen_binop	./v_bbgen.c	/^static int32 gen_binop(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
gen_binop_2state	./v_bbgen.c	/^static int32 gen_binop_2state(struct expr_t *ndp, int32 op1_ti, int32 op2_ti, $/;"	f	file:	signature:(struct expr_t *ndp, int32 op1_ti, int32 op2_ti, int32 op1_nd_wid, int32 op2_nd_wid, int32 nd_signop)
gen_bld_peri_basendx	./v_bbgen2.c	/^static int32 gen_bld_peri_basendx(struct net_pin_t *npp, struct mod_t *downmdp)$/;"	f	file:	signature:(struct net_pin_t *npp, struct mod_t *downmdp)
gen_bld_varmask	./v_bbgen.c	/^static int32 gen_bld_varmask(int32 bi_ti, int32 maskwid, int32 is_invert) $/;"	f	file:	signature:(int32 bi_ti, int32 maskwid, int32 is_invert)
gen_blking_dctl_ectl	./v_bbgen.c	/^static struct st_t *gen_blking_dctl_ectl(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
gen_bsel	./v_bbgen.c	/^static int32 gen_bsel(struct expr_t *ndp, int32 xwid)$/;"	f	file:	signature:(struct expr_t *ndp, int32 xwid)
gen_bsel_const	./v_bbgen.c	/^static int32 gen_bsel_const(struct expr_t *ndp, int32 xwid)$/;"	f	file:	signature:(struct expr_t *ndp, int32 xwid)
gen_case	./v_bbgen.c	/^static void gen_case(struct st_t *case_stp)$/;"	f	file:	signature:(struct st_t *case_stp)
gen_case_t	./v.h	/^struct gen_case_t {$/;"	s
gen_case_t::csx	./v.h	/^ struct expr_t *csx;$/;"	m	struct:gen_case_t	typeref:struct:gen_case_t::expr_t	access:public
gen_case_t::gcsitems	./v.h	/^ struct gen_csitem_t *gcsitems;\/* first item always default: place holder *\/ $/;"	m	struct:gen_case_t	typeref:struct:gen_case_t::gen_csitem_t	access:public
gen_case_t::gentab	./v.h	/^ struct genblk_t **gentab;    \/* tab for xmr indexing but if used size 1 *\/$/;"	m	struct:gen_case_t	typeref:struct:gen_case_t::genblk_t	access:public
gen_case_t::ngenblks	./v.h	/^ int32 ngenblks;            \/* for if max 1 (none -1) but makes consistent *\/$/;"	m	struct:gen_case_t	access:public
gen_cat_to_cat_match	./v_bbgen.c	/^static int32 gen_cat_to_cat_match(struct expr_t *lhsx,$/;"	f	file:	signature:(struct expr_t *lhsx, struct expr_t **lhsxtab, int32 lels, struct expr_t *rhsx, struct expr_t **rhsxtab, int32 rels)
gen_cause	./v_bbgen.c	/^static void gen_cause(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
gen_chg_lhsbsel_const	./v_bbgen.c	/^static void gen_chg_lhsbsel_const(struct net_t *np, int32 addr_apti, $/;"	f	file:	signature:(struct net_t *np, int32 addr_apti, int32 bi, int32 rhs_ti)
gen_chg_lhsbsel_var	./v_bbgen.c	/^static void gen_chg_lhsbsel_var(struct net_t *np, int32 addr_apti,$/;"	f	file:	signature:(struct net_t *np, int32 addr_apti, int32 bi_ti, int32 rhs_ti)
gen_chg_logic_gate	./v_bbgen2.c	/^static void gen_chg_logic_gate(struct net_pin_t *npp, $/;"	f	file:	signature:(struct net_pin_t *npp, struct bblk_t *done_bbp)
gen_chg_logic_gate_1term	./v_bbgen2.c	/^static void gen_chg_logic_gate_1term(struct net_pin_t *npp, $/;"	f	file:	signature:(struct net_pin_t *npp, struct bblk_t *done_bbp)
gen_chg_logic_gate_narrow	./v_bbgen2.c	/^static void gen_chg_logic_gate_narrow(struct net_pin_t *npp, $/;"	f	file:	signature:(struct net_pin_t *npp, struct bblk_t *done_bbp)
gen_chg_logic_gate_narrow_leaves	./v_bbgen2.c	/^static void gen_chg_logic_gate_narrow_leaves(struct net_pin_t *npp, $/;"	f	file:	signature:(struct net_pin_t *npp, struct bblk_t *done_bbp)
gen_chg_st_pck_arr_val	./v_bbgen.c	/^static void gen_chg_st_pck_arr_val(struct net_t *np, int32 pckel_ti,$/;"	f	file:	signature:(struct net_t *np, int32 pckel_ti, int32 nuwrd_ti, int32 bi, int32 bi_ti, int32 is_const)
gen_chg_st_scalval	./v_bbgen.c	/^static void gen_chg_st_scalval(struct net_t *np, int32 lhs_apti,$/;"	f	file:	signature:(struct net_t *np, int32 lhs_apti, int32 rhs_apti)
gen_chg_st_unpck_arr_val	./v_bbgen.c	/^static void gen_chg_st_unpck_arr_val(struct net_t *np, int32 eladdr_ti, $/;"	f	file:	signature:(struct net_t *np, int32 eladdr_ti, int32 rhs_apti, int32 bi, int32 bi_ti, int32 is_const)
gen_chg_st_vecval	./v_bbgen.c	/^static void gen_chg_st_vecval(struct net_t *np, int32 lhs_apti,$/;"	f	file:	signature:(struct net_t *np, int32 lhs_apti, int32 rhs_apti)
gen_chg_st_vecval_1w	./v_bbgen.c	/^static void gen_chg_st_vecval_1w(struct net_t *np, int32 lhs_apti,$/;"	f	file:	signature:(struct net_t *np, int32 lhs_apti, int32 rhs_apti)
gen_chg_st_vecval_1w_try	./v_bbgen.c	/^static void gen_chg_st_vecval_1w_try(struct net_t *np, int32 lhs_apti,$/;"	f	file:	signature:(struct net_t *np, int32 lhs_apti, int32 rhs_apti)
gen_chg_st_vecval_2state	./v_bbgen.c	/^static void gen_chg_st_vecval_2state(struct net_t *np, int32 lhs_apti,$/;"	f	file:	signature:(struct net_t *np, int32 lhs_apti, int32 rhs_apti)
gen_chg_stren_lhsbsel	./v_bbgen.c	/^static void gen_chg_stren_lhsbsel(struct net_t *np, int32 addr_apti,$/;"	f	file:	signature:(struct net_t *np, int32 addr_apti, int32 bi, int32 bi_ti, int32 rhs_ti, int32 is_const)
gen_chgtorefgrp	./v_bbgen2.c	/^static int32 gen_chgtorefgrp(struct expr_t *ndp, int32 *save_idp_ti, $/;"	f	file:	signature:(struct expr_t *ndp, int32 *save_idp_ti, int32 rhs_apti)
gen_chk_expr	./v_genfx.c	/^static int32 gen_chk_expr(struct expr_t *ndp, int32 gxfnam_ind,$/;"	f	file:	signature:(struct expr_t *ndp, int32 gxfnam_ind, int32 gxlin_cnt, char *genonam)
gen_cnvt_svec_to_ab	./v_bbgen2.c	/^static int32 gen_cnvt_svec_to_ab(int32 svec_pti, int32 vwid, int32 is_signed)$/;"	f	file:	signature:(int32 svec_pti, int32 vwid, int32 is_signed)
gen_comp_mda_ndx	./v_bbgen.c	/^static int32 gen_comp_mda_ndx(struct net_t *np, struct mda_t *mdap, $/;"	f	file:	signature:(struct net_t *np, struct mda_t *mdap, struct expr_t *ndx1, struct bblk_t *after_bbp, struct expr_t **sel_ndx)
gen_comp_ndx_range	./v_bbgen.c	/^static int32 gen_comp_ndx_range(struct net_t *np, struct expr_t *ndx, $/;"	f	file:	signature:(struct net_t *np, struct expr_t *ndx, int32 ri1, int32 ri2, int32 obwid, struct bblk_t *outofrng_bbp)
gen_conta_addstren_assgn	./v_bbgen2.c	/^static void gen_conta_addstren_assgn(struct expr_t *lhsx,$/;"	f	file:	signature:(struct expr_t *lhsx, struct expr_t *rhsx, byte ca_stren)
gen_conta_assgn	./v_bbgen2.c	/^static void gen_conta_assgn(struct expr_t *lhsx, int32 rhs_apti)$/;"	f	file:	signature:(struct expr_t *lhsx, int32 rhs_apti)
gen_conta_bit_assign	./v_bbgen2.c	/^static void gen_conta_bit_assign(struct net_t *np, int32 bi, int32 biti_ti,$/;"	f	file:	signature:(struct net_t *np, int32 bi, int32 biti_ti, int32 rhs_apti, int32 is_const)
gen_conta_flowgs	./v_bbgen2.c	/^static void gen_conta_flowgs(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
gen_conta_one_flowgs	./v_bbgen2.c	/^static void gen_conta_one_flowgs(struct conta_t *cap)$/;"	f	file:	signature:(struct conta_t *cap)
gen_conta_psel_assign	./v_bbgen2.c	/^static void gen_conta_psel_assign(struct expr_t *lhsx, int32 rhs_apti)$/;"	f	file:	signature:(struct expr_t *lhsx, int32 rhs_apti)
gen_conta_simple_var_assign	./v_bbgen2.c	/^static void gen_conta_simple_var_assign(struct net_t *np, struct expr_t *idndp,$/;"	f	file:	signature:(struct net_t *np, struct expr_t *idndp, int32 rhsadr_ti)
gen_conta_stren_bit_assign	./v_bbgen2.c	/^static void gen_conta_stren_bit_assign(struct net_t *np, int32 bi,$/;"	f	file:	signature:(struct net_t *np, int32 bi, int32 rhs_sbpti, int32 is_const)
gen_conta_stren_psel_assign	./v_bbgen2.c	/^static void gen_conta_stren_psel_assign(struct expr_t *lhsx, int32 rhs_sbpti)$/;"	f	file:	signature:(struct expr_t *lhsx, int32 rhs_sbpti)
gen_conta_var_assign	./v_bbgen2.c	/^static void gen_conta_var_assign(struct net_t *np, int32 rhs_apti)$/;"	f	file:	signature:(struct net_t *np, int32 rhs_apti)
gen_csiblkp	./v.h	/^ struct genblk_t *gen_csiblkp;$/;"	m	struct:gen_csitem_t	typeref:struct:gen_csitem_t::genblk_t	access:public
gen_csitem_t	./v.h	/^struct gen_csitem_t {$/;"	s
gen_csitem_t::csixlst	./v.h	/^ struct exprlst_t *csixlst;$/;"	m	struct:gen_csitem_t	typeref:struct:gen_csitem_t::exprlst_t	access:public
gen_csitem_t::gcsinxt	./v.h	/^ struct gen_csitem_t *gcsinxt;$/;"	m	struct:gen_csitem_t	typeref:struct:gen_csitem_t::gen_csitem_t	access:public
gen_csitem_t::gdflt_i	./v.h	/^ unsigned gdflt_i : 1;$/;"	m	struct:gen_csitem_t	access:public
gen_csitem_t::gen_csiblkp	./v.h	/^ struct genblk_t *gen_csiblkp;$/;"	m	struct:gen_csitem_t	typeref:struct:gen_csitem_t::genblk_t	access:public
gen_dce_flowg	./v_bbgen2.c	/^static void gen_dce_flowg(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
gen_dce_inst	./v_bbgen2.c	/^static void gen_dce_inst(struct net_t *np, struct dcevnt_t *dcep,$/;"	f	file:	signature:(struct net_t *np, struct dcevnt_t *dcep, struct bblk_t *after_bbp, int32 processing_pnd0s)
gen_dce_inst_duplicates	./v_bbgen2.c	/^static void gen_dce_inst_duplicates(struct net_t *np, struct dcevnt_t *dcep,$/;"	f	file:	signature:(struct net_t *np, struct dcevnt_t *dcep, struct bblk_t *after_bbp, int32 processing_pnd0s)
gen_dce_monit	./v_bbgen2.c	/^static void gen_dce_monit(struct dcevnt_t *dcep, struct bblk_t *after_bbp)$/;"	f	file:	signature:(struct dcevnt_t *dcep, struct bblk_t *after_bbp)
gen_dce_off_insns	./v_bbgen2.c	/^static void gen_dce_off_insns(struct dcevnt_t *dcep, struct bblk_t *after_bbp)$/;"	f	file:	signature:(struct dcevnt_t *dcep, struct bblk_t *after_bbp)
gen_dce_qcaf	./v_bbgen2.c	/^static void gen_dce_qcaf(struct dcevnt_t *dcep, struct bblk_t *after_bbp)$/;"	f	file:	signature:(struct dcevnt_t *dcep, struct bblk_t *after_bbp)
gen_dctl_stmt	./v_bbgen.c	/^static struct st_t *gen_dctl_stmt(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
gen_decl_lhscat	./v_bbgen2.c	/^static void gen_decl_lhscat(struct expr_t *lhsx, int32 rhs_ti)$/;"	f	file:	signature:(struct expr_t *lhsx, int32 rhs_ti)
gen_decl_outofrng_tst	./v_bbgen2.c	/^static void gen_decl_outofrng_tst(void *obj, int32 i1, union intptr_u i2,$/;"	f	file:	signature:(void *obj, int32 i1, union intptr_u i2, struct bblk_t *after_bbp, int32 test_i1_neg1)
gen_delay_rhs_ca_ld	./v_bbgen2.c	/^static void gen_delay_rhs_ca_ld(struct net_pin_t *npp, int32 rhs_apti,$/;"	f	file:	signature:(struct net_pin_t *npp, int32 rhs_apti, int32 srtyp)
gen_disable	./v_bbgen.c	/^static struct st_t *gen_disable(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
gen_div_real	./v_bbgen.c	/^static int32 gen_div_real(int32 op1_ti, int32 op2_ti)$/;"	f	file:	signature:(int32 op1_ti, int32 op2_ti)
gen_do_while	./v_bbgen.c	/^static void gen_do_while(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
gen_do_while_const	./v_bbgen.c	/^static void gen_do_while_const(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
gen_dpi_wrapper_file	./v_dpi.c	/^static void gen_dpi_wrapper_file(void)$/;"	f	file:	signature:(void)
gen_dpi_wrapper_pipe	./v_dpi.c	/^static void gen_dpi_wrapper_pipe(void)$/;"	f	file:	signature:(void)
gen_drvr_competition_upd	./v_bbgen2.c	/^static void gen_drvr_competition_upd(int32 accum_apti, int32 drv_apti,$/;"	f	file:	signature:(int32 accum_apti, int32 drv_apti, struct net_t *np, struct net_pin_t *npp)
gen_drvr_competition_upd_2state	./v_bbgen2.c	/^static void gen_drvr_competition_upd_2state(int32 accum_apti, int32 drv_apti,$/;"	f	file:	signature:(int32 accum_apti, int32 drv_apti, struct net_t *np, struct net_pin_t *npp)
gen_eval_case_sel	./v_bbgen.c	/^static int32 gen_eval_case_sel(int32 castyp, int32 bsiz, int32 sel_apti,$/;"	f	file:	signature:(int32 castyp, int32 bsiz, int32 sel_apti, int32 match_apti, struct st_t *stp)
gen_eval_casex_sel	./v_bbgen.c	/^static int32 gen_eval_casex_sel(int32 bsiz, int32 sel_apti,$/;"	f	file:	signature:(int32 bsiz, int32 sel_apti, int32 match_apti, struct st_t *stp)
gen_eval_casez_sel	./v_bbgen.c	/^static int32 gen_eval_casez_sel(int32 bsiz, int32 sel_apti,$/;"	f	file:	signature:(int32 bsiz, int32 sel_apti, int32 match_apti, struct st_t *stp)
gen_eval_qcol_oper	./v_bbgen.c	/^static int32 gen_eval_qcol_oper(struct expr_t *ndp, int32 has_sign, int32 blen,$/;"	f	file:	signature:(struct expr_t *ndp, int32 has_sign, int32 blen, int32 srtyp)
gen_eval_tran_bits	./v_bbgen2.c	/^static void gen_eval_tran_bits(struct net_t *np, struct traux_t *trap,$/;"	f	file:	signature:(struct net_t *np, struct traux_t *trap, int32 idp_saved, int32 chanid, int32 bi, int32 do_all_bits, int32 orig_chanid)
gen_eval_wide_case_sel	./v_bbgen.c	/^static int32 gen_eval_wide_case_sel(int32 castyp, int32 sel_apti,$/;"	f	file:	signature:(int32 castyp, int32 sel_apti, int32 match_apti, int32 selxlen)
gen_fcall	./v_bbgen.c	/^static int32 gen_fcall(struct expr_t *ndp, struct st_t *stp)$/;"	f	file:	signature:(struct expr_t *ndp, struct st_t *stp)
gen_fcall_dpi	./v_bbgen.c	/^static int32 gen_fcall_dpi(struct expr_t *ndp, struct st_t *stp)$/;"	f	file:	signature:(struct expr_t *ndp, struct st_t *stp)
gen_filter_bitchange	./v_bbgen2.c	/^static void gen_filter_bitchange(int32 newval_ti, size_t oldval_ofs, $/;"	f	file:	signature:(int32 newval_ti, size_t oldval_ofs, int32 signat, struct expr_t *condx, struct bblk_t *no_chg_bbp)
gen_filter_dce_chg	./v_bbgen2.c	/^static int32 gen_filter_dce_chg(struct net_t *np, struct dcevnt_t *dcep,$/;"	f	file:	signature:(struct net_t *np, struct dcevnt_t *dcep, int32 *oval_ti, int32 *nval_ti, struct bblk_t *after_bbp, struct delctrl_t *dctp)
gen_filter_edge_expr	./v_bbgen2.c	/^static void gen_filter_edge_expr(struct dcevnt_t *dcep, int32 *oval_ti,$/;"	f	file:	signature:(struct dcevnt_t *dcep, int32 *oval_ti, int32 *nval_ti, struct bblk_t *after_bbp, struct net_t *np)
gen_fixed_mdata_net_loc	./v_bbgen2.c	/^static int32 gen_fixed_mdata_net_loc(struct net_t *np, int32 inum)$/;"	f	file:	signature:(struct net_t *np, int32 inum)
gen_for	./v_bbgen.c	/^static void gen_for(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
gen_for_t	./v.h	/^struct gen_for_t {$/;"	s
gen_for_t::gentab	./v.h	/^ struct genblk_t **gentab;$/;"	m	struct:gen_for_t	typeref:struct:gen_for_t::genblk_t	access:public
gen_for_t::gforassgn	./v.h	/^ struct st_t *gforassgn;$/;"	m	struct:gen_for_t	typeref:struct:gen_for_t::st_t	access:public
gen_for_t::gforinc	./v.h	/^ struct st_t *gforinc;$/;"	m	struct:gen_for_t	typeref:struct:gen_for_t::st_t	access:public
gen_for_t::gfortermx	./v.h	/^ struct expr_t *gfortermx;$/;"	m	struct:gen_for_t	typeref:struct:gen_for_t::expr_t	access:public
gen_for_t::ngenblks	./v.h	/^ int32 ngenblks;$/;"	m	struct:gen_for_t	access:public
gen_for_t::src_gforblkp	./v.h	/^ struct genblk_t *src_gforblkp;$/;"	m	struct:gen_for_t	typeref:struct:gen_for_t::genblk_t	access:public
gen_forever	./v_bbgen.c	/^static void gen_forever(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
gen_funcbody	./v_bbgen.c	/^static void gen_funcbody(struct task_t *tskp)$/;"	f	file:	signature:(struct task_t *tskp)
gen_gate_conta_flowgs	./v_bbgen2.c	/^static void gen_gate_conta_flowgs(void)$/;"	f	file:	signature:(void)
gen_gate_delay_assign	./v_bbgen2.c	/^static void gen_gate_delay_assign(struct gate_t *gp)$/;"	f	file:	signature:(struct gate_t *gp)
gen_gate_delay_assign_flowgs	./v_bbgen2.c	/^static void gen_gate_delay_assign_flowgs(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
gen_gate_stren_added_assign	./v_bbgen2.c	/^static void gen_gate_stren_added_assign(struct gate_t *gp, struct expr_t *xp, $/;"	f	file:	signature:(struct gate_t *gp, struct expr_t *xp, int32 new_gateval_ti, int32 needs_stren_map)
gen_gate_stren_assign	./v_bbgen2.c	/^static void gen_gate_stren_assign(struct expr_t *xp, int32 new_gateval_ti)$/;"	f	file:	signature:(struct expr_t *xp, int32 new_gateval_ti)
gen_gate_udp_delay_assign	./v_bbgen2.c	/^static void gen_gate_udp_delay_assign(struct gate_t *gp, struct expr_t *xp, $/;"	f	file:	signature:(struct gate_t *gp, struct expr_t *xp, int32 newval_ti)
gen_get_del32	./v_bbgen2.c	/^static int32 gen_get_del32(struct net_t *np, int32 *del_low_ti, $/;"	f	file:	signature:(struct net_t *np, int32 *del_low_ti, int32 *del_high_ti, union del_u du, int32 drep, int32 del_id, int32 *ndx_ti, int32 new_gateval_ti, int32 old_gateval_ti, int32 has_next)
gen_get_del64	./v_bbgen2.c	/^static int32 gen_get_del64(struct net_t *np, int32 *del_ti, union del_u du, $/;"	f	file:	signature:(struct net_t *np, int32 *del_ti, union del_u du, int32 drep, int32 del_id, int32 *ndx_ti, int32 new_gateval_ti, int32 old_gateval_ti, int32 has_next)
gen_get_path_del32	./v_bbgen2.c	/^static int32 gen_get_path_del32(struct net_t *np, int32 *lowval_ti,$/;"	f	file:	signature:(struct net_t *np, int32 *lowval_ti, int32 *highval_ti, int32 bi, int32 newscalw_ti, int32 oldscalw_ti, struct bblk_t *assign_bbp)
gen_get_path_del32_const	./v_bbgen2.c	/^static int32 gen_get_path_del32_const(struct net_t *np, int32 *lowval_ti,$/;"	f	file:	signature:(struct net_t *np, int32 *lowval_ti, int32 *highval_ti, int32 bi, word64 del, int32 has_path_cond, struct bblk_t *assign_bbp)
gen_get_path_del64	./v_bbgen2.c	/^static int32 gen_get_path_del64(struct net_t *np, int32 *val_ti, int32 bi,$/;"	f	file:	signature:(struct net_t *np, int32 *val_ti, int32 bi, int32 newscalw_ti, int32 oldscalw_ti, struct bblk_t *assign_bbp)
gen_get_path_del64_const	./v_bbgen2.c	/^static int32 gen_get_path_del64_const(struct net_t *np, int32 *val_ti, int32 bi,$/;"	f	file:	signature:(struct net_t *np, int32 *val_ti, int32 bi, word64 del, int32 has_path_cond, struct bblk_t *assign_bbp)
gen_get_stwire_addr	./v_bbgen2.c	/^static int32 gen_get_stwire_addr(struct net_t *np, struct gref_t *grp)$/;"	f	file:	signature:(struct net_t *np, struct gref_t *grp)
gen_getbit	./v_bbgen.c	/^static int32 gen_getbit(int32 var_apti, int32 bofs_ti, int32 is_const) $/;"	f	file:	signature:(int32 var_apti, int32 bofs_ti, int32 is_const)
gen_getpattern	./v_bbgen2.c	/^static void gen_getpattern(struct conta_t *cap)$/;"	f	file:	signature:(struct conta_t *cap)
gen_has_xedge	./v_bbgen2.c	/^static int32 gen_has_xedge(int32 val1_ti, int32 val1_bpti, int32 val2_ti,$/;"	f	file:	signature:(int32 val1_ti, int32 val1_bpti, int32 val2_ti, int32 val2_bpti)
gen_iconn	./v_bbgen2.c	/^static void gen_iconn(struct expr_t *up_rhsx, struct expr_t *down_lhsx,$/;"	f	file:	signature:(struct expr_t *up_rhsx, struct expr_t *down_lhsx, struct mod_t *downmdp, struct mod_t *upmdp, int32 inum, int32 has_lds_after)
gen_iconn_flowgs	./v_bbgen2.c	/^static void gen_iconn_flowgs(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
gen_id	./v.h	/^ int32 gen_id;$/;"	m	struct:genblk_t	access:public
gen_if_stmt	./v_bbgen.c	/^static void gen_if_stmt(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
gen_if_t	./v.h	/^struct gen_if_t {$/;"	s
gen_if_t::condx	./v.h	/^ struct expr_t *condx;$/;"	m	struct:gen_if_t	typeref:struct:gen_if_t::expr_t	access:public
gen_if_t::gentab	./v.h	/^ struct genblk_t **gentab;    \/* tab for xmr indexing but if used size 1 *\/$/;"	m	struct:gen_if_t	typeref:struct:gen_if_t::genblk_t	access:public
gen_if_t::ngenblks	./v.h	/^ int ngenblks;                \/* for if max 1 (none -1) but makes consistent *\/$/;"	m	struct:gen_if_t	access:public
gen_if_t::no_if_beg	./v.h	/^ unsigned no_if_beg : 1;      \/* T => really a begin-end (added if (1) *\/ $/;"	m	struct:gen_if_t	access:public
gen_if_t::src_else_gblkp	./v.h	/^ struct genblk_t *src_else_gblkp;$/;"	m	struct:gen_if_t	typeref:struct:gen_if_t::genblk_t	access:public
gen_if_t::src_then_gblkp	./v.h	/^ struct genblk_t *src_then_gblkp;$/;"	m	struct:gen_if_t	typeref:struct:gen_if_t::genblk_t	access:public
gen_in1wrd_rhs_psel	./v_bbgen.c	/^static int32 gen_in1wrd_rhs_psel(int32 srtyp, int32 var_apti, int32 lowbiti, $/;"	f	file:	signature:(int32 srtyp, int32 var_apti, int32 lowbiti, int32 numbits)
gen_in1wrd_st_psel	./v_bbgen.c	/^static void gen_in1wrd_st_psel(int32 srtyp, int32 addr_ti, int32 rhs_ti, $/;"	f	file:	signature:(int32 srtyp, int32 addr_ti, int32 rhs_ti, int32 dbi, int32 numbits, int32 is_apart)
gen_inc_dec	./v_bbgen.c	/^static int32 gen_inc_dec(struct expr_t *ndp, int32 is_inc, int32 val_ti,$/;"	f	file:	signature:(struct expr_t *ndp, int32 is_inc, int32 val_ti, int32 nd_result)
gen_initalways	./v_bbgen.c	/^static void gen_initalways(struct ialst_t *ialp)$/;"	f	file:	signature:(struct ialst_t *ialp)
gen_jmptab_case_select	./v_bbgen.c	/^static void gen_jmptab_case_select(struct st_t *stp, struct icas_t *icastab,$/;"	f	file:	signature:(struct st_t *stp, struct icas_t *icastab, struct icasx_t *icasxtab, int32 has_dflt, struct csitem_t *dflt_csip, word32 cmax, word32 cmin, int32 sel_ti)
gen_jmpto_func_dsabl	./v_bbgen.c	/^static int32 gen_jmpto_func_dsabl(struct sy_t *msym)$/;"	f	file:	signature:(struct sy_t *msym)
gen_jmpto_tsk	./v_bbgen.c	/^static int32 gen_jmpto_tsk(struct sy_t *msym)$/;"	f	file:	signature:(struct sy_t *msym)
gen_ld_1inst_mdprt_down_driver	./v_bbgen2.c	/^static int32 gen_ld_1inst_mdprt_down_driver(struct net_pin_t *npp,$/;"	f	file:	signature:(struct net_pin_t *npp, int32 ii, struct mod_t *downmdp, struct mod_t *upmdp)
gen_ld_const_idp	./v_bbgen2.c	/^static void gen_ld_const_idp(struct itree_t *itp,  int32 *save_idp_ti, $/;"	f	file:	signature:(struct itree_t *itp, int32 *save_idp_ti, int32 needs_save)
gen_ld_conta_driver	./v_bbgen2.c	/^static int32 gen_ld_conta_driver(struct net_pin_t *npp)$/;"	f	file:	signature:(struct net_pin_t *npp)
gen_ld_gate_driver	./v_bbgen2.c	/^static int32 gen_ld_gate_driver(struct net_pin_t *npp)$/;"	f	file:	signature:(struct net_pin_t *npp)
gen_ld_iconn_up_driver	./v_bbgen2.c	/^static int32 gen_ld_iconn_up_driver(struct net_pin_t *npp)$/;"	f	file:	signature:(struct net_pin_t *npp)
gen_ld_is_apart_baseadr	./v_bbgen.c	/^static int32 gen_ld_is_apart_baseadr(struct net_t *np, struct gref_t *grp)$/;"	f	file:	signature:(struct net_t *np, struct gref_t *grp)
gen_ld_is_svec_ofset	./v_bbgen2.c	/^static int32 gen_ld_is_svec_ofset(int32 sbp_ti, int32 bofs, int32 blen)$/;"	f	file:	signature:(int32 sbp_ti, int32 bofs, int32 blen)
gen_ld_mdprt_down_driver	./v_bbgen2.c	/^static int32 gen_ld_mdprt_down_driver(struct net_pin_t *npp, int32 is_stren)$/;"	f	file:	signature:(struct net_pin_t *npp, int32 is_stren)
gen_ld_nonis_vecvaradr	./v_bbgen.c	/^static int32 gen_ld_nonis_vecvaradr(struct net_t *np) $/;"	f	file:	signature:(struct net_t *np)
gen_ld_scalar_arrsel_const	./v_bbgen.c	/^static int32 gen_ld_scalar_arrsel_const(struct net_t *np, int32 addr_ti, $/;"	f	file:	signature:(struct net_t *np, int32 addr_ti, int32 bi)
gen_ld_scalar_arrsel_var	./v_bbgen.c	/^static int32 gen_ld_scalar_arrsel_var(struct net_t *np, int32 addr_ti, $/;"	f	file:	signature:(struct net_t *np, int32 addr_ti, int32 bi_ti)
gen_ld_st1inst_mdprt_down_driver	./v_bbgen2.c	/^static int32 gen_ld_st1inst_mdprt_down_driver(struct net_pin_t *npp,$/;"	f	file:	signature:(struct net_pin_t *npp, int32 ii, struct mod_t *downmdp, struct mod_t *upmdp)
gen_ld_stconta_driver	./v_bbgen2.c	/^static int32 gen_ld_stconta_driver(struct net_pin_t *npp)$/;"	f	file:	signature:(struct net_pin_t *npp)
gen_ld_stgate_driver	./v_bbgen2.c	/^static int32 gen_ld_stgate_driver(struct net_pin_t *npp)$/;"	f	file:	signature:(struct net_pin_t *npp)
gen_ld_sticonn_up_driver	./v_bbgen2.c	/^static int32 gen_ld_sticonn_up_driver(struct net_pin_t *npp)$/;"	f	file:	signature:(struct net_pin_t *npp)
gen_ld_stpull_driver	./v_bbgen2.c	/^static int32 gen_ld_stpull_driver(struct net_pin_t *npp)$/;"	f	file:	signature:(struct net_pin_t *npp)
gen_ld_sttfrwarg_driver	./v_bbgen2.c	/^static int32 gen_ld_sttfrwarg_driver(struct net_pin_t *npp)$/;"	f	file:	signature:(struct net_pin_t *npp)
gen_ld_tfrwarg_driver	./v_bbgen2.c	/^static int32 gen_ld_tfrwarg_driver(struct net_pin_t *npp)$/;"	f	file:	signature:(struct net_pin_t *npp)
gen_ld_unaligned_rhs_psel	./v_bbgen.c	/^static void gen_ld_unaligned_rhs_psel(int32 val_ti, int32 addr_apti, $/;"	f	file:	signature:(int32 val_ti, int32 addr_apti, int32 lowbi, int32 numbits, int32 is_apart, int32 srtyp)
gen_ld_unaligned_st_psel	./v_bbgen.c	/^static void gen_ld_unaligned_st_psel(int32 srtyp, int32 addr_apti, $/;"	f	file:	signature:(int32 srtyp, int32 addr_apti, int32 val_ti, int32 lowbi, int32 numbits, int32 is_apart)
gen_ldcomb_1_drvr	./v_bbgen2.c	/^static void gen_ldcomb_1_drvr(int32 accum_apti, struct net_t *np,$/;"	f	file:	signature:(int32 accum_apti, struct net_t *np, struct net_pin_t *npp, int32 nd_itpop, int32 save_idp_ti)
gen_lhs_arrsel	./v_bbgen.c	/^static void gen_lhs_arrsel(struct expr_t *lhsx, int32 bi, int32 bi_ti, $/;"	f	file:	signature:(struct expr_t *lhsx, int32 bi, int32 bi_ti, int32 rhs_apti, int32 is_const, struct expr_t *sel_ndp, int32 sel_ti)
gen_lhs_concat	./v_bbgen.c	/^static void gen_lhs_concat(struct expr_t *rhsx, struct expr_t **lhsxtab,$/;"	f	file:	signature:(struct expr_t *rhsx, struct expr_t **lhsxtab, int32 lhsnels, int32 lhswid)
gen_lhs_concat2	./v_bbgen.c	/^static void gen_lhs_concat2(int32 rhs_ti, struct expr_t **lhsxtab,$/;"	f	file:	signature:(int32 rhs_ti, struct expr_t **lhsxtab, int32 lhsnels, int32 lhswid)
gen_lhsbsel_const_norecord	./v_bbgen.c	/^static void gen_lhsbsel_const_norecord(struct net_t *np, int32 addr_apti, $/;"	f	file:	signature:(struct net_t *np, int32 addr_apti, int32 bi, int32 rhs_ti)
gen_list_case	./v_bbgen.c	/^static void gen_list_case(struct st_t *stp, struct icas_t *icastab,$/;"	f	file:	signature:(struct st_t *stp, struct icas_t *icastab, struct icasx_t *icasxtab, int32 has_dflt, struct csitem_t *dflt_csip, int32 all_cases_con, int32 has_xznum, int32 nitems)
gen_list_case_select	./v_bbgen.c	/^static void gen_list_case_select(struct st_t *stp, struct icas_t *icastab,$/;"	f	file:	signature:(struct st_t *stp, struct icas_t *icastab, struct icasx_t *icasxtab, int32 has_dflt, struct csitem_t *dflt_csip, int32 all_cases_con, int32 has_xznum, int32 nitems)
gen_list_case_xprop	./v_bbgen.c	/^static void gen_list_case_xprop(struct st_t *stp, int32 sel_ti, $/;"	f	file:	signature:(struct st_t *stp, int32 sel_ti, int32 sel_bpti, int32 slevel)
gen_load_mdrwire_subr	./v_bbgen2.c	/^static int32 gen_load_mdrwire_subr(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
gen_lxqcol_comb	./v_bbgen.c	/^static void gen_lxqcol_comb(int32 res_apti, int32 opbits, int32 x1_apti, $/;"	f	file:	signature:(int32 res_apti, int32 opbits, int32 x1_apti, int32 x2_apti)
gen_match_targ_to_ref	./v_bbgen2.c	/^static int32 gen_match_targ_to_ref(int32 xmrtyp, struct gref_t *grp,$/;"	f	file:	signature:(int32 xmrtyp, struct gref_t *grp, struct bblk_t *after_bbp)
gen_mdr_assgn_or_schd_insns	./v_bbgen2.c	/^static void gen_mdr_assgn_or_schd_insns(struct expr_t *lhsx)$/;"	f	file:	signature:(struct expr_t *lhsx)
gen_mipd_flowgs	./v_bbgen2.c	/^static void gen_mipd_flowgs(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
gen_mkfil_and_compile_solib	./v_asmlnk.c	/^static void gen_mkfil_and_compile_solib(void)$/;"	f	file:	signature:(void)
gen_multfi_decl_lhscat	./v_bbgen2.c	/^static void gen_multfi_decl_lhscat(struct expr_t *lhsx)$/;"	f	file:	signature:(struct expr_t *lhsx)
gen_namblk	./v_bbgen.c	/^static struct st_t *gen_namblk(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
gen_narrow_new_constant	./v_bbgen2.c	/^static int32 gen_narrow_new_constant(int32 rhs_ti, int32 dstbitwid, $/;"	f	file:	signature:(int32 rhs_ti, int32 dstbitwid, int32 is_2state)
gen_nb_arm_varndx	./v_bbgen.c	/^static int32 gen_nb_arm_varndx(struct expr_t *lhsx, int32 stp_ti, $/;"	f	file:	signature:(struct expr_t *lhsx, int32 stp_ti, struct st_t *astp, int32 nbytes, int32 ctevp_ti, int32 rhs_ti, int32 lhs_srep)
gen_nb_assign_varndx	./v_bbgen.c	/^static void gen_nb_assign_varndx(struct expr_t *lhsx, int32 cur_tevp_reg_ti)$/;"	f	file:	signature:(struct expr_t *lhsx, int32 cur_tevp_reg_ti)
gen_nb_assigns	./v_bbgen.c	/^static void gen_nb_assigns(int32 is_free_version)$/;"	f	file:	signature:(int32 is_free_version)
gen_nb_dctl_ectl	./v_bbgen.c	/^static struct st_t *gen_nb_dctl_ectl(struct st_t *stp, struct expr_t *rhsx,$/;"	f	file:	signature:(struct st_t *stp, struct expr_t *rhsx, int32 accum_ti)
gen_nb_lhs_varndx	./v_bbgen.c	/^static void  gen_nb_lhs_varndx(struct st_t *stp, struct expr_t *lhsx, $/;"	f	file:	signature:(struct st_t *stp, struct expr_t *lhsx, struct ctev_t *ctevp, int32 rhs_ti, int32 is_pnd0, int32 stp_ti, int32 srtyp)
gen_nb_nodelay_tev	./v_bbgen.c	/^static void gen_nb_nodelay_tev(int32 ctevp_ti)$/;"	f	file:	signature:(int32 ctevp_ti)
gen_nb_onelhsx_varndx	./v_bbgen.c	/^static void  gen_nb_onelhsx_varndx(struct expr_t *lhsx, int32 rhs_ti, $/;"	f	file:	signature:(struct expr_t *lhsx, int32 rhs_ti, int32 is_pnd0, int32 stp_ti, int32 ctevp_ti, int32 nbytes)
gen_nb_onelhsx_varndx_concat	./v_bbgen.c	/^static void  gen_nb_onelhsx_varndx_concat(struct expr_t *lhsx, int32 rhs_ti, $/;"	f	file:	signature:(struct expr_t *lhsx, int32 rhs_ti, int32 is_pnd0, int32 stp_ti, int32 ctevp_ti, int32 srtyp)
gen_nb_varndx_value	./v_bbgen.c	/^static int32 gen_nb_varndx_value(struct net_t *np, struct expr_t *lhsx, $/;"	f	file:	signature:(struct net_t *np, struct expr_t *lhsx, struct bblk_t *outofrng_bbp)
gen_nblkrhs_proca	./v_bbgen.c	/^static void gen_nblkrhs_proca(struct st_t *stp, struct expr_t *rhsx,$/;"	f	file:	signature:(struct st_t *stp, struct expr_t *rhsx, int32 accum_ti)
gen_nchg_process_flowg	./v_bbgen2.c	/^static void gen_nchg_process_flowg(struct net_t *np, struct net_chg_t *ncp)$/;"	f	file:	signature:(struct net_t *np, struct net_chg_t *ncp)
gen_nchg_process_wire_flowg	./v_bbgen2.c	/^static void gen_nchg_process_wire_flowg(struct net_t *np, struct net_chg_t *ncp)$/;"	f	file:	signature:(struct net_t *np, struct net_chg_t *ncp)
gen_nchg_process_wire_record	./v_bbgen2.c	/^static void gen_nchg_process_wire_record(struct net_t *np, int32 np_ti, $/;"	f	file:	signature:(struct net_t *np, int32 np_ti, int32 bi)
gen_ndst_expr_eval	./v_bbgen2.c	/^static int32 gen_ndst_expr_eval(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
gen_ndxarr_ptr_const	./v_bbgen.c	/^static int32 gen_ndxarr_ptr_const(struct net_t *np, int32 addr_ti, int32 bi)$/;"	f	file:	signature:(struct net_t *np, int32 addr_ti, int32 bi)
gen_ndxarr_ptr_var	./v_bbgen.c	/^static int32 gen_ndxarr_ptr_var(struct net_t *np, int32 addr_ti,$/;"	f	file:	signature:(struct net_t *np, int32 addr_ti, int32 bi_ti)
gen_net_chgs_flowgs	./v_bbgen2.c	/^static void gen_net_chgs_flowgs(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
gen_net_impldecl	./v.h	/^ unsigned gen_net_impldecl : 1;\/* net's sym implicitly decled in xpnd gen blk *\/$/;"	m	struct:sy_t	access:public
gen_np_chg_bufif_gate	./v_bbgen2.c	/^static void gen_np_chg_bufif_gate(struct net_pin_t *npp, $/;"	f	file:	signature:(struct net_pin_t *npp, struct bblk_t *done_bbp)
gen_np_chg_bufif_gate_strdrv	./v_bbgen2.c	/^static void gen_np_chg_bufif_gate_strdrv(struct net_pin_t *npp, $/;"	f	file:	signature:(struct net_pin_t *npp, struct bblk_t *done_bbp)
gen_np_chg_cmos_gate	./v_bbgen2.c	/^static void gen_np_chg_cmos_gate(struct net_pin_t *npp, struct bblk_t *done_bbp)$/;"	f	file:	signature:(struct net_pin_t *npp, struct bblk_t *done_bbp)
gen_np_chg_logic_gate	./v_bbgen2.c	/^static void gen_np_chg_logic_gate(struct net_pin_t *npp, $/;"	f	file:	signature:(struct net_pin_t *npp, struct bblk_t *done_bbp)
gen_np_chg_mos_gate	./v_bbgen2.c	/^static void gen_np_chg_mos_gate(struct net_pin_t *npp, struct bblk_t *done_bbp)$/;"	f	file:	signature:(struct net_pin_t *npp, struct bblk_t *done_bbp)
gen_np_chg_udp_gate	./v_bbgen2.c	/^static void gen_np_chg_udp_gate(struct net_pin_t *npp, struct bblk_t *done_bbp)$/;"	f	file:	signature:(struct net_pin_t *npp, struct bblk_t *done_bbp)
gen_np_conta	./v_bbgen2.c	/^static void gen_np_conta(struct net_pin_t *npp)$/;"	f	file:	signature:(struct net_pin_t *npp)
gen_np_conta_nodelay	./v_bbgen2.c	/^static void gen_np_conta_nodelay(struct conta_t *cap)$/;"	f	file:	signature:(struct conta_t *cap)
gen_np_gate_insns	./v_bbgen2.c	/^static void gen_np_gate_insns(struct net_pin_t *npp, struct bblk_t *done_bbp)$/;"	f	file:	signature:(struct net_pin_t *npp, struct bblk_t *done_bbp)
gen_np_iconn	./v_bbgen2.c	/^static void gen_np_iconn(struct expr_t *down_lhsx, struct expr_t *up_rhsx, $/;"	f	file:	signature:(struct expr_t *down_lhsx, struct expr_t *up_rhsx, struct itree_t *upitp, struct itree_t *downitp, int32 oneinst, int32 nppi, int32 has_lds_after)
gen_np_iconn_insns	./v_bbgen2.c	/^static void gen_np_iconn_insns(struct net_pin_t *npp)$/;"	f	file:	signature:(struct net_pin_t *npp)
gen_np_mdprt_insns	./v_bbgen2.c	/^static void gen_np_mdprt_insns(struct net_pin_t *npp, struct bblk_t *after_bbp,$/;"	f	file:	signature:(struct net_pin_t *npp, struct bblk_t *after_bbp, int32 is_nchg_fg)
gen_np_timechg	./v_bbgen2.c	/^static void gen_np_timechg(struct net_pin_t *npp, struct net_t *np)$/;"	f	file:	signature:(struct net_pin_t *npp, struct net_t *np)
gen_np_tranif	./v_bbgen2.c	/^static void gen_np_tranif(struct gate_t *gp)$/;"	f	file:	signature:(struct gate_t *gp)
gen_npchg_tcchk	./v_bbgen2.c	/^static void gen_npchg_tcchk(struct net_pin_t *npp, int32 res_ti)$/;"	f	file:	signature:(struct net_pin_t *npp, int32 res_ti)
gen_npp_flowg	./v_bbgen2.c	/^static void gen_npp_flowg(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
gen_num_repsetup	./v_bbgen.c	/^static void gen_num_repsetup(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
gen_one_dim_mda_ndx	./v_bbgen.c	/^static int32 gen_one_dim_mda_ndx(struct net_t *np, struct mda_t *mdap, $/;"	f	file:	signature:(struct net_t *np, struct mda_t *mdap, struct expr_t *ndx, int32 dim, struct bblk_t *outofrng_bbp)
gen_one_gate_conta_flowg	./v_bbgen2.c	/^static void gen_one_gate_conta_flowg(struct gate_conta_t *gcp)$/;"	f	file:	signature:(struct gate_conta_t *gcp)
gen_one_net_chg_const	./v_bbgen2.c	/^static void gen_one_net_chg_const(struct net_t *np, struct net_chg_t *ncp, $/;"	f	file:	signature:(struct net_t *np, struct net_chg_t *ncp, struct bblk_t *after_bbp)
gen_one_net_chg_var	./v_bbgen2.c	/^static void gen_one_net_chg_var(struct net_t *np, struct net_chg_t *ncp,$/;"	f	file:	signature:(struct net_t *np, struct net_chg_t *ncp, int32 bi_ti, struct bblk_t *after_bbp)
gen_one_net_dumpport_record	./v_bbgen2.c	/^static void gen_one_net_dumpport_record(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, struct bblk_t *after_bbp)
gen_one_net_dumpvar_record	./v_bbgen2.c	/^static void gen_one_net_dumpvar_record(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, struct bblk_t *after_bbp, int32 bi, int32 is_const)
gen_one_np_iconn_flowg	./v_bbgen2.c	/^static void gen_one_np_iconn_flowg(struct np_iconn_t *npicp)$/;"	f	file:	signature:(struct np_iconn_t *npicp)
gen_one_scalar_optim_mdprt_scalar	./v_bbgen2.c	/^static void gen_one_scalar_optim_mdprt_scalar(int32 has_some_nchg, $/;"	f	file:	signature:(int32 has_some_nchg, int32 has_all_nchg, int32 has_dmpvs, int32 has_dmpps, int32 nchg_ti, int32 np_ti, int32 up_np_ti, int32 new_val_ti, int32 up_idp_ti, int32 has_toggle)
gen_one_to_one_port_assign	./v_bbgen2.c	/^static int32 gen_one_to_one_port_assign(struct expr_t *from_xp, $/;"	f	file:	signature:(struct expr_t *from_xp, struct expr_t *to_xp, int32 from_inum, int32 to_inum)
gen_oneword_setx	./v_bbgen.c	/^static void gen_oneword_setx(int32 res_ti)$/;"	f	file:	signature:(int32 res_ti)
gen_onewrd_bound_rhs_psel	./v_bbgen.c	/^static int32 gen_onewrd_bound_rhs_psel(int32 srtyp, int32 var_apti, $/;"	f	file:	signature:(int32 srtyp, int32 var_apti, int32 var_bpti, int32 lowbiti, int32 numbits)
gen_onewrd_cross_rhs_psel	./v_bbgen.c	/^static int32 gen_onewrd_cross_rhs_psel(int32 srtyp, int32 var_apti, $/;"	f	file:	signature:(int32 srtyp, int32 var_apti, int32 lowbiti, int32 numbits)
gen_packed_svLogicVecVal_array_1w_dpi	./v_bbgen.c	/^static int32 gen_packed_svLogicVecVal_array_1w_dpi(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, int32 trtyp, int32 needs_record)
gen_packed_svLogicVecVal_array_1w_packed_dpi	./v_bbgen.c	/^static int32 gen_packed_svLogicVecVal_array_1w_packed_dpi(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, int32 trtyp, int32 needs_record)
gen_packed_svLogicVecVal_array_dpi	./v_bbgen.c	/^static int32 gen_packed_svLogicVecVal_array_dpi(struct net_t *np, int32 trtyp,$/;"	f	file:	signature:(struct net_t *np, int32 trtyp, int32 **wide_tmps, int32 needs_record)
gen_packed_svLogicVecVal_array_real_dpi	./v_bbgen.c	/^static int32 gen_packed_svLogicVecVal_array_real_dpi(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, int32 trtyp, int32 needs_record)
gen_packed_svLogicVecVal_array_scalar_dpi	./v_bbgen.c	/^static int32 gen_packed_svLogicVecVal_array_scalar_dpi(struct net_t *np,$/;"	f	file:	signature:(struct net_t *np, int32 trtyp, int32 needs_record)
gen_packed_svLogicVecVal_array_wide_dpi	./v_bbgen.c	/^static int32 gen_packed_svLogicVecVal_array_wide_dpi(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, int32 **wide_tmps, int32 trtyp, int32 needs_record)
gen_packed_svLogicVecVal_dpi	./v_bbgen.c	/^static int32 gen_packed_svLogicVecVal_dpi(struct net_t *np, int32 rhs_apti, $/;"	f	file:	signature:(struct net_t *np, int32 rhs_apti, int32 trtyp, int32 needs_record)
gen_pck_ofset_const	./v_bbgen.c	/^static int32 gen_pck_ofset_const(struct net_t *np, int32 bi)$/;"	f	file:	signature:(struct net_t *np, int32 bi)
gen_pck_ofset_var	./v_bbgen.c	/^static int32 gen_pck_ofset_var(struct net_t *np, int32 bi_ti)$/;"	f	file:	signature:(struct net_t *np, int32 bi_ti)
gen_peri_chan_no_vtxs	./v_bbgen2.c	/^static void gen_peri_chan_no_vtxs(struct net_t *np, struct traux_t *trap, $/;"	f	file:	signature:(struct net_t *np, struct traux_t *trap, int32 idp_saved, int32 bi, int32 do_all_bits)
gen_power_loop	./v_bbgen.c	/^static void gen_power_loop(struct bblk_t *after_bbp, int32 op1_ti, $/;"	f	file:	signature:(struct bblk_t *after_bbp, int32 op1_ti, int32 op2_ti, int32 res_apti, int32 mask_ti, int32 one_ti, int32 has_sign_ti)
gen_proc_assign	./v_bbgen.c	/^static void gen_proc_assign(struct expr_t *lhsx, struct expr_t *rhsx,$/;"	f	file:	signature:(struct expr_t *lhsx, struct expr_t *rhsx, int32 accum_ti)
gen_proc_assign_const_to_id	./v_bbgen.c	/^static void gen_proc_assign_const_to_id(struct expr_t *lhsx, $/;"	f	file:	signature:(struct expr_t *lhsx, struct expr_t *rhsx)
gen_proc_assign_string	./v_bbgen.c	/^static void gen_proc_assign_string(struct expr_t *lhsx, struct expr_t *rhsx)$/;"	f	file:	signature:(struct expr_t *lhsx, struct expr_t *rhsx)
gen_prop_gatechg	./v_bbgen2.c	/^static void gen_prop_gatechg(struct gate_t *gp, int32 new_gateval_ti,$/;"	f	file:	signature:(struct gate_t *gp, int32 new_gateval_ti, int32 old_gateval_ti, struct bblk_t *done_bbp, int32 eq_cmp_ti)
gen_push_save_idp	./v_bbgen.c	/^static int32 gen_push_save_idp(int32 set_idp_ti)$/;"	f	file:	signature:(int32 set_idp_ti)
gen_qcaf_assgn_to_regbit	./v_bbgen.c	/^static void gen_qcaf_assgn_to_regbit(struct expr_t *lhsx, int32 rhs_apti)$/;"	f	file:	signature:(struct expr_t *lhsx, int32 rhs_apti)
gen_qcol	./v_bbgen.c	/^static int32 gen_qcol(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
gen_qcol_2state	./v_bbgen.c	/^static int32 gen_qcol_2state(struct expr_t *ndp, int32 sel_apti)$/;"	f	file:	signature:(struct expr_t *ndp, int32 sel_apti)
gen_qcol_const	./v_bbgen.c	/^static int32 gen_qcol_const(int32 sel_apti, struct expr_t *ndp)$/;"	f	file:	signature:(int32 sel_apti, struct expr_t *ndp)
gen_qcol_leaf	./v_bbgen.c	/^static int32 gen_qcol_leaf(struct expr_t *ndp, int32 sel_apti)$/;"	f	file:	signature:(struct expr_t *ndp, int32 sel_apti)
gen_qconta	./v_bbgen.c	/^static void gen_qconta(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
gen_qconta_one_lhsx	./v_bbgen.c	/^static void gen_qconta_one_lhsx(struct st_t *stp, int32 bi, struct expr_t *lhsx,$/;"	f	file:	signature:(struct st_t *stp, int32 bi, struct expr_t *lhsx, int32 is_concat)
gen_qcontdea	./v_bbgen.c	/^static void gen_qcontdea(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
gen_qcontdea_one_lhsx	./v_bbgen.c	/^static void gen_qcontdea_one_lhsx(struct st_t *stp, struct expr_t *lhsx, $/;"	f	file:	signature:(struct st_t *stp, struct expr_t *lhsx, int32 is_concat)
gen_random_syscall	./v_bbgen.c	/^static int32 gen_random_syscall(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
gen_real_inc_dec	./v_bbgen.c	/^static int32 gen_real_inc_dec(struct expr_t *ndp, int32 is_inc, int32 val_ti,$/;"	f	file:	signature:(struct expr_t *ndp, int32 is_inc, int32 val_ti, int32 nd_result, int32 res_ti)
gen_real_list_case	./v_bbgen.c	/^static void gen_real_list_case(struct st_t *stp, struct icas_t *icastab,$/;"	f	file:	signature:(struct st_t *stp, struct icas_t *icastab, struct icasx_t *icasxtab, int32 has_dflt, struct csitem_t *dflt_csip)
gen_realselqcol	./v_bbgen.c	/^static int32 gen_realselqcol(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
gen_reg_qcaf_tstjmp	./v_bbgen.c	/^static void gen_reg_qcaf_tstjmp(struct net_t *np, struct bblk_t *after_bbp,$/;"	f	file:	signature:(struct net_t *np, struct bblk_t *after_bbp, int32 rhs_apti)
gen_regrealqcol	./v_bbgen.c	/^static int32 gen_regrealqcol(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
gen_rep_ectl_setup	./v_bbgen.c	/^static void gen_rep_ectl_setup(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
gen_repeat	./v_bbgen.c	/^static void gen_repeat(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
gen_repsetup	./v_bbgen.c	/^static void gen_repsetup(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
gen_rhs_arr_select	./v_bbgen.c	/^static int32 gen_rhs_arr_select(struct expr_t *sel_ndx, struct net_t *np,$/;"	f	file:	signature:(struct expr_t *sel_ndx, struct net_t *np, int32 arrval_ti)
gen_rhs_arrsel_const	./v_bbgen.c	/^static int32 gen_rhs_arrsel_const(struct net_t *np, int32 addr_ti, int32 bi)$/;"	f	file:	signature:(struct net_t *np, int32 addr_ti, int32 bi)
gen_rhs_arrsel_var	./v_bbgen.c	/^static int32 gen_rhs_arrsel_var(struct net_t *np, int32 addr_ti,$/;"	f	file:	signature:(struct net_t *np, int32 addr_ti, int32 bi_ti)
gen_rhs_assgn_concat	./v_bbgen.c	/^static void gen_rhs_assgn_concat(struct expr_t *lhsx,$/;"	f	file:	signature:(struct expr_t *lhsx, struct expr_t **rhsxtab, int32 rhsnels)
gen_rhs_concat	./v_bbgen.c	/^static int32 gen_rhs_concat(struct expr_t *lcbndp)$/;"	f	file:	signature:(struct expr_t *lcbndp)
gen_rhs_concat_1w	./v_bbgen.c	/^static int32 gen_rhs_concat_1w(struct expr_t *lcbndp, int32 srtyp)$/;"	f	file:	signature:(struct expr_t *lcbndp, int32 srtyp)
gen_rhs_concat_range	./v_bbgen.c	/^static int32 gen_rhs_concat_range(int32 rhs_ti, int32 bi, int32 catxlen, $/;"	f	file:	signature:(int32 rhs_ti, int32 bi, int32 catxlen, int32 srtyp)
gen_rhs_dctl_ectl	./v_bbgen.c	/^static void gen_rhs_dctl_ectl(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
gen_rhs_dctl_proca	./v_bbgen.c	/^static void gen_rhs_dctl_proca(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
gen_rhs_index_width_psel	./v_bbgen.c	/^static int32 gen_rhs_index_width_psel(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
gen_rhs_iw_psel	./v_bbgen.c	/^static void gen_rhs_iw_psel(int32 addr_apti, int32 res_apti, int32 bitl_ti,$/;"	f	file:	signature:(int32 addr_apti, int32 res_apti, int32 bitl_ti, int32 numbits_ti, int32 nwid, int32 opwid, int32 srtyp)
gen_rhs_psel	./v_bbgen.c	/^static int32 gen_rhs_psel(struct expr_t *ndp, int32 xwid)$/;"	f	file:	signature:(struct expr_t *ndp, int32 xwid)
gen_rhs_strength_bsel	./v_bbgen.c	/^extern int32 gen_rhs_strength_bsel(int32 var_apti, int32 bi, int32 is_const) $/;"	f	signature:(int32 var_apti, int32 bi, int32 is_const)
gen_rt_dpi_interp_mkfil_and_compile	./v_dpi.c	/^static void gen_rt_dpi_interp_mkfil_and_compile(void)$/;"	f	file:	signature:(void)
gen_rt_dpi_interp_pipe_lib	./v_dpi.c	/^static void gen_rt_dpi_interp_pipe_lib()$/;"	f	file:
gen_scal_filter_dce_chg	./v_bbgen2.c	/^static void gen_scal_filter_dce_chg(struct net_t *np, struct dcevnt_t *dcep, $/;"	f	file:	signature:(struct net_t *np, struct dcevnt_t *dcep, int32 *oval_ti, int32 *nval_ti, struct bblk_t *after_bbp)
gen_scalar_binop	./v_bbgen.c	/^static int32 gen_scalar_binop(int32 optyp, int32 op1_ti, int32 op2_ti, $/;"	f	file:	signature:(int32 optyp, int32 op1_ti, int32 op2_ti, int32 srtyp1, int32 srtyp2)
gen_scalar_qcol	./v_bbgen.c	/^static int32 gen_scalar_qcol(struct expr_t *ndp, int32 sel_apti)$/;"	f	file:	signature:(struct expr_t *ndp, int32 sel_apti)
gen_scalar_qcol_leaf	./v_bbgen.c	/^static int32 gen_scalar_qcol_leaf(struct expr_t *ndp, int32 sel_apti)$/;"	f	file:	signature:(struct expr_t *ndp, int32 sel_apti)
gen_scalar_sched	./v_bbgen2.c	/^static void gen_scalar_sched(struct net_t *np, int32 np_ti, int32 new_apti, $/;"	f	file:	signature:(struct net_t *np, int32 np_ti, int32 new_apti, int32 addr_apti)
gen_scalar_unop	./v_bbgen.c	/^static int32 gen_scalar_unop(int32 optyp, int32 op_ti)$/;"	f	file:	signature:(int32 optyp, int32 op_ti)
gen_scalar_unop_try	./v_bbgen.c	/^static int32 gen_scalar_unop_try(int32 optyp, int32 op_ti)$/;"	f	file:	signature:(int32 optyp, int32 op_ti)
gen_scalarr_wbyti_bofs	./v_bbgen.c	/^static int32 gen_scalarr_wbyti_bofs(int32 *bofs_ti, int32 indi_ti)$/;"	f	file:	signature:(int32 *bofs_ti, int32 indi_ti)
gen_schd_allofwire	./v_bbgen2.c	/^static void gen_schd_allofwire(struct net_t *np, int32 new_apti, int32 blen) $/;"	f	file:	signature:(struct net_t *np, int32 new_apti, int32 blen)
gen_schd_bidpthdrvrs	./v_bbgen2.c	/^static void gen_schd_bidpthdrvrs(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
gen_schd_or_reschd_caev	./v_bbgen2.c	/^static void gen_schd_or_reschd_caev(int32 tevp_ti, struct conta_t *delcap, $/;"	f	file:	signature:(int32 tevp_ti, struct conta_t *delcap, int32 cap_ti, int32 is_schd)
gen_sched_1mdrwire	./v_bbgen2.c	/^static void gen_sched_1mdrwire(struct net_t *np, int32 rhs_ti)$/;"	f	file:	signature:(struct net_t *np, int32 rhs_ti)
gen_sched_conta_assign	./v_bbgen2.c	/^static void gen_sched_conta_assign(struct expr_t *xlhs, int32 rhs_ti)$/;"	f	file:	signature:(struct expr_t *xlhs, int32 rhs_ti)
gen_sched_proc_del	./v_bbgen.c	/^static void gen_sched_proc_del(struct st_t *stp, struct st_t *nxtstp)$/;"	f	file:	signature:(struct st_t *stp, struct st_t *nxtstp)
gen_sched_scalar_1pthbit	./v_bbgen2.c	/^static void gen_sched_scalar_1pthbit(struct net_t *np, int32 np_ti, $/;"	f	file:	signature:(struct net_t *np, int32 np_ti, int32 newscalw_ti, int32 oldscalw_ti, int32 nchg_ti, int32 ctevp_ti, int32 is_stren)
gen_sched_to_bit	./v_bbgen2.c	/^static void gen_sched_to_bit(struct net_t *np, struct expr_t *idndp, $/;"	f	file:	signature:(struct net_t *np, struct expr_t *idndp, struct expr_t *ndx1, int32 rhs_apti)
gen_sched_to_bit_const	./v_bbgen2.c	/^static void gen_sched_to_bit_const(struct net_t *np, struct expr_t *idndp, $/;"	f	file:	signature:(struct net_t *np, struct expr_t *idndp, int32 rhs_apti, int32 bi)
gen_sched_to_psel	./v_bbgen2.c	/^static void gen_sched_to_psel(struct expr_t *xlhs, int rhs_apti)$/;"	f	file:	signature:(struct expr_t *xlhs, int rhs_apti)
gen_sched_vector_1pthbit	./v_bbgen2.c	/^static void gen_sched_vector_1pthbit(struct net_t *np, int32 np_ti, $/;"	f	file:	signature:(struct net_t *np, int32 np_ti, int32 newscalw_ti, int32 oldscalw_ti, int32 nchg_ti, int32 ctevp_ti, int32 bi)
gen_schedule_path_bit32	./v_bbgen2.c	/^static void gen_schedule_path_bit32(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, struct bblk_t *done_bbp, int32 ctevp_ti, int32 newtime_low_ti, int32 newtime_high_ti, int32 bi, int32 chk_path_set, struct bblk_t *le_simtime_bbp, int32 newscalw_ti)
gen_schedule_path_bit64	./v_bbgen2.c	/^static void gen_schedule_path_bit64(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, struct bblk_t *done_bbp, int32 ctevp_ti, int32 newtime_ti, int32 bi, int32 chk_path_set, struct bblk_t *le_simtime_bbp, int32 newscalw_ti)
gen_sel_string	./v_bbgen.c	/^static int32 gen_sel_string(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
gen_sens_t	./v.h	/^struct gen_sens_t {$/;"	s
gen_sens_t::gsen_owp	./v.h	/^ word32 *gsen_owp;$/;"	m	struct:gen_sens_t	access:public
gen_sens_t::gsen_prmnp	./v.h	/^ struct net_t *gsen_prmnp;$/;"	m	struct:gen_sens_t	typeref:struct:gen_sens_t::net_t	access:public
gen_sens_t::gsenxt	./v.h	/^ struct gen_sens_t *gsenxt;$/;"	m	struct:gen_sens_t	typeref:struct:gen_sens_t::gen_sens_t	access:public
gen_set_restore_xprop_accum_block	./v_bbgen.c	/^static void gen_set_restore_xprop_accum_block(struct st_t *stp, $/;"	f	file:	signature:(struct st_t *stp, int32 xblocks_ti, struct xprop_t *xprop)
gen_set_restore_xprop_accum_block_nodefault	./v_bbgen.c	/^static void gen_set_restore_xprop_accum_block_nodefault(struct st_t *stp,$/;"	f	file:	signature:(struct st_t *stp, int32 num_matched_ti, int32 xcount_ti, struct xprop_t *xprop)
gen_set_restore_xprop_accum_block_toself	./v_bbgen.c	/^static void gen_set_restore_xprop_accum_block_toself(struct st_t *stp, $/;"	f	file:	signature:(struct st_t *stp, struct xprop_t *xprop)
gen_set_save_idp	./v_bbgen2.c	/^static void gen_set_save_idp(int32 set_idp_ti, int32 *save_idp_ti, $/;"	f	file:	signature:(int32 set_idp_ti, int32 *save_idp_ti, int32 need_save)
gen_set_xblock_number	./v_bbgen.c	/^static void gen_set_xblock_number(struct st_t *stp, int32 cint_ti, $/;"	f	file:	signature:(struct st_t *stp, int32 cint_ti, struct xprop_t *xprop)
gen_set_xprop_accum_block	./v_bbgen.c	/^static void gen_set_xprop_accum_block(struct st_t *stp, struct xprop_t *xprop)$/;"	f	file:	signature:(struct st_t *stp, struct xprop_t *xprop)
gen_set_xprop_accum_value_id	./v_bbgen.c	/^static void gen_set_xprop_accum_value_id(struct net_t *np, int32 rhs_ti)$/;"	f	file:	signature:(struct net_t *np, int32 rhs_ti)
gen_set_xprop_check_case_net_set	./v_bbgen.c	/^static void gen_set_xprop_check_case_net_set(struct st_t *stp, $/;"	f	file:	signature:(struct st_t *stp, int32 matched_ti, struct xprop_t *xprop)
gen_st_2state_svLogicVecVal_array_dpi	./v_bbgen.c	/^static void gen_st_2state_svLogicVecVal_array_dpi(struct net_t *np,$/;"	f	file:	signature:(struct net_t *np, int32 rhs_ti, int32 array_ti)
gen_st_array_element_select	./v_bbgen.c	/^static int32 gen_st_array_element_select(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, struct expr_t *sel_ndp, int32 eladdr_ti, int32 rhs_apti, int32 nd_chg, int32 srtyp, int32 sel_ti)
gen_st_drvr_competition_upd	./v_bbgen2.c	/^static void gen_st_drvr_competition_upd(int32 accum_sbpti, int32 drv_sbpti,$/;"	f	file:	signature:(int32 accum_sbpti, int32 drv_sbpti, struct net_t *np, struct net_pin_t *npp)
gen_st_indexed_width_psel	./v_bbgen.c	/^static void gen_st_indexed_width_psel(int32 addr_apti, int32 rhs_ti, $/;"	f	file:	signature:(int32 addr_apti, int32 rhs_ti, int32 rhs_bpti, int32 bitl_ti, int32 numbits_ti, int32 nwid, int32 srtyp)
gen_st_ldcomb_1_drvr	./v_bbgen2.c	/^static void gen_st_ldcomb_1_drvr(int32 accum_sbpti, struct net_t *np,$/;"	f	file:	signature:(int32 accum_sbpti, struct net_t *np, struct net_pin_t *npp, int32 nd_itpop, int32 save_idp_ti)
gen_st_one_tfins	./v_bbgen.c	/^static void gen_st_one_tfins(struct net_t *np, struct expr_t *argxp,$/;"	f	file:	signature:(struct net_t *np, struct expr_t *argxp, int32 set_idp_ti, struct mod_t *mdp)
gen_st_one_tfouts	./v_bbgen.c	/^static void gen_st_one_tfouts(struct net_t *intsk_np, struct expr_t *uplhsx,$/;"	f	file:	signature:(struct net_t *intsk_np, struct expr_t *uplhsx, int32 set_idp_ti, struct mod_t *mdp)
gen_st_scalar_lhs_arrsel_const	./v_bbgen.c	/^static void gen_st_scalar_lhs_arrsel_const(struct net_t *np,$/;"	f	file:	signature:(struct net_t *np, int32 addr_apti, int32 bi, int32 rhs_scal_ti)
gen_st_scalar_lhs_arrsel_is_const	./v_bbgen.c	/^static void gen_st_scalar_lhs_arrsel_is_const(struct net_t *np,$/;"	f	file:	signature:(struct net_t *np, int32 addr_apti, int32 bi, int32 rhs_scal_ti)
gen_st_scalar_lhs_arrsel_var	./v_bbgen.c	/^static void gen_st_scalar_lhs_arrsel_var(struct expr_t *lhsx,$/;"	f	file:	signature:(struct expr_t *lhsx, int32 addr_apti, int32 bi_ti, int32 rhs_scal_ti)
gen_st_standval	./v_bbgen2.c	/^static int32 gen_st_standval(int32 blen, int32 apti, byte new_st)$/;"	f	file:	signature:(int32 blen, int32 apti, byte new_st)
gen_st_tf_ins	./v_bbgen.c	/^static void gen_st_tf_ins(struct st_t *call_stp, int32 idp_ti,$/;"	f	file:	signature:(struct st_t *call_stp, int32 idp_ti, struct gref_t *grp)
gen_st_tf_outs	./v_bbgen.c	/^static void gen_st_tf_outs(struct st_t *call_stp, int32 save_idp_ti,$/;"	f	file:	signature:(struct st_t *call_stp, int32 save_idp_ti, struct mod_t *mdp)
gen_st_unpacked_svLogicVecVal_array_1w_changes_dpi	./v_bbgen.c	/^static void gen_st_unpacked_svLogicVecVal_array_1w_changes_dpi($/;"	f	file:	signature:( struct net_t *np, int32 rhs_ti, int32 array_ti)
gen_st_unpacked_svLogicVecVal_array_dpi	./v_bbgen.c	/^static void gen_st_unpacked_svLogicVecVal_array_dpi(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, int32 rhs_ti, int32 *wide_tmps)
gen_st_unpacked_svLogicVecVal_array_real_dpi	./v_bbgen.c	/^static void gen_st_unpacked_svLogicVecVal_array_real_dpi(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, int32 rhs_ti, int32 array_ti)
gen_st_unpacked_svLogicVecVal_array_wide_dpi	./v_bbgen.c	/^static void gen_st_unpacked_svLogicVecVal_array_wide_dpi(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, int32 array_ti, int32 *wide_tmps)
gen_st_unpacked_svLogicVecVal_packed_array_dpi	./v_bbgen.c	/^static void gen_st_unpacked_svLogicVecVal_packed_array_dpi(struct net_t *np,$/;"	f	file:	signature:(struct net_t *np, int32 rhs_ti, int32 array_ti)
gen_st_unpacked_svLogicVecVal_scalar_array_dpi	./v_bbgen.c	/^static void gen_st_unpacked_svLogicVecVal_scalar_array_dpi(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, int32 rhs_ti, int32 array_ti)
gen_stload_mdrwire_subr	./v_bbgen2.c	/^static int32 gen_stload_mdrwire_subr(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
gen_stlst	./v_bbgen.c	/^static void gen_stlst(struct st_t *hdstp, int32 has_endgoto)$/;"	f	file:	signature:(struct st_t *hdstp, int32 has_endgoto)
gen_stmt	./v_bbgen.c	/^static struct st_t *gen_stmt(struct st_t *stp, int32 has_endgoto)$/;"	f	file:	signature:(struct st_t *stp, int32 has_endgoto)
gen_stmt_inc_dec	./v_bbgen.c	/^static void gen_stmt_inc_dec(struct st_t *stp, int32 is_inc)$/;"	f	file:	signature:(struct st_t *stp, int32 is_inc)
gen_stren_1bit_schd	./v_bbgen2.c	/^static void gen_stren_1bit_schd(struct net_t *np, int32 np_ti, int32 bi, $/;"	f	file:	signature:(struct net_t *np, int32 np_ti, int32 bi, int32 newsbp_ti, int32 oldsbp_ti)
gen_stren_conta_assgn	./v_bbgen2.c	/^static void gen_stren_conta_assgn(struct expr_t *lhsx, int32 rhs_apti)$/;"	f	file:	signature:(struct expr_t *lhsx, int32 rhs_apti)
gen_stren_decl_lhscat	./v_bbgen2.c	/^static void gen_stren_decl_lhscat(struct expr_t *lhsx, int32 rhsadr_ti)$/;"	f	file:	signature:(struct expr_t *lhsx, int32 rhsadr_ti)
gen_stren_filter_dce_chg	./v_bbgen2.c	/^static int32 gen_stren_filter_dce_chg(struct net_t *np, struct dcevnt_t *dcep,$/;"	f	file:	signature:(struct net_t *np, struct dcevnt_t *dcep, int32 *oval_ti, int32 *nval_ti, struct bblk_t *after_bbp, struct delctrl_t *dctp)
gen_stren_scalar_schd	./v_bbgen2.c	/^static void gen_stren_scalar_schd(struct net_t *np, int32 np_ti, $/;"	f	file:	signature:(struct net_t *np, int32 np_ti, int32 newsbp_ti, int32 oldsbp_ti)
gen_stren_schd_allofwire	./v_bbgen2.c	/^static void gen_stren_schd_allofwire(struct net_t *np, int32 newsbp_ti, $/;"	f	file:	signature:(struct net_t *np, int32 newsbp_ti, int32 sblen)
gen_stren_schd_bidpthdrvrs	./v_bbgen2.c	/^static void gen_stren_schd_bidpthdrvrs(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
gen_stren_sched_to_bit	./v_bbgen2.c	/^static void gen_stren_sched_to_bit(struct net_t *np, struct expr_t *idndp, $/;"	f	file:	signature:(struct net_t *np, struct expr_t *idndp, struct expr_t *ndx, int32 rhs_sbpti)
gen_stren_sched_to_bit_const	./v_bbgen2.c	/^static void gen_stren_sched_to_bit_const(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, struct expr_t *idndp, int32 rhs_sbpti, int32 bi)
gen_stren_sched_to_psel	./v_bbgen2.c	/^static void gen_stren_sched_to_psel(struct expr_t *xlhs, int newsbp_ti)$/;"	f	file:	signature:(struct expr_t *xlhs, int newsbp_ti)
gen_svec_widen	./v_bbgen2.c	/^static int32 gen_svec_widen(int32 dstwid, int32 rhs_ti, int32 stval)$/;"	f	file:	signature:(int32 dstwid, int32 rhs_ti, int32 stval)
gen_sysfcall	./v_bbgen.c	/^static int32 gen_sysfcall(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
gen_tran_1bit	./v_bbgen2.c	/^static void gen_tran_1bit(struct net_t *np, int32 np_ti, int32 bi, $/;"	f	file:	signature:(struct net_t *np, int32 np_ti, int32 bi, int32 idp_saved)
gen_tran_1net_vectored	./v_bbgen2.c	/^static void gen_tran_1net_vectored(struct net_t *np, int32 np_ti, $/;"	f	file:	signature:(struct net_t *np, int32 np_ti, int32 idp_saved, struct chanrec_t *chanp)
gen_tran_assign_to_vertices	./v_bbgen2.c	/^static void gen_tran_assign_to_vertices(struct chanrec_t *chanp, $/;"	f	file:	signature:(struct chanrec_t *chanp, int32 abval_ti, int32 sval_ti, int32 idp_saved, int32 is_stren)
gen_tran_drvrs	./v_bbgen2.c	/^static void gen_tran_drvrs(struct net_t *np, int32 idp_saved) $/;"	f	file:	signature:(struct net_t *np, int32 idp_saved)
gen_trigger_ectrl_pnd0	./v_bbgen2.c	/^static void gen_trigger_ectrl_pnd0(int32 tevp_reg_ti, struct delctrl_t *dctp)$/;"	f	file:	signature:(int32 tevp_reg_ti, struct delctrl_t *dctp)
gen_try_to_cnvt_scalar_const	./v_bbgen.c	/^static int32 gen_try_to_cnvt_scalar_const(int32 op_ti)$/;"	f	file:	signature:(int32 op_ti)
gen_tskbody	./v_bbgen.c	/^static void gen_tskbody(struct task_t *tskp)$/;"	f	file:	signature:(struct task_t *tskp)
gen_tskbody_export_dpi	./v_bbgen.c	/^static void gen_tskbody_export_dpi(struct task_t *tskp)$/;"	f	file:	signature:(struct task_t *tskp)
gen_tskcall	./v_bbgen.c	/^static void gen_tskcall(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
gen_tskcall_dpi	./v_bbgen.c	/^static void gen_tskcall_dpi(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
gen_un_bitnot	./v_bbgen.c	/^static int32 gen_un_bitnot(int32 op_ti, int32 blen)$/;"	f	file:	signature:(int32 op_ti, int32 blen)
gen_un_bitred_and_wide	./v_bbgen.c	/^static int32 gen_un_bitred_and_wide(int32 op_apti, int32 blen, int32 nd_invert,$/;"	f	file:	signature:(int32 op_apti, int32 blen, int32 nd_invert, int32 need_xprop)
gen_un_logical_not	./v_bbgen.c	/^static int32 gen_un_logical_not(int32 op_ti)$/;"	f	file:	signature:(int32 op_ti)
gen_un_logical_not_wide	./v_bbgen.c	/^static int32 gen_un_logical_not_wide(int32 op_ti)$/;"	f	file:	signature:(int32 op_ti)
gen_un_minusop	./v_bbgen.c	/^static void gen_un_minusop(int32 res_ti, int32 op_ti, int32 blen, $/;"	f	file:	signature:(int32 res_ti, int32 op_ti, int32 blen, int32 nd_signop, int32 srtyp)
gen_unfj	./v_bbgen.c	/^static void gen_unfj(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
gen_unop	./v_bbgen.c	/^static int32 gen_unop(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
gen_unop_2state	./v_bbgen.c	/^static int32 gen_unop_2state(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
gen_unpacked_svLogicVecVal_dpi	./v_bbgen.c	/^static int32 gen_unpacked_svLogicVecVal_dpi(struct net_t *np, int32 pli_ti)$/;"	f	file:	signature:(struct net_t *np, int32 pli_ti)
gen_vec_narrow	./v_bbgen2.c	/^static int32 gen_vec_narrow(int32 rhs_ti, int32 dstbitwid, int32 is_2state)$/;"	f	file:	signature:(int32 rhs_ti, int32 dstbitwid, int32 is_2state)
gen_vec_sizchg	./v_bbgen2.c	/^static int32 gen_vec_sizchg(int32 rhs_ti, int32 newwid, int32 oldwid, $/;"	f	file:	signature:(int32 rhs_ti, int32 newwid, int32 oldwid, int32 nd_signed, int32 is_2state)
gen_vec_to_svec_cnvt	./v_bbgen2.c	/^static int32 gen_vec_to_svec_cnvt(int32 dstwid, int32 rhs_ti, int32 stval)$/;"	f	file:	signature:(int32 dstwid, int32 rhs_ti, int32 stval)
gen_wait	./v_bbgen.c	/^static void gen_wait(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
gen_wbyti_bofs	./v_bbgen.c	/^static int32 gen_wbyti_bofs(int32 addr_ti, int32 *bofs_ti, int32 indi_ti)$/;"	f	file:	signature:(int32 addr_ti, int32 *bofs_ti, int32 indi_ti)
gen_wdel_trireg	./v_bbgen2.c	/^static void gen_wdel_trireg(struct net_t *np, int32 oldsbp_ti, int32 newsbp_ti)$/;"	f	file:	signature:(struct net_t *np, int32 oldsbp_ti, int32 newsbp_ti)
gen_while	./v_bbgen.c	/^static void gen_while(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
gen_while_const	./v_bbgen.c	/^static void gen_while_const(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
gen_wide_logic_gate	./v_bbgen2.c	/^static void gen_wide_logic_gate(struct gate_t *gp, struct net_pin_t *npp)$/;"	f	file:	signature:(struct gate_t *gp, struct net_pin_t *npp)
gen_wide_sizchg_widen	./v_bbgen2.c	/^static int32 gen_wide_sizchg_widen(int32 rhs_ti, int32 dstwid, int32 rhswid)$/;"	f	file:	signature:(int32 rhs_ti, int32 dstwid, int32 rhswid)
gen_widen_new_constant	./v_bbgen2.c	/^static int32 gen_widen_new_constant(int32 rhs_ti, int32 dstwid, int32 is_2state)$/;"	f	file:	signature:(int32 rhs_ti, int32 dstwid, int32 is_2state)
gen_widen_new_constant_signed	./v_bbgen2.c	/^static int32 gen_widen_new_constant_signed(int32 rhs_ti, int32 dstwid, $/;"	f	file:	signature:(int32 rhs_ti, int32 dstwid, int32 rhswid, int32 is_2state)
gen_wordalign_hwmask_st_psel	./v_bbgen.c	/^static void gen_wordalign_hwmask_st_psel(int32 srtyp, int32 addr_apti, $/;"	f	file:	signature:(int32 srtyp, int32 addr_apti, int32 rhs_apti, int32 lowbi, int32 numbits)
gen_wordalign_rhs_psel	./v_bbgen.c	/^static void gen_wordalign_rhs_psel(int32 srtyp, int32 res_apti, int32 var_apti, $/;"	f	file:	signature:(int32 srtyp, int32 res_apti, int32 var_apti, int32 lowbiti, int32 numbits)
gen_wordalign_st_psel	./v_bbgen.c	/^static void gen_wordalign_st_psel(int32 srtyp, int32 addr_apti, $/;"	f	file:	signature:(int32 srtyp, int32 addr_apti, int32 rhs_apti, int32 lowbiti, int32 numbits)
gen_wrd_sgnxtnd_widen	./v_bbgen2.c	/^static int32 gen_wrd_sgnxtnd_widen(int32 rhs_ti, int32 dstwid, int32 rhswid,$/;"	f	file:	signature:(int32 rhs_ti, int32 dstwid, int32 rhswid, int32 is_2state)
gen_wrd_sign_sizchg	./v_bbgen2.c	/^static int32 gen_wrd_sign_sizchg(int32 rhs_ti, int32 dstwid, int32 rhswid,$/;"	f	file:	signature:(int32 rhs_ti, int32 dstwid, int32 rhswid, int32 is_2state)
gen_wrd_unsigned_sizchg	./v_bbgen2.c	/^static int32 gen_wrd_unsigned_sizchg(int32 rhs_ti, int32 dstwid, int32 rhswid,$/;"	f	file:	signature:(int32 rhs_ti, int32 dstwid, int32 rhswid, int32 is_2state)
gen_wrd_unsigned_widen	./v_bbgen2.c	/^static int32 gen_wrd_unsigned_widen(int32 rhs_ti, int32 dstwid, int32 rhswid,$/;"	f	file:	signature:(int32 rhs_ti, int32 dstwid, int32 rhswid, int32 is_2state)
gen_write_dpi_wrapper_file	./v_dpi.c	/^static void gen_write_dpi_wrapper_file(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
gen_x86reg_tn	./v_bbgen.c	/^static void gen_x86reg_tn(int32 regnum)$/;"	f	file:	signature:(int32 regnum)
gen_xprop2_if_stmt	./v_bbgen.c	/^static void gen_xprop2_if_stmt(struct st_t *if_stp)$/;"	f	file:	signature:(struct st_t *if_stp)
gen_xprop_case	./v_bbgen.c	/^static void gen_xprop_case(struct st_t *case_stp, int32 slevel,$/;"	f	file:	signature:(struct st_t *case_stp, int32 slevel, int32 sel_ti, int32 sel_bpti)
gen_xprop_combine_with_self	./v_bbgen.c	/^static void gen_xprop_combine_with_self(struct xprop_t *xprop)$/;"	f	file:	signature:(struct xprop_t *xprop)
gen_xprop_enter	./v_bbgen.c	/^static void gen_xprop_enter(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
gen_xprop_if_stmt	./v_bbgen.c	/^static void gen_xprop_if_stmt(struct st_t *stp, int32 slevel, $/;"	f	file:	signature:(struct st_t *stp, int32 slevel, int32 if_apti, int32 if_bpti)
gen_xprop_stlst	./v_bbgen.c	/^static struct st_t *gen_xprop_stlst(struct st_t *hd_stp, int32 slevel,$/;"	f	file:	signature:(struct st_t *hd_stp, int32 slevel, struct st_t *xprop_stp)
gen_xprop_trace_write	./v_bbgen.c	/^static void gen_xprop_trace_write(struct st_t *stp, int32 val_ti, $/;"	f	file:	signature:(struct st_t *stp, int32 val_ti, int32 val_bpti, int32 blen)
gen_xprop_xedge_flowgs	./v_bbgen.c	/^static void gen_xprop_xedge_flowgs(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
gen_xzjmptab_case_select	./v_bbgen.c	/^static void gen_xzjmptab_case_select(struct st_t *stp, struct icas_t *icastab,$/;"	f	file:	signature:(struct st_t *stp, struct icas_t *icastab, struct icasx_t *icasxtab, int32 has_dflt, struct csitem_t *dflt_csip, int32 maxwid, int32 sel_apti)
genblk_fnam_ind	./v.h	/^ unsigned genblk_fnam_ind : 16;$/;"	m	struct:genblk_t	access:public
genblk_lin_cnt	./v.h	/^ int32 genblk_lin_cnt;$/;"	m	struct:genblk_t	access:public
genblk_t	./v.h	/^struct genblk_t { $/;"	s
genblk_t::dfp_gitems	./v.h	/^ struct genitem_t *dfp_gitems; \/* defparams appearing in gen blocks *\/$/;"	m	struct:genblk_t	typeref:struct:genblk_t::genitem_t	access:public
genblk_t::end_gblk_tsk	./v.h	/^ struct task_t *end_gblk_tsk; $/;"	m	struct:genblk_t	typeref:struct:genblk_t::task_t	access:public
genblk_t::gblk_has_grefs	./v.h	/^ unsigned gblk_has_grefs : 1;$/;"	m	struct:genblk_t	access:public
genblk_t::gblk_in_gfor	./v.h	/^ unsigned gblk_in_gfor : 1;$/;"	m	struct:genblk_t	access:public
genblk_t::gblk_mod_in	./v.h	/^ struct mod_t *gblk_mod_in;    \/* mdp that this gblk in defined in *\/$/;"	m	struct:genblk_t	typeref:struct:genblk_t::mod_t	access:public
genblk_t::gblk_sytab	./v.h	/^ struct symtab_t *gblk_sytab;$/;"	m	struct:genblk_t	typeref:struct:genblk_t::symtab_t	access:public
genblk_t::gblk_tsks	./v.h	/^ struct task_t *gblk_tsks;  \/* for tsks (now all t\/f\/lb need gblk tsk list) *\/$/;"	m	struct:genblk_t	typeref:struct:genblk_t::task_t	access:public
genblk_t::gblknam	./v.h	/^ char *gblknam;$/;"	m	struct:genblk_t	access:public
genblk_t::gen_id	./v.h	/^ int32 gen_id;$/;"	m	struct:genblk_t	access:public
genblk_t::genblk_fnam_ind	./v.h	/^ unsigned genblk_fnam_ind : 16;$/;"	m	struct:genblk_t	access:public
genblk_t::genblk_lin_cnt	./v.h	/^ int32 genblk_lin_cnt;$/;"	m	struct:genblk_t	access:public
genblk_t::genv_ndx	./v.h	/^ int32 genv_ndx;               \/* for genfor need gentab index for name too *\/$/;"	m	struct:genblk_t	access:public
genblk_t::gitems	./v.h	/^ struct genitem_t *gitems;     \/* normal gen items from LRM *\/$/;"	m	struct:genblk_t	typeref:struct:genblk_t::genitem_t	access:public
genblk_t::gref_gitems	./v.h	/^ struct genitem_t *gref_gitems;\/* gref globals used in gen block *\/$/;"	m	struct:genblk_t	typeref:struct:genblk_t::genitem_t	access:public
genblk_t::gvnp	./v.h	/^ struct net_t *gvnp;           \/* genblk's inner genvar if one exists *\/$/;"	m	struct:genblk_t	typeref:struct:genblk_t::net_t	access:public
genblk_t::last_dfp_gitem	./v.h	/^ struct genitem_t *last_dfp_gitem;$/;"	m	struct:genblk_t	typeref:struct:genblk_t::genitem_t	access:public
genblk_t::last_gitem	./v.h	/^ struct genitem_t *last_gitem;$/;"	m	struct:genblk_t	typeref:struct:genblk_t::genitem_t	access:public
genblk_t::last_gref_gitem	./v.h	/^ struct genitem_t *last_gref_gitem;$/;"	m	struct:genblk_t	typeref:struct:genblk_t::genitem_t	access:public
genblk_t::unnamed_gblk	./v.h	/^ unsigned unnamed_gblk : 1;$/;"	m	struct:genblk_t	access:public
gened_nxt	./v.h	/^ struct genitem_t *gened_nxt; \/* by gen item type, mod to add to nl list *\/$/;"	m	struct:genitem_t	typeref:struct:genitem_t::genitem_t	access:public
genfor_not_done	./v_genfx.c	/^static int32 genfor_not_done(struct expr_t *termx)$/;"	f	file:	signature:(struct expr_t *termx)
geninxt	./v.h	/^ struct genitem_t *geninxt;$/;"	m	struct:genitem_t	typeref:struct:genitem_t::genitem_t	access:public
genitem_t	./v.h	/^struct genitem_t { $/;"	s
genitem_t::gened_nxt	./v.h	/^ struct genitem_t *gened_nxt; \/* by gen item type, mod to add to nl list *\/$/;"	m	struct:genitem_t	typeref:struct:genitem_t::genitem_t	access:public
genitem_t::geninxt	./v.h	/^ struct genitem_t *geninxt;$/;"	m	struct:genitem_t	typeref:struct:genitem_t::genitem_t	access:public
genitem_t::gi_fnam_ind	./v.h	/^ unsigned gi_fnam_ind : 16;$/;"	m	struct:genitem_t	access:public
genitem_t::gi_nam	./v.h	/^ char *gi_nam;                \/* in gen blk in src name of item *\/$/;"	m	struct:genitem_t	access:public
genitem_t::gilin_cnt	./v.h	/^ int32 gilin_cnt;$/;"	m	struct:genitem_t	access:public
genitem_t::gityp	./v.h	/^ unsigned gityp : 8; $/;"	m	struct:genitem_t	access:public
genitem_t::giu	./v.h	/^ union giu_u giu;             \/* in src form, ptr to gen item *\/$/;"	m	struct:genitem_t	typeref:union:genitem_t::giu_u	access:public
genp_1stmt_do	./v_genfx.c	/^static void genp_1stmt_do(struct st_t *stp, void (*gprm_proc)(struct expr_t *))$/;"	f	file:	signature:(struct st_t *stp, void (*gprm_proc)(struct expr_t *))
genp_csitemlst_do	./v_genfx.c	/^static void genp_csitemlst_do(struct csitem_t *csip,$/;"	f	file:	signature:(struct csitem_t *csip, void (*gprm_proc)(struct expr_t *))
genp_dctrl_do	./v_genfx.c	/^static void genp_dctrl_do(struct delctrl_t *dctp, int32 stmtlst_to,$/;"	f	file:	signature:(struct delctrl_t *dctp, int32 stmtlst_to, void (*gprm_proc)(struct expr_t *))
genp_delexpr_do	./v_genfx.c	/^static void genp_delexpr_do(union del_u du, word32 drep,$/;"	f	file:	signature:(union del_u du, word32 drep, void (*gprm_proc)(struct expr_t *))
genp_dellst_do	./v_genfx.c	/^static void genp_dellst_do(struct paramlst_t *plp,$/;"	f	file:	signature:(struct paramlst_t *plp, void (*gprm_proc)(struct expr_t *))
genp_expr_do	./v_genfx.c	/^static void genp_expr_do(struct expr_t *xp, void (*gprm_proc)(struct expr_t *))$/;"	f	file:	signature:(struct expr_t *xp, void (*gprm_proc)(struct expr_t *))
genp_stlst_do	./v_genfx.c	/^static void genp_stlst_do(struct st_t *stp, void (*gprm_proc)(struct expr_t *))$/;"	f	file:	signature:(struct st_t *stp, void (*gprm_proc)(struct expr_t *))
genp_xprlst_do	./v_genfx.c	/^static void genp_xprlst_do(struct exprlst_t *xplp,$/;"	f	file:	signature:(struct exprlst_t *xplp, void (*gprm_proc)(struct expr_t *))
gentab	./v.h	/^ struct genblk_t **gentab;    \/* tab for xmr indexing but if used size 1 *\/$/;"	m	struct:gen_case_t	typeref:struct:gen_case_t::genblk_t	access:public
gentab	./v.h	/^ struct genblk_t **gentab;    \/* tab for xmr indexing but if used size 1 *\/$/;"	m	struct:gen_if_t	typeref:struct:gen_if_t::genblk_t	access:public
gentab	./v.h	/^ struct genblk_t **gentab;$/;"	m	struct:gen_for_t	typeref:struct:gen_for_t::genblk_t	access:public
genv_ndx	./v.h	/^ int32 genv_ndx;               \/* for genfor need gentab index for name too *\/$/;"	m	struct:genblk_t	access:public
geom_handle	./fstapi.c	/^FILE *geom_handle;$/;"	m	struct:fstWriterContext	file:	access:public
geom_handle_nam	./fstapi.c	/^char *geom_handle_nam;$/;"	m	struct:fstWriterContext	file:	access:public
get_1net_idp_wlen	./v_prp2.c	/^static int32 get_1net_idp_wlen(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
get_1w_trk_val	./v_bbopt.c	/^static int32 get_1w_trk_val(struct insn_t *ip, struct amode_t *amp,$/;"	f	file:	signature:(struct insn_t *ip, struct amode_t *amp, struct insn_t *def_ip, word32 *valp)
get_1wrd_amtype	./v_bbgen3.c	/^static int32 get_1wrd_amtype(int32 op_ti)$/;"	f	file:	signature:(int32 op_ti)
get_acc_current_systf	./v_acc.c	/^static vpiHandle get_acc_current_systf(char *rnam)$/;"	f	file:	signature:(char *rnam)
get_acc_delmode_nam	./v_acc.c	/^static char *get_acc_delmode_nam(char *s, int32 accdmode)$/;"	f	file:	signature:(char *s, int32 accdmode)
get_acc_fulltype	./v_acc.c	/^static int32 get_acc_fulltype(vpiHandle vpiop, struct vpi_to_acc_t *accvpip)$/;"	f	file:	signature:(vpiHandle vpiop, struct vpi_to_acc_t *accvpip)
get_acc_typerec	./v_acc.c	/^static struct vpi_to_acc_t *get_acc_typerec(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
get_accnam	./v_acc.c	/^static char *get_accnam(int32 accnum)$/;"	f	file:	signature:(int32 accnum)
get_accum_init_stren	./v_bbgen2.c	/^static int32 get_accum_init_stren(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
get_amode_wdisp	./v_bbopt.c	/^static int32 get_amode_wdisp(int32 *tn_idp_base, struct insn_t *ip,$/;"	f	file:	signature:(int32 *tn_idp_base, struct insn_t *ip, struct amode_t *amp, struct tn_t *tnp)
get_arrwrd_val	./v_vpi3.c	/^static void get_arrwrd_val(struct h_t *hp, p_vpi_value value_p)  $/;"	f	file:	signature:(struct h_t *hp, p_vpi_value value_p)
get_asl_wide_trk_val	./v_bbopt.c	/^static int32 get_asl_wide_trk_val(struct insn_t *ip, struct amode_t *amp,$/;"	f	file:	signature:(struct insn_t *ip, struct amode_t *amp, int32 argwlen, struct insn_t **def_ip_vec, int32 *trk_state_vec, word32 *valp)
get_bidchan_val	./v_trch.c	/^static int32 get_bidchan_val(struct chanrec_t *chanp, struct net_t *np,$/;"	f	file:	signature:(struct chanrec_t *chanp, struct net_t *np, int32 bi)
get_bidport_fr_nam	./v_sdf.c	/^static struct mod_pin_t *get_bidport_fr_nam(struct mod_t *mdp, char *pnam)$/;"	f	file:	signature:(struct mod_t *mdp, char *pnam)
get_bofs_	./cvmacros.h	444;"	d
get_bofs_	./cvmacros.h	450;"	d
get_casxpr_minmax	./v_bbgen.c	/^static void get_casxpr_minmax(struct icasx_t *icasxtab, word32 *cmax,$/;"	f	file:	signature:(struct icasx_t *icasxtab, word32 *cmax, word32 *cmin)
get_cfgconst_nam	./v_acc.c	/^static char *get_cfgconst_nam(char *s, int32 cfg_connum)$/;"	f	file:	signature:(char *s, int32 cfg_connum)
get_cfgkeywrd	./v_ms.c	/^static int32 get_cfgkeywrd(char *tstr)$/;"	f	file:	signature:(char *tstr)
get_cmdcomment	./v_ms.c	/^static int32 get_cmdcomment(FILE *f)$/;"	f	file:	signature:(FILE *f)
get_cond	./v_vpi.c	/^static vpiHandle get_cond(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
get_const_del	./v_asmlnk.c	/^static int32 get_const_del(union del_u du, int32 drep,  word64 *gdel,$/;"	f	file:	signature:(union del_u du, int32 drep, word64 *gdel, int32 inum)
get_contained_stmt	./v_vpi.c	/^static vpiHandle get_contained_stmt(struct h_t *rhp)$/;"	f	file:	signature:(struct h_t *rhp)
get_contained_udp_init	./v_vpi.c	/^static vpiHandle get_contained_udp_init(struct h_t *rhp)$/;"	f	file:	signature:(struct h_t *rhp)
get_cursystfcall	./v_vpi.c	/^static vpiHandle get_cursystfcall(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
get_dce_edgeval	./v_cnv.c	/^static word32 get_dce_edgeval(struct mod_t *mdp, struct dcevnt_t *dcep)$/;"	f	file:	signature:(struct mod_t *mdp, struct dcevnt_t *dcep)
get_dctrl_stmt	./v_vpi.c	/^static vpiHandle get_dctrl_stmt(struct h_t *rhp, int32 dctype)$/;"	f	file:	signature:(struct h_t *rhp, int32 dctype)
get_decxz	./v_cnv.c	/^static char get_decxz(word32 *ap, word32 *bp, int32 blen)$/;"	f	file:	signature:(word32 *ap, word32 *bp, int32 blen)
get_disable_scope	./v_vpi.c	/^static vpiHandle get_disable_scope(struct h_t *rhp)$/;"	f	file:	signature:(struct h_t *rhp)
get_dpi_arg	./v_dpi.c	/^static struct xstk_t *get_dpi_arg(int32 argi, struct dpiarg_t *dap,$/;"	f	file:	signature:(int32 argi, struct dpiarg_t *dap, union adpi_u *a_u_tab, int32 argwid)
get_expr_val	./v_vpi3.c	/^static void get_expr_val(struct h_t *hp, p_vpi_value value_p)  $/;"	f	file:	signature:(struct h_t *hp, p_vpi_value value_p)
get_fixed_fg_call_nam	./v_asmlnk.c	/^static char *get_fixed_fg_call_nam(char *s, int32 type)$/;"	f	file:	signature:(char *s, int32 type)
get_fixed_idp_map_str	./v_asmlnk.c	/^static char *get_fixed_idp_map_str(char *s, struct mod_t *mdp, int32 ndx)$/;"	f	file:	signature:(char *s, struct mod_t *mdp, int32 ndx)
get_free_callee_save_reg	./v_asmlnk.c	/^static int32 get_free_callee_save_reg(int32 *used_regs)$/;"	f	file:	signature:(int32 *used_regs)
get_gate_drv_valuep	./v_vpi3.c	/^static void get_gate_drv_valuep(struct h_t *hp, p_vpi_value value_p,$/;"	f	file:	signature:(struct h_t *hp, p_vpi_value value_p, struct gate_t *gp)
get_hash	./v_src2.c	/^static word32 get_hash(word32 *ap, word32 *bp, int32 wlen)$/;"	f	file:	signature:(word32 *ap, word32 *bp, int32 wlen)
get_iahcmdnum	./v_dbg.c	/^static int32 get_iahcmdnum(void)$/;"	f	file:	signature:(void)
get_ibrk_linref	./v_dbg2.c	/^static int32 get_ibrk_linref(t_midat *in_idp, struct task_t *tskp,$/;"	f	file:	signature:(t_midat *in_idp, struct task_t *tskp, int32 *ifi, int32 *lini)
get_idp_map_str	./v_asmlnk.c	/^static char *get_idp_map_str(char *s, struct mod_t *mdp, size_t ndx)$/;"	f	file:	signature:(char *s, struct mod_t *mdp, size_t ndx)
get_impth_del	./v_ex3.c	/^static void get_impth_del(word64 *pschtim, struct net_t *np, int32 bi,$/;"	f	file:	signature:(word64 *pschtim, struct net_t *np, int32 bi, struct mipd_t *mipdp)
get_indexed_psel_range	./v_bbgen.c	/^static int32 get_indexed_psel_range(int32 *r1_ti, int32 *r2_ti, word32 *ri2, $/;"	f	file:	signature:(int32 *r1_ti, int32 *r2_ti, word32 *ri2, int32 rval_ti, struct expr_t *ndp, struct net_t *np, struct bblk_t *done_bbp, int32 ri1_ti)
get_inmod_itp	./v_vpi.c	/^static vpiHandle get_inmod_itp(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
get_inport_fr_nam	./v_sdf.c	/^static struct mod_pin_t *get_inport_fr_nam(struct mod_t *mdp, char *pnam)$/;"	f	file:	signature:(struct mod_t *mdp, char *pnam)
get_insn_res_wdisp	./v_bbopt.c	/^static int32 get_insn_res_wdisp(struct insn_t *ip)$/;"	f	file:	signature:(struct insn_t *ip)
get_inst_mod_	./cvmacros.h	173;"	d
get_inum_	./cvmacros.h	175;"	d
get_is_param_ndx	./v_fx3.c	/^static int32 get_is_param_ndx(struct net_t *np, struct expr_t *ndx, int32 ii)$/;"	f	file:	signature:(struct net_t *np, struct expr_t *ndx, int32 ii)
get_ispack	./v_del.c	/^static int32 get_ispack(word64 tim)$/;"	f	file:	signature:(word64 tim)
get_itp_	./cvmacros.h	177;"	d
get_jmp_cmpl_cc_result	./v_bbopt.c	/^static int32 get_jmp_cmpl_cc_result(int32 cc, int32 op1val, int32 op2val)$/;"	f	file:	signature:(int32 cc, int32 op1val, int32 op2val)
get_lastfillin	./v_dbg2.c	/^static int32 get_lastfillin(int32 ifi)$/;"	f	file:	signature:(int32 ifi)
get_low_wire_array_net	./v_prp2.c	/^static struct net_t *get_low_wire_array_net(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, struct mod_t *mdp)
get_merged_dctp_ctev	./v_bbgen.c	/^static struct ctev_t *get_merged_dctp_ctev(struct delctrl_t *dctp)$/;"	f	file:	signature:(struct delctrl_t *dctp)
get_middle_linrng	./v_dbg2.c	/^static void get_middle_linrng(int32 mid, int32 *rng1, int32 *rng2)$/;"	f	file:	signature:(int32 mid, int32 *rng1, int32 *rng2)
get_net_toggle_blen	./v_cvr.c	/^static int32 get_net_toggle_blen(struct mod_t *mdp, struct net_t *np)$/;"	f	file:	signature:(struct mod_t *mdp, struct net_t *np)
get_new_xprop_assign	./v_xprop.c	/^struct st_t *get_new_xprop_assign(struct st_t *stp, struct net_t *np)$/;"	f	signature:(struct st_t *stp, struct net_t *np)
get_nonis_param_ndx	./v_fx3.c	/^static int32 get_nonis_param_ndx(struct net_t *np, struct expr_t *ndx)$/;"	f	file:	signature:(struct net_t *np, struct expr_t *ndx)
get_npp_const_id_rng	./v_cvr.c	/^static void get_npp_const_id_rng(struct net_pin_t *npp,$/;"	f	file:	signature:(struct net_pin_t *npp, struct itree_t *lhs_itp, int32 *i1, int32 *i2, int32 *catrhsi1, int32 *catrhsi2)
get_obj_index	./v_vpi.c	/^static vpiHandle get_obj_index(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
get_obj_parent	./v_vpi.c	/^static vpiHandle get_obj_parent(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
get_obj_range	./v_vpi.c	/^static vpiHandle get_obj_range(struct h_t *hp, int32 lrtyp)$/;"	f	file:	signature:(struct h_t *hp, int32 lrtyp)
get_obj_scope	./v_vpi.c	/^static vpiHandle get_obj_scope(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
get_obj_side	./v_vpi.c	/^static vpiHandle get_obj_side(struct h_t *rhp, int32 type)$/;"	f	file:	signature:(struct h_t *rhp, int32 type)
get_opt_starg	./v_ex.c	/^static int32 get_opt_starg(struct expr_t *xp, int32 dflt_val)$/;"	f	file:	signature:(struct expr_t *xp, int32 dflt_val)
get_optcfg_down_itp	./v_src3.c	/^static struct itree_t *get_optcfg_down_itp(struct expr_t *glbndp,$/;"	f	file:	signature:(struct expr_t *glbndp, struct sy_t **tailsyp, char *errmsg)
get_outport_fr_nam	./v_sdf.c	/^static struct mod_pin_t *get_outport_fr_nam(struct mod_t *mdp, char *pnam)$/;"	f	file:	signature:(struct mod_t *mdp, char *pnam)
get_ovrsign	./v_cnv.c	/^static int32 get_ovrsign(struct net_t *np, char ovride)$/;"	f	file:	signature:(struct net_t *np, char ovride)
get_packintowrd_	./cvmacros.h	419;"	d
get_param_constyp	./v_vpi2.c	/^static int32 get_param_constyp(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
get_peri_packintowrd_	./cvmacros.h	423;"	d
get_possible_signedness_str	./v_cnv.c	/^static char *get_possible_signedness_str(char *s, struct net_t *np)$/;"	f	file:	signature:(char *s, struct net_t *np)
get_primterm_val	./v_vpi3.c	/^static void get_primterm_val(struct h_t *hp, p_vpi_value value_p)  $/;"	f	file:	signature:(struct h_t *hp, p_vpi_value value_p)
get_pthbitwidths	./v_prp2.c	/^static void get_pthbitwidths(struct spcpth_t *pthp, int32 *pinwid,$/;"	f	file:	signature:(struct spcpth_t *pthp, int32 *pinwid, int32 *poutwid)
get_real_case_sel_genblk	./v_genfx.c	/^static struct genblk_t *get_real_case_sel_genblk(struct genitem_t *gip,$/;"	f	file:	signature:(struct genitem_t *gip, struct gen_csitem_t *dflt_gcsip)
get_real_ld	./v_bbgen3.c	/^static int32 get_real_ld(int32 real_argno) $/;"	f	file:	signature:(int32 real_argno)
get_rhs_del_storage_wlen	./v_prp2.c	/^static int32 get_rhs_del_storage_wlen(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
get_sdfcntxtnam	./v_sdf.c	/^static char *get_sdfcntxtnam(char *cntxtnam, struct itree_t *cntxt_itp)$/;"	f	file:	signature:(char *cntxtnam, struct itree_t *cntxt_itp)
get_sdfdownrel_itp	./v_sdf.c	/^static struct itree_t *get_sdfdownrel_itp(struct expr_t *glbndp,$/;"	f	file:	signature:(struct expr_t *glbndp, struct itree_t *cntxt_itp, struct sy_t **tailsyp, char *errmsg)
get_sdfinam	./v_sdf.c	/^static char *get_sdfinam(char *s, struct itree_t *itp, struct mod_t *ctmdp)$/;"	f	file:	signature:(char *s, struct itree_t *itp, struct mod_t *ctmdp)
get_sdfkeywrd	./v_sdf.c	/^static int32 get_sdfkeywrd(char *tstr)$/;"	f	file:	signature:(char *tstr)
get_sdftok	./v_sdf.c	/^static void get_sdftok(FILE *f)$/;"	f	file:	signature:(FILE *f)
get_set_insn_from_cc	./v_bbgen3.c	/^static int32 get_set_insn_from_cc(int32 jmptyp, int32 sgn_jmp)$/;"	f	file:	signature:(int32 jmptyp, int32 sgn_jmp)
get_skeynam	./v_sdf.c	/^static char *get_skeynam(char *s, int32 knum)$/;"	f	file:	signature:(char *s, int32 knum)
get_spill_wrd_ofs	./v_regasn.c	/^static int32 get_spill_wrd_ofs(struct flowg_t *fgp, int32 spill_wlen) $/;"	f	file:	signature:(struct flowg_t *fgp, int32 spill_wlen)
get_switch_tranif_onoff	./v_trch.c	/^static int32 get_switch_tranif_onoff(struct gate_t *gp, int32 gid)$/;"	f	file:	signature:(struct gate_t *gp, int32 gid)
get_systf_acc_expr_val	./v_acc.c	/^static int32 get_systf_acc_expr_val(int32 n, struct expr_t *argxp,$/;"	f	file:	signature:(int32 n, struct expr_t *argxp, s_vpi_value *valp, struct h_t *shp, char *rnam)
get_systf_accargobj	./v_acc.c	/^static handle get_systf_accargobj(struct h_t *shp, int32 n,$/;"	f	file:	signature:(struct h_t *shp, int32 n, struct expr_t *argxp, char *rnam)
get_tchk_term	./v_vpi.c	/^static vpiHandle get_tchk_term(word32 termtyp, struct h_t *hp)$/;"	f	file:	signature:(word32 termtyp, struct h_t *hp)
get_tgl_val	./v_cvr.c	/^static int32 get_tgl_val(char *st_chp, char *end_chp, int32 *ival,$/;"	f	file:	signature:(char *st_chp, char *end_chp, int32 *ival, char *errstr)
get_time_hash_	./cvmacros.h	209;"	d
get_toggle_count	./v_cvr.c	/^static int32 get_toggle_count(struct mod_t *mdp, struct net_t *np,$/;"	f	file:	signature:(struct mod_t *mdp, struct net_t *np, word32 *seenp, int32 *hits)
get_tracked_con	./v_bbopt.c	/^static word32 *get_tracked_con(int32 tni, word32 *wrdwrkp)$/;"	f	file:	signature:(int32 tni, word32 *wrdwrkp)
get_tran_id	./v_bbgen2.c	/^static int32 get_tran_id(struct traux_t *trap, int32 nwid, int32 bi)$/;"	f	file:	signature:(struct traux_t *trap, int32 nwid, int32 bi)
get_tranif_onoff_	./cvmacros.h	458;"	d
get_udpdef_from_inobj	./v_vpi.c	/^static vpiHandle get_udpdef_from_inobj(struct h_t *rhp)$/;"	f	file:	signature:(struct h_t *rhp)
get_up_poundparam_expr	./v_vpi.c	/^static vpiHandle get_up_poundparam_expr(struct h_t *rhp)$/;"	f	file:	signature:(struct h_t *rhp)
get_var_bit	./v_vpi3.c	/^static void get_var_bit(struct h_t *hp, p_vpi_value value_p)$/;"	f	file:	signature:(struct h_t *hp, p_vpi_value value_p)
get_var_scope	./v_dbg2.c	/^static int32 get_var_scope(t_midat **in_idp, struct task_t **tskpp,$/;"	f	file:	signature:(t_midat **in_idp, struct task_t **tskpp, int32 *iref)
get_varorparam_val	./v_vpi3.c	/^static void get_varorparam_val(struct h_t *hp, p_vpi_value value_p)$/;"	f	file:	signature:(struct h_t *hp, p_vpi_value value_p)
get_ver_side_svtyp	./v_dpi.c	/^static int32 get_ver_side_svtyp(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
get_vkeywrd	./v_ms.c	/^static int32 get_vkeywrd(char *tstr)$/;"	f	file:	signature:(char *tstr)
get_vpi_attrval	./v_vpi3.c	/^static void get_vpi_attrval(struct h_t *hp, p_vpi_value value_p)$/;"	f	file:	signature:(struct h_t *hp, p_vpi_value value_p)
get_vpi_const_typ	./v_vpi2.c	/^static int32 get_vpi_const_typ(struct expr_t *xp)$/;"	f	file:	signature:(struct expr_t *xp)
get_vpi_netbitdrv_val	./v_vpi3.c	/^static void get_vpi_netbitdrv_val(struct h_t *hp, p_vpi_value value_p)$/;"	f	file:	signature:(struct h_t *hp, p_vpi_value value_p)
get_vpi_netdrv_val	./v_vpi3.c	/^static void get_vpi_netdrv_val(struct h_t *hp, p_vpi_value value_p)$/;"	f	file:	signature:(struct h_t *hp, p_vpi_value value_p)
get_vpibit_index	./v_vpi3.c	/^static int32 get_vpibit_index(struct net_t **pnp, struct h_t *hp)$/;"	f	file:	signature:(struct net_t **pnp, struct h_t *hp)
get_vpiconta_drv_valuep	./v_vpi3.c	/^static void get_vpiconta_drv_valuep(struct h_t *hp, p_vpi_value value_p,$/;"	f	file:	signature:(struct h_t *hp, p_vpi_value value_p, struct conta_t *cap)
get_vpiport_drv_valuep	./v_vpi3.c	/^static void get_vpiport_drv_valuep(struct h_t *hp, p_vpi_value value_p,$/;"	f	file:	signature:(struct h_t *hp, p_vpi_value value_p, struct mod_pin_t *mpp)
get_vpiportbit_drv_valuep	./v_vpi3.c	/^static void get_vpiportbit_drv_valuep(struct h_t *hp, p_vpi_value value_p,$/;"	f	file:	signature:(struct h_t *hp, p_vpi_value value_p, struct mod_pin_t *mpp, int32 bi)
get_vpisfcall_retval	./v_vpi3.c	/^static void get_vpisfcall_retval(struct h_t *hp, p_vpi_value value_p)$/;"	f	file:	signature:(struct h_t *hp, p_vpi_value value_p)
get_vpitabentry_val	./v_vpi3.c	/^static void get_vpitabentry_val(struct h_t *hp, p_vpi_value value_p)$/;"	f	file:	signature:(struct h_t *hp, p_vpi_value value_p)
get_vpiudpdefn_val	./v_vpi3.c	/^static void get_vpiudpdefn_val(struct h_t *hp, p_vpi_value value_p)$/;"	f	file:	signature:(struct h_t *hp, p_vpi_value value_p)
get_wirarr_split_wir	./v_fx3.c	/^static int32 get_wirarr_split_wir(char *s, char *s1, struct expr_t *ndp)$/;"	f	file:	signature:(char *s, char *s1, struct expr_t *ndp)
get_wofs_	./cvmacros.h	443;"	d
get_wofs_	./cvmacros.h	449;"	d
get_xldl_vtx	./v_trch.c	/^static int32 get_xldl_vtx(struct itree_t *itp, struct net_t *np, int32 bi,$/;"	f	file:	signature:(struct itree_t *itp, struct net_t *np, int32 bi, int32 *ix_insert)
get_xzcas_maxwid	./v_bbgen.c	/^static int32 get_xzcas_maxwid(struct icasx_t *icasxtab)$/;"	f	file:	signature:(struct icasx_t *icasxtab)
getbit_fifo	./v_prp.c	/^static void getbit_fifo(struct net_t *np, int32 bi, int32 *nfi, int32 *nfo)$/;"	f	file:	signature:(struct net_t *np, int32 bi, int32 *nfi, int32 *nfo)
getbit_highconn	./v_vpi.c	/^static vpiHandle getbit_highconn(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
getbit_lowconn	./v_vpi.c	/^static vpiHandle getbit_lowconn(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
getexpr_highconn	./v_vpi.c	/^static vpiHandle getexpr_highconn(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
getexpr_lowconn	./v_vpi.c	/^static vpiHandle getexpr_lowconn(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
getpat_lhs_figt1	./v_prp2.c	/^static void getpat_lhs_figt1(struct mod_t *mdp, struct expr_t *lhsx,$/;"	f	file:	signature:(struct mod_t *mdp, struct expr_t *lhsx, struct conta_t *cap)
getpatlhs	./v.h	/^ unsigned getpatlhs : 1;      \/* T => expressions is lhs of get pattern *\/$/;"	m	struct:expr_t	access:public
getsrch_portnam	./v_sdf.c	/^static int32 getsrch_portnam(struct mod_t *mdp, char *nam)$/;"	f	file:	signature:(struct mod_t *mdp, char *nam)
getv2_itp	./v_trch.c	/^static void getv2_itp(struct edge_t *ep, struct itree_t *vitp, $/;"	f	file:	signature:(struct edge_t *ep, struct itree_t *vitp, struct itree_t **eitp, struct itree_t **v2itp)
gev_acc	./v.h	/^ unsigned gev_acc : 1;        \/* accelerated gate value assign *\/$/;"	m	struct:tev_t	access:public
gforassgn	./v.h	/^ struct st_t *gforassgn;$/;"	m	struct:gen_for_t	typeref:struct:gen_for_t::st_t	access:public
gforinc	./v.h	/^ struct st_t *gforinc;$/;"	m	struct:gen_for_t	typeref:struct:gen_for_t::st_t	access:public
gfortermx	./v.h	/^ struct expr_t *gfortermx;$/;"	m	struct:gen_for_t	typeref:struct:gen_for_t::expr_t	access:public
gi_cap	./v.h	/^ struct conta_t *gi_cap;$/;"	m	union:giu_u	typeref:struct:giu_u::conta_t	access:public
gi_cp	./v.h	/^ struct cell_t *gi_cp;        \/* src read time inst\/gate gen item *\/$/;"	m	union:giu_u	typeref:struct:giu_u::cell_t	access:public
gi_dfp	./v.h	/^ struct dfparam_t *gi_dfp;   \/* union for dfparm decl in gen blk *\/$/;"	m	union:giu_u	typeref:struct:giu_u::dfparam_t	access:public
gi_fnam_ind	./v.h	/^ unsigned gi_fnam_ind : 16;$/;"	m	struct:genitem_t	access:public
gi_gblkp	./v.h	/^ struct genblk_t *gi_gblkp;   \/* for gen form blks list of gen forms *\/$/;"	m	union:giu_u	typeref:struct:giu_u::genblk_t	access:public
gi_gcasp	./v.h	/^ struct gen_case_t *gi_gcasp; \/* gen specific elab time case form *\/$/;"	m	union:giu_u	typeref:struct:giu_u::gen_case_t	access:public
gi_gforp	./v.h	/^ struct gen_for_t *gi_gforp;  \/* gen specific elab time for loop *\/$/;"	m	union:giu_u	typeref:struct:giu_u::gen_for_t	access:public
gi_gifp	./v.h	/^ struct gen_if_t *gi_gifp;    \/* gen specific elab time if form *\/$/;"	m	union:giu_u	typeref:struct:giu_u::gen_if_t	access:public
gi_gp	./v.h	/^ struct gate_t *gi_gp;        \/* gen elab time gate *\/    $/;"	m	union:giu_u	typeref:struct:giu_u::gate_t	access:public
gi_grp	./v.h	/^ struct gref_t *gi_grp;       \/* XMRs used in gen blks are mved gen items *\/$/;"	m	union:giu_u	typeref:struct:giu_u::gref_t	access:public
gi_ialp	./v.h	/^ struct ialst_t *gi_ialp;$/;"	m	union:giu_u	typeref:struct:giu_u::ialst_t	access:public
gi_igp	./v.h	/^ struct inst_gen_t *gi_igp;   \/* fixup time inst struct *\/$/;"	m	union:giu_u	typeref:struct:giu_u::inst_gen_t	access:public
gi_nam	./v.h	/^ char *gi_nam;                \/* in gen blk in src name of item *\/$/;"	m	struct:genitem_t	access:public
gi_ndxexpr_chk	./v_genfx.c	/^static int32 gi_ndxexpr_chk(struct expr_t *xp, int32 lfnind, int32 lcnt,$/;"	f	file:	signature:(struct expr_t *xp, int32 lfnind, int32 lcnt, char *emsg)
gi_ndxval_chk	./v_genfx.c	/^static int32 gi_ndxval_chk(struct xstk_t *xsp, int32 lfnind, int32 lcnt, char *emsg)$/;"	f	file:	signature:(struct xstk_t *xsp, int32 lfnind, int32 lcnt, char *emsg)
gi_np	./v.h	/^ struct net_t *gi_np;$/;"	m	union:giu_u	typeref:struct:giu_u::net_t	access:public
gi_tskp	./v.h	/^ struct task_t *gi_tskp;      \/* for task and func gen mod items *\/$/;"	m	union:giu_u	typeref:struct:giu_u::task_t	access:public
gia1	./v.h	/^ int32 gia1, gia2;            \/* evaluated range - expr may chg *\/$/;"	m	struct:gia_aux_t	access:public
gia2	./v.h	/^ int32 gia1, gia2;            \/* evaluated range - expr may chg *\/$/;"	m	struct:gia_aux_t	access:public
gia_aux_t	./v.h	/^struct gia_aux_t {$/;"	s
gia_aux_t::gia1	./v.h	/^ int32 gia1, gia2;            \/* evaluated range - expr may chg *\/$/;"	m	struct:gia_aux_t	access:public
gia_aux_t::gia2	./v.h	/^ int32 gia1, gia2;            \/* evaluated range - expr may chg *\/$/;"	m	struct:gia_aux_t	access:public
gia_aux_t::gia_base_syp	./v.h	/^ struct sy_t *gia_base_syp;   \/* original src base sym (stays in symtab) *\/$/;"	m	struct:gia_aux_t	typeref:struct:gia_aux_t::sy_t	access:public
gia_aux_t::gia_bi	./v.h	/^ int32 gia_bi;                \/* base mgates or minsts index *\/$/;"	m	struct:gia_aux_t	access:public
gia_aux_t::gia_is_base_first	./v.h	/^ unsigned gia_is_base_first : 1; \/* first one in array order *\/$/;"	m	struct:gia_aux_t	access:public
gia_aux_t::gia_rng_has_pnd	./v.h	/^ unsigned gia_rng_has_pnd : 1;\/* T => range has passed pound param *\/$/;"	m	struct:gia_aux_t	access:public
gia_aux_t::gia_xpnd	./v.h	/^ unsigned gia_xpnd : 1;       \/* T => inst\/gate arr xpnded to per bit *\/$/;"	m	struct:gia_aux_t	access:public
gia_aux_t::giapins_ptr	./v.h	/^ struct expr_t **giapins_ptr; \/* ptr to tab of original g\/i pin expressions *\/$/;"	m	struct:gia_aux_t	typeref:struct:gia_aux_t::expr_t	access:public
gia_aux_t::giax1	./v.h	/^ struct expr_t *giax1, *giax2;\/* src constant rng exprs from cell *\/$/;"	m	struct:gia_aux_t	typeref:struct:gia_aux_t::expr_t	access:public
gia_aux_t::giax2	./v.h	/^ struct expr_t *giax1, *giax2;\/* src constant rng exprs from cell *\/$/;"	m	struct:gia_aux_t	typeref:struct:gia_aux_t::	access:public
gia_base_syp	./v.h	/^ struct sy_t *gia_base_syp;   \/* original src base sym (stays in symtab) *\/$/;"	m	struct:gia_aux_t	typeref:struct:gia_aux_t::sy_t	access:public
gia_bi	./v.h	/^ int32 gia_bi;                \/* base mgates or minsts index *\/$/;"	m	struct:gia_aux_t	access:public
gia_is_base_first	./v.h	/^ unsigned gia_is_base_first : 1; \/* first one in array order *\/$/;"	m	struct:gia_aux_t	access:public
gia_rng_has_pnd	./v.h	/^ unsigned gia_rng_has_pnd : 1;\/* T => range has passed pound param *\/$/;"	m	struct:gia_aux_t	access:public
gia_xpnd	./v.h	/^ unsigned gia_xpnd : 1;       \/* T => inst\/gate arr xpnded to per bit *\/$/;"	m	struct:gia_aux_t	access:public
giapins_ptr	./v.h	/^ struct expr_t **giapins_ptr; \/* ptr to tab of original g\/i pin expressions *\/$/;"	m	struct:gia_aux_t	typeref:struct:gia_aux_t::expr_t	access:public
giax1	./v.h	/^ struct expr_t *giax1, *giax2;\/* src constant rng exprs from cell *\/$/;"	m	struct:gia_aux_t	typeref:struct:gia_aux_t::expr_t	access:public
giax2	./v.h	/^ struct expr_t *giax1, *giax2;\/* src constant rng exprs from cell *\/$/;"	m	struct:gia_aux_t	typeref:struct:gia_aux_t::	access:public
gilin_cnt	./v.h	/^ int32 gilin_cnt;$/;"	m	struct:genitem_t	access:public
gin_mdp	./v.h	/^ struct mod_t *gin_mdp;       \/* place where gref used, for netchg prop. *\/$/;"	m	struct:gref_t	typeref:struct:gref_t::mod_t	access:public
gitems	./v.h	/^ struct genitem_t *gitems;     \/* normal gen items from LRM *\/$/;"	m	struct:genblk_t	typeref:struct:genblk_t::genitem_t	access:public
gityp	./v.h	/^ unsigned gityp : 8; $/;"	m	struct:genitem_t	access:public
giu	./v.h	/^ union giu_u giu;             \/* in src form, ptr to gen item *\/$/;"	m	struct:genitem_t	typeref:union:genitem_t::giu_u	access:public
giu_u	./v.h	/^union giu_u {$/;"	u
giu_u::gi_cap	./v.h	/^ struct conta_t *gi_cap;$/;"	m	union:giu_u	typeref:struct:giu_u::conta_t	access:public
giu_u::gi_cp	./v.h	/^ struct cell_t *gi_cp;        \/* src read time inst\/gate gen item *\/$/;"	m	union:giu_u	typeref:struct:giu_u::cell_t	access:public
giu_u::gi_dfp	./v.h	/^ struct dfparam_t *gi_dfp;   \/* union for dfparm decl in gen blk *\/$/;"	m	union:giu_u	typeref:struct:giu_u::dfparam_t	access:public
giu_u::gi_gblkp	./v.h	/^ struct genblk_t *gi_gblkp;   \/* for gen form blks list of gen forms *\/$/;"	m	union:giu_u	typeref:struct:giu_u::genblk_t	access:public
giu_u::gi_gcasp	./v.h	/^ struct gen_case_t *gi_gcasp; \/* gen specific elab time case form *\/$/;"	m	union:giu_u	typeref:struct:giu_u::gen_case_t	access:public
giu_u::gi_gforp	./v.h	/^ struct gen_for_t *gi_gforp;  \/* gen specific elab time for loop *\/$/;"	m	union:giu_u	typeref:struct:giu_u::gen_for_t	access:public
giu_u::gi_gifp	./v.h	/^ struct gen_if_t *gi_gifp;    \/* gen specific elab time if form *\/$/;"	m	union:giu_u	typeref:struct:giu_u::gen_if_t	access:public
giu_u::gi_gp	./v.h	/^ struct gate_t *gi_gp;        \/* gen elab time gate *\/    $/;"	m	union:giu_u	typeref:struct:giu_u::gate_t	access:public
giu_u::gi_grp	./v.h	/^ struct gref_t *gi_grp;       \/* XMRs used in gen blks are mved gen items *\/$/;"	m	union:giu_u	typeref:struct:giu_u::gref_t	access:public
giu_u::gi_ialp	./v.h	/^ struct ialst_t *gi_ialp;$/;"	m	union:giu_u	typeref:struct:giu_u::ialst_t	access:public
giu_u::gi_igp	./v.h	/^ struct inst_gen_t *gi_igp;   \/* fixup time inst struct *\/$/;"	m	union:giu_u	typeref:struct:giu_u::inst_gen_t	access:public
giu_u::gi_np	./v.h	/^ struct net_t *gi_np;$/;"	m	union:giu_u	typeref:struct:giu_u::net_t	access:public
giu_u::gi_tskp	./v.h	/^ struct task_t *gi_tskp;      \/* for task and func gen mod items *\/$/;"	m	union:giu_u	typeref:struct:giu_u::task_t	access:public
glbncmp_t	./v.h	/^struct glbncmp_t {$/;"	s
glbncmp_t::gncmp	./v.h	/^ char *gncmp;$/;"	m	struct:glbncmp_t	access:public
glbncmp_t::gncsiz	./v.h	/^ int32 gncsiz;                \/* size of largest alloc component (reused) *\/$/;"	m	struct:glbncmp_t	access:public
glbref	./v.h	/^ struct expr_t *glbref;       \/* original gref expr for inst. array eval. *\/$/;"	m	struct:gref_t	typeref:struct:gref_t::expr_t	access:public
gmsym	./v.h	/^ struct sy_t *gmsym;          \/* gate type symbol *\/$/;"	m	struct:gate_t	typeref:struct:gate_t::sy_t	access:public
gnam	./v.h	/^ char *gnam;                  \/* name *\/$/;"	m	struct:gref_t	access:public
gncmp	./v.h	/^ char *gncmp;$/;"	m	struct:glbncmp_t	access:public
gncsiz	./v.h	/^ int32 gncsiz;                \/* size of largest alloc component (reused) *\/$/;"	m	struct:glbncmp_t	access:public
gnsym	./v.h	/^ struct sy_t *gnsym;$/;"	m	struct:primtab_t	typeref:struct:primtab_t::sy_t	access:public
good_value_p	./v_vpi3.c	/^static int32 good_value_p(p_vpi_value value_p)$/;"	f	file:	signature:(p_vpi_value value_p)
gpins	./v.h	/^ struct expr_t **gpins;       \/* ptr to table of input port expr ptrs *\/$/;"	m	struct:gate_t	typeref:struct:gate_t::expr_t	access:public
gpnum	./v.h	/^ unsigned gpnum : 14;         \/* number of gate ports (limit 16k) *\/$/;"	m	struct:gate_t	access:public
gr_defparam	./v.h	/^ unsigned gr_defparam : 1;    \/* T => allow parameter as net tail *\/$/;"	m	struct:gref_t	access:public
gr_err	./v.h	/^ unsigned gr_err : 1;         \/* T => global is incorrect *\/$/;"	m	struct:gref_t	access:public
gr_gblk_in	./v.h	/^ struct genblk_t *gr_gblk_in; \/* for xmr gen blk in, smallest containing *\/$/;"	m	struct:gref_t	typeref:struct:gref_t::genblk_t	access:public
gr_gone	./v.h	/^ unsigned gr_gone : 1;        \/* T => for defparam processing - now gone *\/$/;"	m	struct:gref_t	access:public
gr_has_genitem	./v.h	/^ unsigned gr_has_genitem : 1; \/* T => has a gen item in xmr cmp path *\/$/;"	m	struct:gref_t	access:public
gr_inst_ok	./v.h	/^ unsigned gr_inst_ok : 1;     \/* T => can be inst flg for chk, set in src 2 *\/$/;"	m	struct:gref_t	access:public
gr_num_xmps	./v.h	/^ int32 gr_num_xmps;           \/* XMR hierarchical path len *\/$/;"	m	struct:gref_t	access:public
gr_xmptab	./v.h	/^ struct xmrcmp_t **gr_xmptab; \/* for hierchical name resolving, wrk d.s *\/$/;"	m	struct:gref_t	typeref:struct:gref_t::xmrcmp_t	access:public
grcmps	./v.h	/^ struct sy_t **grcmps;        \/* table of path symbols (prep fixes ia sels) *\/$/;"	m	struct:gref_t	typeref:struct:gref_t::sy_t	access:public
gref_gitems	./v.h	/^ struct genitem_t *gref_gitems;\/* gref globals used in gen block *\/$/;"	m	struct:genblk_t	typeref:struct:genblk_t::genitem_t	access:public
gref_has_giarr_ndxes	./v_genfx.c	/^static int32 gref_has_giarr_ndxes(struct gref_t *grp)$/;"	f	file:	signature:(struct gref_t *grp)
gref_t	./v.h	/^struct gref_t {$/;"	s
gref_t::gin_mdp	./v.h	/^ struct mod_t *gin_mdp;       \/* place where gref used, for netchg prop. *\/$/;"	m	struct:gref_t	typeref:struct:gref_t::mod_t	access:public
gref_t::glbref	./v.h	/^ struct expr_t *glbref;       \/* original gref expr for inst. array eval. *\/$/;"	m	struct:gref_t	typeref:struct:gref_t::expr_t	access:public
gref_t::gnam	./v.h	/^ char *gnam;                  \/* name *\/$/;"	m	struct:gref_t	access:public
gref_t::gr_defparam	./v.h	/^ unsigned gr_defparam : 1;    \/* T => allow parameter as net tail *\/$/;"	m	struct:gref_t	access:public
gref_t::gr_err	./v.h	/^ unsigned gr_err : 1;         \/* T => global is incorrect *\/$/;"	m	struct:gref_t	access:public
gref_t::gr_gblk_in	./v.h	/^ struct genblk_t *gr_gblk_in; \/* for xmr gen blk in, smallest containing *\/$/;"	m	struct:gref_t	typeref:struct:gref_t::genblk_t	access:public
gref_t::gr_gone	./v.h	/^ unsigned gr_gone : 1;        \/* T => for defparam processing - now gone *\/$/;"	m	struct:gref_t	access:public
gref_t::gr_has_genitem	./v.h	/^ unsigned gr_has_genitem : 1; \/* T => has a gen item in xmr cmp path *\/$/;"	m	struct:gref_t	access:public
gref_t::gr_inst_ok	./v.h	/^ unsigned gr_inst_ok : 1;     \/* T => can be inst flg for chk, set in src 2 *\/$/;"	m	struct:gref_t	access:public
gref_t::gr_num_xmps	./v.h	/^ int32 gr_num_xmps;           \/* XMR hierarchical path len *\/$/;"	m	struct:gref_t	access:public
gref_t::gr_xmptab	./v.h	/^ struct xmrcmp_t **gr_xmptab; \/* for hierchical name resolving, wrk d.s *\/$/;"	m	struct:gref_t	typeref:struct:gref_t::xmrcmp_t	access:public
gref_t::grcmps	./v.h	/^ struct sy_t **grcmps;        \/* table of path symbols (prep fixes ia sels) *\/$/;"	m	struct:gref_t	typeref:struct:gref_t::sy_t	access:public
gref_t::grflin_cnt	./v.h	/^ int32 grflin_cnt;            \/* line location of ref. *\/$/;"	m	struct:gref_t	access:public
gref_t::grfnam_ind	./v.h	/^ unsigned grfnam_ind : 16;    \/* file location of ref. *\/$/;"	m	struct:gref_t	access:public
gref_t::grsytp	./v.h	/^ struct symtab_t *grsytp;     \/* symtab where ref. appears *\/$/;"	m	struct:gref_t	typeref:struct:gref_t::symtab_t	access:public
gref_t::grxcmps	./v.h	/^ struct expr_t **grxcmps;     \/* table of arr of inst path symbol sel exprs *\/$/;"	m	struct:gref_t	typeref:struct:gref_t::expr_t	access:public
gref_t::gxndp	./v.h	/^ struct expr_t *gxndp;        \/* back link to expr. node containing xmr *\/$/;"	m	struct:gref_t	typeref:struct:gref_t::expr_t	access:public
gref_t::is_loaded	./v.h	/^ unsigned is_loaded : 1;      \/* T => grp is loaded *\/$/;"	m	struct:gref_t	access:public
gref_t::is_printed	./v.h	/^ unsigned is_printed : 1;     \/* T => compiled global is printed *\/$/;"	m	struct:gref_t	access:public
gref_t::is_rooted	./v.h	/^ unsigned is_rooted : 1;      \/* T => path starts at top module root *\/$/;"	m	struct:gref_t	access:public
gref_t::last_gri	./v.h	/^ int32 last_gri;              \/* last - 1 (1 before target) symbol in path *\/$/;"	m	struct:gref_t	access:public
gref_t::new_to_old_grp	./v.h	/^ struct gref_t *new_to_old_grp; \/* ptr from orig to new split of grp *\/$/;"	m	struct:gref_t	typeref:struct:gref_t::gref_t	access:public
gref_t::path_has_isel	./v.h	/^ unsigned path_has_isel : 1;  \/* T => down or root path has inst arr select *\/$/;"	m	struct:gref_t	access:public
gref_t::targmdp	./v.h	/^ struct mod_t *targmdp;       \/* module target declared in *\/$/;"	m	struct:gref_t	typeref:struct:gref_t::mod_t	access:public
gref_t::targsyp	./v.h	/^ struct sy_t *targsyp;        \/* actual end path symbol in target module *\/$/;"	m	struct:gref_t	typeref:struct:gref_t::sy_t	access:public
gref_t::targtskp	./v.h	/^ struct task_t *targtskp;     \/* if non NULL, task target declared in *\/$/;"	m	struct:gref_t	typeref:struct:gref_t::task_t	access:public
gref_t::targu	./v.h	/^ union targ_u targu;          \/* up rel. itp list or rooted 1 target itp *\/$/;"	m	struct:gref_t	typeref:union:gref_t::targ_u	access:public
gref_t::upwards_rel	./v.h	/^ unsigned upwards_rel : 1;    \/* T => up rel form path starts with mod *\/$/;"	m	struct:gref_t	access:public
grflin_cnt	./v.h	/^ int32 grflin_cnt;            \/* line location of ref. *\/$/;"	m	struct:gref_t	access:public
grfnam_ind	./v.h	/^ unsigned grfnam_ind : 16;    \/* file location of ref. *\/$/;"	m	struct:gref_t	access:public
gri	./v.h	/^ int32 gri;                   \/* for compile\/save index *\/$/;"	m	union:r_u	access:public
grow_bind_comps	./v_src3.c	/^static void grow_bind_comps(void)$/;"	f	file:	signature:(void)
grow_dce_table	./v_prp2.c	/^static void grow_dce_table(struct dce_info_t *dceip)$/;"	f	file:	signature:(struct dce_info_t *dceip)
grow_event_heap	./v_sim.c	/^static void grow_event_heap(void)$/;"	f	file:	signature:(void)
grow_exprtab	./v_src2.c	/^static void grow_exprtab(void)$/;"	f	file:	signature:(void)
grow_flowgtab	./v_bbopt.c	/^static void grow_flowgtab(void)$/;"	f	file:	signature:(void)
grow_free_nodes	./v_sim.c	/^static void grow_free_nodes(void)$/;"	f	file:	signature:(void)
grow_grtab	./v_src2.c	/^static void grow_grtab(void)$/;"	f	file:	signature:(void)
grow_iahtab	./v_dbg.c	/^static void grow_iahtab(void)$/;"	f	file:	signature:(void)
grow_jmpbasetab	./v_bbgen2.c	/^static void grow_jmpbasetab(int32 newsiz)$/;"	f	file:	signature:(int32 newsiz)
grow_prp_mstmt_ndx	./v_prp2.c	/^static void grow_prp_mstmt_ndx(void)$/;"	f	file:	signature:(void)
grow_thdjmp_tab	./v_bbgen.c	/^static void grow_thdjmp_tab(void)$/;"	f	file:	signature:(void)
grow_tntab	./v_bbgen.c	/^static void grow_tntab(void)$/;"	f	file:	signature:(void)
grow_work_array	./v_regasn.c	/^static void grow_work_array(int32 need_size)$/;"	f	file:	signature:(int32 need_size)
grp	./v.h	/^ struct gref_t *grp;          \/* during compile\/exec - ptr to gref *\/$/;"	m	union:r_u	typeref:struct:r_u::gref_t	access:public
grsytp	./v.h	/^ struct symtab_t *grsytp;     \/* symtab where ref. appears *\/$/;"	m	struct:gref_t	typeref:struct:gref_t::symtab_t	access:public
grxcmps	./v.h	/^ struct expr_t **grxcmps;     \/* table of arr of inst path symbol sel exprs *\/$/;"	m	struct:gref_t	typeref:struct:gref_t::expr_t	access:public
gsen_owp	./v.h	/^ word32 *gsen_owp;$/;"	m	struct:gen_sens_t	access:public
gsen_prmnp	./v.h	/^ struct net_t *gsen_prmnp;$/;"	m	struct:gen_sens_t	typeref:struct:gen_sens_t::net_t	access:public
gsenxt	./v.h	/^ struct gen_sens_t *gsenxt;$/;"	m	struct:gen_sens_t	typeref:struct:gen_sens_t::gen_sens_t	access:public
gstate_ofs	./v.h	/^ size_t gstate_ofs;           \/* idp index storage of state vector *\/$/;"	m	struct:gate_t	access:public
gsym	./v.h	/^ struct sy_t *gsym;$/;"	m	struct:gate_t	typeref:struct:gate_t::sy_t	access:public
gvnp	./v.h	/^ struct net_t *gvnp;           \/* genblk's inner genvar if one exists *\/$/;"	m	struct:genblk_t	typeref:struct:genblk_t::net_t	access:public
gxndp	./v.h	/^ struct expr_t *gxndp;        \/* back link to expr. node containing xmr *\/$/;"	m	struct:gref_t	typeref:struct:gref_t::expr_t	access:public
h_magic	./v.h	/^ unsigned h_magic : 11;       \/* magic number for internal checking *\/$/;"	m	struct:hrec_t	access:public
h_t	./v.h	/^struct h_t {$/;"	s
h_t::hin_idp	./v.h	/^ t_midat *hin_idp;            \/* itree inst object in (if relevant) *\/$/;"	m	struct:h_t	access:public
h_t::hrec	./v.h	/^ struct hrec_t *hrec;         \/* handle content record *\/$/;"	m	struct:h_t	typeref:struct:h_t::hrec_t	access:public
h_u	./v.h	/^union h_u {$/;"	u
h_u::hanyp	./v.h	/^ void *hanyp;                 \/* any ptr so do not need to cast to it *\/$/;"	m	union:h_u	access:public
h_u::hcap	./v.h	/^ struct conta_t *hcap;        \/* pointer to conta *\/$/;"	m	union:h_u	typeref:struct:h_u::conta_t	access:public
h_u::hcbp	./v.h	/^ struct cbrec_t *hcbp;        \/* callback handle guts record *\/$/;"	m	union:h_u	typeref:struct:h_u::cbrec_t	access:public
h_u::hcsip	./v.h	/^ struct csitem_t *hcsip;      \/* case item *\/$/;"	m	union:h_u	typeref:struct:h_u::csitem_t	access:public
h_u::hdfp	./v.h	/^ struct dfparam_t *hdfp;      \/* for defparam source reconstruction handles *\/$/;"	m	union:h_u	typeref:struct:h_u::dfparam_t	access:public
h_u::hevrec	./v.h	/^ struct schdev_t *hevrec;     \/* pending vpi_ driver all net sched. evs tab *\/$/;"	m	union:h_u	typeref:struct:h_u::schdev_t	access:public
h_u::hfreenxt	./v.h	/^ struct hrec_t *hfreenxt;     \/* ptr to next hrec on free list *\/$/;"	m	union:h_u	typeref:struct:h_u::hrec_t	access:public
h_u::hgp	./v.h	/^ struct gate_t *hgp;$/;"	m	union:h_u	typeref:struct:h_u::gate_t	access:public
h_u::hialstp	./v.h	/^ struct ialst_t *hialstp;     \/* process - init or always *\/$/;"	m	union:h_u	typeref:struct:h_u::ialst_t	access:public
h_u::hiterp	./v.h	/^ struct pviter_t *hiterp;     \/* iterator indirect element with alloc list *\/$/;"	m	union:h_u	typeref:struct:h_u::pviter_t	access:public
h_u::hmdp	./v.h	/^ struct mod_t *hmdp;          \/* for mods in modsyms table *\/$/;"	m	union:h_u	typeref:struct:h_u::mod_t	access:public
h_u::hmpp	./v.h	/^ struct mod_pin_t *hmpp;      \/* udp port or net-pin list mod. I\/O port *\/$/;"	m	union:h_u	typeref:struct:h_u::mod_pin_t	access:public
h_u::hnp	./v.h	/^ struct net_t *hnp;$/;"	m	union:h_u	typeref:struct:h_u::net_t	access:public
h_u::hnpp	./v.h	/^ struct net_pin_t *hnpp;      \/* for driver the drvr net pin record *\/$/;"	m	union:h_u	typeref:struct:h_u::net_pin_t	access:public
h_u::hpi	./v.h	/^ int32 hpi;                   \/* for port bit handle the port index *\/$/;"	m	union:h_u	access:public
h_u::hpthp	./v.h	/^ struct spcpth_t *hpthp;      \/* point back to path for special id symbol *\/    $/;"	m	union:h_u	typeref:struct:h_u::spcpth_t	access:public
h_u::hstp	./v.h	/^ struct st_t *hstp;           \/* statement handle *\/$/;"	m	union:h_u	typeref:struct:h_u::st_t	access:public
h_u::htcp	./v.h	/^ struct tchk_t *htcp;         \/* and back to time check *\/      $/;"	m	union:h_u	typeref:struct:h_u::tchk_t	access:public
h_u::htevp	./v.h	/^ struct tev_t *htevp;         \/* event ndx for sched. vpi put value only *\/$/;"	m	union:h_u	typeref:struct:h_u::tev_t	access:public
h_u::htskp	./v.h	/^ struct task_t *htskp;        \/* also named block and function *\/$/;"	m	union:h_u	typeref:struct:h_u::task_t	access:public
h_u::hudpp	./v.h	/^ struct udp_t *hudpp;         \/* udp handle object record *\/ $/;"	m	union:h_u	typeref:struct:h_u::udp_t	access:public
h_u::hutlp	./v.h	/^ struct utline_t *hutlp;      \/* udp line for table entry handle *\/$/;"	m	union:h_u	typeref:struct:h_u::utline_t	access:public
h_u::hxp	./v.h	/^ struct expr_t *hxp;          \/* representation as ptr to expr. *\/$/;"	m	union:h_u	typeref:struct:h_u::expr_t	access:public
handle	./fstapi.c	/^FILE *handle;$/;"	m	struct:fstWriterContext	file:	access:public
handle	./fstapi.h	/^                fstHandle handle;$/;"	m	struct:fstHier::__anon18::fstHierVar	access:public
handle_ifdef_skip_eof	./v_ms.c	/^static void handle_ifdef_skip_eof(int32 begtok, int32 savfnam_ind,$/;"	f	file:	signature:(int32 begtok, int32 savfnam_ind, int32 sav_lin_cnt)
hanyp	./v.h	/^ void *hanyp;                 \/* any ptr so do not need to cast to it *\/$/;"	m	union:h_u	access:public
has_break	./v.h	/^ unsigned has_break : 1;       \/* T => has break statement *\/$/;"	m	struct:for_t	access:public
has_contant_xvalue	./v_bbgen.c	/^static int32 has_contant_xvalue(int32 res_ti, int32 op1_ti, int32 op2_ti)$/;"	f	file:	signature:(int32 res_ti, int32 op1_ti, int32 op2_ti)
has_continue	./v.h	/^ unsigned has_continue : 1;    \/* T => has continue statement *\/$/;"	m	struct:for_t	access:public
has_deflst_insn	./v_bbopt.c	/^static int32 has_deflst_insn(struct bblk_t *bbp, int32 tni)$/;"	f	file:	signature:(struct bblk_t *bbp, int32 tni)
has_duplicated_cases	./v_bbgen.c	/^static int32 has_duplicated_cases(struct icasx_t *icasxtab)$/;"	f	file:	signature:(struct icasx_t *icasxtab)
has_duplicates	./igen.h	/^ int32 has_duplicates;         \/* T => if jump table can have duplicates *\/$/;"	m	struct:ndxjmp_t	access:public
has_ids_only	./v.h	/^ unsigned has_ids_only : 1;      \/* only contains ids on lhs *\/$/;"	m	struct:xprop_t	access:public
has_mipd	./v.h	/^ unsigned has_mipd : 1;       \/* T => input port has mipd delay *\/$/;"	m	struct:mod_pin_t	access:public
has_muststay_npp	./v_prp.c	/^static int32 has_muststay_npp(struct net_pin_t *npp)$/;"	f	file:	signature:(struct net_pin_t *npp)
has_nb_pnd0s	./igen.h	/^ unsigned has_nb_pnd0s : 1;   \/* T => fg is nb which checks if pnd0 *\/$/;"	m	struct:flowg_t	access:public
has_non_combinable_param	./v_fx.c	/^static int32 has_non_combinable_param(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
has_non_stren_wired_net	./v_fx2.c	/^static int32 has_non_stren_wired_net(struct expr_t *lhsx)$/;"	f	file:	signature:(struct expr_t *lhsx)
has_npp_isform	./v_prp2.c	/^static int32 has_npp_isform(struct net_pin_t *npp)$/;"	f	file:	signature:(struct net_pin_t *npp)
has_one_id_only	./v.h	/^ unsigned has_one_id_only : 1;   \/* only contains single id always set *\/$/;"	m	struct:xprop_t	access:public
has_overflow	./igen.h	/^ unsigned has_overflow : 1;   \/* T => has overflow tmps *\/$/;"	m	struct:flowg_t	access:public
has_real_ops	./igen.h	/^ unsigned has_real_ops : 1;   \/* T => flowgraph uses special xmm regs *\/$/;"	m	struct:flowg_t	access:public
has_ret	./v.h	/^ unsigned has_ret : 1;       \/* T => has a return type *\/$/;"	m	struct:dpi_t	access:public
has_return	./v.h	/^ unsigned has_return : 1;      \/* T => has SV return stmt *\/$/;"	m	struct:task_t	access:public
has_rhs_const	./igen.h	/^ unsigned has_rhs_const : 1;     \/* T => if rhs is constant *\/$/;"	m	struct:nb_stmt_lst_t	access:public
has_rng_npp	./v_prp2.c	/^static int32 has_rng_npp(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
has_scalar_mpps	./v.h	/^ unsigned has_scalar_mpps : 1;\/* T => simulated per bit *\/$/;"	m	struct:mod_pin_t	access:public
has_sign	./v.h	/^ unsigned has_sign : 1;       \/* T => result must be signed *\/$/;"	m	struct:expr_t	access:public
has_static_mem	./igen.h	/^ unsigned has_static_mem : 1;    \/* T => if this nba has static mem *\/$/;"	m	struct:nb_stmt_lst_t	access:public
has_thread_ctrl	./igen.h	/^ unsigned has_thread_ctrl : 1; \/* T => has thread entered from stp->enterptr *\/$/;"	m	struct:flowg_t	access:public
has_wildcard	./v_src3.c	/^static int32 has_wildcard(char *cp)$/;"	f	file:	signature:(char *cp)
has_wire_ev	./v.h	/^ unsigned has_wire_ev : 1;    \/* is mipd wire event *\/$/;"	m	struct:ctev_t	access:public
has_x_only_edge	./v_sim.c	/^static int32 has_x_only_edge(word32 *wp1, word32 *wp2, int32 blen)$/;"	f	file:	signature:(word32 *wp1, word32 *wp2, int32 blen)
has_x_only_edge_stren	./v_sim.c	/^static int32 has_x_only_edge_stren(byte *bp1, byte *bp2, int32 blen)$/;"	f	file:	signature:(byte *bp1, byte *bp2, int32 blen)
has_xmr	./v.h	/^ unsigned has_xmr : 1;        \/* T -> has a xmr ref to it *\/$/;"	m	struct:net_t	access:public
hash	./v.h	/^ int32 hash;              \/* time hash index *\/$/;"	m	struct:heap_t	access:public
hashTable	./lz4.c	/^    U32 hashTable[HASHNBCELLS4];$/;"	m	struct:__anon5	file:	access:public
hc_dcelst	./v.h	/^ struct dceauxlst_t *hc_dcelst; \/* aux. list of per inst iact dces to free *\/ $/;"	m	struct:hctrl_t	typeref:struct:hctrl_t::dceauxlst_t	access:public
hc_grtab	./v.h	/^ struct gref_t *hc_grtab; \/* table of any grefs used in this statement *\/ $/;"	m	struct:hctrl_t	typeref:struct:hctrl_t::gref_t	access:public
hc_iahp	./v.h	/^ struct iahist_t *hc_iahp;\/* ptr to history element if history on *\/$/;"	m	struct:hctrl_t	typeref:struct:hctrl_t::iahist_t	access:public
hc_idp	./v.h	/^ t_midat *hc_idp;         \/* itree loc. runs in if reenabled *\/$/;"	m	struct:hctrl_t	access:public
hc_ifi	./v.h	/^ int32 hc_ifi; $/;"	m	struct:hctrl_t	access:public
hc_lini	./v.h	/^ int32 hc_lini;           \/* line loc. in history of statement *\/ $/;"	m	struct:hctrl_t	access:public
hc_numglbs	./v.h	/^ int32 hc_numglbs;        \/* size of table *\/$/;"	m	struct:hctrl_t	access:public
hc_nxt	./v.h	/^ struct hctrl_t *hc_nxt;  \/* list next for non history traversing *\/$/;"	m	struct:hctrl_t	typeref:struct:hctrl_t::hctrl_t	access:public
hc_prev	./v.h	/^ struct hctrl_t *hc_prev; \/* and previous *\/$/;"	m	struct:hctrl_t	typeref:struct:hctrl_t::hctrl_t	access:public
hc_stp	./v.h	/^ struct st_t *hc_stp;     \/* initial style statement list *\/$/;"	m	struct:hctrl_t	typeref:struct:hctrl_t::st_t	access:public
hc_thp	./v.h	/^ struct thread_t *hc_thp; \/* associated thread *\/ $/;"	m	struct:hctrl_t	typeref:struct:hctrl_t::thread_t	access:public
hcap	./v.h	/^ struct conta_t *hcap;        \/* pointer to conta *\/$/;"	m	union:h_u	typeref:struct:h_u::conta_t	access:public
hcbp	./v.h	/^ struct cbrec_t *hcbp;        \/* callback handle guts record *\/$/;"	m	union:h_u	typeref:struct:h_u::cbrec_t	access:public
hcsip	./v.h	/^ struct csitem_t *hcsip;      \/* case item *\/$/;"	m	union:h_u	typeref:struct:h_u::csitem_t	access:public
hctrl_t	./v.h	/^struct hctrl_t {$/;"	s
hctrl_t::hc_dcelst	./v.h	/^ struct dceauxlst_t *hc_dcelst; \/* aux. list of per inst iact dces to free *\/ $/;"	m	struct:hctrl_t	typeref:struct:hctrl_t::dceauxlst_t	access:public
hctrl_t::hc_grtab	./v.h	/^ struct gref_t *hc_grtab; \/* table of any grefs used in this statement *\/ $/;"	m	struct:hctrl_t	typeref:struct:hctrl_t::gref_t	access:public
hctrl_t::hc_iahp	./v.h	/^ struct iahist_t *hc_iahp;\/* ptr to history element if history on *\/$/;"	m	struct:hctrl_t	typeref:struct:hctrl_t::iahist_t	access:public
hctrl_t::hc_idp	./v.h	/^ t_midat *hc_idp;         \/* itree loc. runs in if reenabled *\/$/;"	m	struct:hctrl_t	access:public
hctrl_t::hc_ifi	./v.h	/^ int32 hc_ifi; $/;"	m	struct:hctrl_t	access:public
hctrl_t::hc_lini	./v.h	/^ int32 hc_lini;           \/* line loc. in history of statement *\/ $/;"	m	struct:hctrl_t	access:public
hctrl_t::hc_numglbs	./v.h	/^ int32 hc_numglbs;        \/* size of table *\/$/;"	m	struct:hctrl_t	access:public
hctrl_t::hc_nxt	./v.h	/^ struct hctrl_t *hc_nxt;  \/* list next for non history traversing *\/$/;"	m	struct:hctrl_t	typeref:struct:hctrl_t::hctrl_t	access:public
hctrl_t::hc_prev	./v.h	/^ struct hctrl_t *hc_prev; \/* and previous *\/$/;"	m	struct:hctrl_t	typeref:struct:hctrl_t::hctrl_t	access:public
hctrl_t::hc_stp	./v.h	/^ struct st_t *hc_stp;     \/* initial style statement list *\/$/;"	m	struct:hctrl_t	typeref:struct:hctrl_t::st_t	access:public
hctrl_t::hc_thp	./v.h	/^ struct thread_t *hc_thp; \/* associated thread *\/ $/;"	m	struct:hctrl_t	typeref:struct:hctrl_t::thread_t	access:public
hdfp	./v.h	/^ struct dfparam_t *hdfp;      \/* for defparam source reconstruction handles *\/$/;"	m	union:h_u	typeref:struct:h_u::dfparam_t	access:public
head_ctevp	./v.h	/^ struct ctev_t *head_ctevp;     \/* compile time info building static tev_t *\/$/;"	m	struct:delctrl_t	typeref:struct:delctrl_t::ctev_t	access:public
head_dctp	./v.h	/^ struct delctrl_t *head_dctp;   \/* head dctp this is merged into *\/$/;"	m	struct:delctrl_t	typeref:struct:delctrl_t::delctrl_t	access:public
heap_reinsert_min	./v_sim.c	/^static void heap_reinsert_min(struct heap_t *hp)$/;"	f	file:	signature:(struct heap_t *hp)
heap_t	./v.h	/^struct heap_t {$/;"	s
heap_t::hash	./v.h	/^ int32 hash;              \/* time hash index *\/$/;"	m	struct:heap_t	access:public
heap_t::nb_endp	./v.h	/^ struct tev_t *nb_hdrp, *nb_endp;$/;"	m	struct:heap_t	typeref:struct:heap_t::	access:public
heap_t::nb_hdrp	./v.h	/^ struct tev_t *nb_hdrp, *nb_endp;$/;"	m	struct:heap_t	typeref:struct:heap_t::tev_t	access:public
heap_t::next	./v.h	/^ struct heap_t *next;$/;"	m	struct:heap_t	typeref:struct:heap_t::heap_t	access:public
heap_t::te_endp	./v.h	/^ struct tev_t *te_hdrp, *te_endp;$/;"	m	struct:heap_t	typeref:struct:heap_t::	access:public
heap_t::te_hdrp	./v.h	/^ struct tev_t *te_hdrp, *te_endp;$/;"	m	struct:heap_t	typeref:struct:heap_t::tev_t	access:public
heap_t::time	./v.h	/^ word64 time;             \/* the time node (sorted by) *\/$/;"	m	struct:heap_t	access:public
heapify	./v_sim.c	/^static void heapify(void)$/;"	f	file:	signature:(void)
help_msg	./v_dbg.c	/^static char *help_msg[] = { $/;"	v	file:
hevrec	./v.h	/^ struct schdev_t *hevrec;     \/* pending vpi_ driver all net sched. evs tab *\/$/;"	m	union:h_u	typeref:struct:h_u::schdev_t	access:public
hfreenxt	./v.h	/^ struct hrec_t *hfreenxt;     \/* ptr to next hrec on free list *\/$/;"	m	union:h_u	typeref:struct:h_u::hrec_t	access:public
hgp	./v.h	/^ struct gate_t *hgp;$/;"	m	union:h_u	typeref:struct:h_u::gate_t	access:public
hi	./v.h	/^ int32 hi;                    \/* for bit of object handle the index *\/$/;"	m	struct:hrec_t	access:public
hialstp	./v.h	/^ struct ialst_t *hialstp;     \/* process - init or always *\/$/;"	m	union:h_u	typeref:struct:h_u::ialst_t	access:public
hier	./fstapi.c	/^struct fstHier hier;$/;"	m	struct:fstReaderContext	typeref:struct:fstReaderContext::fstHier	file:	access:public
hier_file_len	./fstapi.c	/^off_t hier_file_len;$/;"	m	struct:fstWriterContext	file:	access:public
hier_handle	./fstapi.c	/^FILE *hier_handle;$/;"	m	struct:fstWriterContext	file:	access:public
hier_pos	./fstapi.c	/^off_t hier_pos;$/;"	m	struct:fstReaderContext	file:	access:public
high	./v.h	/^ struct { word32 high; word32 low; } w_u;$/;"	m	struct:__anon11::__anon12	access:public
high	./v.h	/^ struct { word32 high; word32 low; } w_u;$/;"	m	struct:__anon14::__anon15	access:public
high	./v.h	/^ struct { word32 low; word32 high; } w_u;$/;"	m	struct:__anon11::__anon13	access:public
high	./v.h	/^ struct { word32 low; word32 high; } w_u;$/;"	m	struct:__anon14::__anon16	access:public
hin_idp	./v.h	/^ t_midat *hin_idp;            \/* itree inst object in (if relevant) *\/$/;"	m	struct:h_t	access:public
hin_tskp	./v.h	/^ struct task_t *hin_tskp;     \/* task (scope) handle in (or ialst) *\/$/;"	m	struct:hrec_t	typeref:struct:hrec_t::task_t	access:public
hist_msg	./v_dbg.c	/^static char *hist_msg[] = { $/;"	v	file:
hiterp	./v.h	/^ struct pviter_t *hiterp;     \/* iterator indirect element with alloc list *\/$/;"	m	union:h_u	typeref:struct:h_u::pviter_t	access:public
hlp_topics	./v_dbg.c	/^static struct hlplst_t hlp_topics[] = { $/;"	v	typeref:struct:hlplst_t	file:
hlpcmds	./v_dbg.c	/^static struct hlplst_t hlpcmds[] = { $/;"	v	typeref:struct:hlplst_t	file:
hlplst_t	./v.h	/^struct hlplst_t {$/;"	s
hlplst_t::hmsgtab	./v.h	/^ char **hmsgtab;$/;"	m	struct:hlplst_t	access:public
hlplst_t::hnamid	./v.h	/^ int32 hnamid;$/;"	m	struct:hlplst_t	access:public
hlptoptab	./v_dbg.c	/^static struct namlst_t hlptoptab[] = {$/;"	v	typeref:struct:namlst_t	file:
hmdp	./v.h	/^ struct mod_t *hmdp;          \/* for mods in modsyms table *\/$/;"	m	union:h_u	typeref:struct:h_u::mod_t	access:public
hmpp	./v.h	/^ struct mod_pin_t *hmpp;      \/* udp port or net-pin list mod. I\/O port *\/$/;"	m	union:h_u	typeref:struct:h_u::mod_pin_t	access:public
hmsgtab	./v.h	/^ char **hmsgtab;$/;"	m	struct:hlplst_t	access:public
hnamid	./v.h	/^ int32 hnamid;$/;"	m	struct:hlplst_t	access:public
hnp	./v.h	/^ struct net_t *hnp;$/;"	m	union:h_u	typeref:struct:h_u::net_t	access:public
hnpp	./v.h	/^ struct net_pin_t *hnpp;      \/* for driver the drvr net pin record *\/$/;"	m	union:h_u	typeref:struct:h_u::net_pin_t	access:public
hpi	./v.h	/^ int32 hpi;                   \/* for port bit handle the port index *\/$/;"	m	union:h_u	access:public
hpthp	./v.h	/^ struct spcpth_t *hpthp;      \/* point back to path for special id symbol *\/    $/;"	m	union:h_u	typeref:struct:h_u::spcpth_t	access:public
hrec	./v.h	/^ struct hrec_t *hrec;         \/* handle content record *\/$/;"	m	struct:h_t	typeref:struct:h_t::hrec_t	access:public
hrec_t	./v.h	/^struct hrec_t {$/;"	s
hrec_t::bith_ndx	./v.h	/^ unsigned bith_ndx : 1;       \/* bit handle index form (also any tab form) *\/ $/;"	m	struct:hrec_t	access:public
hrec_t::evnt_done	./v.h	/^ unsigned evnt_done : 1;      \/* for vpi schd event, event happened *\/$/;"	m	struct:hrec_t	access:public
hrec_t::free_with_iter	./v.h	/^ unsigned free_with_iter : 1; \/* for in iter, free when iter freed *\/$/;"	m	struct:hrec_t	access:public
hrec_t::free_xpr	./v.h	/^ unsigned free_xpr : 1;       \/* free expr. when free handle *\/$/;"	m	struct:hrec_t	access:public
hrec_t::h_magic	./v.h	/^ unsigned h_magic : 11;       \/* magic number for internal checking *\/$/;"	m	struct:hrec_t	access:public
hrec_t::hi	./v.h	/^ int32 hi;                    \/* for bit of object handle the index *\/$/;"	m	struct:hrec_t	access:public
hrec_t::hin_tskp	./v.h	/^ struct task_t *hin_tskp;     \/* task (scope) handle in (or ialst) *\/$/;"	m	struct:hrec_t	typeref:struct:hrec_t::task_t	access:public
hrec_t::htyp	./v.h	/^ unsigned htyp : 16;          \/* vpi object type of handle *\/$/;"	m	struct:hrec_t	access:public
hrec_t::htyp2	./v.h	/^ unsigned htyp2 : 16;         \/* extra type *\/$/;"	m	struct:hrec_t	access:public
hrec_t::hu	./v.h	/^ union h_u hu;                \/* ptr to object (could be void *) *\/ $/;"	m	struct:hrec_t	typeref:union:hrec_t::h_u	access:public
hrec_t::in_iter	./v.h	/^ unsigned in_iter : 1;        \/* part of iterr, free when iterator freed *\/$/;"	m	struct:hrec_t	access:public
hstp	./v.h	/^ struct st_t *hstp;           \/* statement handle *\/$/;"	m	union:h_u	typeref:struct:h_u::st_t	access:public
hsword	./v.h	/^typedef short hsword;$/;"	t
htcp	./v.h	/^ struct tchk_t *htcp;         \/* and back to time check *\/      $/;"	m	union:h_u	typeref:struct:h_u::tchk_t	access:public
htevp	./v.h	/^ struct tev_t *htevp;         \/* event ndx for sched. vpi put value only *\/$/;"	m	union:h_u	typeref:struct:h_u::tev_t	access:public
htskp	./v.h	/^ struct task_t *htskp;        \/* also named block and function *\/$/;"	m	union:h_u	typeref:struct:h_u::task_t	access:public
htyp	./fstapi.h	/^unsigned char htyp;$/;"	m	struct:fstHier	access:public
htyp	./v.h	/^ unsigned htyp : 16;          \/* vpi object type of handle *\/$/;"	m	struct:hrec_t	access:public
htyp2	./v.h	/^ unsigned htyp2 : 16;         \/* extra type *\/$/;"	m	struct:hrec_t	access:public
hu	./v.h	/^ union h_u hu;                \/* ptr to object (could be void *) *\/ $/;"	m	struct:hrec_t	typeref:union:hrec_t::h_u	access:public
hudpp	./v.h	/^ struct udp_t *hudpp;         \/* udp handle object record *\/ $/;"	m	union:h_u	typeref:struct:h_u::udp_t	access:public
hutlp	./v.h	/^ struct utline_t *hutlp;      \/* udp line for table entry handle *\/$/;"	m	union:h_u	typeref:struct:h_u::utline_t	access:public
hword	./v.h	/^typedef unsigned short hword;$/;"	t
hwp	./v.h	/^ hword *hwp;$/;"	m	union:pck_u	access:public
hxp	./v.h	/^ struct expr_t *hxp;          \/* representation as ptr to expr. *\/$/;"	m	union:h_u	typeref:struct:h_u::expr_t	access:public
i	./v.h	/^ int32 i;$/;"	m	union:intptr_u	access:public
i1	./v.h	/^ int32 i1;               \/* range one *\/$/;"	m	struct:net_chg_t	access:public
i2	./v.h	/^ int32 i2;               \/* range two *\/$/;"	m	struct:net_chg_t	access:public
i_extrainfo_u	./igen.h	/^union i_extrainfo_u {$/;"	u
i_extrainfo_u::asl_ausedefs	./igen.h	/^ struct asl_def_t *asl_ausedefs; \/* tab of asl opand usedef and tn records *\/$/;"	m	union:i_extrainfo_u	typeref:struct:i_extrainfo_u::asl_def_t	access:public
i_extrainfo_u::defilst	./igen.h	/^ struct defilst_t *defilst;   \/* lst of live defs that can reach deflst insn *\/$/;"	m	union:i_extrainfo_u	typeref:struct:i_extrainfo_u::defilst_t	access:public
i_extrainfo_u::ndxjp	./igen.h	/^ struct ndxjmp_t *ndxjp;      \/* ndx jmp pointer info if is a ndx jmp *\/$/;"	m	union:i_extrainfo_u	typeref:struct:i_extrainfo_u::ndxjmp_t	access:public
i_extrainfo_u::prologue_bblkno	./igen.h	/^ int32 prologue_bblkno;       \/* for prologue pseudo insn, entry bblk num *\/$/;"	m	union:i_extrainfo_u	access:public
i_giap	./v.h	/^ struct gia_aux_t *i_giap;    \/* arr of insts info gia aux record *\/$/;"	m	struct:inst_t	typeref:struct:inst_t::gia_aux_t	access:public
i_iscell	./v.h	/^ unsigned i_iscell : 1;       \/* instance is a cell *\/$/;"	m	struct:inst_t	access:public
i_pnddefsplit	./v.h	/^ unsigned i_pnddefsplit : 1;     \/* T => must pound param split *\/$/;"	m	struct:inst_t	access:public
ia_first_ifi	./v.h	/^ int32 ia_first_ifi;          \/* and file index *\/$/;"	m	struct:ialst_t	access:public
ia_first_lini	./v.h	/^ int32 ia_first_lini;         \/* line no. of initial\/always *\/$/;"	m	struct:ialst_t	access:public
ia_last_ifi	./v.h	/^ int32 ia_last_ifi;           \/* end file in case spans multiple files *\/$/;"	m	struct:ialst_t	access:public
ia_last_lini	./v.h	/^ int32 ia_last_lini;          \/* line no. of end (mabye in next file) *\/$/;"	m	struct:ialst_t	access:public
iact_idp	./v.h	/^ t_midat *iact_idp;           \/* for per inst. iact need inst. to match *\/$/;"	m	struct:dcevnt_t	access:public
iah_hcp	./v.h	/^ struct hctrl_t *iah_hcp; \/* parsed suspended stmt control record *\/$/;"	m	struct:iahist_t	typeref:struct:iahist_t::hctrl_t	access:public
iah_iti	./v.h	/^ struct itree_t *iah_iti; \/* for non immed. save original itree loc. *\/$/;"	m	struct:iahist_t	typeref:struct:iahist_t::itree_t	access:public
iah_lp	./v.h	/^ char *iah_lp;            \/* history line (may have embedded new lines) *\/$/;"	m	struct:iahist_t	access:public
iahist_t	./v.h	/^struct iahist_t { $/;"	s
iahist_t::iah_hcp	./v.h	/^ struct hctrl_t *iah_hcp; \/* parsed suspended stmt control record *\/$/;"	m	struct:iahist_t	typeref:struct:iahist_t::hctrl_t	access:public
iahist_t::iah_iti	./v.h	/^ struct itree_t *iah_iti; \/* for non immed. save original itree loc. *\/$/;"	m	struct:iahist_t	typeref:struct:iahist_t::itree_t	access:public
iahist_t::iah_lp	./v.h	/^ char *iah_lp;            \/* history line (may have embedded new lines) *\/$/;"	m	struct:iahist_t	access:public
ialnxt	./v.h	/^ struct ialst_t *ialnxt;   $/;"	m	struct:ialst_t	typeref:struct:ialst_t::ialst_t	access:public
ialst	./v.h	/^ struct ialst_t *ialst;       \/* initial\/always list *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::ialst_t	access:public
ialst_t	./v.h	/^struct ialst_t {$/;"	s
ialst_t::enterptr	./v.h	/^ void *enterptr;             \/* enter address for cvc enter *\/$/;"	m	struct:ialst_t	access:public
ialst_t::ia_first_ifi	./v.h	/^ int32 ia_first_ifi;          \/* and file index *\/$/;"	m	struct:ialst_t	access:public
ialst_t::ia_first_lini	./v.h	/^ int32 ia_first_lini;         \/* line no. of initial\/always *\/$/;"	m	struct:ialst_t	access:public
ialst_t::ia_last_ifi	./v.h	/^ int32 ia_last_ifi;           \/* end file in case spans multiple files *\/$/;"	m	struct:ialst_t	access:public
ialst_t::ia_last_lini	./v.h	/^ int32 ia_last_lini;          \/* line no. of end (mabye in next file) *\/$/;"	m	struct:ialst_t	access:public
ialst_t::ialnxt	./v.h	/^ struct ialst_t *ialnxt;   $/;"	m	struct:ialst_t	typeref:struct:ialst_t::ialst_t	access:public
ialst_t::iastp	./v.h	/^ struct st_t *iastp; $/;"	m	struct:ialst_t	typeref:struct:ialst_t::st_t	access:public
ialst_t::iatyp	./v.h	/^ unsigned iatyp : 8;$/;"	m	struct:ialst_t	access:public
ialst_t::needs_thread	./v.h	/^ unsigned needs_thread : 1;  \/* T => needs thread control *\/$/;"	m	struct:ialst_t	access:public
iastp	./v.h	/^ struct st_t *iastp; $/;"	m	struct:ialst_t	typeref:struct:ialst_t::st_t	access:public
iattrs	./v.h	/^ struct attr_t *iattrs;       \/* attribute table for inst. *\/$/;"	m	struct:inst_t	typeref:struct:inst_t::attr_t	access:public
iatyp	./v.h	/^ unsigned iatyp : 8;$/;"	m	struct:ialst_t	access:public
ibase	./v.h	/^ unsigned ibase : 3;          \/* for sized no., base char. *\/$/;"	m	struct:expr_t	access:public
ibreakpoint_msg	./v_dbg.c	/^static char *ibreakpoint_msg[] = { $/;"	v	file:
icas_t	./igen.h	/^struct icas_t {$/;"	s
icas_t::csitem	./igen.h	/^ struct csitem_t *csitem;     \/* item - contains stmt list ptr *\/$/;"	m	struct:icas_t	typeref:struct:icas_t::csitem_t	access:public
icas_t::cstmt_bbp	./igen.h	/^ struct bblk_t *cstmt_bbp;    \/* basic blk that starts case stmt list *\/$/;"	m	struct:icas_t	typeref:struct:icas_t::bblk_t	access:public
icas_t::end_mark	./igen.h	/^ unsigned end_mark : 1;       \/* T => end fence of table *\/$/;"	m	struct:icas_t	access:public
icasx_t	./igen.h	/^struct icasx_t {$/;"	s
icasx_t::aval	./igen.h	/^ word32 aval;                 \/* for constant expr, value, a part *\/$/;"	m	struct:icasx_t	access:public
icasx_t::bval	./igen.h	/^ word32 bval;                 \/* and b part *\/$/;"	m	struct:icasx_t	access:public
icasx_t::cas_tabi	./igen.h	/^ int32 cas_tabi;$/;"	m	struct:icasx_t	access:public
icasx_t::casx	./igen.h	/^ struct expr_t *casx;         \/* item expression *\/$/;"	m	struct:icasx_t	typeref:struct:icasx_t::expr_t	access:public
icasx_t::cxtyp	./igen.h	/^ unsigned cxtyp : 4;          \/* complexity of item expr *\/$/;"	m	struct:icasx_t	access:public
iclass	./igen.h	/^ unsigned iclass : 8;$/;"	m	struct:insn_info_t	access:public
iconn_ndx	./igen.h	/^ int32 iconn_ndx;               \/* this flow graph identifier number *\/$/;"	m	struct:np_iconn_t	access:public
iconnbit_lvalue	./v_vpi2.c	/^static int32 iconnbit_lvalue(struct mod_pin_t *mpp, struct net_pin_t *npp, $/;"	f	file:	signature:(struct mod_pin_t *mpp, struct net_pin_t *npp, struct itree_t *itp2)
id	./v.h	/^ int32 id;                  \/* value added to the isnum tree *\/$/;"	m	struct:prep_obj_t	access:public
idcode	./v.h	/^ int32 idcode;              \/* idcode *\/$/;"	m	struct:dmp_buf_t	access:public
idcode	./v.h	/^ int32 idcode;$/;"	m	union:dvid_u	access:public
idfldwid	./v.h	/^ int32 idfldwid;$/;"	m	struct:expridtab_t	access:public
idfnam_ind	./v.h	/^ int32 idfnam_ind;$/;"	m	struct:expridtab_t	access:public
idlin_cnt	./v.h	/^ int32 idlin_cnt;$/;"	m	struct:expridtab_t	access:public
idnam	./v.h	/^ char *idnam;$/;"	m	struct:expridtab_t	access:public
idnd_var	./v_fx3.c	/^static int32 idnd_var(struct sy_t *syp)$/;"	f	file:	signature:(struct sy_t *syp)
idntmastdfp	./v.h	/^ struct dfparam_t *idntmastdfp;\/* ptr to master if >1 with identical path *\/$/;"	m	struct:dfparam_t	typeref:struct:dfparam_t::dfparam_t	access:public
idntnxt	./v.h	/^ struct dfparam_t *idntnxt;   \/* list from master of identicals path *\/$/;"	m	struct:dfparam_t	typeref:struct:dfparam_t::dfparam_t	access:public
idp	./v.h	/^ t_midat *idp;                \/* idp of this toggle *\/$/;"	m	struct:rt_tgl_t	access:public
idp	./v.h	/^ t_midat *idp;$/;"	m	union:itd_u	access:public
idp_map_t	./igen.h	/^struct idp_map_t {$/;"	s
idp_map_t::idp_tskp	./igen.h	/^ struct task_t *idp_tskp;    \/* ptr to tsk if in task for unique name *\/$/;"	m	struct:idp_map_t	typeref:struct:idp_map_t::task_t	access:public
idp_map_t::idpmaptyp	./igen.h	/^ unsigned idpmaptyp : 8;     \/* type of object for this idp offset *\/$/;"	m	struct:idp_map_t	access:public
idp_map_t::idpobju	./igen.h	/^ union el_u idpobju;         \/* the obj (netbp net?) for this idp offset *\/$/;"	m	struct:idp_map_t	typeref:union:idp_map_t::el_u	access:public
idp_ofs	./v.h	/^ size_t idp_ofs;              \/* idp offset for filtidp location *\/$/;"	m	struct:npaux_t	access:public
idp_tskp	./igen.h	/^ struct task_t *idp_tskp;    \/* ptr to tsk if in task for unique name *\/$/;"	m	struct:idp_map_t	typeref:struct:idp_map_t::task_t	access:public
idp_typ	./igen.h	/^ unsigned idp_typ : 6;        \/* __idp type (eventually replace comlab) *\/$/;"	m	struct:tn_t	access:public
idpmaptyp	./igen.h	/^ unsigned idpmaptyp : 8;     \/* type of object for this idp offset *\/$/;"	m	struct:idp_map_t	access:public
idpobju	./igen.h	/^ union el_u idpobju;         \/* the obj (netbp net?) for this idp offset *\/$/;"	m	struct:idp_map_t	typeref:union:idp_map_t::el_u	access:public
idst	./igen.h	/^ struct amode_t idst;         \/* dest. addressing mode *\/$/;"	m	struct:insn_t	typeref:struct:insn_t::amode_t	access:public
idst_defip	./igen.h	/^ struct insn_t *idst_defip;   \/* if dst is a tn ref, insn that defines it *\/$/;"	m	struct:iusedef_t	typeref:struct:iusedef_t::insn_t	access:public
idu	./v.h	/^ union dvid_u idu;$/;"	m	struct:dvchgnets_t	typeref:union:dvchgnets_t::dvid_u	access:public
if_stmt_lhs_assign	./v_xprop.c	/^static int32 if_stmt_lhs_assign(struct st_t *stp, int32 slevel, int32 do_alloc)$/;"	f	file:	signature:(struct st_t *stp, int32 slevel, int32 do_alloc)
if_t	./v.h	/^struct if_t {$/;"	s
if_t::condx	./v.h	/^ struct expr_t *condx;$/;"	m	struct:if_t	typeref:struct:if_t::expr_t	access:public
if_t::elsest	./v.h	/^ struct st_t *elsest;$/;"	m	struct:if_t	typeref:struct:if_t::st_t	access:public
if_t::thenst	./v.h	/^ struct st_t *thenst;$/;"	m	struct:if_t	typeref:struct:if_t::st_t	access:public
if_t::xedge_dce	./v.h	/^ unsigned xedge_dce : 1;        \/* T => is a dce xedge if stmt *\/$/;"	m	struct:if_t	access:public
if_t::xprop	./v.h	/^ struct xprop_t *xprop;$/;"	m	struct:if_t	typeref:struct:if_t::xprop_t	access:public
ifdef_skip_section	./v_ms.c	/^static int32 ifdef_skip_section(FILE *f, int32 begtok)$/;"	f	file:	signature:(FILE *f, int32 begtok)
ifrom_u	./igen.h	/^union ifrom_u {$/;"	u
ifrom_u::from_cap	./igen.h	/^ struct conta_t *from_cap;  \/* conta insn from *\/$/;"	m	union:ifrom_u	typeref:struct:ifrom_u::conta_t	access:public
ifrom_u::from_gateca	./igen.h	/^ int32 from_gateca;         \/* from gate scalar conta ndx *\/$/;"	m	union:ifrom_u	access:public
ifrom_u::from_gateda	./igen.h	/^ int32 from_gateda;         \/* from gate back end delay assign *\/$/;"	m	union:ifrom_u	access:public
ifrom_u::from_iconn	./igen.h	/^ int32 from_iconn;          \/* from iconn ndx *\/$/;"	m	union:ifrom_u	access:public
ifrom_u::from_mdprt	./igen.h	/^ int32 from_mdprt;          \/* from mdprt *\/$/;"	m	union:ifrom_u	access:public
ifrom_u::from_np	./igen.h	/^ struct net_t *from_np;     \/* net insn from *\/$/;"	m	union:ifrom_u	typeref:struct:ifrom_u::net_t	access:public
ifrom_u::from_stp	./igen.h	/^ struct st_t *from_stp;     \/* statement insn from *\/ $/;"	m	union:ifrom_u	typeref:struct:ifrom_u::st_t	access:public
ifru	./igen.h	/^ union ifrom_u ifru;          \/* nl object .v file insn gened from *\/$/;"	m	struct:insn_t	typeref:union:insn_t::ifrom_u	access:public
ifx_setx_else_const	./v_bbgen.c	/^static void ifx_setx_else_const(int32 op_ti, int32 val, int32 res_ti)$/;"	f	file:	signature:(int32 op_ti, int32 val, int32 res_ti)
igen_xpr_hasfcall	./v_bbgen.c	/^static int32 igen_xpr_hasfcall(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
ignorebrk_msg	./v_dbg.c	/^static char *ignorebrk_msg[] = { $/;"	v	file:
ihd	./igen.h	/^ struct insn_t *ihd;          \/* one bblks' machine insn list head *\/$/;"	m	struct:bblk_t	typeref:struct:bblk_t::insn_t	access:public
iloc_tostr	./v_cvcms.c	/^static char *iloc_tostr(char *s, struct insn_t *ip, struct flowg_t *fgp)$/;"	f	file:	signature:(char *s, struct insn_t *ip, struct flowg_t *fgp)
image_copy1_genblk	./v_fx.c	/^static struct genblk_t *image_copy1_genblk(struct genblk_t *ogblkp,$/;"	f	file:	signature:(struct genblk_t *ogblkp, struct genblk_t *par_gblkp)
immed_vpi_drv_assign	./v_vpi3.c	/^static void immed_vpi_drv_assign(struct net_t *np, int32 di, word32 *ap, word32 *bp)$/;"	f	file:	signature:(struct net_t *np, int32 di, word32 *ap, word32 *bp)
immed_vpibit_drv_assign	./v_vpi3.c	/^static void immed_vpibit_drv_assign(struct net_t *np, int32 di, int32 bi,$/;"	f	file:	signature:(struct net_t *np, int32 di, int32 bi, word32 *ap, word32 *bp)
imp_fnd_in_lib	./v.h	/^ unsigned imp_fnd_in_lib : 1;\/* T => during checking phase for comp, fnd *\/$/;"	m	struct:dpi_t	access:public
impl_pndparams	./v_cnv.c	/^static int32 impl_pndparams(struct inst_t *ip, struct mod_t *imdp)$/;"	f	file:	signature:(struct inst_t *ip, struct mod_t *imdp)
implicit_evxlst	./v.h	/^ unsigned implicit_evxlst : 1;\/* special all rhs's @(*) ev var-ndx list *\/ $/;"	m	struct:delctrl_t	access:public
import_property	./v.h	/^ unsigned import_property : 2; \/* context\/pure *\/$/;"	m	struct:dpi_t	access:public
impth_delrep	./v.h	/^ unsigned impth_delrep : 8;   \/* delrep *\/$/;"	m	struct:impth_t	access:public
impth_du	./v.h	/^ union del_u impth_du;        \/* for inter mod non IS del for src\/dst pair *\/$/;"	m	struct:impth_t	typeref:union:impth_t::del_u	access:public
impth_t	./v.h	/^struct impth_t {$/;"	s
impth_t::impth_delrep	./v.h	/^ unsigned impth_delrep : 8;   \/* delrep *\/$/;"	m	struct:impth_t	access:public
impth_t::impth_du	./v.h	/^ union del_u impth_du;        \/* for inter mod non IS del for src\/dst pair *\/$/;"	m	struct:impth_t	typeref:union:impth_t::del_u	access:public
impth_t::impthnxt	./v.h	/^ struct impth_t *impthnxt;    \/* for || paths dst has >1 src with diff del *\/$/;"	m	struct:impth_t	typeref:struct:impth_t::impth_t	access:public
impth_t::lastchg	./v.h	/^ word64 lastchg;              \/* last chg time for this 1 pth bit of inst *\/$/;"	m	struct:impth_t	access:public
impth_t::sbi	./v.h	/^ int32 sbi;                   \/* and bit *\/$/;"	m	struct:impth_t	access:public
impth_t::sitp	./v.h	/^ struct itree_t *sitp;        \/* and itree loc *\/$/;"	m	struct:impth_t	typeref:struct:impth_t::itree_t	access:public
impth_t::snp	./v.h	/^ struct net_t *snp;           \/* source net *\/$/;"	m	struct:impth_t	typeref:struct:impth_t::net_t	access:public
impthnxt	./v.h	/^ struct impth_t *impthnxt;    \/* for || paths dst has >1 src with diff del *\/$/;"	m	struct:impth_t	typeref:struct:impth_t::impth_t	access:public
impthtab	./v.h	/^ struct impth_t **impthtab;   \/* per inst inter mod src-dst pth ptr list *\/$/;"	m	struct:mipd_t	typeref:struct:mipd_t::impth_t	access:public
imsym	./v.h	/^ struct sy_t *imsym;          \/* module type symbol *\/$/;"	m	struct:inst_t	typeref:struct:inst_t::sy_t	access:public
in_equiv_set	./v.h	/^ unsigned in_equiv_set : 1;$/;"	m	struct:xpnd_pthel_t	access:public
in_giarng_markparam	./v_genfx.c	/^static int32 in_giarng_markparam(struct gia_aux_t *giap, struct expr_t *xp)$/;"	f	file:	signature:(struct gia_aux_t *giap, struct expr_t *xp)
in_iter	./v.h	/^ unsigned in_iter : 1;        \/* part of iterr, free when iterator freed *\/$/;"	m	struct:hrec_t	access:public
in_its	./v.h	/^ struct itree_t *in_its;      \/* array of low itree elements *\/$/;"	m	struct:itree_t	typeref:struct:itree_t::itree_t	access:public
in_list	./igen.h	/^ unsigned in_list : 1;        \/* T => block is in list  *\/$/;"	m	struct:bblk_t	access:public
in_list	./v.h	/^ unsigned in_list : 1;        \/* T => already in mdp->ctev_list *\/$/;"	m	struct:ctev_t	access:public
in_mdp	./igen.h	/^ struct mod_t *in_mdp;$/;"	m	struct:tn_syadr_t	typeref:struct:tn_syadr_t::mod_t	access:public
in_range	./v_fx3.c	/^static int32 in_range(int32 ai, int32 v1a, int32 v2a, int32 *newai)$/;"	f	file:	signature:(int32 ai, int32 v1a, int32 v2a, int32 *newai)
in_tgldat_fnam	./v.h	/^ char *in_tgldat_fnam;$/;"	m	struct:tgldat_in_lst_t	access:public
inam	./igen.h	/^ char *inam;$/;"	m	struct:insn_info_t	access:public
inam_comp_lasti	./v.h	/^ int32 inam_comp_lasti;       \/* number of components in XMR inst path *\/$/;"	m	struct:cfgrule_t	access:public
inam_comptab	./v.h	/^ char **inam_comptab;         \/* table of inst clause XMR components *\/$/;"	m	struct:cfgrule_t	access:public
inc_fnind	./v.h	/^ int32 inc_fnind;             \/* in_fils index of included file *\/$/;"	m	struct:incloc_t	access:public
incall	./v.h	/^ unsigned incall : 1;         \/* include the entire dir, ends in '\/' *\/$/;"	m	struct:xpndfile_t	access:public
incdec_mda_ndxnums	./v_ex2.c	/^static int32 incdec_mda_ndxnums(int32 *mda_ndxies, struct net_t *np,$/;"	f	file:	signature:(int32 *mda_ndxies, struct net_t *np, int32 lft_dim_mr1, int32 lft_dim_mr2)
incdec_mda_one_dim	./v_ex2.c	/^static int32 incdec_mda_one_dim(int32 *mda_ndxies, int32 dimi,$/;"	f	file:	signature:(int32 *mda_ndxies, int32 dimi, struct net_t *np)
incfrom_fnind	./v.h	/^ int32 incfrom_fnind;         \/* in_fils index file included from *\/$/;"	m	struct:incloc_t	access:public
incfrom_lcnt	./v.h	/^ int32 incfrom_lcnt;          \/* lin cnt where included *\/ $/;"	m	struct:incloc_t	access:public
incloc_t	./v.h	/^struct incloc_t {$/;"	s
incloc_t::inc_fnind	./v.h	/^ int32 inc_fnind;             \/* in_fils index of included file *\/$/;"	m	struct:incloc_t	access:public
incloc_t::incfrom_fnind	./v.h	/^ int32 incfrom_fnind;         \/* in_fils index file included from *\/$/;"	m	struct:incloc_t	access:public
incloc_t::incfrom_lcnt	./v.h	/^ int32 incfrom_lcnt;          \/* lin cnt where included *\/ $/;"	m	struct:incloc_t	access:public
incloc_t::inclocnxt	./v.h	/^ struct incloc_t *inclocnxt;$/;"	m	struct:incloc_t	typeref:struct:incloc_t::incloc_t	access:public
inclocnxt	./v.h	/^ struct incloc_t *inclocnxt;$/;"	m	struct:incloc_t	typeref:struct:incloc_t::incloc_t	access:public
ind_noth0	./v.h	/^ unsigned ind_noth0 : 1;      \/* T => constant index has been normalized *\/$/;"	m	struct:expr_t	access:public
indfp_itp	./v.h	/^ struct itree_t *indfp_itp;   \/* for rooted, itree place rhs evaled in *\/ $/;"	m	struct:dfparam_t	typeref:struct:dfparam_t::itree_t	access:public
indir_widthdet_markparam	./v_genfx.c	/^static int32 indir_widthdet_markparam(struct expr_t *xp)$/;"	f	file:	signature:(struct expr_t *xp)
infmt	./v_ex.c	9912;"	d	file:
info_msg	./v_dbg.c	/^static char *info_msg[] = { $/;"	v	file:
infoargs	./v_dbg2.c	/^static struct namlst_t infoargs[] = {$/;"	v	typeref:struct:namlst_t	file:
inform_id	./v.h	/^ int32 inform_id;$/;"	m	struct:q_val_t	access:public
init_1bit_dpctrl_rec	./v_ex4.c	/^static void init_1bit_dpctrl_rec(struct dpctrl_t *dpcp)$/;"	f	file:	signature:(struct dpctrl_t *dpcp)
init_1fg_trk_insns	./v_bbopt.c	/^static void init_1fg_trk_insns(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
init_1net_dces	./v_prp2.c	/^static void init_1net_dces(struct net_t *np, struct mod_t *mdp)$/;"	f	file:	signature:(struct net_t *np, struct mod_t *mdp)
init_2state_arr_var	./v_prp2.c	/^static void init_2state_arr_var(struct net_t *np, int32 srtyp)$/;"	f	file:	signature:(struct net_t *np, int32 srtyp)
init_2state_arr_var_random	./v_prp2.c	/^static void init_2state_arr_var_random(struct net_t *np, int32 srtyp)$/;"	f	file:	signature:(struct net_t *np, int32 srtyp)
init_acc_config	./v_acc.c	/^static void init_acc_config(void)$/;"	f	file:	signature:(void)
init_add_vtx_and_subtree	./v_trch.c	/^static void init_add_vtx_and_subtree(struct vtx_t *vtxp,$/;"	f	file:	signature:(struct vtx_t *vtxp, struct itree_t *vt1_itp)
init_aiter	./v_acc.c	/^static void init_aiter(struct acciter_t *aiterp)$/;"	f	file:	signature:(struct acciter_t *aiterp)
init_all_confunc_vars	./v_prp.c	/^static void init_all_confunc_vars(struct task_t *confp) $/;"	f	file:	signature:(struct task_t *confp)
init_arr_var	./v_prp2.c	/^static void init_arr_var(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
init_arr_var_random	./v_prp2.c	/^static void init_arr_var_random(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
init_brkpt	./v_dbg2.c	/^static void init_brkpt(struct brkpt_t *bpp)$/;"	f	file:	signature:(struct brkpt_t *bpp)
init_bufif_gate	./v_sim.c	/^static void init_bufif_gate(struct gate_t *gp)$/;"	f	file:	signature:(struct gate_t *gp)
init_cfg	./v_src3.c	/^static void init_cfg(struct cfg_t *cfgp)$/;"	f	file:	signature:(struct cfg_t *cfgp)
init_cfglib	./v_src3.c	/^static void init_cfglib(struct cfglib_t *lbp)$/;"	f	file:	signature:(struct cfglib_t *lbp)
init_chanrec	./v_trch.c	/^static void init_chanrec(struct chanrec_t *chanp)$/;"	f	file:	signature:(struct chanrec_t *chanp)
init_chk_cfg_sytab	./v_src3.c	/^static int32 init_chk_cfg_sytab(struct libel_t *lbep, char *celtyp)$/;"	f	file:	signature:(struct libel_t *lbep, char *celtyp)
init_contas_idp_area	./v_prp2.c	/^static void init_contas_idp_area(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
init_cvc	./v_bbgen.c	/^static void init_cvc(void)$/;"	f	file:	signature:(void)
init_cvc_sched_thd	./v_sim.c	/^static void init_cvc_sched_thd(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
init_dce_exprval	./v_prp2.c	/^static void init_dce_exprval(struct dcevnt_t *dcep)$/;"	f	file:	signature:(struct dcevnt_t *dcep)
init_dce_prevval	./v_prp2.c	/^static void init_dce_prevval(struct dcevnt_t *dcep, struct mod_t *decl_mdp)$/;"	f	file:	signature:(struct dcevnt_t *dcep, struct mod_t *decl_mdp)
init_dcelst	./v_ex2.c	/^extern void init_dcelst(struct dceauxlst_t *dcehdr) $/;"	f	signature:(struct dceauxlst_t *dcehdr)
init_dp_fildesc	./v_ex4.c	/^static void init_dp_fildesc(struct dp_fildesc_t *fdescp)$/;"	f	file:	signature:(struct dp_fildesc_t *fdescp)
init_dpdrv	./v_ex4.c	/^static void init_dpdrv(struct dpdrvr_t *dpdrvp)$/;"	f	file:	signature:(struct dpdrvr_t *dpdrvp)
init_ds	./cvc.c	/^static void init_ds(void)$/;"	f	file:	signature:(void)
init_dummy_tevp	./v_cvcrt.c	/^static void init_dummy_tevp(struct tev_t *tevp)$/;"	f	file:	signature:(struct tev_t *tevp)
init_gate_idp_area	./v_prp2.c	/^static void init_gate_idp_area(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
init_gia_aux_rec	./v_fx.c	/^static void init_gia_aux_rec(struct gia_aux_t *giap)$/;"	f	file:	signature:(struct gia_aux_t *giap)
init_glbs	./cvc.c	/^static void init_glbs(void)$/;"	f	file:	signature:(void)
init_gref	./v_src2.c	/^static void init_gref(struct gref_t *grp, char *gnam)$/;"	f	file:	signature:(struct gref_t *grp, char *gnam)
init_iact_dce	./v_prp2.c	/^static void init_iact_dce(struct dcevnt_t *dcep, struct delctrl_t *dctp,$/;"	f	file:	signature:(struct dcevnt_t *dcep, struct delctrl_t *dctp, struct gref_t *grp)
init_iahctrl	./v_dbg.c	/^static void init_iahctrl(struct hctrl_t *hcp)$/;"	f	file:	signature:(struct hctrl_t *hcp)
init_icas	./v_bbgen.c	/^static void init_icas(struct icas_t *icasp)$/;"	f	file:	signature:(struct icas_t *icasp)
init_icasx	./v_bbgen.c	/^static void init_icasx(struct icasx_t *icasxp)$/;"	f	file:	signature:(struct icasx_t *icasxp)
init_insn_for_reg_alloc	./v_regasn.c	/^static void init_insn_for_reg_alloc(struct insn_t *ip)$/;"	f	file:	signature:(struct insn_t *ip)
init_itinsts	./v_sim.c	/^static void init_itinsts(struct itree_t *up_itp)$/;"	f	file:	signature:(struct itree_t *up_itp)
init_logic_gate	./v_sim.c	/^static void init_logic_gate(struct gate_t *gp)$/;"	f	file:	signature:(struct gate_t *gp)
init_mda_ndxnums	./v_ex2.c	/^static void init_mda_ndxnums(int32 *mda_ndxies, struct net_t *np, int32 lft_mr1)$/;"	f	file:	signature:(int32 *mda_ndxies, struct net_t *np, int32 lft_mr1)
init_mdprt_ofs	./cvc.c	/^static void init_mdprt_ofs(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
init_modsymtab	./cvc.c	/^static void init_modsymtab(void)$/;"	f	file:	signature:(void)
init_ncomp	./v_src.c	/^static void init_ncomp(struct ncomp_t *ncmp)$/;"	f	file:	signature:(struct ncomp_t *ncmp)
init_net_npp_tchk_idpvals	./v_prp2.c	/^static void init_net_npp_tchk_idpvals(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
init_net_toggle_ofs	./v_prp2.c	/^static void init_net_toggle_ofs(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
init_one_inst_conta_drv	./v_prp2.c	/^static void init_one_inst_conta_drv(word32 *wp, int32 blen)$/;"	f	file:	signature:(word32 *wp, int32 blen)
init_one_inst_gate_state	./v_prp2.c	/^static void init_one_inst_gate_state(struct gate_t *gp)$/;"	f	file:	signature:(struct gate_t *gp)
init_one_inst_udp_state	./v_prp2.c	/^static void init_one_inst_udp_state(struct gate_t *gp)$/;"	f	file:	signature:(struct gate_t *gp)
init_one_mod_cvc	./v_bbgen.c	/^static void init_one_mod_cvc(void)$/;"	f	file:	signature:(void)
init_pbexpr_el	./v_prp.c	/^static void init_pbexpr_el(struct pbexpr_t *pbxp)$/;"	f	file:	signature:(struct pbexpr_t *pbxp)
init_pli_einfo	./v_vpi3.c	/^static void init_pli_einfo(struct t_vpi_error_info *einfop, int32 elev, int32 ernum)$/;"	f	file:	signature:(struct t_vpi_error_info *einfop, int32 elev, int32 ernum)
init_pnp	./v_prp.c	/^static void init_pnp(struct parmnet_pin_t *pnp)$/;"	f	file:	signature:(struct parmnet_pin_t *pnp)
init_q	./v_ex.c	/^static void init_q(struct q_hdr_t *q_p)$/;"	f	file:	signature:(struct q_hdr_t *q_p)
init_qcval	./v_prp2.c	/^static void init_qcval(struct qcval_t *qcvalp) $/;"	f	file:	signature:(struct qcval_t *qcvalp)
init_random	./v_prp2.c	/^static void init_random(word32 *base_wp, int32 nbytes)$/;"	f	file:	signature:(word32 *base_wp, int32 nbytes)
init_real_var	./v_prp2.c	/^static void init_real_var(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
init_real_var_random	./v_prp2.c	/^static void init_real_var_random(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
init_rule	./v_src3.c	/^static void init_rule(struct cfgrule_t *rulp)$/;"	f	file:	signature:(struct cfgrule_t *rulp)
init_scal_var	./v_prp2.c	/^static void init_scal_var(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
init_scal_var_random	./v_prp2.c	/^static void init_scal_var_random(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
init_sched_iathd	./v_dbg.c	/^static void init_sched_iathd(struct hctrl_t *hcp)$/;"	f	file:	signature:(struct hctrl_t *hcp)
init_sched_thd	./v_sim.c	/^static void init_sched_thd(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
init_spcpth	./v_src3.c	/^static void init_spcpth(struct spcpth_t *pthp)$/;"	f	file:	signature:(struct spcpth_t *pthp)
init_sscal_var	./v_prp2.c	/^static void init_sscal_var(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
init_stime	./v_sim.c	/^static void init_stime(void)$/;"	f	file:	signature:(void)
init_string_var	./v_prp2.c	/^static void init_string_var(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
init_stsymtab	./cvc.c	/^static void init_stsymtab(void)$/;"	f	file:	signature:(void)
init_sttranif_chan	./v_trch.c	/^static void init_sttranif_chan(struct chanrec_t *chanp)$/;"	f	file:	signature:(struct chanrec_t *chanp)
init_stwire_accum	./v_ex4.c	/^static struct xstk_t *init_stwire_accum(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
init_svec_var	./v_prp2.c	/^static void init_svec_var(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
init_syp	./v.h	/^ struct sy_t *init_syp;$/;"	m	struct:varinitlst_t	typeref:struct:varinitlst_t::sy_t	access:public
init_task	./v_src.c	/^static void init_task(struct task_t *tskp)$/;"	f	file:	signature:(struct task_t *tskp)
init_thrd	./v_ex.c	/^static void init_thrd(struct thread_t *thp)$/;"	f	file:	signature:(struct thread_t *thp)
init_tmp_flags	./v_regasn.c	/^static void init_tmp_flags(struct flowg_t *fgp,$/;"	f	file:	signature:(struct flowg_t *fgp, struct avlnode_t **tn_ref_avltab, int32 tn_refs)
init_tranif_gate	./v_sim.c	/^static void init_tranif_gate(struct gate_t *gp)$/;"	f	file:	signature:(struct gate_t *gp)
init_udp	./v_sim.c	/^static void init_udp(struct gate_t *gp)$/;"	f	file:	signature:(struct gate_t *gp)
init_utab	./v_prp.c	/^static void init_utab(word32 *taddr, int32 blen)$/;"	f	file:	signature:(word32 *taddr, int32 blen)
init_var_random	./v_prp2.c	/^static void init_var_random(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
init_vec2s_var	./v_prp2.c	/^static void init_vec2s_var(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
init_vec2s_var_random	./v_prp2.c	/^static void init_vec2s_var_random(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
init_vec_var	./v_prp2.c	/^static void init_vec_var(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
init_vec_var_random	./v_prp2.c	/^static void init_vec_var_random(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
init_vpi_del	./v_sdf.c	/^static void init_vpi_del(struct t_vpi_delay *vdp, int32 ndels)$/;"	f	file:	signature:(struct t_vpi_delay *vdp, int32 ndels)
init_wires	./v_sim.c	/^static void init_wires(void)$/;"	f	file:	signature:(void)
init_xmrcmp	./v_genfx.c	/^static void init_xmrcmp(struct xmrcmp_t *xmp)$/;"	f	file:	signature:(struct xmrcmp_t *xmp)
init_xp	./v.h	/^ struct expr_t *init_xp;$/;"	m	struct:varinitlst_t	typeref:struct:varinitlst_t::expr_t	access:public
inline	./lz4.h	53;"	d
inmdp	./igen.h	/^ struct mod_t *inmdp;         \/* module then isns was generated *\/$/;"	m	struct:insn_t	typeref:struct:insn_t::mod_t	access:public
inout_unc	./v.h	/^ unsigned inout_unc : 1;      \/* T => this inout unc. somewhere *\/$/;"	m	struct:mod_pin_t	access:public
inpsel_xpr_markparam	./v_fx2.c	/^static void inpsel_xpr_markparam(struct expr_t *xp)$/;"	f	file:	signature:(struct expr_t *xp)
inrnges_mark_params	./v_fx2.c	/^static void inrnges_mark_params(struct symtab_t *sytp)$/;"	f	file:	signature:(struct symtab_t *sytp)
ins_argno	./v.h	/^ int32 ins_argno;$/;"	m	struct:macexp_t	access:public
ins_optlst_marker	./cvc.c	/^static void ins_optlst_marker(int32 is_bmark, int32 lev)$/;"	f	file:	signature:(int32 is_bmark, int32 lev)
insert_1wrd_ndxreg_mov	./v_bbgen3.c	/^static int32 insert_1wrd_ndxreg_mov(int32 op_ti) $/;"	f	file:	signature:(int32 op_ti)
insert_brkpt	./v_dbg2.c	/^static void insert_brkpt(struct brkpt_t *bpp)$/;"	f	file:	signature:(struct brkpt_t *bpp)
insert_fg_deflsts	./v_bbopt.c	/^static void insert_fg_deflsts(struct flowg_t *fgp,$/;"	f	file:	signature:(struct flowg_t *fgp, struct avlnode_t **tn_ref_avltab, int32 num_tnrefs)
insn_info	./v_cvcms.c	/^static struct insn_info_t insn_info[] = {$/;"	v	typeref:struct:insn_info_t	file:
insn_info_ndx	./v_cvcms.c	/^struct insn_info_t **insn_info_ndx;$/;"	v	typeref:struct:insn_info_t
insn_info_t	./igen.h	/^struct insn_info_t {$/;"	s
insn_info_t::iclass	./igen.h	/^ unsigned iclass : 8;$/;"	m	struct:insn_info_t	access:public
insn_info_t::inam	./igen.h	/^ char *inam;$/;"	m	struct:insn_info_t	access:public
insn_info_t::inum	./igen.h	/^ int32 inum;$/;"	m	struct:insn_info_t	access:public
insn_info_t::rdwr_siz	./igen.h	/^ unsigned rdwr_siz : 8;$/;"	m	struct:insn_info_t	access:public
insn_ndx_srch	./v_bbopt.c	/^static int32 insn_ndx_srch(int32 ndx, int32 *insn_ndx_bbtab, int32 nbblks)$/;"	f	file:	signature:(int32 ndx, int32 *insn_ndx_bbtab, int32 nbblks)
insn_offset_access	./v_bbopt.c	/^static int32 insn_offset_access(struct insn_t *ip, int32 idp_ti)$/;"	f	file:	signature:(struct insn_t *ip, int32 idp_ti)
insn_t	./igen.h	/^struct insn_t { $/;"	s
insn_t::callasl_argnum	./igen.h	/^ unsigned callasl_argnum : 4; \/* for unlowered asl calls, number of args *\/$/;"	m	struct:insn_t	access:public
insn_t::extrau	./igen.h	/^ union i_extrainfo_u extrau;  \/* for special case insns ptr to extra info *\/$/;"	m	struct:insn_t	typeref:union:insn_t::i_extrainfo_u	access:public
insn_t::idst	./igen.h	/^ struct amode_t idst;         \/* dest. addressing mode *\/$/;"	m	struct:insn_t	typeref:struct:insn_t::amode_t	access:public
insn_t::ifru	./igen.h	/^ union ifrom_u ifru;          \/* nl object .v file insn gened from *\/$/;"	m	struct:insn_t	typeref:union:insn_t::ifrom_u	access:public
insn_t::inmdp	./igen.h	/^ struct mod_t *inmdp;         \/* module then isns was generated *\/$/;"	m	struct:insn_t	typeref:struct:insn_t::mod_t	access:public
insn_t::inxt	./igen.h	/^ struct insn_t *inxt;$/;"	m	struct:insn_t	typeref:struct:insn_t::insn_t	access:public
insn_t::iprev	./igen.h	/^ struct insn_t *iprev;$/;"	m	struct:insn_t	typeref:struct:insn_t::insn_t	access:public
insn_t::is_coal_out	./igen.h	/^ unsigned is_coal_out : 1;    \/* linkout coal move for 1st reg pass *\/ $/;"	m	struct:insn_t	access:public
insn_t::is_coal_out2	./igen.h	/^ unsigned is_coal_out2 : 1;   \/* linkout coal move for 2nd reg pass *\/ $/;"	m	struct:insn_t	access:public
insn_t::is_dpi_enter	./igen.h	/^ unsigned is_dpi_enter : 1;   \/* T => is dpi enter insn *\/$/;"	m	struct:insn_t	access:public
insn_t::is_export_stack	./igen.h	/^ unsigned is_export_stack : 1; \/* export DPI task arg on stack *\/$/;"	m	struct:insn_t	access:public
insn_t::is_large_ofs	./igen.h	/^ unsigned is_large_ofs : 1;   \/* is large model idp ofs insn *\/ $/;"	m	struct:insn_t	access:public
insn_t::is_store	./igen.h	/^ unsigned is_store : 1;       \/* is a store insn *\/$/;"	m	struct:insn_t	access:public
insn_t::isrc	./igen.h	/^ struct amode_t isrc;         \/* src addressing mode *\/$/;"	m	struct:insn_t	typeref:struct:insn_t::amode_t	access:public
insn_t::jmptyp	./igen.h	/^ unsigned jmptyp : 6;         \/* this is just the condition code (cc) *\/$/;"	m	struct:insn_t	access:public
insn_t::ndx	./igen.h	/^ int32 ndx;                   \/* insn index (identifier) *\/$/;"	m	struct:insn_t	access:public
insn_t::opcod	./igen.h	/^ unsigned opcod : 16;         \/* high level vm insn op code *\/$/;"	m	struct:insn_t	access:public
insn_t::optu	./igen.h	/^ union optim_u optu;          \/* short lived optimization fields *\/$/;"	m	struct:insn_t	typeref:union:insn_t::optim_u	access:public
insn_t::res_tni	./igen.h	/^ int32 res_tni;               \/* original risc vm insns can be 3 addr *\/$/;"	m	struct:insn_t	access:public
insn_t::sgn_jmp	./igen.h	/^ unsigned sgn_jmp : 1;        \/* T if jump is signed (chks SF flag) *\/$/;"	m	struct:insn_t	access:public
insn_t::symb_res_val	./igen.h	/^ unsigned symb_res_val : 2;   \/* symbolic result value - including unkn *\/$/;"	m	struct:insn_t	access:public
insn_t::trk_later_del	./igen.h	/^ unsigned trk_later_del : 1;  \/* T => in trk removal, must mark before del *\/$/;"	m	struct:insn_t	access:public
inst_gen_t	./v.h	/^struct inst_gen_t {$/;"	s
inst_gen_t::ip	./v.h	/^ struct inst_t *ip;$/;"	m	struct:inst_gen_t	typeref:struct:inst_gen_t::inst_t	access:public
inst_gen_t::srclocp	./v.h	/^ struct srcloc_t *srclocp;$/;"	m	struct:inst_gen_t	typeref:struct:inst_gen_t::srcloc_t	access:public
inst_nparms_to_xtab	./v_fx.c	/^static struct expr_t **inst_nparms_to_xtab(struct namparam_t *npmphdr,$/;"	f	file:	signature:(struct namparam_t *npmphdr, struct inst_t *ip)
inst_split	./v.h	/^ struct inst_t *inst_split;   \/* instance split from *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::inst_t	access:public
inst_t	./v.h	/^struct inst_t {$/;"	s
inst_t::i_giap	./v.h	/^ struct gia_aux_t *i_giap;    \/* arr of insts info gia aux record *\/$/;"	m	struct:inst_t	typeref:struct:inst_t::gia_aux_t	access:public
inst_t::i_iscell	./v.h	/^ unsigned i_iscell : 1;       \/* instance is a cell *\/$/;"	m	struct:inst_t	access:public
inst_t::i_pnddefsplit	./v.h	/^ unsigned i_pnddefsplit : 1;     \/* T => must pound param split *\/$/;"	m	struct:inst_t	access:public
inst_t::iattrs	./v.h	/^ struct attr_t *iattrs;       \/* attribute table for inst. *\/$/;"	m	struct:inst_t	typeref:struct:inst_t::attr_t	access:public
inst_t::imsym	./v.h	/^ struct sy_t *imsym;          \/* module type symbol *\/$/;"	m	struct:inst_t	typeref:struct:inst_t::sy_t	access:public
inst_t::ip_explicit	./v.h	/^ unsigned ip_explicit : 1;$/;"	m	struct:inst_t	access:public
inst_t::ipins	./v.h	/^ struct expr_t **ipins;       \/* ptr to array of port expr ptrs *\/$/;"	m	struct:inst_t	typeref:struct:inst_t::expr_t	access:public
inst_t::ipxprtab	./v.h	/^ struct expr_t **ipxprtab;    \/* inst. pound param expr. table, nil for none *\/$/;"	m	struct:inst_t	typeref:struct:inst_t::expr_t	access:public
inst_t::isym	./v.h	/^ struct sy_t *isym;$/;"	m	struct:inst_t	typeref:struct:inst_t::sy_t	access:public
inst_t::pb_ipins_tab	./v.h	/^ struct expr_t ***pb_ipins_tab; \/* if non nil, ptr to pb sep pin expr tab *\/ $/;"	m	struct:inst_t	typeref:struct:inst_t::expr_t	access:public
inst_t::pprm_explicit	./v.h	/^ unsigned pprm_explicit : 1;  \/* has explicit form pound params *\/$/;"	m	struct:inst_t	access:public
int32	./v.h	/^typedef int int32;$/;"	t
int_cmp	./v_regasn.c	/^static int32 int_cmp(const void *c1, const void *c2)$/;"	f	file:	signature:(const void *c1, const void *c2)
intptr_u	./v.h	/^union intptr_u {$/;"	u
intptr_u::i	./v.h	/^ int32 i;$/;"	m	union:intptr_u	access:public
intptr_u::xvi	./v.h	/^ int32 xvi;$/;"	m	union:intptr_u	access:public
inum	./igen.h	/^ int32 inum;$/;"	m	struct:insn_info_t	access:public
invert_jmp_operands	./v_bbgen3.c	/^static void invert_jmp_operands(int32 opcod, struct bblk_t *t_bbp, $/;"	f	file:	signature:(int32 opcod, struct bblk_t *t_bbp, struct bblk_t *f_bbp, int32 op1_ti, int32 op2_ti, int32 cc, int32 is_signed)
inxt	./igen.h	/^ struct insn_t *inxt;$/;"	m	struct:insn_t	typeref:struct:insn_t::insn_t	access:public
iodecl_prop_vpiget	./v_vpi2.c	/^static int32 iodecl_prop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
iodeclstrprop_vpiget	./v_vpi2.c	/^static char *iodeclstrprop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
iop_ptr	./v.h	/^ union pck_u iop_ptr;         \/* for special malloc iopt node ptr to area *\/$/;"	m	union:r_u	typeref:union:r_u::pck_u	access:public
iotyp	./v.h	/^ unsigned iotyp : 3;          \/* I\/O direction *\/$/;"	m	struct:net_t	access:public
ip	./v.h	/^ struct inst_t *ip;$/;"	m	struct:inst_gen_t	typeref:struct:inst_gen_t::inst_t	access:public
ip_explicit	./v.h	/^ unsigned ip_explicit : 1;$/;"	m	struct:inst_t	access:public
ip_trk_valp	./igen.h	/^ word32 *ip_trk_valp;         \/* insn tracked out (result) value *\/$/;"	m	struct:iusedef_t	access:public
ipins	./v.h	/^ struct expr_t **ipins;       \/* ptr to array of port expr ptrs *\/$/;"	m	struct:inst_t	typeref:struct:inst_t::expr_t	access:public
iploctab	./v.h	/^ struct srcloc_t **iploctab;  \/* || to insts ptr tab to tab of port locs *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::srcloc_t	access:public
iprev	./igen.h	/^ struct insn_t *iprev;$/;"	m	struct:insn_t	typeref:struct:insn_t::insn_t	access:public
ipth2_cmp	./v_genfx.c	/^static int32 ipth2_cmp(struct dfparam_t *dfpp1, struct dfparam_t *dfpp2)$/;"	f	file:	signature:(struct dfparam_t *dfpp1, struct dfparam_t *dfpp2)
ipth_cmp	./v_genfx.c	/^static int32 ipth_cmp(const void *dfpp1p, const void *dfpp2p)$/;"	f	file:	signature:(const void *dfpp1p, const void *dfpp2p)
ipxprtab	./v.h	/^ struct expr_t **ipxprtab;    \/* inst. pound param expr. table, nil for none *\/$/;"	m	struct:inst_t	typeref:struct:inst_t::expr_t	access:public
is1v_nds_64bits	./v_asmlnk.c	/^static int32 is1v_nds_64bits(union del_u isdelu, int32 ninsts)$/;"	f	file:	signature:(union del_u isdelu, int32 ninsts)
is2_chg_match	./v_sim.c	/^static int32 is2_chg_match(int32 nbi2_xvi, int32 npi1, int32 npi2)$/;"	f	file:	signature:(int32 nbi2_xvi, int32 npi1, int32 npi2)
is_1arg_transcendental	./v_bbgen.c	/^static int32 is_1arg_transcendental(int32 syfnum, int32 *asl_typ)$/;"	f	file:	signature:(int32 syfnum, int32 *asl_typ)
is_1bwire	./v_fx3.c	/^static int32 is_1bwire(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
is_2state	./v.h	/^ unsigned is_2state : 1;      \/* T => toggled net is 2-state *\/$/;"	m	struct:rt_tgl_t	access:public
is_alias	./fstapi.h	/^                unsigned is_alias : 1;$/;"	m	struct:fstHier::__anon18::fstHierVar	access:public
is_always	./v.h	/^ unsigned is_always : 1;        \/* T => used as always block trigger *\/ $/;"	m	struct:delctrl_t	access:public
is_argv	./v.h	/^ unsigned is_argv : 1;$/;"	m	struct:optlst_t	access:public
is_auto	./v.h	/^ unsigned is_auto : 1;          \/* T => is automatic task *\/$/;"	m	struct:task_t	access:public
is_bmark	./v.h	/^ unsigned is_bmark : 1;       \/* special -f markers for vpi_ *\/         $/;"	m	struct:optlst_t	access:public
is_call	./v_regasn.c	/^static int32 is_call(int32 opcod)$/;"	f	file:	signature:(int32 opcod)
is_casejmp_item	./igen.h	/^ unsigned is_casejmp_item : 1;   \/* T => block is jmp case item  *\/$/;"	m	struct:bblk_t	access:public
is_coal_out	./igen.h	/^ unsigned is_coal_out : 1;    \/* linkout coal move for 1st reg pass *\/ $/;"	m	struct:insn_t	access:public
is_coal_out2	./igen.h	/^ unsigned is_coal_out2 : 1;   \/* linkout coal move for 2nd reg pass *\/ $/;"	m	struct:insn_t	access:public
is_commutative_insn	./v_bbopt.c	/^static int32 is_commutative_insn(int32 opcod)$/;"	f	file:	signature:(int32 opcod)
is_con_func	./v.h	/^ unsigned is_con_func : 1;    \/* T => when const args, is a const func *\/$/;"	m	struct:task_t	access:public
is_const	./v.h	/^ unsigned is_const: 1;      \/* T => is constant *\/$/;"	m	struct:net_chg_t	access:public
is_const_is1v_delay	./v_asmlnk.c	/^static int32 is_const_is1v_delay(int32 dtyp)$/;"	f	file:	signature:(int32 dtyp)
is_cp_conf_image	./v.h	/^ unsigned is_cp_conf_image : 1; \/* T => this is elaborate const copy *\/$/;"	m	struct:task_t	access:public
is_dctrl_in_array	./v_prp.c	/^static int32 is_dctrl_in_array(struct delctrl_t *dctp, struct delctrl_t **da, $/;"	f	file:	signature:(struct delctrl_t *dctp, struct delctrl_t **da, int32 count)
is_decl_err	./v_src.c	/^static int32 is_decl_err(struct sy_t *syp, word32 dclsytyp,$/;"	f	file:	signature:(struct sy_t *syp, word32 dclsytyp, word32 dclwtyp)
is_dpi_enter	./igen.h	/^ unsigned is_dpi_enter : 1;   \/* T => is dpi enter insn *\/$/;"	m	struct:insn_t	access:public
is_edgesym	./v_src3.c	/^static int32 is_edgesym(char ch)$/;"	f	file:	signature:(char ch)
is_emark	./v.h	/^ unsigned is_emark : 1;$/;"	m	struct:optlst_t	access:public
is_enter	./v.h	/^ unsigned is_enter : 1;       \/* T => stmt has a enter location *\/$/;"	m	struct:st_t	access:public
is_enter_insn	./v_bbopt.c	/^static int32 is_enter_insn(int32 opcod)$/;"	f	file:	signature:(int32 opcod)
is_enter_loop	./igen.h	/^ unsigned is_enter_loop : 1;  \/* T => block is loop enter  *\/$/;"	m	struct:bblk_t	access:public
is_expanded_foreach	./v.h	/^ unsigned is_expanded_foreach : 1;    \/* T => is expanded foreach statement *\/$/;"	m	struct:for_t	access:public
is_export_stack	./igen.h	/^ unsigned is_export_stack : 1; \/* export DPI task arg on stack *\/$/;"	m	struct:insn_t	access:public
is_fmon	./v.h	/^ unsigned is_fmon : 1;        \/* monitor is fmon *\/$/;"	m	struct:dcevnt_t	access:public
is_for_foldable	./v_prp2.c	/^static struct net_t *is_for_foldable(struct st_t *stp, int32 *from_val,$/;"	f	file:	signature:(struct st_t *stp, int32 *from_val, int32 *to_val, int32 *is_inc)
is_gate_loaded	./v_asmlnk.c	/^static int32 is_gate_loaded(struct gate_t *gp)$/;"	f	file:	signature:(struct gate_t *gp)
is_iconn_port_scalar_opt	./v.h	/^ unsigned is_iconn_port_scalar_opt : 1; \/* T => optim scalar iconn port op *\/$/;"	m	struct:net_t	access:public
is_initial_time	./fstapi.c	/^unsigned is_initial_time : 1;$/;"	m	struct:fstWriterContext	file:	access:public
is_int_returning_asl	./v_bbopt.c	/^static int32 is_int_returning_asl(struct insn_t *ip)$/;"	f	file:	signature:(struct insn_t *ip)
is_inter_blk	./v.h	/^ unsigned is_inter_blk : 1;    \/* T => is internal named block *\/$/;"	m	struct:task_t	access:public
is_labnam	./igen.h	/^ unsigned is_labnam : 1;      \/* union apu is a label string *\/ $/;"	m	struct:amode_t	access:public
is_large_label	./igen.h	/^ unsigned is_large_label : 1; \/* is large model label *\/ $/;"	m	struct:amode_t	access:public
is_large_ofs	./igen.h	/^ unsigned is_large_ofs : 1;   \/* is large model idp ofs insn *\/ $/;"	m	struct:insn_t	access:public
is_loaded	./v.h	/^ unsigned is_loaded : 1;      \/* T => conta is loaded (passed) to wrapper *\/$/;"	m	struct:conta_t	access:public
is_loaded	./v.h	/^ unsigned is_loaded : 1;      \/* T => dce is loaded (passed) to wrapper *\/$/;"	m	struct:dcevnt_t	access:public
is_loaded	./v.h	/^ unsigned is_loaded : 1;      \/* T => expr is loaded (passed) to wrapper *\/$/;"	m	struct:expr_t	access:public
is_loaded	./v.h	/^ unsigned is_loaded : 1;      \/* T => grp is loaded *\/$/;"	m	struct:gref_t	access:public
is_loaded	./v.h	/^ unsigned is_loaded : 1;      \/* T => net is loaded (passed) to a wrapper *\/$/;"	m	struct:net_t	access:public
is_loaded	./v.h	/^ unsigned is_loaded : 1;      \/* T => net_pin is loaded (passed) to a wrapper *\/$/;"	m	struct:net_pin_t	access:public
is_loaded	./v.h	/^ unsigned is_loaded : 1;      \/* T => stmt is loaded (passed) to a wrapper *\/$/;"	m	struct:st_t	access:public
is_loaded	./v.h	/^ unsigned is_loaded : 1;      \/* T => task is loaded (passed) to a wrapper *\/$/;"	m	struct:task_t	access:public
is_lowered	./v.h	/^ unsigned is_lowered : 1;   \/* T => this net change used in compiled code *\/$/;"	m	struct:net_chg_t	access:public
is_mdatabit	./v_ex2.c	/^static int32 is_mdatabit(int32 c)$/;"	f	file:	signature:(int32 c)
is_mdataxdigit	./v_ex2.c	/^static int32 is_mdataxdigit(int32 c)$/;"	f	file:	signature:(int32 c)
is_merged	./v.h	/^ unsigned is_merged : 1;        \/* T => has been merged into head dctl *\/ $/;"	m	struct:delctrl_t	access:public
is_move_insn	./v_regasn.c	/^static int32 is_move_insn(int32 opcod)$/;"	f	file:	signature:(int32 opcod)
is_nb	./igen.h	/^ unsigned is_nb : 1;          \/* T => fg is nb *\/$/;"	m	struct:flowg_t	access:public
is_nb_enter	./v.h	/^ unsigned is_nb_enter : 1;    \/* T => stmt has a nb enter location *\/$/;"	m	struct:st_t	access:public
is_nb_free	./igen.h	/^ unsigned is_nb_free : 1;     \/* T => nb has free version *\/$/;"	m	struct:flowg_t	access:public
is_nb_rhs_mem	./igen.h	/^ unsigned is_nb_rhs_mem : 1;  \/* T => fg is nb with possible malloc mem *\/$/;"	m	struct:flowg_t	access:public
is_nonis_const_expr	./v_fx2.c	/^static int32 is_nonis_const_expr(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
is_norm_ndx	./v.h	/^ unsigned is_norm_ndx : 1;    \/* T => expr is already normalize ndx *\/$/;"	m	struct:expr_t	access:public
is_one_path_same	./v_bbgen2.c	/^static int32 is_one_path_same(union del_u du, int32 drep, word64 *val)$/;"	f	file:	signature:(union del_u du, int32 drep, word64 *val)
is_paramconstxpr	./v_fx3.c	/^static int32 is_paramconstxpr(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
is_path_same_delrep	./v_bbgen2.c	/^static int32 is_path_same_delrep(struct pthdst_t *pdp)$/;"	f	file:	signature:(struct pthdst_t *pdp)
is_power_of2	./v_bbgen3.c	/^static int32 is_power_of2(word32 opval)$/;"	f	file:	signature:(word32 opval)
is_printed	./v.h	/^ unsigned is_printed : 1;     \/* T => compiled global is printed *\/$/;"	m	struct:conta_t	access:public
is_printed	./v.h	/^ unsigned is_printed : 1;     \/* T => compiled global is printed *\/$/;"	m	struct:dcevnt_t	access:public
is_printed	./v.h	/^ unsigned is_printed : 1;     \/* T => compiled global is printed *\/$/;"	m	struct:gref_t	access:public
is_printed	./v.h	/^ unsigned is_printed : 1;     \/* T => compiled global is printed *\/$/;"	m	struct:net_pin_t	access:public
is_printed	./v.h	/^ unsigned is_printed : 1;     \/* T => compiled global is printed *\/$/;"	m	struct:net_t	access:public
is_printed	./v.h	/^ unsigned is_printed : 1;     \/* T => compiled global is printed *\/$/;"	m	struct:st_t	access:public
is_printed	./v.h	/^ unsigned is_printed : 1;     \/* T => compiled global is printed *\/$/;"	m	struct:task_t	access:public
is_printed	./v.h	/^ unsigned is_printed : 1;   \/* T => has been printed to asm file *\/$/;"	m	struct:net_chg_t	access:public
is_real	./v.h	/^ unsigned is_real : 1;        \/* T => expr. value is real number *\/$/;"	m	struct:expr_t	access:public
is_real_insn	./v_asmlnk.c	/^static int32 is_real_insn(struct insn_t *ip)$/;"	f	file:	signature:(struct insn_t *ip)
is_reg_amode	./v_cvcms.c	/^static int32 is_reg_amode(int32 amod)$/;"	f	file:	signature:(int32 amod)
is_rooted	./v.h	/^ unsigned is_rooted : 1;      \/* T => path starts at top module root *\/$/;"	m	struct:gref_t	access:public
is_scalar	./igen.h	/^ unsigned is_scalar : 1;         \/* T => true is scalar *\/$/;"	m	struct:nb_stmt_lst_t	access:public
is_signed_decimal	./v_fx3.c	/^static int32 is_signed_decimal(struct expr_t *xp)$/;"	f	file:	signature:(struct expr_t *xp)
is_simplex	./v_cnv.c	/^static int32 is_simplex(struct expr_t *xp)$/;"	f	file:	signature:(struct expr_t *xp)
is_stlst_lhs_assign	./v_xprop.c	/^static int32 is_stlst_lhs_assign(struct st_t *hd_stp, int32 *has_nested,$/;"	f	file:	signature:(struct st_t *hd_stp, int32 *has_nested, int32 *has_one_id, struct st_t *top_stp)
is_store	./igen.h	/^ unsigned is_store : 1;       \/* is a store insn *\/$/;"	m	struct:insn_t	access:public
is_string	./v.h	/^ unsigned is_string : 1;      \/* T => constant in src as string (quoted) *\/$/;"	m	struct:expr_t	access:public
is_sv_string	./v.h	/^ unsigned is_sv_string : 1;   \/* T => expr is a SystemVerilog 'string' *\/$/;"	m	struct:expr_t	access:public
is_sysfunc	./v.h	/^ unsigned is_sysfunc : 1;     \/* t +> vpi_ systf func *\/$/;"	m	struct:vpisystf_t	access:public
is_tn_general_reg	./v_regasn.c	/^static int32 is_tn_general_reg(int32 ti)$/;"	f	file:	signature:(int32 ti)
is_tokstren	./v_src.c	/^static int32 is_tokstren(int32 ttyp)$/;"	f	file:	signature:(int32 ttyp)
is_top_level	./v.h	/^ unsigned is_top_level : 1;      \/* x-prop is top level *\/$/;"	m	struct:xprop_t	access:public
is_tran_force_vec	./v.h	/^ unsigned is_tran_force_vec : 1; \/* T => is from a tran force vector *\/$/;"	m	struct:net_chg_t	access:public
is_unop	./v_src2.c	/^static int32 is_unop(word32 otyp)$/;"	f	file:	signature:(word32 otyp)
is_unsupported_asl_insn	./v_bbopt.c	/^static int32 is_unsupported_asl_insn(int32 asltyp)$/;"	f	file:	signature:(int32 asltyp)
is_use	./v.h	/^ unsigned is_use : 1;         \/* T => 'use' else 'liblist' *\/ $/;"	m	struct:cfgrule_t	access:public
is_void_func	./v.h	/^ unsigned is_void_func : 1;    \/* T => is SV void func *\/$/;"	m	struct:task_t	access:public
is_wire_ev	./v.h	/^ unsigned is_wire_ev: 1;    \/* T => is wire event *\/$/;"	m	struct:net_chg_t	access:public
is_xprop_stmt_not_id	./v_xprop.c	/^static int32 is_xprop_stmt_not_id(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
is_xz	./igen.h	/^ unsigned is_xz : 1;          \/* T => block is x\/z block *\/$/;"	m	struct:bblk_t	access:public
isnum_cmp	./v_prp2.c	/^static int32 isnum_cmp(const void *np1, const void *np2)$/;"	f	file:	signature:(const void *np1, const void *np2)
isnum_idp_ofs	./v.h	/^ size_t isnum_idp_ofs;      \/* idp offset if expr is an IS num in idp area *\/$/;"	m	struct:prep_obj_t	access:public
isnum_tree	./v.h	/^ struct avlhd_t *isnum_tree;  \/* holds isnum objects to place into idp *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::avlhd_t	access:public
isolate_tgldat_el	./v_cvr.c	/^static char *isolate_tgldat_el(char *linep, int32 endch)$/;"	f	file:	signature:(char *linep, int32 endch)
isparam_ninsts	./v.h	/^ int32 isparam_ninsts;$/;"	m	struct:ncomp_t	access:public
isrc	./igen.h	/^ struct amode_t isrc;         \/* src addressing mode *\/$/;"	m	struct:insn_t	typeref:struct:insn_t::amode_t	access:public
isrc_defip	./igen.h	/^ struct insn_t *isrc_defip;   \/* if src is a tn ref, insn that defines it *\/$/;"	m	struct:iusedef_t	typeref:struct:iusedef_t::insn_t	access:public
istep_msg	./v_dbg.c	/^static char *istep_msg[] = { $/;"	v	file:
isym	./v.h	/^ struct sy_t *isym;$/;"	m	struct:inst_t	typeref:struct:inst_t::sy_t	access:public
it_idp	./v.h	/^ t_midat *it_idp;             \/* RT (after v_prp) ptr to mod var peri data *\/$/;"	m	struct:itree_t	access:public
itail	./igen.h	/^ struct insn_t *itail;        \/* and its tail *\/$/;"	m	struct:bblk_t	typeref:struct:bblk_t::insn_t	access:public
itd_u	./v.h	/^union itd_u { $/;"	u
itd_u::idp	./v.h	/^ t_midat *idp;$/;"	m	union:itd_u	access:public
itd_u::itp	./v.h	/^ struct itree_t *itp; $/;"	m	union:itd_u	typeref:struct:itd_u::itree_t	access:public
itinum	./v.h	/^ int32 itinum;$/;"	m	struct:itree_t	access:public
itip	./v.h	/^ struct inst_t *itip;         \/* corresponding inst_t info *\/$/;"	m	struct:itree_t	typeref:struct:itree_t::inst_t	access:public
itp	./v.h	/^ struct itree_t *itp; $/;"	m	union:itd_u	typeref:struct:itd_u::itree_t	access:public
itp_under_cntxt	./v_sdf.c	/^static int32 itp_under_cntxt(struct itree_t *itp)$/;"	f	file:	signature:(struct itree_t *itp)
itree_t	./v.h	/^struct itree_t {$/;"	s
itree_t::in_its	./v.h	/^ struct itree_t *in_its;      \/* array of low itree elements *\/$/;"	m	struct:itree_t	typeref:struct:itree_t::itree_t	access:public
itree_t::it_idp	./v.h	/^ t_midat *it_idp;             \/* RT (after v_prp) ptr to mod var peri data *\/$/;"	m	struct:itree_t	access:public
itree_t::itinum	./v.h	/^ int32 itinum;$/;"	m	struct:itree_t	access:public
itree_t::itip	./v.h	/^ struct inst_t *itip;         \/* corresponding inst_t info *\/$/;"	m	struct:itree_t	typeref:struct:itree_t::inst_t	access:public
itree_t::up_it	./v.h	/^ struct itree_t *up_it;       \/* containing itree inst. *\/$/;"	m	struct:itree_t	typeref:struct:itree_t::itree_t	access:public
iusedef_t	./igen.h	/^struct iusedef_t {$/;"	s
iusedef_t::idst_defip	./igen.h	/^ struct insn_t *idst_defip;   \/* if dst is a tn ref, insn that defines it *\/$/;"	m	struct:iusedef_t	typeref:struct:iusedef_t::insn_t	access:public
iusedef_t::ip_trk_valp	./igen.h	/^ word32 *ip_trk_valp;         \/* insn tracked out (result) value *\/$/;"	m	struct:iusedef_t	access:public
iusedef_t::isrc_defip	./igen.h	/^ struct insn_t *isrc_defip;   \/* if src is a tn ref, insn that defines it *\/$/;"	m	struct:iusedef_t	typeref:struct:iusedef_t::insn_t	access:public
iusedef_t::savchain_ip	./igen.h	/^ struct insn_t *savchain_ip;  \/* for tn define or deflst insn, previous def *\/$/;"	m	struct:iusedef_t	typeref:struct:iusedef_t::insn_t	access:public
iusedef_t::trk_nbytes	./igen.h	/^ int32 trk_nbytes;            \/* number of bytes in tracked area *\/$/;"	m	struct:iusedef_t	access:public
ival	./v.h	/^ unsigned ival : 8;           \/* initial value (0,1,3 - none) *\/$/;"	m	struct:udp_t	access:public
j_hash	./fstapi.c	/^static uint32_t j_hash(const uint8_t *k, uint32_t length, uint32_t initval)$/;"	f	file:	signature:(const uint8_t *k, uint32_t length, uint32_t initval)
jmptyp	./igen.h	/^ unsigned jmptyp : 6;         \/* this is just the condition code (cc) *\/$/;"	m	struct:insn_t	access:public
job_id	./v.h	/^ int32 job_id;$/;"	m	struct:q_val_t	access:public
jtabsiz	./igen.h	/^ int32 jtabsiz;                \/* number of blocks in table *\/$/;"	m	struct:ndxjmp_t	access:public
jtabstart	./igen.h	/^ int32 jtabstart;              \/* start of first block *\/$/;"	m	struct:ndxjmp_t	access:public
l_u	./v.h	/^union l_u {$/;"	u
l_u::si	./v.h	/^ int32 si; \/* for compile\/save changed to indices *\/$/;"	m	union:l_u	access:public
l_u::sy	./v.h	/^ struct sy_t *sy;$/;"	m	union:l_u	typeref:struct:l_u::sy_t	access:public
l_u::x	./v.h	/^ struct expr_t *x;$/;"	m	union:l_u	typeref:struct:l_u::expr_t	access:public
l_u::xi	./v.h	/^ int32 xi; \/* for compile\/save changed to indices *\/$/;"	m	union:l_u	access:public
labnam	./igen.h	/^ char *labnam;$/;"	m	union:am_ptr_u	access:public
last_dfp_gitem	./v.h	/^ struct genitem_t *last_dfp_gitem;$/;"	m	struct:genblk_t	typeref:struct:genblk_t::genitem_t	access:public
last_dfpi	./v.h	/^ int32 last_dfpi;             \/* last element of path *\/$/;"	m	struct:dfparam_t	access:public
last_gitem	./v.h	/^ struct genitem_t *last_gitem;$/;"	m	struct:genblk_t	typeref:struct:genblk_t::genitem_t	access:public
last_gref_gitem	./v.h	/^ struct genitem_t *last_gref_gitem;$/;"	m	struct:genblk_t	typeref:struct:genblk_t::genitem_t	access:public
last_gri	./v.h	/^ int32 last_gri;              \/* last - 1 (1 before target) symbol in path *\/$/;"	m	struct:gref_t	access:public
last_pein	./v.h	/^ int32 last_pein;$/;"	m	struct:spcpth_t	access:public
last_peout	./v.h	/^ int32 last_peout;$/;"	m	struct:spcpth_t	access:public
last_valp	./v.h	/^ word32 *last_valp;           \/* last value time value *\/$/;"	m	struct:rt_tgl_t	access:public
lastchg	./v.h	/^ word64 lastchg;              \/* last chg time for this 1 pth bit of inst *\/$/;"	m	struct:impth_t	access:public
lastchg_ofs	./v.h	/^ size_t lastchg_ofs;          \/* last chg idp ofs time for 1 bit *\/$/;"	m	struct:tchg_t	access:public
lastinum	./v.h	/^ int32 lastinum;              \/* while assigning inums - last used *\/$/;"	m	struct:mod_t	access:public
lbcelndx	./v.h	/^ struct libcellndx_t **lbcelndx; \/* byte offset of cell names for seeking *\/$/;"	m	struct:libel_t	typeref:struct:libel_t::libcellndx_t	access:public
lbefnam	./v.h	/^ char *lbefnam; $/;"	m	struct:libel_t	access:public
lbel_sytab	./v.h	/^ struct symtab_t *lbel_sytab; \/* symbol table of cells in file *\/$/;"	m	struct:libel_t	typeref:struct:libel_t::symtab_t	access:public
lbels	./v.h	/^ struct libel_t *lbels;       \/* list of library file path spec elements *\/$/;"	m	struct:cfglib_t	typeref:struct:cfglib_t::libel_t	access:public
lbelsrc_rd	./v.h	/^ unsigned lbelsrc_rd : 1;     \/* T => expanded lib file name src all read *\/$/;"	m	struct:libel_t	access:public
lbenxt	./v.h	/^ struct libel_t *lbenxt;$/;"	m	struct:libel_t	typeref:struct:libel_t::libel_t	access:public
lbnam_so_suffix	./v_vpi.c	/^static int32 lbnam_so_suffix(char *lbnam)$/;"	f	file:	signature:(char *lbnam)
lbname	./v.h	/^ char *lbname;                \/* library name *\/ $/;"	m	struct:cfglib_t	access:public
lbnxt	./v.h	/^ struct cfglib_t *lbnxt;      \/* pointer to the next library *\/$/;"	m	struct:cfglib_t	typeref:struct:cfglib_t::cfglib_t	access:public
lbsrc_rd	./v.h	/^ unsigned lbsrc_rd : 1;       \/* T => lib src files already read *\/$/;"	m	struct:cfglib_t	access:public
lcbi1	./v.h	/^ int32 lcbi1, lcbi2;          \/* if fi is lhs concat, the rhs val subrange *\/$/;"	m	struct:npaux_t	access:public
lcbi2	./v.h	/^ int32 lcbi1, lcbi2;          \/* if fi is lhs concat, the rhs val subrange *\/$/;"	m	struct:npaux_t	access:public
ld_arr_val_2state	./v_ex2.c	/^static void ld_arr_val_2state(struct xstk_t *xsp, struct expr_t *ndx1, $/;"	f	file:	signature:(struct xstk_t *xsp, struct expr_t *ndx1, struct expr_t *sel_ndx, struct net_t *np, int32 arri, struct gref_t *grp)
ld_pb_sticonn_up_driver	./v_ex4.c	/^static struct xstk_t *ld_pb_sticonn_up_driver(struct net_pin_t *npp)$/;"	f	file:	signature:(struct net_pin_t *npp)
ld_pb_stmodport_down_driver	./v_ex4.c	/^static struct xstk_t *ld_pb_stmodport_down_driver($/;"	f	file:	signature:( struct net_pin_t *npp)
ld_peri_scalval_	./cvmacros.h	311;"	d
ld_scalval_	./cvmacros.h	304;"	d
ld_stconta_driver	./v_ex4.c	/^static struct xstk_t *ld_stconta_driver(struct net_pin_t *npp)$/;"	f	file:	signature:(struct net_pin_t *npp)
ld_stgate_driver	./v_ex4.c	/^static struct xstk_t *ld_stgate_driver(struct net_pin_t *npp)$/;"	f	file:	signature:(struct net_pin_t *npp)
ld_sticonn_up_driver	./v_ex4.c	/^static struct xstk_t *ld_sticonn_up_driver(struct net_pin_t *npp)$/;"	f	file:	signature:(struct net_pin_t *npp)
ld_stmodport_down_driver	./v_ex4.c	/^static struct xstk_t *ld_stmodport_down_driver(struct net_pin_t *npp)$/;"	f	file:	signature:(struct net_pin_t *npp)
ld_stpull_driver	./v_ex4.c	/^static struct xstk_t *ld_stpull_driver(struct net_pin_t *npp)$/;"	f	file:	signature:(struct net_pin_t *npp)
ld_stvpiputv_driver	./v_ex4.c	/^static struct xstk_t *ld_stvpiputv_driver(struct net_pin_t *npp)$/;"	f	file:	signature:(struct net_pin_t *npp)
ld_vtx_netbit	./v_trch.c	/^static void ld_vtx_netbit(word32 *ap, word32 *bp, struct net_t *np, int32 bi)$/;"	f	file:	signature:(word32 *ap, word32 *bp, struct net_t *np, int32 bi)
ld_wire_arr_val	./v_ex2.c	/^static void ld_wire_arr_val(struct xstk_t *xsp, struct expr_t *ndx1, $/;"	f	file:	signature:(struct xstk_t *xsp, struct expr_t *ndx1, struct net_t *np, int32 arri, struct gref_t *grp)
ldcep	./v.h	/^ struct dcevnt_t *ldcep;$/;"	m	struct:dceauxlst_t	typeref:struct:dceauxlst_t::dcevnt_t	access:public
ldcomb_driver	./v_ex4.c	/^static void ldcomb_driver(struct xstk_t *acc_xsp, struct net_t *np,$/;"	f	file:	signature:(struct xstk_t *acc_xsp, struct net_t *np, struct net_pin_t *npp)
ldcomb_stdriver	./v_ex4.c	/^static void ldcomb_stdriver(byte *acc_sbp, struct net_t *np,$/;"	f	file:	signature:(byte *acc_sbp, struct net_t *np, struct net_pin_t *npp)
ldiv_cmp	./v_ex2.c	/^static int32 ldiv_cmp(word32 *u, word32 *v, int32 wlen) $/;"	f	file:	signature:(word32 *u, word32 *v, int32 wlen)
leading_str	./v.h	/^ char *leading_str;$/;"	m	struct:macexp_t	access:public
leadlen	./v.h	/^ int32 leadlen;$/;"	m	struct:macexp_t	access:public
leal_insn	./v_bbgen3.c	/^static int32 leal_insn(int32 src_amode, ...)$/;"	f	file:	signature:(int32 src_amode, ...)
left	./v.h	/^ struct tqnode_t *left;   \/* node's left child *\/$/;"	m	struct:tqnode_t	typeref:struct:tqnode_t::tqnode_t	access:public
left_rotate	./v_sim.c	/^static void left_rotate(struct tqnode_t *x)$/;"	f	file:	signature:(struct tqnode_t *x)
left_rotate_max	./v_sim.c	/^static void left_rotate_max(struct tqnode_t *x)$/;"	f	file:	signature:(struct tqnode_t *x)
legal_delimstr	./v_acc.c	/^static int32 legal_delimstr(char *s)$/;"	f	file:	signature:(char *s)
legal_gia_conn_concat	./v_fx2.c	/^static int32 legal_gia_conn_concat(struct expr_t *xp)$/;"	f	file:	signature:(struct expr_t *xp)
len	./fstapi.c	/^int len;$/;"	m	struct:fstCurrHier	file:	access:public
length	./fstapi.c	/^uint32_t fullhash, length;$/;"	m	struct:collchain_t	file:	access:public
length	./fstapi.h	/^                uint32_t length;$/;"	m	struct:fstHier::__anon18::fstHierVar	access:public
level	./v.h	/^ int32 level;                 \/* current directory level *\/$/;"	m	struct:xpndfile_t	access:public
lhs_chk1dfparam	./v_genfx.c	/^static int32 lhs_chk1dfparam(struct dfparam_t *dfpp)$/;"	f	file:	signature:(struct dfparam_t *dfpp)
lhs_has_figt1	./v_prp2.c	/^static int32 lhs_has_figt1(struct expr_t *lhsx)$/;"	f	file:	signature:(struct expr_t *lhsx)
lhs_id_only	./v.h	/^ int32 *lhs_id_only;             \/* lhs id only *\/$/;"	m	struct:xprop_t	access:public
lhs_is_decl	./v_fx3.c	/^static int32 lhs_is_decl(struct expr_t *xp)$/;"	f	file:	signature:(struct expr_t *xp)
lhsexpr_hassym	./v_fx2.c	/^static int32 lhsexpr_hassym(struct expr_t *ndp, struct sy_t *syp)$/;"	f	file:	signature:(struct expr_t *ndp, struct sy_t *syp)
lhsidp	./v.h	/^ t_midat *lhsidp;$/;"	m	struct:qcval_t	access:public
lhsnets	./v.h	/^ struct net_t **lhsnets;         \/* table of nets on the lhs *\/$/;"	m	struct:xprop_t	typeref:struct:xprop_t::net_t	access:public
lhsx	./v.h	/^ struct expr_t *lhsx;         \/* need to make sure this is an lvalue *\/$/;"	m	struct:proca_t	typeref:struct:proca_t::expr_t	access:public
lhsx	./v.h	/^ struct expr_t *lhsx;$/;"	m	struct:conta_t	typeref:struct:conta_t::expr_t	access:public
lhsx_ndel	./v.h	/^ unsigned lhsx_ndel : 1;      \/* T => wire in lhs expr. has net delay *\/$/;"	m	struct:expr_t	access:public
libel_t	./v.h	/^struct libel_t {$/;"	s
libel_t::expanded	./v.h	/^ unsigned expanded : 1;       \/* T => file has been expanded  *\/ $/;"	m	struct:libel_t	access:public
libel_t::lbcelndx	./v.h	/^ struct libcellndx_t **lbcelndx; \/* byte offset of cell names for seeking *\/$/;"	m	struct:libel_t	typeref:struct:libel_t::libcellndx_t	access:public
libel_t::lbefnam	./v.h	/^ char *lbefnam; $/;"	m	struct:libel_t	access:public
libel_t::lbel_sytab	./v.h	/^ struct symtab_t *lbel_sytab; \/* symbol table of cells in file *\/$/;"	m	struct:libel_t	typeref:struct:libel_t::symtab_t	access:public
libel_t::lbelsrc_rd	./v.h	/^ unsigned lbelsrc_rd : 1;     \/* T => expanded lib file name src all read *\/$/;"	m	struct:libel_t	access:public
libel_t::lbenxt	./v.h	/^ struct libel_t *lbenxt;$/;"	m	struct:libel_t	typeref:struct:libel_t::libel_t	access:public
libnam	./v.h	/^ char *libnam;                \/* cell clause: <lib name>.[cell name] *\/$/;"	m	struct:cfgrule_t	access:public
libnam	./v.h	/^ char *libnam;$/;"	m	struct:loadpli_t	access:public
likely	./lz4.c	153;"	d	file:
limit_range_end	./fstapi.c	/^uint64_t limit_range_start, limit_range_end;$/;"	m	struct:fstReaderContext	file:	access:public
limit_range_start	./fstapi.c	/^uint64_t limit_range_start, limit_range_end;$/;"	m	struct:fstReaderContext	file:	access:public
limit_range_valid	./fstapi.c	/^unsigned limit_range_valid : 1;            \/* valid for limit_range_start, limit_range_end *\/$/;"	m	struct:fstReaderContext	file:	access:public
limited	./lz4.c	/^typedef enum { notLimited = 0, limited = 1 } limitedOutput_directive;$/;"	e	enum:__anon6	file:
limitedOutput_directive	./lz4.c	/^typedef enum { notLimited = 0, limited = 1 } limitedOutput_directive;$/;"	t	typeref:enum:__anon6	file:
link_1mod_filter_idata_area	./v_aslib.c	/^static void link_1mod_filter_idata_area(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
link_qc_to_dces	./v_prp2.c	/^static void link_qc_to_dces(struct mod_t *mdp, struct st_t *stp)$/;"	f	file:	signature:(struct mod_t *mdp, struct st_t *stp)
link_stmt_to_dce_list	./v_prp2.c	/^static void link_stmt_to_dce_list(struct dceauxlst_t *dclp, struct st_t *stp)$/;"	f	file:	signature:(struct dceauxlst_t *dclp, struct st_t *stp)
linkin_interp_dpi_dlsyms	./v_dpi.c	/^static void linkin_interp_dpi_dlsyms(void)$/;"	f	file:	signature:(void)
linkin_pb_npp_drvr	./v_ex4.c	/^static void linkin_pb_npp_drvr(struct dpctrl_t *dpcp, struct itree_t *vtx_itp,$/;"	f	file:	signature:(struct dpctrl_t *dpcp, struct itree_t *vtx_itp, struct net_pin_t *npp, int32 bi, int32 is_hiconn_in_drv)
linkon2_dce	./v_prp2.c	/^static struct dcevnt_t *linkon2_dce(struct net_t *np, int32 biti, int32 bitj,$/;"	f	file:	signature:(struct net_t *np, int32 biti, int32 bitj, struct delctrl_t *dctp, int32 e_val, int32 oneinst, struct mod_t *ref_mdp, struct mod_t *decl_mdp)
linkon3_dce	./v_prp2.c	/^static struct dcevnt_t *linkon3_dce(struct net_t *np, int32 biti, int32 bitj,$/;"	f	file:	signature:(struct net_t *np, int32 biti, int32 bitj, struct delctrl_t *dctp, int32 e_val, int32 oneinst, struct mod_t *ref_mdp, struct mod_t *decl_mdp, int32 is_local, struct gref_t *grp, struct itree_t *match_itp, struct itree_t *ref_itp)
linkon_cb_dce	./v_vpi.c	/^static void linkon_cb_dce(struct net_t *np, int32 biti, int32 bitj,$/;"	f	file:	signature:(struct net_t *np, int32 biti, int32 bitj, struct gref_t *grp, struct cbrec_t *cbp, int32 dcetyp)
linkon_dce	./v_prp2.c	/^static void linkon_dce(struct net_t *np, int32 biti, int32 bitj,$/;"	f	file:	signature:(struct net_t *np, int32 biti, int32 bitj, struct delctrl_t *dctp, int32 e_val, struct gref_t *grp)
linkon_monit_dce	./v_ex2.c	/^static void linkon_monit_dce(struct net_t *np, int32 biti, int32 bitj,$/;"	f	file:	signature:(struct net_t *np, int32 biti, int32 bitj, int32 argisvfmt, struct itree_t *ref_itp, struct itree_t *targ_itp)
linkon_qcaf_dce	./v_prp2.c	/^static void linkon_qcaf_dce(struct net_t *np, int32 biti, int32 bitj,$/;"	f	file:	signature:(struct net_t *np, int32 biti, int32 bitj, struct gref_t *grp, struct qcval_t *qcvalp)
linkout_accnext_aiter	./v_acc.c	/^static void linkout_accnext_aiter(struct acciter_t *aip)$/;"	f	file:	signature:(struct acciter_t *aip)
linkout_action_cb	./v_vpi.c	/^static void linkout_action_cb(struct cbrec_t *cbp) $/;"	f	file:	signature:(struct cbrec_t *cbp)
linkout_aiter	./v_acc.c	/^static void linkout_aiter(struct acciter_t *aip, int32 otyp, int32 iter_free)$/;"	f	file:	signature:(struct acciter_t *aip, int32 otyp, int32 iter_free)
linkout_allcb	./v_vpi.c	/^static void linkout_allcb(struct cbrec_t *cbp, int32 is_force)$/;"	f	file:	signature:(struct cbrec_t *cbp, int32 is_force)
linkout_cur_time	./v_aslib.c	/^static void linkout_cur_time(struct tev_t *tevp)$/;"	f	file:	signature:(struct tev_t *tevp)
linkout_cur_time	./v_aslib.s	/^linkout_cur_time:$/;"	l
linkout_gateout_cb	./v_vpi.c	/^static void linkout_gateout_cb(struct cbrec_t *cbp) $/;"	f	file:	signature:(struct cbrec_t *cbp)
linkout_pnd0_event	./v_aslib.c	/^static void linkout_pnd0_event(struct tev_t *tevp)$/;"	f	file:	signature:(struct tev_t *tevp)
linkout_tevp	./v_aslib.c	/^static void linkout_tevp(struct tev_t *tevp)$/;"	f	file:	signature:(struct tev_t *tevp)
linkout_tevp	./v_aslib.s	/^linkout_tevp:$/;"	l
linkout_tni	./v_regasn.c	/^static void linkout_tni(struct tn_list_t *tlstp, int32 ndx)$/;"	f	file:	signature:(struct tn_list_t *tlstp, int32 ndx)
linkto_cp_osytp	./v.h	/^ struct symtab_t *linkto_cp_osytp; \/* for sym tab copy in old pt to new *\/$/;"	m	struct:symtab_t	typeref:struct:symtab_t::symtab_t	access:public
list_msg	./v_dbg.c	/^static char *list_msg[] = { $/;"	v	file:
liveness_analysis	./v_regasn.c	/^static void liveness_analysis(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
ll_1op_insn_to_str	./v_asmlnk.c	/^static char *ll_1op_insn_to_str(char *s, int32 opcod, int32 amode,$/;"	f	file:	signature:(char *s, int32 opcod, int32 amode, int32 mreg, int32 disp, char *labnam)
ll_2op_insn_to_str	./v_asmlnk.c	/^static char *ll_2op_insn_to_str(char *s, int32 opcod, int32 amode, int32 mreg,$/;"	f	file:	signature:(char *s, int32 opcod, int32 amode, int32 mreg, int32 disp, char *lab, int32 amode2, int32 mreg2, int32 disp2)
ll_all_npp_addr_init	./v_asmlnk.c	/^static void ll_all_npp_addr_init(FILE *fp, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp)
ll_awr_1mod_init_func_def	./v_asmlnk.c	/^static void ll_awr_1mod_init_func_def(FILE *fp, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp)
ll_awr_1mod_nchg_init_and_npp_enter	./v_asmlnk.c	/^static int32 ll_awr_1mod_nchg_init_and_npp_enter(FILE *fp, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp)
ll_awr_1mod_tevdat_init	./v_asmlnk.c	/^static void ll_awr_1mod_tevdat_init(FILE *fp, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp)
ll_awr_1mod_thrd_ret_stmts	./v_asmlnk.c	/^static void ll_awr_1mod_thrd_ret_stmts(FILE *fp, struct mod_t *mdp) $/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp)
ll_awr_allmods_init_func_def	./v_asmlnk.c	/^static void ll_awr_allmods_init_func_def(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
ll_awr_alnk_cp_is1v_32b_tev_dels	./v_asmlnk.c	/^static void ll_awr_alnk_cp_is1v_32b_tev_dels(FILE *fp, char *tev_amstr,$/;"	f	file:	signature:(FILE *fp, char *tev_amstr, char *peri_tab_str, int32 ninsts)
ll_awr_alnk_cp_is1v_64b_tev_dels	./v_asmlnk.c	/^static void ll_awr_alnk_cp_is1v_64b_tev_dels(FILE *fp, char *tev_amstr,$/;"	f	file:	signature:(FILE *fp, char *tev_amstr, char *peri_tab_str, int32 ninsts)
ll_awr_alnk_init_nchglst_el	./v_asmlnk.c	/^static void ll_awr_alnk_init_nchglst_el(FILE *fp, char *nchg_amstr,$/;"	f	file:	signature:(FILE *fp, char *nchg_amstr, char *nchg_ent_amstr, char *npp_ent_amstr, int32 ni, struct net_chg_t *ncp)
ll_awr_alnk_set_pth_del_adr	./v_asmlnk.c	/^static void ll_awr_alnk_set_pth_del_adr(FILE *fp, char *pthdel_amstr,$/;"	f	file:	signature:(FILE *fp, char *pthdel_amstr, int32 pth_id)
ll_awr_alnk_set_tchk_tchg_adr	./v_asmlnk.c	/^static void ll_awr_alnk_set_tchk_tchg_adr(FILE *fp, char *tchk_tchg_amstr,$/;"	f	file:	signature:(FILE *fp, char *tchk_tchg_amstr, int32 npp_id)
ll_awr_alnk_set_tev_gp_u	./v_asmlnk.c	/^static void ll_awr_alnk_set_tev_gp_u(FILE *fp, char *dst_amstr, int32 gi, $/;"	f	file:	signature:(FILE *fp, char *dst_amstr, int32 gi, int32 ninsts)
ll_awr_alnk_set_tev_nxtptr	./v_asmlnk.c	/^static void ll_awr_alnk_set_tev_nxtptr(FILE *fp, char *tmpl_tevdat_amstr)$/;"	f	file:	signature:(FILE *fp, char *tmpl_tevdat_amstr)
ll_awr_alnk_set_trchan_vtx_nchgs	./v_asmlnk.c	/^static void ll_awr_alnk_set_trchan_vtx_nchgs(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
ll_awr_alnk_set_udptab_adr	./v_asmlnk.c	/^static void ll_awr_alnk_set_udptab_adr(FILE *fp, char *udptab_l_amstr,$/;"	f	file:	signature:(FILE *fp, char *udptab_l_amstr, char *udptab_e_amstr, int32 udp_idnum)
ll_awr_alnk_tev_set_tu_nbrhs	./v_asmlnk.c	/^static void ll_awr_alnk_tev_set_tu_nbrhs(FILE *fp, char *tev_amstr,$/;"	f	file:	signature:(FILE *fp, char *tev_amstr, char *tev_nb_area_amstr, int32 nb_rhs_bytsiz, int32 ninsts, int32 srep)
ll_awr_call_proc_leave_insns	./v_asmlnk.c	/^static void ll_awr_call_proc_leave_insns(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
ll_awr_fixup_allmods_comm_idp_areas	./v_asmlnk.c	/^static void ll_awr_fixup_allmods_comm_idp_areas(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
ll_awr_iaslt_enter_init	./v_asmlnk.c	/^static void ll_awr_iaslt_enter_init(FILE *fp, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp)
ll_awr_init_pth_del_adr	./v_asmlnk.c	/^static void ll_awr_init_pth_del_adr(FILE *fp, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp)
ll_awr_init_tchk_tchg_adr	./v_asmlnk.c	/^static void ll_awr_init_tchk_tchg_adr(FILE *fp, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp)
ll_awr_init_tev_dat	./v_asmlnk.c	/^static void ll_awr_init_tev_dat(FILE *fp, char *dst_amstr, int32 ninsts,$/;"	f	file:	signature:(FILE *fp, char *dst_amstr, int32 ninsts, char *entptr_amstr, size_t ctev_idp_ofs, word64 del, int32 set_delay)
ll_awr_init_udptab_adrs	./v_asmlnk.c	/^static void ll_awr_init_udptab_adrs(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
ll_awr_proc_enter_insns	./v_asmlnk.c	/^static void ll_awr_proc_enter_insns(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
ll_awr_set_glb_movl	./v_asmlnk.c	/^static void ll_awr_set_glb_movl(FILE *fp, char *glb_rt_varnam,$/;"	f	file:	signature:(FILE *fp, char *glb_rt_varnam, char *glb_asmlabnam)
ll_awr_set_stmt_entptr	./v_asmlnk.c	/^static void ll_awr_set_stmt_entptr(FILE *fp, char *dst_amstr, int32 sti)$/;"	f	file:	signature:(FILE *fp, char *dst_amstr, int32 sti)
ll_awr_set_tev_ent_nb_free	./v_asmlnk.c	/^static void ll_awr_set_tev_ent_nb_free(FILE *fp, char *tevs_amstr,$/;"	f	file:	signature:(FILE *fp, char *tevs_amstr, char *st_ent_nb_free_amstr, int32 ninsts)
ll_bld_amode_str	./v_asmlnk.c	/^static char *ll_bld_amode_str(char *s, int32 amode, int32 mreg,$/;"	f	file:	signature:(char *s, int32 amode, int32 mreg, size_t disp, char *lab)
ll_conta_addr_init	./v_asmlnk.c	/^static void ll_conta_addr_init(FILE *fp, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp)
ll_dce_enter_init	./v_asmlnk.c	/^static void ll_dce_enter_init(FILE *fp, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp)
ll_dcep_addr_init	./v_asmlnk.c	/^static void ll_dcep_addr_init(FILE *fp, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp)
ll_gate_addr_init	./v_asmlnk.c	/^static void ll_gate_addr_init(FILE *fp, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp)
ll_grp_addr_init	./v_asmlnk.c	/^static void ll_grp_addr_init(FILE *fp, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp)
ll_init_glbl_mdp	./v_asmlnk.c	/^static void ll_init_glbl_mdp(FILE *fp, int32 mi)$/;"	f	file:	signature:(FILE *fp, int32 mi)
ll_net_addr_init	./v_asmlnk.c	/^static void ll_net_addr_init(FILE *fp, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp)
ll_one_npp_addr_init	./v_asmlnk.c	/^static void ll_one_npp_addr_init(FILE *fp, char *nppa_str, int32 npp_idnum)$/;"	f	file:	signature:(FILE *fp, char *nppa_str, int32 npp_idnum)
ll_pass_arg_insn_to_str	./v_asmlnk.c	/^static void ll_pass_arg_insn_to_str(FILE *fp, char *s, int32 opcod, $/;"	f	file:	signature:(FILE *fp, char *s, int32 opcod, int32 amode, int32 mreg, size_t disp, char *lab, int32 arg_no)
ll_stmt_addr_init	./v_asmlnk.c	/^static void ll_stmt_addr_init(FILE *fp, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp)
ll_stmt_enter_init	./v_asmlnk.c	/^static void ll_stmt_enter_init(FILE *fp, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp)
ll_task_addr_init	./v_asmlnk.c	/^static void ll_task_addr_init(FILE *fp, struct mod_t *mdp)$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp)
ll_xpr_addr_init	./v_asmlnk.c	/^static void ll_xpr_addr_init(FILE *fp, struct mod_t *mdp) $/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp)
lnam	./v.h	/^ char *lnam;$/;"	m	struct:namlst_t	access:public
lnk_deflst_live_defs	./v_bbopt.c	/^static void lnk_deflst_live_defs(struct flowg_t *fgp,$/;"	f	file:	signature:(struct flowg_t *fgp, struct avlnode_t **tn_ref_avltab, int32 num_tnrefs)
load_plinxt	./v.h	/^ struct loadpli_t *load_plinxt;$/;"	m	struct:loadpli_t	typeref:struct:loadpli_t::loadpli_t	access:public
loadpli_t	./v.h	/^struct loadpli_t {$/;"	s
loadpli_t::dynblst	./v.h	/^ struct dynboot_t *dynblst;   \/* list of boot routines (can be empty) *\/ $/;"	m	struct:loadpli_t	typeref:struct:loadpli_t::dynboot_t	access:public
loadpli_t::libnam	./v.h	/^ char *libnam;$/;"	m	struct:loadpli_t	access:public
loadpli_t::load_plinxt	./v.h	/^ struct loadpli_t *load_plinxt;$/;"	m	struct:loadpli_t	typeref:struct:loadpli_t::loadpli_t	access:public
loadpli_t::pli1_option	./v.h	/^ unsigned pli1_option : 1;    \/* T => +loadpli1= option *\/$/;"	m	struct:loadpli_t	access:public
loc_chk_repl_wire_arr_selects	./v_fx3.c	/^static void loc_chk_repl_wire_arr_selects(struct expr_t *ndp, int32 is_chk_lhs,$/;"	f	file:	signature:(struct expr_t *ndp, int32 is_chk_lhs, char *s1, char *s2)
local_scope_ref	./v_dbg2.c	/^static int32 local_scope_ref(char *refnam, t_midat **ref_idp,$/;"	f	file:	signature:(char *refnam, t_midat **ref_idp, struct task_t **ref_tskp)
locqualnam	./v.h	/^ unsigned locqualnam : 1;     \/* T => if printing name is local qualified *\/$/;"	m	struct:expr_t	access:public
log2table	./v_ex.c	/^static const char log2table[256] = $/;"	v	file:
longest_signal_value_len	./fstapi.c	/^uint32_t longest_signal_value_len;      \/* longest len value encountered *\/$/;"	m	struct:fstReaderContext	file:	access:public
low	./v.h	/^ struct { word32 high; word32 low; } w_u;$/;"	m	struct:__anon11::__anon12	access:public
low	./v.h	/^ struct { word32 high; word32 low; } w_u;$/;"	m	struct:__anon14::__anon15	access:public
low	./v.h	/^ struct { word32 low; word32 high; } w_u;$/;"	m	struct:__anon11::__anon13	access:public
low	./v.h	/^ struct { word32 low; word32 high; } w_u;$/;"	m	struct:__anon14::__anon16	access:public
lower_bblk_enter_exits	./v_asmlnk.c	/^static void lower_bblk_enter_exits(struct mod_t *mdp, struct bblk_t *bbp) $/;"	f	file:	signature:(struct mod_t *mdp, struct bblk_t *bbp)
lower_bytes_four_to_seven64	./v_bbgen3.c	/^static void lower_bytes_four_to_seven64(int32 src_ti, int32 dst_ti, $/;"	f	file:	signature:(int32 src_ti, int32 dst_ti, int32 nbytes)
lower_contab_src_copy	./v_bbgen3.c	/^static void lower_contab_src_copy(int32 src_ti, int32 dst_ti, int32 nbytes)$/;"	f	file:	signature:(int32 src_ti, int32 dst_ti, int32 nbytes)
lower_copy	./v_bbgen3.c	/^static void lower_copy(int32 src_ti, int32 dst_ti, int32 nbytes)$/;"	f	file:	signature:(int32 src_ti, int32 dst_ti, int32 nbytes)
lower_epilogue_prologue	./v_asmlnk.c	/^static void lower_epilogue_prologue(struct bblk_t *bbp, struct flowg_t *fgp)$/;"	f	file:	signature:(struct bblk_t *bbp, struct flowg_t *fgp)
lower_four_byte_copy	./v_bbgen3.c	/^static void lower_four_byte_copy(int32 src_ti, int32 dst_ti)$/;"	f	file:	signature:(int32 src_ti, int32 dst_ti)
lower_insns_to_mach_level	./v_bbopt.c	/^static void lower_insns_to_mach_level(struct flowg_t *fgp, struct mod_t *mdp)$/;"	f	file:	signature:(struct flowg_t *fgp, struct mod_t *mdp)
lower_narrow_copy	./v_bbgen3.c	/^static void lower_narrow_copy(int32 src_ti, int32 dst_ti, int32 nbytes)$/;"	f	file:	signature:(int32 src_ti, int32 dst_ti, int32 nbytes)
lower_one_byte_copy	./v_bbgen3.c	/^static void lower_one_byte_copy(int32 src_ti, int32 dst_ti)$/;"	f	file:	signature:(int32 src_ti, int32 dst_ti)
lower_setbyte_tnadr	./v_bbgen3.c	/^static void lower_setbyte_tnadr(int32 op_ti, byte bval, int32 nbytes)$/;"	f	file:	signature:(int32 op_ti, byte bval, int32 nbytes)
lower_setbyte_tnval	./v_bbgen3.c	/^static void lower_setbyte_tnval(int32 op_ti, byte bval, int32 nbytes)$/;"	f	file:	signature:(int32 op_ti, byte bval, int32 nbytes)
lower_setbytes	./v_bbgen3.c	/^static void lower_setbytes(int32 op_ti, byte bval, int32 nbytes)$/;"	f	file:	signature:(int32 op_ti, byte bval, int32 nbytes)
lower_subl	./v_bbgen3.c	/^static int32 lower_subl(int32 op1_ti, int32 op2_ti)$/;"	f	file:	signature:(int32 op1_ti, int32 op2_ti)
lower_three_bytes_copy	./v_bbgen3.c	/^static void lower_three_bytes_copy(int32 src_ti, int32 dst_ti)$/;"	f	file:	signature:(int32 src_ti, int32 dst_ti)
lower_two_bytes_copy	./v_bbgen3.c	/^static void lower_two_bytes_copy(int32 src_ti, int32 dst_ti)$/;"	f	file:	signature:(int32 src_ti, int32 dst_ti)
lp	./igen.h	/^ struct avlnode_t *lp, *rp;$/;"	m	struct:avlnode_t	typeref:struct:avlnode_t::avlnode_t	access:public
lp	./v.h	/^ struct tnode_t *lp, *rp;$/;"	m	struct:tnode_t	typeref:struct:tnode_t::tnode_t	access:public
lpend_goto	./v.h	/^ unsigned lpend_goto : 1;     \/* T => this is loopend goto *\/$/;"	m	struct:st_t	access:public
lpend_goto_dest	./v.h	/^ unsigned lpend_goto_dest : 1; \/* dest. of loop end back goto for compiler *\/$/;"	m	struct:st_t	access:public
lpostab	./v.h	/^ int32 *lpostab;$/;"	m	struct:filpos_t	access:public
lpst	./v.h	/^ struct st_t *lpst;$/;"	m	struct:wait_t	typeref:struct:wait_t::st_t	access:public
lpst	./v.h	/^ struct st_t *lpst;$/;"	m	struct:while_t	typeref:struct:while_t::st_t	access:public
lpthp	./v_sdf.c	/^ struct spcpth_t *lpthp;$/;"	m	struct:pthlst_t	typeref:struct:pthlst_t::spcpth_t	file:	access:public
lpx	./v.h	/^ struct expr_t *lpx;$/;"	m	struct:wait_t	typeref:struct:wait_t::expr_t	access:public
lpx	./v.h	/^ struct expr_t *lpx;$/;"	m	struct:while_t	typeref:struct:while_t::expr_t	access:public
lstofsts_do_inpsel_set	./v_fx2.c	/^static void lstofsts_do_inpsel_set(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
lu	./v.h	/^ union l_u lu;                \/* left sub expr. or symbol union *\/$/;"	m	struct:expr_t	typeref:union:expr_t::l_u	access:public
ludptab	./v.h	/^ word32 *ludptab;$/;"	m	struct:udptab_t	access:public
lxqcol	./v_ex2.c	/^static void lxqcol(struct xstk_t *xspq, struct xstk_t *xsp1,$/;"	f	file:	signature:(struct xstk_t *xspq, struct xstk_t *xsp1, struct xstk_t *xsp2, int32 opbits, int32 sel_sign, int32 col_sign)
lz4_bswap16	./lz4.c	140;"	d	file:
lz4_bswap16	./lz4.c	142;"	d	file:
m_combined_into	./v.h	/^ unsigned m_combined_into : 1;   \/* T => module has been combined into *\/$/;"	m	struct:mod_t	access:public
m_dfps_in_gblks	./v.h	/^ unsigned m_dfps_in_gblks : 1;\/* T => at least 1 dfp in mod in a gen blk *\/$/;"	m	struct:mod_t	access:public
m_gen_xpnded	./v.h	/^ unsigned m_gen_xpnded : 1;   \/* T => gens in this mod expended *\/$/;"	m	struct:mod_t	access:public
m_gened_fstvars	./v.h	/^ unsigned m_gened_fstvars : 1; \/* T => fst vars generated *\/$/;"	m	struct:mod_t	access:public
m_gened_remove	./v.h	/^ unsigned m_gened_remove : 1; \/* T => in never used generate mark remove *\/$/;"	m	struct:mod_t	access:public
m_gia_in_gblks	./v.h	/^ unsigned m_gia_in_gblks : 1; \/* T => mod has arrays of g\/i in gen blks *\/$/;"	m	struct:mod_t	access:public
m_has_event_cover	./v.h	/^ unsigned m_has_event_cover : 1; \/* T => module contains event cover *\/$/;"	m	struct:mod_t	access:public
m_has_garrs	./v.h	/^ unsigned m_has_garrs : 1;    \/* T => mod has at one arrays of gates *\/ $/;"	m	struct:mod_t	access:public
m_has_iarrs	./v.h	/^ unsigned m_has_iarrs : 1;    \/* T => mod has at one arrays of insts *\/ $/;"	m	struct:mod_t	access:public
m_has_stmt_cover	./v.h	/^ unsigned m_has_stmt_cover : 1;  \/* T => module contains stmt cover *\/$/;"	m	struct:mod_t	access:public
m_has_toggle_cover	./v.h	/^ unsigned m_has_toggle_cover : 1;\/* T => module contains net toggle cover *\/$/;"	m	struct:mod_t	access:public
m_hascells	./v.h	/^ unsigned m_hascells : 1;     \/* T => module contains asic style cells *\/$/;"	m	struct:mod_t	access:public
m_idnum	./v.h	/^ int32 m_idnum;               \/* index (id) no. for mod - for .comm *\/$/;"	m	struct:mod_t	access:public
m_inconfig	./v.h	/^ unsigned m_inconfig : 1;     \/* T => module is from a config file *\/$/;"	m	struct:mod_t	access:public
m_iscell	./v.h	/^ unsigned m_iscell : 1;       \/* T => module is asic style cell *\/$/;"	m	struct:mod_t	access:public
m_itps_tgl_cover	./v.h	/^ byte *m_itps_tgl_cover;      \/* per inst (flat inum) of mod has some tgl *\/$/;"	m	struct:mod_t	access:public
m_maybe_gened	./v.h	/^ unsigned m_maybe_gened : 1;  \/* T => use in gen src - may be gened top *\/$/;"	m	struct:mod_t	access:public
m_no_param_match	./v.h	/^ unsigned m_no_param_match : 1; \/* T => turn off # param matching *\/$/;"	m	struct:mod_t	access:public
m_npp_ndx	./v.h	/^ struct net_pin_t **m_npp_ndx;\/* per mod index of all (lds & drvs) npps *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::net_pin_t	access:public
m_opt_pli_bits_set	./v.h	/^ unsigned m_opt_pli_bits_set : 1; \/* T => opt config pli bits set *\/$/;"	m	struct:mod_t	access:public
m_pth_ndx	./v.h	/^ struct spcpth_t **m_pth_ndx; \/* per mod index of all specify delay paths *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::spcpth_t	access:public
m_tfs_in_gblks	./v.h	/^ unsigned m_tfs_in_gblks : 1; \/* T => mod contains tsks\/funcs in gen blks *\/ $/;"	m	struct:mod_t	access:public
m_use_xprop	./v.h	/^ unsigned m_use_xprop : 1;    \/* this module has xprop on *\/  $/;"	m	struct:mod_t	access:public
m_use_xprop2	./v.h	/^ unsigned m_use_xprop2 : 1;   \/* this module has xprop2 (x flooding) on *\/$/;"	m	struct:mod_t	access:public
m_use_xprop_and_or_x	./v.h	/^ unsigned m_use_xprop_and_or_x : 1; \/* this mod &, |, &&, || bit x preserve *\/$/;"	m	struct:mod_t	access:public
m_using_init_file	./v.h	/^ unsigned m_using_init_file : 1; \/* T => uses this modules asm init file *\/$/;"	m	struct:mod_t	access:public
m_xmrs_in_gblks	./v.h	/^ unsigned m_xmrs_in_gblks : 1;\/* T => at least 1 xmr\/dfp in mod in a gen blk *\/$/;"	m	struct:mod_t	access:public
macarg_t	./v.h	/^struct macarg_t {$/;"	s
macarg_t::macargnam	./v.h	/^ char *macargnam;$/;"	m	struct:macarg_t	access:public
macarg_t::macargnxt	./v.h	/^ struct macarg_t *macargnxt;$/;"	m	struct:macarg_t	typeref:struct:macarg_t::macarg_t	access:public
macargnam	./v.h	/^ char *macargnam;$/;"	m	struct:macarg_t	access:public
macargnxt	./v.h	/^ struct macarg_t *macargnxt;$/;"	m	struct:macarg_t	typeref:struct:macarg_t::macarg_t	access:public
macexp_t	./v.h	/^struct macexp_t {$/;"	s
macexp_t::ins_argno	./v.h	/^ int32 ins_argno;$/;"	m	struct:macexp_t	access:public
macexp_t::leading_str	./v.h	/^ char *leading_str;$/;"	m	struct:macexp_t	access:public
macexp_t::leadlen	./v.h	/^ int32 leadlen;$/;"	m	struct:macexp_t	access:public
macexp_t::macexpnxt	./v.h	/^ struct macexp_t *macexpnxt;$/;"	m	struct:macexp_t	typeref:struct:macexp_t::macexp_t	access:public
macexpnxt	./v.h	/^ struct macexp_t *macexpnxt;$/;"	m	struct:macexp_t	typeref:struct:macexp_t::macexp_t	access:public
main	./dig_main.c	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	./exe_main.c	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	./hexasm.c	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
make_array_fcall_expr	./v_src2.c	/^static struct expr_t *make_array_fcall_expr(char *fcall, $/;"	f	file:	signature:(char *fcall, struct sy_t *array_syp, int32 dim)
make_dctrl_event_array	./v_prp.c	/^static struct delctrl_t **make_dctrl_event_array(struct mod_t *mdp, $/;"	f	file:	signature:(struct mod_t *mdp, int32 *dsize)
make_dummy_dce_xedge_if_stmt	./v_xprop.c	/^static struct st_t *make_dummy_dce_xedge_if_stmt(struct st_t *stp, int32 slevel)$/;"	f	file:	signature:(struct st_t *stp, int32 slevel)
make_x_expr	./v_xprop.c	/^static struct expr_t *make_x_expr(int32 blen)$/;"	f	file:	signature:(int32 blen)
map_1mod_to_linearized_x86_insn	./v_asmlnk.c	/^static void map_1mod_to_linearized_x86_insn(struct mod_t *mdp) $/;"	f	file:	signature:(struct mod_t *mdp)
map_acc_delaymode_to_vpi	./v_acc.c	/^static int32 map_acc_delaymode_to_vpi(int32 accdmode)$/;"	f	file:	signature:(int32 accdmode)
map_acc_to_vpival	./v_acc.c	/^static int32 map_acc_to_vpival(word32 accval)$/;"	f	file:	signature:(word32 accval)
map_ndxnums_to_mda_arri	./v_ex2.c	/^static int32 map_ndxnums_to_mda_arri(struct net_t *np, int32 *mda_ndxies)$/;"	f	file:	signature:(struct net_t *np, int32 *mda_ndxies)
map_to_accvclval	./v_acc.c	/^static int32 map_to_accvclval(word32 ival)$/;"	f	file:	signature:(word32 ival)
map_to_cside_ab	./v_dpi.c	/^static void map_to_cside_ab(unsigned int *nup, word32 *owp, int32 wlen32)$/;"	f	file:	signature:(unsigned int *nup, word32 *owp, int32 wlen32)
map_to_cside_ab	./v_dpi.c	/^static void map_to_cside_ab(unsigned int *nup, word64 *owp, int32 wlen32)$/;"	f	file:	signature:(unsigned int *nup, word64 *owp, int32 wlen32)
map_to_verside_vec	./v_dpi.c	/^static void map_to_verside_vec(word32 *nwp, unsigned int *nup, int32 wlen32)$/;"	f	file:	signature:(word32 *nwp, unsigned int *nup, int32 wlen32)
map_to_verside_vec	./v_dpi.c	/^static void map_to_verside_vec(word64 *nwp, unsigned int *nup, int32 wlen64)$/;"	f	file:	signature:(word64 *nwp, unsigned int *nup, int32 wlen64)
map_vcd_to_fst	./v_fx3.c	/^static int32 map_vcd_to_fst(int32 stsknum)$/;"	f	file:	signature:(int32 stsknum)
map_ver_svtyp_to_ctypnam	./v_dpi.c	/^static char *map_ver_svtyp_to_ctypnam(char *s, struct dpiarg_t *dap)$/;"	f	file:	signature:(char *s, struct dpiarg_t *dap)
map_ver_svtyp_to_proto_typnam	./v_dpi.c	/^static char *map_ver_svtyp_to_proto_typnam(char *s, struct dpiarg_t *dap)$/;"	f	file:	signature:(char *s, struct dpiarg_t *dap)
map_vpi_to_accstren	./v_acc.c	/^static int32 map_vpi_to_accstren(word32 stval)$/;"	f	file:	signature:(word32 stval)
map_vpi_to_accval	./v_acc.c	/^static int32 map_vpi_to_accval(word32 vpival)$/;"	f	file:	signature:(word32 vpival)
map_vpi_to_accvclval	./v_acc.c	/^static int32 map_vpi_to_accvclval(word32 vpival)$/;"	f	file:	signature:(word32 vpival)
mapfiles_t	./v.h	/^struct mapfiles_t {$/;"	s
mapfiles_t::mapfnam	./v.h	/^ char *mapfnam;$/;"	m	struct:mapfiles_t	access:public
mapfiles_t::mapfnxt	./v.h	/^ struct mapfiles_t *mapfnxt;$/;"	m	struct:mapfiles_t	typeref:struct:mapfiles_t::mapfiles_t	access:public
mapfnam	./v.h	/^ char *mapfnam;$/;"	m	struct:mapfiles_t	access:public
mapfnxt	./v.h	/^ struct mapfiles_t *mapfnxt;$/;"	m	struct:mapfiles_t	typeref:struct:mapfiles_t::mapfiles_t	access:public
mark	./igen.h	/^ int32 mark;                  \/* work number for marking *\/$/;"	m	struct:bblk_t	access:public
mark_1stmt_unreachable	./v_cvcms.c	/^static struct st_t *mark_1stmt_unreachable(struct mod_t *mdp, struct st_t *stp)$/;"	f	file:	signature:(struct mod_t *mdp, struct st_t *stp)
mark_all_insts_of_mod_split	./v_genfx.c	/^static void mark_all_insts_of_mod_split(void)$/;"	f	file:	signature:(void)
mark_all_mod_confuncs	./v_src.c	/^static void mark_all_mod_confuncs(void)$/;"	f	file:	signature:(void)
mark_constnd	./v_fx3.c	/^static int32 mark_constnd(struct expr_t *ndp, int32 *has_isform)$/;"	f	file:	signature:(struct expr_t *ndp, int32 *has_isform)
mark_declnet_expr_syms	./v_genfx.c	/^static void mark_declnet_expr_syms(struct expr_t *ndp, struct genblk_t *gblkp)$/;"	f	file:	signature:(struct expr_t *ndp, struct genblk_t *gblkp)
mark_fallthru_jumps	./v_bbopt.c	/^static void mark_fallthru_jumps(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
mark_for_rm	./igen.h	/^ unsigned mark_for_rm : 1;    \/* T => block is marked for rm  *\/$/;"	m	struct:bblk_t	access:public
mark_gia_rng_params	./v_genfx.c	/^static void mark_gia_rng_params(struct mod_t *pmdp)$/;"	f	file:	signature:(struct mod_t *pmdp)
mark_if_scalar_iconn_port_optim	./v_bbgen2.c	/^static int32 mark_if_scalar_iconn_port_optim(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
mark_if_scalar_port_optim_mdprt	./v_prp2.c	/^static int32 mark_if_scalar_port_optim_mdprt(struct net_t *np, $/;"	f	file:	signature:(struct net_t *np, struct mod_t *upmdp)
mark_keep_eval_insn	./v_bbgen3.c	/^static int32 mark_keep_eval_insn(struct insn_t *ip)$/;"	f	file:	signature:(struct insn_t *ip)
mark_maybe_gone_nets	./v_prp.c	/^static void mark_maybe_gone_nets(struct expr_t *xp)$/;"	f	file:	signature:(struct expr_t *xp)
mark_mod_dvars_under	./v_fx3.c	/^static void mark_mod_dvars_under(struct mod_t *mdp, int32 levels)$/;"	f	file:	signature:(struct mod_t *mdp, int32 levels)
mark_monit_in_src_nets	./v_fx3.c	/^static void mark_monit_in_src_nets(struct expr_t *xp)$/;"	f	file:	signature:(struct expr_t *xp)
mark_muststay_wires	./v_prp.c	/^static void mark_muststay_wires(struct expr_t *xp)$/;"	f	file:	signature:(struct expr_t *xp)
mark_need_keep_store_into	./v_bbgen3.c	/^static int32 mark_need_keep_store_into(struct insn_t *ip)$/;"	f	file:	signature:(struct insn_t *ip)
mark_nonl_insn_and_wide_tns	./v_regasn.c	/^static void mark_nonl_insn_and_wide_tns(struct insn_t *ip)$/;"	f	file:	signature:(struct insn_t *ip)
mark_npps_for_del	./v_prp.c	/^static void mark_npps_for_del(struct npopt_t *npp_optp, int32 not_del_nppi)$/;"	f	file:	signature:(struct npopt_t *npp_optp, int32 not_del_nppi)
mark_optim_iconn_port_scalar	./v_bbgen2.c	/^static void mark_optim_iconn_port_scalar(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
mark_poundparam_splitinsts	./v_genfx.c	/^static void mark_poundparam_splitinsts(void)$/;"	f	file:	signature:(void)
mark_scalar_port_optim_ofs	./v_prp2.c	/^static void mark_scalar_port_optim_ofs(struct net_t *np, struct mod_t *upmdp)$/;"	f	file:	signature:(struct net_t *np, struct mod_t *upmdp)
mark_stdr_inout_wired_logic	./v_fx2.c	/^static void mark_stdr_inout_wired_logic(void)$/;"	f	file:	signature:(void)
mark_stdr_wires	./v_fx2.c	/^static void mark_stdr_wires(void)$/;"	f	file:	signature:(void)
mark_sttypewires	./v_fx2.c	/^static void mark_sttypewires(void)$/;"	f	file:	signature:(void)
mark_stwires	./v_fx2.c	/^static void mark_stwires(struct mod_t *mdp, struct expr_t *lhsx)$/;"	f	file:	signature:(struct mod_t *mdp, struct expr_t *lhsx)
mast_cap	./v.h	/^ struct conta_t *mast_cap;    \/* for per bit element, ptr to master *\/$/;"	m	union:pbca_u	typeref:struct:pbca_u::conta_t	access:public
mast_dcep	./v.h	/^ struct dcevnt_t *mast_dcep;  \/* one master (first) for alloc and init *\/ $/;"	m	struct:dce_expr_t	typeref:struct:dce_expr_t::dcevnt_t	access:public
match_dir_pats	./v_src3.c	/^static void match_dir_pats(struct libel_t *lbep, struct xpndfile_t *xfp_hd,$/;"	f	file:	signature:(struct libel_t *lbep, struct xpndfile_t *xfp_hd, char *path, char *bpath, int32 incall, int32 level)
match_hier_name	./v_src3.c	/^static int32 match_hier_name(struct xpndfile_t *xfp_hd, char *name) $/;"	f	file:	signature:(struct xpndfile_t *xfp_hd, char *name)
match_idp_ofs	./v.h	/^ size_t match_idp_ofs;         \/* idp offset for dce_matchu *\/$/;"	m	struct:dce_idp_info_t	access:public
match_implprm_exprtab	./v_fx.c	/^static struct expr_t **match_implprm_exprtab(struct namparam_t *npmphdr,$/;"	f	file:	signature:(struct namparam_t *npmphdr, struct inst_t *ip)
match_in_new_gblk_ogref	./v_fx.c	/^static struct gref_t *match_in_new_gblk_ogref(struct gref_t *ogrp,$/;"	f	file:	signature:(struct gref_t *ogrp, struct genblk_t *ngblkp)
match_in_new_mod_ogref	./v_fx.c	/^static struct gref_t *match_in_new_mod_ogref(struct gref_t *ogrp,$/;"	f	file:	signature:(struct gref_t *ogrp, struct mod_t *nmdp)
match_mdp	./v.h	/^ struct mod_t *match_mdp;     \/* matching mdp *\/$/;"	m	struct:dce_idp_info_t	typeref:struct:dce_idp_info_t::mod_t	access:public
match_namparam_exprtab	./v_fx.c	/^static struct expr_t **match_namparam_exprtab(struct namparam_t *npmphdr,$/;"	f	file:	signature:(struct namparam_t *npmphdr, struct inst_t *ip)
match_tgldat_rtpth_to_inst_net	./v_cvr.c	/^static struct net_t *match_tgldat_rtpth_to_inst_net(char *rtpthnam,$/;"	f	file:	signature:(char *rtpthnam, char *net_modnam, int32 tgl_r1, int32 tgl_r2, struct itree_t **ret_itp)
match_wildcard_str	./v_src3.c	/^static int32 match_wildcard_str(char *file, struct xpndfile_t *xfp) $/;"	f	file:	signature:(char *file, struct xpndfile_t *xfp)
matched	./v.h	/^ unsigned matched : 1;        \/* T => rule was bound at least once *\/ $/;"	m	struct:cfgrule_t	access:public
mattrs	./v.h	/^ struct attr_t *mattrs;       \/* mod attrs - used only if inst has no attr *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::attr_t	access:public
mauxp	./v.h	/^ struct monaux_t *mauxp;      \/* ptr to mon aux v format flag and dce ptr *\/$/;"	m	union:tkcaux_u	typeref:struct:tkcaux_u::monaux_t	access:public
max_call_args	./igen.h	/^ int32 max_call_args;         \/* max num args passed to call *\/$/;"	m	struct:flowg_t	access:public
max_dpi_wrds	./igen.h	/^ int32 max_dpi_wrds;          \/* max num args (wrds) passed to dpi call *\/$/;"	m	struct:flowg_t	access:public
maxhandle	./fstapi.c	/^fstHandle maxhandle;$/;"	m	struct:fstReaderContext	file:	access:public
maxhandle	./fstapi.c	/^fstHandle maxhandle;$/;"	m	struct:fstWriterContext	file:	access:public
maxselwid	./v.h	/^ unsigned maxselwid : 24;$/;"	m	struct:case_t	access:public
maxvalpos	./fstapi.c	/^uint32_t maxvalpos;$/;"	m	struct:fstWriterContext	file:	access:public
maybe_rebld_undecl_isparm_net	./v_genfx.c	/^static void maybe_rebld_undecl_isparm_net(struct net_t *np,$/;"	f	file:	signature:(struct net_t *np, struct xstk_t *xsp, int32 ninsts)
mc_do_fopen	./v_ex.c	/^static word32 mc_do_fopen(struct expr_t *axp)$/;"	f	file:	signature:(struct expr_t *axp)
mc_fnam	./v.h	/^ char *mc_fnam;$/;"	m	struct:mcchan_t	access:public
mc_s	./v.h	/^ FILE *mc_s; $/;"	m	struct:mcchan_t	access:public
mcanum	./v.h	/^ int32 mcanum;                \/* number of non 1 bit cas in module *\/ $/;"	m	struct:mod_t	access:public
mcas	./v.h	/^ struct conta_t *mcas;        \/* module cont. assigns *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::conta_t	access:public
mcchan_t	./v.h	/^struct mcchan_t { $/;"	s
mcchan_t::mc_fnam	./v.h	/^ char *mc_fnam;$/;"	m	struct:mcchan_t	access:public
mcchan_t::mc_s	./v.h	/^ FILE *mc_s; $/;"	m	struct:mcchan_t	access:public
mcd_do_fclose	./v_ex.c	/^static void mcd_do_fclose(struct expr_t *axp)$/;"	f	file:	signature:(struct expr_t *axp)
mcells	./v.h	/^ struct cell_t *mcells;       \/* unordered list of module objects *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::cell_t	access:public
mda	./v.h	/^ struct mda_t *mda;$/;"	m	struct:net_t	typeref:struct:net_t::mda_t	access:public
mda_t	./v.h	/^struct mda_t {$/;"	s
mda_t::dim_mult	./v.h	/^ int32 *dim_mult;              \/* multiplier indexed by dimension *\/$/;"	m	struct:mda_t	access:public
mda_t::dimension	./v.h	/^ int32 dimension;              \/* number of dimensions *\/$/;"	m	struct:mda_t	access:public
mda_t::ni1	./v.h	/^ int32 ni1, ni2;               \/* array element width *\/$/;"	m	struct:mda_t	access:public
mda_t::ni2	./v.h	/^ int32 ni1, ni2;               \/* array element width *\/$/;"	m	struct:mda_t	access:public
mda_t::rng1	./v.h	/^ int32 *rng1;                  \/* range array for lsb indexed by dimension *\/$/;"	m	struct:mda_t	access:public
mda_t::rng2	./v.h	/^ int32 *rng2;                  \/* range array for lsb indexed by dimension *\/$/;"	m	struct:mda_t	access:public
mda_t::tab_ax1	./v.h	/^ struct expr_t **tab_ax1;      \/* dim size table of first range exprs *\/$/;"	m	struct:mda_t	typeref:struct:mda_t::expr_t	access:public
mda_t::tab_ax2	./v.h	/^ struct expr_t **tab_ax2;      \/* dim size table of first range exprs *\/$/;"	m	struct:mda_t	typeref:struct:mda_t::expr_t	access:public
mdata_gettok	./v_ex2.c	/^static int32 mdata_gettok(FILE *f, int32 base)$/;"	f	file:	signature:(FILE *f, int32 base)
mdata_rdbin	./v_ex2.c	/^static int32 mdata_rdbin(FILE *f, int32 c)$/;"	f	file:	signature:(FILE *f, int32 c)
mdata_rdhex	./v_ex2.c	/^static int32 mdata_rdhex(FILE *f, int32 c)$/;"	f	file:	signature:(FILE *f, int32 c)
mdfp_grnum	./v.h	/^ int32 mdfp_grnum;            \/* SJM 08-26-11 - now sep defparam grefs *\/$/;"	m	struct:mod_t	access:public
mdfp_sav_grnum	./v.h	/^ int32 mdfp_sav_grnum;        \/* num. of to put back pre gen defp assoc xmrs *\/$/;"	m	struct:mod_t	access:public
mdfps	./v.h	/^ struct dfparam_t *mdfps;     \/* modules defparams *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::dfparam_t	access:public
mdp	./igen.h	/^ struct mod_t *mdp;             \/* instance to move to during fg gen *\/$/;"	m	struct:gate_conta_t	typeref:struct:gate_conta_t::mod_t	access:public
mdp	./igen.h	/^ struct mod_t *mdp;        \/* module tmp is in *\/$/;"	m	struct:adradd_dup_t	typeref:struct:adradd_dup_t::mod_t	access:public
mdp	./v.h	/^ struct mod_t *mdp;           \/* module for filter npp *\/$/;"	m	struct:npaux_t	typeref:struct:npaux_t::mod_t	access:public
mdp	./v.h	/^ struct mod_t *mdp;           \/* module this event is in *\/$/;"	m	struct:ctev_t	typeref:struct:ctev_t::mod_t	access:public
mdv_flat_ndx	./v.h	/^ int32 mdv_flat_ndx;          \/* array flattened index *\/$/;"	m	struct:mdvmast_t	access:public
mdv_itprt_idp	./v.h	/^ t_midat *mdv_itprt_idp;      \/* itree root of subtree or var itree loc *\/$/;"	m	struct:mdvmast_t	access:public
mdv_levels	./v.h	/^ int32 mdv_levels;            \/* level down from $dumpvars call *\/$/;"	m	struct:mdvmast_t	access:public
mdv_mda_indices	./v.h	/^ int32 *mdv_mda_indices;      \/* array multi-dim frozen indices *\/$/;"	m	struct:mdvmast_t	access:public
mdv_np	./v.h	/^ struct net_t *mdv_np;        \/* for var. form, pointer to wire *\/$/;"	m	struct:mdvmast_t	typeref:struct:mdvmast_t::net_t	access:public
mdv_tskp	./v.h	/^ struct task_t *mdv_tskp;     \/* task variable or scope in *\/$/;"	m	struct:mdvmast_t	typeref:struct:mdvmast_t::task_t	access:public
mdvmast_t	./v.h	/^struct mdvmast_t { $/;"	s
mdvmast_t::mdv_flat_ndx	./v.h	/^ int32 mdv_flat_ndx;          \/* array flattened index *\/$/;"	m	struct:mdvmast_t	access:public
mdvmast_t::mdv_itprt_idp	./v.h	/^ t_midat *mdv_itprt_idp;      \/* itree root of subtree or var itree loc *\/$/;"	m	struct:mdvmast_t	access:public
mdvmast_t::mdv_levels	./v.h	/^ int32 mdv_levels;            \/* level down from $dumpvars call *\/$/;"	m	struct:mdvmast_t	access:public
mdvmast_t::mdv_mda_indices	./v.h	/^ int32 *mdv_mda_indices;      \/* array multi-dim frozen indices *\/$/;"	m	struct:mdvmast_t	access:public
mdvmast_t::mdv_np	./v.h	/^ struct net_t *mdv_np;        \/* for var. form, pointer to wire *\/$/;"	m	struct:mdvmast_t	typeref:struct:mdvmast_t::net_t	access:public
mdvmast_t::mdv_tskp	./v.h	/^ struct task_t *mdv_tskp;     \/* task variable or scope in *\/$/;"	m	struct:mdvmast_t	typeref:struct:mdvmast_t::task_t	access:public
mdvmast_t::mdvnxt	./v.h	/^ struct mdvmast_t *mdvnxt; $/;"	m	struct:mdvmast_t	typeref:struct:mdvmast_t::mdvmast_t	access:public
mdvnxt	./v.h	/^ struct mdvmast_t *mdvnxt; $/;"	m	struct:mdvmast_t	typeref:struct:mdvmast_t::mdvmast_t	access:public
mem	./fstapi.c	/^unsigned char mem[1];$/;"	m	struct:collchain_t	file:	access:public
mem_use_msg	./cvc.c	/^static void mem_use_msg(int32 also_mems)$/;"	f	file:	signature:(int32 also_mems)
mem_used_by_writer	./fstapi.c	/^uint64_t mem_used_by_writer;$/;"	m	struct:fstReaderContext	file:	access:public
merge_always_ev_dctrl	./v_prp.c	/^static void merge_always_ev_dctrl(void) $/;"	f	file:	signature:(void)
merge_bblks	./v_bbopt.c	/^static void merge_bblks(struct flowg_t *fgp, struct bblk_t *addto_bbp,$/;"	f	file:	signature:(struct flowg_t *fgp, struct bblk_t *addto_bbp, struct bblk_t *rm_bbp)
merge_edge_dces	./v_prp.c	/^static void merge_edge_dces(void) $/;"	f	file:	signature:(void)
merge_insns_to_1fg_list	./v_asmlnk.c	/^static void merge_insns_to_1fg_list(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
merge_rm_1net_ld_dups	./v_prp.c	/^static void merge_rm_1net_ld_dups(struct mod_t *mdp, struct net_t *np)$/;"	f	file:	signature:(struct mod_t *mdp, struct net_t *np)
merge_uncond_1entry_bblks	./v_bbopt.c	/^static void merge_uncond_1entry_bblks(struct flowg_t *fgp,$/;"	f	file:	signature:(struct flowg_t *fgp, struct mod_t *mdp)
merged	./v.h	/^ unsigned merged : 1;         \/* T => dce has been merged *\/$/;"	m	struct:dcevnt_t	access:public
merged_count	./v.h	/^ int32 merged_count;            \/* number of merged dces *\/$/;"	m	struct:dcevnt_t	access:public
merged_dces	./v.h	/^ struct dcevnt_t **merged_dces; \/* dces on list merged into this one *\/$/;"	m	struct:dcevnt_t	typeref:struct:dcevnt_t::dcevnt_t	access:public
merged_dctp	./v.h	/^ struct delctrl_t *merged_dctp; \/* list of merged dctp off of head *\/$/;"	m	struct:delctrl_t	typeref:struct:delctrl_t::delctrl_t	access:public
mfi_id	./v.h	/^ int32 mfi_id;                \/* mfi indent if is mfi *\/$/;"	m	struct:net_t	access:public
mgateout_cbs	./v.h	/^ struct tev_t ***mgateout_cbs;\/* per gate ptr to per inst list of vc cbs *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::tev_t	access:public
mgates	./v.h	/^ struct gate_t *mgates;       \/* array of gates, udps and assigns *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::gate_t	access:public
mgen_symtab	./v.h	/^ struct symtab_t *mgen_symtab;\/* mod's gen symbol table *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::symtab_t	access:public
mgenitems	./v.h	/^ struct genitem_t *mgenitems; \/* list of generate items in this mod *\/ $/;"	m	struct:mod_t	typeref:struct:mod_t::genitem_t	access:public
mgia_rngdone	./v.h	/^ unsigned mgia_rngdone : 1;   \/* T => mod in array of g\/i rng marking done *\/$/;"	m	struct:mod_t	access:public
mgnum	./v.h	/^ int32 mgnum;                 \/* number of gates in module *\/$/;"	m	struct:mod_t	access:public
mgone	./v.h	/^ unsigned mgone : 1;          \/* T => split from defparam but same params *\/$/;"	m	struct:mod_t	access:public
mgrnum	./v.h	/^ int32 mgrnum;                \/* number of grefs in module *\/$/;"	m	struct:mod_t	access:public
mgrtab	./v.h	/^ struct gref_t *mgrtab;       \/* list of xmr's appearing in this mod. *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::gref_t	access:public
mhas_frcassgn	./v.h	/^ unsigned mhas_frcassgn : 1;  \/* T => mod contains force\/assign(s) *\/$/;"	m	struct:mod_t	access:public
mhas_indir_widdet	./v.h	/^ unsigned mhas_indir_widdet : 1; \/* T => module has indr width det param *\/$/;"	m	struct:mod_t	access:public
mhas_widthdet	./v.h	/^ unsigned mhas_widthdet : 1;  \/* T => module has width determin param *\/$/;"	m	struct:mod_t	access:public
mhasisform	./v.h	/^ unsigned mhasisform : 1;     \/* T => at least oe IS form constant in mod *\/$/;"	m	struct:mod_t	access:public
mhassplit	./v.h	/^ unsigned mhassplit : 1;      \/* T => modules split off from this one *\/$/;"	m	struct:mod_t	access:public
mhassts	./v.h	/^ unsigned mhassts : 1;        \/* T => module has strength wire(s) *\/$/;"	m	struct:mod_t	access:public
minstnum	./v.h	/^ unsigned minstnum : 2;       \/* static inst no. 0, 1, 2 (more than once) *\/$/;"	m	struct:mod_t	access:public
minsts	./v.h	/^ struct inst_t *minsts;       \/* array of module instance records *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::inst_t	access:public
minum	./v.h	/^ int32 minum;                 \/* number of instances in module *\/$/;"	m	struct:mod_t	access:public
mipd_t	./v.h	/^struct mipd_t {$/;"	s
mipd_t::impthtab	./v.h	/^ struct impth_t **impthtab;   \/* per inst inter mod src-dst pth ptr list *\/$/;"	m	struct:mipd_t	typeref:struct:mipd_t::impth_t	access:public
mipd_t::mipdschd_tevs	./v.h	/^ struct tev_t **mipdschd_tevs;\/* per inst sched. event ndxes (-1 if none) *\/$/;"	m	struct:mipd_t	typeref:struct:mipd_t::tev_t	access:public
mipd_t::no_mipd	./v.h	/^ unsigned no_mipd : 1;        \/* T => no mipd delay for this bit *\/$/;"	m	struct:mipd_t	access:public
mipd_t::oldvals	./v.h	/^ byte *oldvals;               \/* per inst array of old values *\/$/;"	m	struct:mipd_t	access:public
mipd_t::pb_mipd_delrep	./v.h	/^ unsigned pb_mipd_delrep : 5; \/* bit's delay type *\/ $/;"	m	struct:mipd_t	access:public
mipd_t::pb_mipd_du	./v.h	/^ union del_u pb_mipd_du;      \/* bit's delay - max if src-dst impth *\/$/;"	m	struct:mipd_t	typeref:union:mipd_t::del_u	access:public
mipd_t::pth_mipd	./v.h	/^ unsigned pth_mipd : 1;       \/* T => do not treat as src-dest inter mod pth *\/$/;"	m	struct:mipd_t	access:public
mipdschd_tevs	./v.h	/^ struct tev_t **mipdschd_tevs;\/* per inst sched. event ndxes (-1 if none) *\/$/;"	m	struct:mipd_t	typeref:struct:mipd_t::tev_t	access:public
mix	./fstapi.c	6267;"	d	file:
mk2_exprclass_handle	./v_vpi2.c	/^static void mk2_exprclass_handle(struct h_t *hp,$/;"	f	file:	signature:(struct h_t *hp, struct expr_t *xp, t_midat *idp, struct task_t *xin_tskp)
mk_pthterm_exprclass_handle	./v_vpi.c	/^static vpiHandle mk_pthterm_exprclass_handle(struct net_t *np,$/;"	f	file:	signature:(struct net_t *np, int32 i1, int32 i2, t_midat *idp)
mlevel	./v.h	/^ int32 mlevel;                \/* current mlevel for the splitting *\/$/;"	m	struct:mod_t	access:public
mlevnxt	./v.h	/^ struct mod_t *mlevnxt;       \/* link to next same level module *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::mod_t	access:public
mlocprmnum	./v.h	/^ int32 mlocprmnum;            \/* number of local params defined *\/ $/;"	m	struct:mod_t	access:public
mlocprms	./v.h	/^ struct net_t *mlocprms;      \/* local param definitions - list then tab *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::net_t	access:public
mlpcnt	./v.h	/^ int32 mlpcnt;                \/* mod. inst. loop count (static level) *\/$/;"	m	struct:mod_t	access:public
mnets	./v.h	/^ struct net_t *mnets;         \/* list then array of nets in module *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::net_t	access:public
mnnum	./v.h	/^ int32 mnnum;                 \/* number of nets in module *\/  $/;"	m	struct:mod_t	access:public
mno_unitcnv	./v.h	/^ unsigned mno_unitcnv : 1;    \/* F => need for delay unit conv. *\/$/;"	m	struct:mod_t	access:public
mnpins	./v.h	/^ struct net_pin_t *mnpins;    \/* table of all npins in module *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::net_pin_t	access:public
mnppnum	./v.h	/^ int32 mnppnum;               \/* num of npps (size of index) *\/$/;"	m	struct:mod_t	access:public
mnxt	./v.h	/^ struct mod_t *mnxt;          \/* next defined module *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::mod_t	access:public
mod_1bcas	./v.h	/^ unsigned mod_1bcas : 1;      \/* T => contains 1 bit ca - special for vpi *\/$/;"	m	struct:mod_t	access:public
mod_cfglbp	./v.h	/^ struct cfglib_t *mod_cfglbp; \/* config lib this mod's cells bound using *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::cfglib_t	access:public
mod_dfltntyp	./v.h	/^ unsigned mod_dfltntyp : 4;   \/* T => for vpi, from directive net dflt type *\/$/;"	m	struct:mod_t	access:public
mod_dumiact	./v.h	/^ unsigned mod_dumiact : 1;    \/* T => dummy iact. info mod. *\/$/;"	m	struct:mod_t	access:public
mod_dumpports_in_src	./v.h	/^ unsigned mod_dumpports_in_src : 1;\/* T => dump ports in src *\/$/;"	m	struct:mod_t	access:public
mod_dvars_in_src	./v.h	/^ unsigned mod_dvars_in_src : 1;\/* T => all vars dumpved in src *\/$/;"	m	struct:mod_t	access:public
mod_flowg	./v.h	/^ struct flowg_t *mod_flowg;   \/* list of ia and tf flow graphs for mod *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::flowg_t	access:public
mod_gatetran	./v.h	/^ unsigned mod_gatetran : 1;   \/* T => module has tran gate in it *\/$/;"	m	struct:mod_t	access:public
mod_has_mipds	./v.h	/^ unsigned mod_has_mipds : 1;  \/* T => mod has SDF or vpi_ only set mipds *\/  $/;"	m	struct:mod_t	access:public
mod_hasbidtran	./v.h	/^ unsigned mod_hasbidtran : 1; \/* T => has inout mod. port - tran chan *\/$/;"	m	struct:mod_t	access:public
mod_hasdvars	./v.h	/^ unsigned mod_hasdvars : 1;   \/* T => for at least 1 inst. all vars dumped *\/$/;"	m	struct:mod_t	access:public
mod_hastran	./v.h	/^ unsigned mod_hastran : 1;    \/* T => has tran gate - tran chan *\/$/;"	m	struct:mod_t	access:public
mod_idata	./v.h	/^ word32 *mod_idata;            \/* RT ptr to base of mod's all inst data *\/ $/;"	m	struct:mod_t	access:public
mod_idata_siz	./v.h	/^ size_t mod_idata_siz;         \/* wrd size of this mod's each inst data area *\/$/;"	m	struct:mod_t	access:public
mod_idata_siz_presim	./v.h	/^ size_t mod_idata_siz_presim;  \/* original size of mod sim prior to sim *\/$/;"	m	struct:mod_t	access:public
mod_idp_map	./v.h	/^ struct idp_map_t **mod_idp_map;\/* idp data struct map of 1 instidp area *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::idp_map_t	access:public
mod_last_ifi	./v.h	/^ int32 mod_last_ifi;          \/* and file in case spans multiple *\/$/;"	m	struct:mod_t	access:public
mod_last_lini	./v.h	/^ int32 mod_last_lini;         \/* line no. of end (mabye in next file) *\/$/;"	m	struct:mod_t	access:public
mod_lofp_decl	./v.h	/^ unsigned mod_lofp_decl : 1;  \/* T => port decl uses list of ports form *\/ $/;"	m	struct:mod_t	access:public
mod_name_cmp	./v_cvr.c	/^static int32 mod_name_cmp(const void *m1, const void *m2)$/;"	f	file:	signature:(const void *m1, const void *m2)
mod_ndx_seq_no	./v.h	/^ int32 mod_ndx_seq_no;        \/* need separate counter per mod for XMRs *\/$/;"	m	struct:mod_t	access:public
mod_parms_gd	./v.h	/^ unsigned mod_parms_gd : 1;   \/* T => all dependent and pound params right *\/$/;"	m	struct:mod_t	access:public
mod_pin_t	./v.h	/^struct mod_pin_t {$/;"	s
mod_pin_t::assgnfunc_set	./v.h	/^ unsigned assgnfunc_set : 1;  \/* T => know the port assign func *\/$/;"	m	struct:mod_pin_t	access:public
mod_pin_t::has_mipd	./v.h	/^ unsigned has_mipd : 1;       \/* T => input port has mipd delay *\/$/;"	m	struct:mod_pin_t	access:public
mod_pin_t::has_scalar_mpps	./v.h	/^ unsigned has_scalar_mpps : 1;\/* T => simulated per bit *\/$/;"	m	struct:mod_pin_t	access:public
mod_pin_t::inout_unc	./v.h	/^ unsigned inout_unc : 1;      \/* T => this inout unc. somewhere *\/$/;"	m	struct:mod_pin_t	access:public
mod_pin_t::mp_explicit	./v.h	/^ unsigned mp_explicit : 1;    \/* T => source explicit port reference *\/$/;"	m	struct:mod_pin_t	access:public
mod_pin_t::mp_jmpered	./v.h	/^ unsigned mp_jmpered : 1;     \/* T => port has net also in other port *\/$/;"	m	struct:mod_pin_t	access:public
mod_pin_t::mpaf	./v.h	/^ union mpp_afunc_u mpaf;$/;"	m	struct:mod_pin_t	typeref:union:mod_pin_t::mpp_afunc_u	access:public
mod_pin_t::mpattrs	./v.h	/^ struct attr_t *mpattrs;      \/* all I\/O decls attrs for conn nets *\/$/;"	m	struct:mod_pin_t	typeref:struct:mod_pin_t::attr_t	access:public
mod_pin_t::mpfnam_ind	./v.h	/^ unsigned mpfnam_ind : 16;    \/* file symbol defined in *\/$/;"	m	struct:mod_pin_t	access:public
mod_pin_t::mplin_cnt	./v.h	/^ int32 mplin_cnt;             \/* def. line no. *\/$/;"	m	struct:mod_pin_t	access:public
mod_pin_t::mpnxt	./v.h	/^ struct mod_pin_t *mpnxt;     \/* elaborate time next link *\/$/;"	m	struct:mod_pin_t	typeref:struct:mod_pin_t::mod_pin_t	access:public
mod_pin_t::mpref	./v.h	/^ struct expr_t *mpref;        \/* expression form port list (const.) *\/$/;"	m	struct:mod_pin_t	typeref:struct:mod_pin_t::expr_t	access:public
mod_pin_t::mpsnam	./v.h	/^ char *mpsnam;                \/* name not symbol of port (can be NULL) *\/$/;"	m	struct:mod_pin_t	access:public
mod_pin_t::mptyp	./v.h	/^ unsigned mptyp : 3;          \/* I\/O type - maybe changed with warning *\/$/;"	m	struct:mod_pin_t	access:public
mod_pin_t::mpwide	./v.h	/^ int32 mpwide;                \/* width of port *\/$/;"	m	struct:mod_pin_t	access:public
mod_pin_t::pbmpps	./v.h	/^ struct mod_pin_t *pbmpps;    \/* for rhs hconn input port, per bit mpp *\/$/;"	m	struct:mod_pin_t	typeref:struct:mod_pin_t::mod_pin_t	access:public
mod_rhs_param	./v.h	/^ unsigned mod_rhs_param : 1;  \/* T => mod has param def with rhs param *\/ $/;"	m	struct:mod_t	access:public
mod_t	./v.h	/^struct mod_t {$/;"	s
mod_t::asm_partition_cnt	./v.h	/^ int32 asm_partition_cnt;     \/* asm files partitioned into N files *\/    $/;"	m	struct:mod_t	access:public
mod_t::cfg_scanned	./v.h	/^ unsigned cfg_scanned : 1;    \/* T => module has been scanned by config *\/$/;"	m	struct:mod_t	access:public
mod_t::ctev_list_hd	./v.h	/^ struct ctev_t *ctev_list_hd; \/* hd of this mods CT (static) ctevs structs *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::ctev_t	access:public
mod_t::dcep_lst_xmrp	./v.h	/^ struct dceauxlst_t *dcep_lst_xmrp;  \/* dcep with dce_xprs xmr to this mod *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::dceauxlst_t	access:public
mod_t::dctrl_array	./v.h	/^ struct delctrl_t **dctrl_array; \/* array of dctrl events *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::delctrl_t	access:public
mod_t::dctrl_size	./v.h	/^ int32 dctrl_size;            \/* size of dctrl events array *\/$/;"	m	struct:mod_t	access:public
mod_t::dfp_allmodinsts_split	./v.h	/^ unsigned dfp_allmodinsts_split : 1; \/* T => defparam to mod - must splt all *\/$/;"	m	struct:mod_t	access:public
mod_t::expr_tab	./v.h	/^ struct expr_tab_t *expr_tab; \/* table info of all sys calls in mod *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::expr_tab_t	access:public
mod_t::flatinum	./v.h	/^ int32 flatinum;              \/* num. of flattened instances of module *\/$/;"	m	struct:mod_t	access:public
mod_t::ialst	./v.h	/^ struct ialst_t *ialst;       \/* initial\/always list *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::ialst_t	access:public
mod_t::inst_split	./v.h	/^ struct inst_t *inst_split;   \/* instance split from *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::inst_t	access:public
mod_t::iploctab	./v.h	/^ struct srcloc_t **iploctab;  \/* || to insts ptr tab to tab of port locs *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::srcloc_t	access:public
mod_t::isnum_tree	./v.h	/^ struct avlhd_t *isnum_tree;  \/* holds isnum objects to place into idp *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::avlhd_t	access:public
mod_t::lastinum	./v.h	/^ int32 lastinum;              \/* while assigning inums - last used *\/$/;"	m	struct:mod_t	access:public
mod_t::m_combined_into	./v.h	/^ unsigned m_combined_into : 1;   \/* T => module has been combined into *\/$/;"	m	struct:mod_t	access:public
mod_t::m_dfps_in_gblks	./v.h	/^ unsigned m_dfps_in_gblks : 1;\/* T => at least 1 dfp in mod in a gen blk *\/$/;"	m	struct:mod_t	access:public
mod_t::m_gen_xpnded	./v.h	/^ unsigned m_gen_xpnded : 1;   \/* T => gens in this mod expended *\/$/;"	m	struct:mod_t	access:public
mod_t::m_gened_fstvars	./v.h	/^ unsigned m_gened_fstvars : 1; \/* T => fst vars generated *\/$/;"	m	struct:mod_t	access:public
mod_t::m_gened_remove	./v.h	/^ unsigned m_gened_remove : 1; \/* T => in never used generate mark remove *\/$/;"	m	struct:mod_t	access:public
mod_t::m_gia_in_gblks	./v.h	/^ unsigned m_gia_in_gblks : 1; \/* T => mod has arrays of g\/i in gen blks *\/$/;"	m	struct:mod_t	access:public
mod_t::m_has_event_cover	./v.h	/^ unsigned m_has_event_cover : 1; \/* T => module contains event cover *\/$/;"	m	struct:mod_t	access:public
mod_t::m_has_garrs	./v.h	/^ unsigned m_has_garrs : 1;    \/* T => mod has at one arrays of gates *\/ $/;"	m	struct:mod_t	access:public
mod_t::m_has_iarrs	./v.h	/^ unsigned m_has_iarrs : 1;    \/* T => mod has at one arrays of insts *\/ $/;"	m	struct:mod_t	access:public
mod_t::m_has_stmt_cover	./v.h	/^ unsigned m_has_stmt_cover : 1;  \/* T => module contains stmt cover *\/$/;"	m	struct:mod_t	access:public
mod_t::m_has_toggle_cover	./v.h	/^ unsigned m_has_toggle_cover : 1;\/* T => module contains net toggle cover *\/$/;"	m	struct:mod_t	access:public
mod_t::m_hascells	./v.h	/^ unsigned m_hascells : 1;     \/* T => module contains asic style cells *\/$/;"	m	struct:mod_t	access:public
mod_t::m_idnum	./v.h	/^ int32 m_idnum;               \/* index (id) no. for mod - for .comm *\/$/;"	m	struct:mod_t	access:public
mod_t::m_inconfig	./v.h	/^ unsigned m_inconfig : 1;     \/* T => module is from a config file *\/$/;"	m	struct:mod_t	access:public
mod_t::m_iscell	./v.h	/^ unsigned m_iscell : 1;       \/* T => module is asic style cell *\/$/;"	m	struct:mod_t	access:public
mod_t::m_itps_tgl_cover	./v.h	/^ byte *m_itps_tgl_cover;      \/* per inst (flat inum) of mod has some tgl *\/$/;"	m	struct:mod_t	access:public
mod_t::m_maybe_gened	./v.h	/^ unsigned m_maybe_gened : 1;  \/* T => use in gen src - may be gened top *\/$/;"	m	struct:mod_t	access:public
mod_t::m_no_param_match	./v.h	/^ unsigned m_no_param_match : 1; \/* T => turn off # param matching *\/$/;"	m	struct:mod_t	access:public
mod_t::m_npp_ndx	./v.h	/^ struct net_pin_t **m_npp_ndx;\/* per mod index of all (lds & drvs) npps *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::net_pin_t	access:public
mod_t::m_opt_pli_bits_set	./v.h	/^ unsigned m_opt_pli_bits_set : 1; \/* T => opt config pli bits set *\/$/;"	m	struct:mod_t	access:public
mod_t::m_pth_ndx	./v.h	/^ struct spcpth_t **m_pth_ndx; \/* per mod index of all specify delay paths *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::spcpth_t	access:public
mod_t::m_tfs_in_gblks	./v.h	/^ unsigned m_tfs_in_gblks : 1; \/* T => mod contains tsks\/funcs in gen blks *\/ $/;"	m	struct:mod_t	access:public
mod_t::m_use_xprop	./v.h	/^ unsigned m_use_xprop : 1;    \/* this module has xprop on *\/  $/;"	m	struct:mod_t	access:public
mod_t::m_use_xprop2	./v.h	/^ unsigned m_use_xprop2 : 1;   \/* this module has xprop2 (x flooding) on *\/$/;"	m	struct:mod_t	access:public
mod_t::m_use_xprop_and_or_x	./v.h	/^ unsigned m_use_xprop_and_or_x : 1; \/* this mod &, |, &&, || bit x preserve *\/$/;"	m	struct:mod_t	access:public
mod_t::m_using_init_file	./v.h	/^ unsigned m_using_init_file : 1; \/* T => uses this modules asm init file *\/$/;"	m	struct:mod_t	access:public
mod_t::m_xmrs_in_gblks	./v.h	/^ unsigned m_xmrs_in_gblks : 1;\/* T => at least 1 xmr\/dfp in mod in a gen blk *\/$/;"	m	struct:mod_t	access:public
mod_t::mattrs	./v.h	/^ struct attr_t *mattrs;       \/* mod attrs - used only if inst has no attr *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::attr_t	access:public
mod_t::mcanum	./v.h	/^ int32 mcanum;                \/* number of non 1 bit cas in module *\/ $/;"	m	struct:mod_t	access:public
mod_t::mcas	./v.h	/^ struct conta_t *mcas;        \/* module cont. assigns *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::conta_t	access:public
mod_t::mcells	./v.h	/^ struct cell_t *mcells;       \/* unordered list of module objects *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::cell_t	access:public
mod_t::mdfp_grnum	./v.h	/^ int32 mdfp_grnum;            \/* SJM 08-26-11 - now sep defparam grefs *\/$/;"	m	struct:mod_t	access:public
mod_t::mdfp_sav_grnum	./v.h	/^ int32 mdfp_sav_grnum;        \/* num. of to put back pre gen defp assoc xmrs *\/$/;"	m	struct:mod_t	access:public
mod_t::mdfps	./v.h	/^ struct dfparam_t *mdfps;     \/* modules defparams *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::dfparam_t	access:public
mod_t::mgateout_cbs	./v.h	/^ struct tev_t ***mgateout_cbs;\/* per gate ptr to per inst list of vc cbs *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::tev_t	access:public
mod_t::mgates	./v.h	/^ struct gate_t *mgates;       \/* array of gates, udps and assigns *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::gate_t	access:public
mod_t::mgen_symtab	./v.h	/^ struct symtab_t *mgen_symtab;\/* mod's gen symbol table *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::symtab_t	access:public
mod_t::mgenitems	./v.h	/^ struct genitem_t *mgenitems; \/* list of generate items in this mod *\/ $/;"	m	struct:mod_t	typeref:struct:mod_t::genitem_t	access:public
mod_t::mgia_rngdone	./v.h	/^ unsigned mgia_rngdone : 1;   \/* T => mod in array of g\/i rng marking done *\/$/;"	m	struct:mod_t	access:public
mod_t::mgnum	./v.h	/^ int32 mgnum;                 \/* number of gates in module *\/$/;"	m	struct:mod_t	access:public
mod_t::mgone	./v.h	/^ unsigned mgone : 1;          \/* T => split from defparam but same params *\/$/;"	m	struct:mod_t	access:public
mod_t::mgrnum	./v.h	/^ int32 mgrnum;                \/* number of grefs in module *\/$/;"	m	struct:mod_t	access:public
mod_t::mgrtab	./v.h	/^ struct gref_t *mgrtab;       \/* list of xmr's appearing in this mod. *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::gref_t	access:public
mod_t::mhas_frcassgn	./v.h	/^ unsigned mhas_frcassgn : 1;  \/* T => mod contains force\/assign(s) *\/$/;"	m	struct:mod_t	access:public
mod_t::mhas_indir_widdet	./v.h	/^ unsigned mhas_indir_widdet : 1; \/* T => module has indr width det param *\/$/;"	m	struct:mod_t	access:public
mod_t::mhas_widthdet	./v.h	/^ unsigned mhas_widthdet : 1;  \/* T => module has width determin param *\/$/;"	m	struct:mod_t	access:public
mod_t::mhasisform	./v.h	/^ unsigned mhasisform : 1;     \/* T => at least oe IS form constant in mod *\/$/;"	m	struct:mod_t	access:public
mod_t::mhassplit	./v.h	/^ unsigned mhassplit : 1;      \/* T => modules split off from this one *\/$/;"	m	struct:mod_t	access:public
mod_t::mhassts	./v.h	/^ unsigned mhassts : 1;        \/* T => module has strength wire(s) *\/$/;"	m	struct:mod_t	access:public
mod_t::minstnum	./v.h	/^ unsigned minstnum : 2;       \/* static inst no. 0, 1, 2 (more than once) *\/$/;"	m	struct:mod_t	access:public
mod_t::minsts	./v.h	/^ struct inst_t *minsts;       \/* array of module instance records *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::inst_t	access:public
mod_t::minum	./v.h	/^ int32 minum;                 \/* number of instances in module *\/$/;"	m	struct:mod_t	access:public
mod_t::mlevel	./v.h	/^ int32 mlevel;                \/* current mlevel for the splitting *\/$/;"	m	struct:mod_t	access:public
mod_t::mlevnxt	./v.h	/^ struct mod_t *mlevnxt;       \/* link to next same level module *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::mod_t	access:public
mod_t::mlocprmnum	./v.h	/^ int32 mlocprmnum;            \/* number of local params defined *\/ $/;"	m	struct:mod_t	access:public
mod_t::mlocprms	./v.h	/^ struct net_t *mlocprms;      \/* local param definitions - list then tab *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::net_t	access:public
mod_t::mlpcnt	./v.h	/^ int32 mlpcnt;                \/* mod. inst. loop count (static level) *\/$/;"	m	struct:mod_t	access:public
mod_t::mnets	./v.h	/^ struct net_t *mnets;         \/* list then array of nets in module *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::net_t	access:public
mod_t::mnnum	./v.h	/^ int32 mnnum;                 \/* number of nets in module *\/  $/;"	m	struct:mod_t	access:public
mod_t::mno_unitcnv	./v.h	/^ unsigned mno_unitcnv : 1;    \/* F => need for delay unit conv. *\/$/;"	m	struct:mod_t	access:public
mod_t::mnpins	./v.h	/^ struct net_pin_t *mnpins;    \/* table of all npins in module *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::net_pin_t	access:public
mod_t::mnppnum	./v.h	/^ int32 mnppnum;               \/* num of npps (size of index) *\/$/;"	m	struct:mod_t	access:public
mod_t::mnxt	./v.h	/^ struct mod_t *mnxt;          \/* next defined module *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::mod_t	access:public
mod_t::mod_1bcas	./v.h	/^ unsigned mod_1bcas : 1;      \/* T => contains 1 bit ca - special for vpi *\/$/;"	m	struct:mod_t	access:public
mod_t::mod_cfglbp	./v.h	/^ struct cfglib_t *mod_cfglbp; \/* config lib this mod's cells bound using *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::cfglib_t	access:public
mod_t::mod_dfltntyp	./v.h	/^ unsigned mod_dfltntyp : 4;   \/* T => for vpi, from directive net dflt type *\/$/;"	m	struct:mod_t	access:public
mod_t::mod_dumiact	./v.h	/^ unsigned mod_dumiact : 1;    \/* T => dummy iact. info mod. *\/$/;"	m	struct:mod_t	access:public
mod_t::mod_dumpports_in_src	./v.h	/^ unsigned mod_dumpports_in_src : 1;\/* T => dump ports in src *\/$/;"	m	struct:mod_t	access:public
mod_t::mod_dvars_in_src	./v.h	/^ unsigned mod_dvars_in_src : 1;\/* T => all vars dumpved in src *\/$/;"	m	struct:mod_t	access:public
mod_t::mod_flowg	./v.h	/^ struct flowg_t *mod_flowg;   \/* list of ia and tf flow graphs for mod *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::flowg_t	access:public
mod_t::mod_gatetran	./v.h	/^ unsigned mod_gatetran : 1;   \/* T => module has tran gate in it *\/$/;"	m	struct:mod_t	access:public
mod_t::mod_has_mipds	./v.h	/^ unsigned mod_has_mipds : 1;  \/* T => mod has SDF or vpi_ only set mipds *\/  $/;"	m	struct:mod_t	access:public
mod_t::mod_hasbidtran	./v.h	/^ unsigned mod_hasbidtran : 1; \/* T => has inout mod. port - tran chan *\/$/;"	m	struct:mod_t	access:public
mod_t::mod_hasdvars	./v.h	/^ unsigned mod_hasdvars : 1;   \/* T => for at least 1 inst. all vars dumped *\/$/;"	m	struct:mod_t	access:public
mod_t::mod_hastran	./v.h	/^ unsigned mod_hastran : 1;    \/* T => has tran gate - tran chan *\/$/;"	m	struct:mod_t	access:public
mod_t::mod_idata	./v.h	/^ word32 *mod_idata;            \/* RT ptr to base of mod's all inst data *\/ $/;"	m	struct:mod_t	access:public
mod_t::mod_idata_siz	./v.h	/^ size_t mod_idata_siz;         \/* wrd size of this mod's each inst data area *\/$/;"	m	struct:mod_t	access:public
mod_t::mod_idata_siz_presim	./v.h	/^ size_t mod_idata_siz_presim;  \/* original size of mod sim prior to sim *\/$/;"	m	struct:mod_t	access:public
mod_t::mod_idp_map	./v.h	/^ struct idp_map_t **mod_idp_map;\/* idp data struct map of 1 instidp area *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::idp_map_t	access:public
mod_t::mod_last_ifi	./v.h	/^ int32 mod_last_ifi;          \/* and file in case spans multiple *\/$/;"	m	struct:mod_t	access:public
mod_t::mod_last_lini	./v.h	/^ int32 mod_last_lini;         \/* line no. of end (mabye in next file) *\/$/;"	m	struct:mod_t	access:public
mod_t::mod_lofp_decl	./v.h	/^ unsigned mod_lofp_decl : 1;  \/* T => port decl uses list of ports form *\/ $/;"	m	struct:mod_t	access:public
mod_t::mod_ndx_seq_no	./v.h	/^ int32 mod_ndx_seq_no;        \/* need separate counter per mod for XMRs *\/$/;"	m	struct:mod_t	access:public
mod_t::mod_parms_gd	./v.h	/^ unsigned mod_parms_gd : 1;   \/* T => all dependent and pound params right *\/$/;"	m	struct:mod_t	access:public
mod_t::mod_rhs_param	./v.h	/^ unsigned mod_rhs_param : 1;  \/* T => mod has param def with rhs param *\/ $/;"	m	struct:mod_t	access:public
mod_t::mod_uncdrv	./v.h	/^ unsigned mod_uncdrv : 8;     \/* for vpi, mod val of unc drive directive *\/ $/;"	m	struct:mod_t	access:public
mod_t::moditps	./v.h	/^ struct itree_t **moditps;    \/* itnum to itree struct mapping table *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::itree_t	access:public
mod_t::mpins	./v.h	/^ struct mod_pin_t *mpins;     \/* defined ports first list then arr. *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::mod_pin_t	access:public
mod_t::mpndprm_ingirng	./v.h	/^ unsigned mpndprm_ingirng : 1;\/* T => module has pound param in gi range *\/ $/;"	m	struct:mod_t	access:public
mod_t::mpndsplit	./v.h	/^ unsigned mpndsplit : 1;      \/* T => split off from # params *\/$/;"	m	struct:mod_t	access:public
mod_t::mpndspltmst	./v.h	/^ struct mod_t *mpndspltmst;   \/* pointer to pound master if split off *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::mod_t	access:public
mod_t::mpnum	./v.h	/^ int32 mpnum;                 \/* number of module ports *\/$/;"	m	struct:mod_t	access:public
mod_t::mprmnum	./v.h	/^ int32 mprmnum;               \/* number of pound params defined *\/ $/;"	m	struct:mod_t	access:public
mod_t::mprms	./v.h	/^ struct net_t *mprms;         \/* param definitions - list then tab *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::net_t	access:public
mod_t::mpthnum	./v.h	/^ int32 mpthnum;$/;"	m	struct:mod_t	access:public
mod_t::mspfy	./v.h	/^ struct spfy_t *mspfy;        \/* module's specify elements *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::spfy_t	access:public
mod_t::msplit	./v.h	/^ unsigned msplit : 1;         \/* T => module created from defparam splitting *\/$/;"	m	struct:mod_t	access:public
mod_t::msplitpth	./v.h	/^ unsigned msplitpth : 1;      \/* T => module comp. of split off chain *\/$/;"	m	struct:mod_t	access:public
mod_t::mspltmst	./v.h	/^ struct mod_t *mspltmst;      \/* pointer to defparam master if split off *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::mod_t	access:public
mod_t::mstmts	./v.h	/^ struct st_t **mstmts;        \/* per mod array of stmts *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::st_t	access:public
mod_t::mstnum	./v.h	/^ int32 mstnum;                \/* size of mod's stmt tab *\/$/;"	m	struct:mod_t	access:public
mod_t::mstnum_no_task	./v.h	/^ int32 mstnum_no_task;        \/* size of mod's stmt tab not including tasks *\/$/;"	m	struct:mod_t	access:public
mod_t::msym	./v.h	/^ struct sy_t *msym;           \/* symbol from separate module name space *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::sy_t	access:public
mod_t::msymtab	./v.h	/^ struct symtab_t *msymtab;    \/* symbol table for objects in module *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::symtab_t	access:public
mod_t::mtasks	./v.h	/^ struct task_t *mtasks;       \/* tasks declared in module *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::task_t	access:public
mod_t::mtime_prec	./v.h	/^ unsigned mtime_prec : 4;     \/* prec. - exp. 0 (1 sec.) - 15 (1 fs) *\/$/;"	m	struct:mod_t	access:public
mod_t::mtime_units	./v.h	/^ unsigned mtime_units : 4;    \/* no. of significant units of time rounded *\/$/;"	m	struct:mod_t	access:public
mod_t::mtotvarnum	./v.h	/^ int32 mtotvarnum;            \/* total number of variables mod+task *\/$/;"	m	struct:mod_t	access:public
mod_t::mvarinits	./v.h	/^ struct varinitlst_t *mvarinits; \/* list of var (not net) init decls *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::varinitlst_t	access:public
mod_t::mversno	./v.h	/^ int32 mversno;               \/* version number for split modules *\/$/;"	m	struct:mod_t	access:public
mod_t::mwiddetdone	./v.h	/^ unsigned mwiddetdone : 1;    \/* T => mod width determing param marking done *\/$/;"	m	struct:mod_t	access:public
mod_t::prov_mstndx	./v.h	/^ struct st_t **prov_mstndx;   \/* provisional index (ptr to stmt) *\/ $/;"	m	struct:mod_t	typeref:struct:mod_t::st_t	access:public
mod_t::prov_mstnum	./v.h	/^ int32 prov_mstnum;           \/* provisional mod stmt ndx size for storage *\/$/;"	m	struct:mod_t	access:public
mod_t::recomb_to_mdp	./v.h	/^ struct mod_t *recomb_to_mdp; \/* for recombining - recombs to this one *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::mod_t	access:public
mod_t::sav_mdfps	./v.h	/^ struct dfparam_t *sav_mdfps; \/* place to copy dfps to put back pre gen *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::dfparam_t	access:public
mod_t::smpins	./v.h	/^ struct srtmp_t *smpins;      \/* sorted table of module pins *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::srtmp_t	access:public
mod_t::split_hd	./v.h	/^ struct mod_t *split_hd;      \/* module split list head *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::mod_t	access:public
mod_t::split_nxt	./v.h	/^ struct mod_t *split_nxt;     \/* next split mod *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::mod_t	access:public
mod_t::split_tail	./v.h	/^ struct mod_t *split_tail;    \/* module split list tail *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::mod_t	access:public
mod_t::task_start_ofs	./v.h	/^ size_t task_start_ofs;        \/* offset where task vars start *\/$/;"	m	struct:mod_t	access:public
mod_t::xprop_nb_taskp	./v.h	/^ struct task_t *xprop_nb_taskp; \/* dummy xprop non-blocking stmt holder *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::task_t	access:public
mod_tot_drvn_const_bits	./v_cvr.c	/^static void mod_tot_drvn_const_bits(struct mod_t *mdp, int32 *tot_insts,$/;"	f	file:	signature:(struct mod_t *mdp, int32 *tot_insts, int32 *tot_wires, int32 *tot_bits, int32 *tot_drvn_const)
mod_tot_sigs_bits	./v_cvr.c	/^static void mod_tot_sigs_bits(struct mod_t *mdp, int32 *tot_insts,$/;"	f	file:	signature:(struct mod_t *mdp, int32 *tot_insts, int32 *tot_sigs, int32 *tot_bits, int32 *tot_tgls, int32 *tot_01_tgls, int32 *tot_10_tgls, int32 *tot_excl_bits, int32 *tot_drvn_con_bits, int32 *tot_drvn_con_sigs)
mod_uncdrv	./v.h	/^ unsigned mod_uncdrv : 8;     \/* for vpi, mod val of unc drive directive *\/ $/;"	m	struct:mod_t	access:public
modadr_nlo	./igen.h	/^ int32 modadr_nlo; $/;"	m	union:tn_const_u	access:public
moditps	./v.h	/^ struct itree_t **moditps;    \/* itnum to itree struct mapping table *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::itree_t	access:public
modnam	./v.h	/^ char *modnam;$/;"	m	struct:undef_t	access:public
modprop_vpiget	./v_vpi2.c	/^static int32 modprop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
modstrprop_vpiget	./v_vpi2.c	/^static char *modstrprop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
modtypes	./fstapi.c	/^static const char *modtypes[] = {$/;"	v	file:
mon_dcehdr	./v.h	/^ struct dceauxlst_t **mon_dcehdr; \/* lst of per inst dces bld during prep *\/ $/;"	m	struct:monaux_t	typeref:struct:monaux_t::dceauxlst_t	access:public
monaux_t	./v.h	/^struct monaux_t {$/;"	s
monaux_t::argisvtab	./v.h	/^ byte *argisvtab;             \/* tab of v format flags for monitor *\/$/;"	m	struct:monaux_t	access:public
monaux_t::dces_blt	./v.h	/^ unsigned dces_blt : 1;       \/* T => dces already built for this monit *\/$/;"	m	struct:monaux_t	access:public
monaux_t::mon_dcehdr	./v.h	/^ struct dceauxlst_t **mon_dcehdr; \/* lst of per inst dces bld during prep *\/ $/;"	m	struct:monaux_t	typeref:struct:monaux_t::dceauxlst_t	access:public
monit_in_src	./v.h	/^ unsigned monit_in_src : 1;   \/* T => has mon\/fmon in source for var *\/$/;"	m	struct:ncomp_t	access:public
monit_in_src	./v.h	/^ unsigned monit_in_src : 1;   \/* monit for var somewhere in src *\/$/;"	m	struct:net_t	access:public
move_srep_insn2	./v_bbgen3.c	/^static int32 move_srep_insn2(int32 tntyp, int32 opcod, int32 srtyp, int32 blen, $/;"	f	file:	signature:(int32 tntyp, int32 opcod, int32 srtyp, int32 blen, int32 src_amode, va_list va)
move_time	./v_sim.c	/^static struct tev_t *move_time(void)$/;"	f	file:	signature:(void)
move_to_time0	./v_sim.c	/^static int32 move_to_time0(void)$/;"	f	file:	signature:(void)
movedir_match_dir_pats	./v_src3.c	/^static void movedir_match_dir_pats(struct libel_t *lbep, $/;"	f	file:	signature:(struct libel_t *lbep, struct xpndfile_t *xfp_hd)
mp_explicit	./v.h	/^ unsigned mp_explicit : 1;    \/* T => source explicit port reference *\/$/;"	m	struct:mod_pin_t	access:public
mp_jmpered	./v.h	/^ unsigned mp_jmpered : 1;     \/* T => port has net also in other port *\/$/;"	m	struct:mod_pin_t	access:public
mpaf	./v.h	/^ union mpp_afunc_u mpaf;$/;"	m	struct:mod_pin_t	typeref:union:mod_pin_t::mpp_afunc_u	access:public
mpattrs	./v.h	/^ struct attr_t *mpattrs;      \/* all I\/O decls attrs for conn nets *\/$/;"	m	struct:mod_pin_t	typeref:struct:mod_pin_t::attr_t	access:public
mpexpr_zdiv	./v_ex2.c	/^static void mpexpr_zdiv(word32 *quot, word32 *rem, word32 *ztmp1, int32 ztmp1_len,$/;"	f	file:	signature:(word32 *quot, word32 *rem, word32 *ztmp1, int32 ztmp1_len, word32 *ztmp2, int32 ztmp2_len)
mpfnam_ind	./v.h	/^ unsigned mpfnam_ind : 16;    \/* file symbol defined in *\/$/;"	m	struct:mod_pin_t	access:public
mpins	./v.h	/^ struct mod_pin_t *mpins;     \/* defined ports first list then arr. *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::mod_pin_t	access:public
mplin_cnt	./v.h	/^ int32 mplin_cnt;             \/* def. line no. *\/$/;"	m	struct:mod_pin_t	access:public
mpndprm_ingirng	./v.h	/^ unsigned mpndprm_ingirng : 1;\/* T => module has pound param in gi range *\/ $/;"	m	struct:mod_t	access:public
mpndsplit	./v.h	/^ unsigned mpndsplit : 1;      \/* T => split off from # params *\/$/;"	m	struct:mod_t	access:public
mpndspltmst	./v.h	/^ struct mod_t *mpndspltmst;   \/* pointer to pound master if split off *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::mod_t	access:public
mpnum	./v.h	/^ int32 mpnum;                 \/* number of module ports *\/$/;"	m	struct:mod_t	access:public
mpnxt	./v.h	/^ struct mod_pin_t *mpnxt;     \/* elaborate time next link *\/$/;"	m	struct:mod_pin_t	typeref:struct:mod_pin_t::mod_pin_t	access:public
mpp	./v.h	/^ struct mod_pin_t *mpp;$/;"	m	union:ten_u	typeref:struct:ten_u::mod_pin_t	access:public
mpp_afunc_u	./v.h	/^union mpp_afunc_u {$/;"	u
mpp_afunc_u::mpp_downassgnfunc	./v.h	/^ void (*mpp_downassgnfunc)(register struct expr_t *,$/;"	m	union:mpp_afunc_u	access:public
mpp_afunc_u::mpp_upassgnfunc	./v.h	/^ void (*mpp_upassgnfunc)(register struct expr_t *,$/;"	m	union:mpp_afunc_u	access:public
mpp_downassgnfunc	./v.h	/^ void (*mpp_downassgnfunc)(register struct expr_t *,$/;"	m	union:mpp_afunc_u	access:public
mpp_upassgnfunc	./v.h	/^ void (*mpp_upassgnfunc)(register struct expr_t *,$/;"	m	union:mpp_afunc_u	access:public
mppos	./v.h	/^ int32 mppos;$/;"	m	struct:srtmp_t	access:public
mpref	./v.h	/^ struct expr_t *mpref;        \/* expression form port list (const.) *\/$/;"	m	struct:mod_pin_t	typeref:struct:mod_pin_t::expr_t	access:public
mprmnum	./v.h	/^ int32 mprmnum;               \/* number of pound params defined *\/ $/;"	m	struct:mod_t	access:public
mprms	./v.h	/^ struct net_t *mprms;         \/* param definitions - list then tab *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::net_t	access:public
mprmval_cmp	./v_fx.c	/^static int32 mprmval_cmp(struct mod_t *mdp1, struct mod_t *mdp2)$/;"	f	file:	signature:(struct mod_t *mdp1, struct mod_t *mdp2)
mpsnam	./v.h	/^ char *mpsnam;                \/* name not symbol of port (can be NULL) *\/$/;"	m	struct:mod_pin_t	access:public
mpthnum	./v.h	/^ int32 mpthnum;$/;"	m	struct:mod_t	access:public
mptyp	./v.h	/^ unsigned mptyp : 3;          \/* I\/O type - maybe changed with warning *\/$/;"	m	struct:mod_pin_t	access:public
mpwide	./v.h	/^ int32 mpwide;                \/* width of port *\/$/;"	m	struct:mod_pin_t	access:public
msg_sdfpath_tostr	./v_sdf.c	/^static char *msg_sdfpath_tostr(char *s, char *psrcnam, int32 si1, int32 si2,$/;"	f	file:	signature:(char *s, char *psrcnam, int32 si1, int32 si2, int32 eval, char *pdstnam, int32 di1, int32 di2, struct expr_t *cndx, int32 is_condelse)
msgpref_tostr	./v_sdf.c	/^static char *msgpref_tostr(char *s, struct mod_pin_t *mpp)$/;"	f	file:	signature:(char *s, struct mod_pin_t *mpp)
mspfy	./v.h	/^ struct spfy_t *mspfy;        \/* module's specify elements *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::spfy_t	access:public
msplit	./v.h	/^ unsigned msplit : 1;         \/* T => module created from defparam splitting *\/$/;"	m	struct:mod_t	access:public
msplitpth	./v.h	/^ unsigned msplitpth : 1;      \/* T => module comp. of split off chain *\/$/;"	m	struct:mod_t	access:public
mspltmst	./v.h	/^ struct mod_t *mspltmst;      \/* pointer to defparam master if split off *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::mod_t	access:public
msprms	./v.h	/^ struct net_t *msprms;        \/* module's specify parameters *\/$/;"	m	struct:spfy_t	typeref:struct:spfy_t::net_t	access:public
mstmts	./v.h	/^ struct st_t **mstmts;        \/* per mod array of stmts *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::st_t	access:public
mstnum	./v.h	/^ int32 mstnum;                \/* size of mod's stmt tab *\/$/;"	m	struct:mod_t	access:public
mstnum_no_task	./v.h	/^ int32 mstnum_no_task;        \/* size of mod's stmt tab not including tasks *\/$/;"	m	struct:mod_t	access:public
msym	./v.h	/^ struct sy_t *msym;           \/* symbol from separate module name space *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::sy_t	access:public
msymtab	./v.h	/^ struct symtab_t *msymtab;    \/* symbol table for objects in module *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::symtab_t	access:public
msyp	./v.h	/^ struct sy_t *msyp;$/;"	m	struct:undef_t	typeref:struct:undef_t::sy_t	access:public
mtasks	./v.h	/^ struct task_t *mtasks;       \/* tasks declared in module *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::task_t	access:public
mtime	./v.h	/^ word32 mtime;$/;"	m	union:dv_storage_u	access:public
mtime_prec	./v.h	/^ unsigned mtime_prec : 4;     \/* prec. - exp. 0 (1 sec.) - 15 (1 fs) *\/$/;"	m	struct:mod_t	access:public
mtime_units	./v.h	/^ unsigned mtime_units : 4;    \/* no. of significant units of time rounded *\/$/;"	m	struct:mod_t	access:public
mtm_sel_tonam	./v_sdf.c	/^static char *mtm_sel_tonam(char *s, int32 mtmtyp)$/;"	f	file:	signature:(char *s, int32 mtmtyp)
mtotvarnum	./v.h	/^ int32 mtotvarnum;            \/* total number of variables mod+task *\/$/;"	m	struct:mod_t	access:public
multfi_acc_downtomdport	./v_ex4.c	/^static void multfi_acc_downtomdport(struct expr_t *lhsx, struct expr_t *rhsx,$/;"	f	file:	signature:(struct expr_t *lhsx, struct expr_t *rhsx, struct itree_t *down_itp)
multfi_acc_uptoiconn	./v_ex4.c	/^static void multfi_acc_uptoiconn(struct expr_t *lhsx,$/;"	f	file:	signature:(struct expr_t *lhsx, struct expr_t *rhsx, struct itree_t *up_itp)
mustbe_inmoditer_err	./v_vpi.c	/^static void mustbe_inmoditer_err(word32 ityp, struct h_t *hp)$/;"	f	file:	signature:(word32 ityp, struct h_t *hp)
mutex	./fstapi.c	/^pthread_mutex_t mutex;$/;"	m	struct:fstWriterContext	file:	access:public
mv_gblk_dfps_to_mod	./v_genfx.c	/^static void mv_gblk_dfps_to_mod(void)$/;"	f	file:	signature:(void)
mv_gblk_grefs_to_mods_grtab	./v_genfx.c	/^static void mv_gblk_grefs_to_mods_grtab(void)$/;"	f	file:	signature:(void)
mv_gblk_nsym_to_mod_mgen_sytab	./v_genfx.c	/^static void mv_gblk_nsym_to_mod_mgen_sytab(struct sy_t *nsyp,$/;"	f	file:	signature:(struct sy_t *nsyp, struct genblk_t *gblkp)
mv_gblk_tsks_to_mod	./v_genfx.c	/^static void mv_gblk_tsks_to_mod(struct genblk_t *gblkp)$/;"	f	file:	signature:(struct genblk_t *gblkp)
mv_gened_symbols_to_modsymtab	./v_genfx.c	/^static void mv_gened_symbols_to_modsymtab(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
mv_genitems_into_mod	./v_genfx.c	/^static void mv_genitems_into_mod(void)$/;"	f	file:	signature:(void)
mvarinits	./v.h	/^ struct varinitlst_t *mvarinits; \/* list of var (not net) init decls *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::varinitlst_t	access:public
mversno	./v.h	/^ int32 mversno;               \/* version number for split modules *\/$/;"	m	struct:mod_t	access:public
mwiddetdone	./v.h	/^ unsigned mwiddetdone : 1;    \/* T => mod width determing param marking done *\/$/;"	m	struct:mod_t	access:public
my_getc	./v_ms.c	/^static int32 my_getc(FILE *f)$/;"	f	file:	signature:(FILE *f)
my_pclose	./v_asmlnk.c	/^static void my_pclose(FILE *fp) $/;"	f	file:	signature:(FILE *fp)
my_popen	./v_asmlnk.c	/^static FILE *my_popen(void) $/;"	f	file:	signature:(void)
my_putc_	./cvmacros.h	533;"	d
my_puts_	./cvmacros.h	527;"	d
my_sig_handler	./cvc.c	/^static void my_sig_handler(int32 signum)$/;"	f	file:	signature:(int32 signum)
my_strtol	./v_cnv.c	/^static long my_strtol(char *nptr, char **endptr, int32 sign, int32 *errnum)$/;"	f	file:	signature:(char *nptr, char **endptr, int32 sign, int32 *errnum)
my_ungetc_	./cvmacros.h	539;"	d
my_xndalloc	./v_src2.c	/^static struct expr_t *my_xndalloc(void)$/;"	f	file:	signature:(void)
mydir_t	./v.h	/^struct mydir_t {$/;"	s
mydir_t::dirfnam	./v.h	/^ char *dirfnam;$/;"	m	struct:mydir_t	access:public
mydir_t::ydirfnam_ind	./v.h	/^ unsigned ydirfnam_ind : 16;$/;"	m	struct:mydir_t	access:public
mydir_t::ylbxi	./v.h	/^ unsigned ylbxi : 16;         \/* ndx in lbexts (-1 if none), -2 no match *\/$/;"	m	struct:mydir_t	access:public
n_2ndonlhs	./v.h	/^ unsigned n_2ndonlhs : 1;     \/* T => more than 1 on lhs (for in to inout) *\/$/;"	m	struct:ncomp_t	access:public
n_2state	./v.h	/^ unsigned n_2state : 1;       \/* var decl as one of 2 state reg types *\/$/;"	m	struct:net_t	access:public
n_arr_hasdvars	./v.h	/^ int32 *n_arr_hasdvars;       \/* np->n_hasdvars for each array element *\/$/;"	m	struct:net_t	access:public
n_capsiz	./v.h	/^ unsigned n_capsiz : 2;       \/* special capacitor size constant *\/$/;"	m	struct:net_t	access:public
n_cause	./v.h	/^ unsigned n_cause : 1;        \/* net has net change used for gen cancel *\/$/;"	m	struct:net_t	access:public
n_delrep	./v.h	/^ unsigned n_delrep : 5;$/;"	m	struct:rngdwir_t	access:public
n_dels_u	./v.h	/^ union del_u n_dels_u;$/;"	m	struct:ncomp_t	typeref:union:ncomp_t::del_u	access:public
n_drvtyp	./v.h	/^ byte n_drvtyp;               \/* for scalar simple stat tab for dir chg *\/$/;"	m	struct:ncomp_t	access:public
n_drvtyp	./v.h	/^ unsigned n_drvtyp : 3;       \/* for scalar, pre elab p type chg drvr state *\/$/;"	m	struct:net_t	access:public
n_du	./v.h	/^ union del_u n_du;            \/* every bit has same delay for nets *\/ $/;"	m	struct:rngdwir_t	typeref:union:rngdwir_t::del_u	access:public
n_gone	./v.h	/^ unsigned n_gone : 1;         \/* T => net deleted by gate eater *\/$/;"	m	struct:net_t	access:public
n_has_tglbits_excl	./v.h	/^ unsigned n_has_tglbits_excl : 1;\/* T => tgl cover some net bits excluded *\/$/;"	m	struct:net_t	access:public
n_has_toggle	./v.h	/^ unsigned n_has_toggle : 1;   \/* T => has toggle coverage *\/$/;"	m	struct:net_t	access:public
n_hasdvars	./v.h	/^ unsigned n_hasdvars : 1;     \/* T => at least one inst. dumpvared *\/$/;"	m	struct:net_t	access:public
n_head	./v.h	/^ struct tnode_t *n_head;$/;"	m	struct:symtab_t	typeref:struct:symtab_t::tnode_t	access:public
n_impldecl	./v.h	/^ unsigned n_impldecl : 1;     \/* declared implicitly *\/$/;"	m	struct:ncomp_t	access:public
n_in_gia_rng	./v.h	/^ unsigned n_in_gia_rng : 1;   \/* in array of g\/i range expression *\/$/;"	m	struct:ncomp_t	access:public
n_indir_widthdet	./v.h	/^ unsigned n_indir_widthdet : 1; \/* T => parm passed down to width det *\/$/;"	m	struct:ncomp_t	access:public
n_iotypknown	./v.h	/^ unsigned n_iotypknown : 1;$/;"	m	struct:ncomp_t	access:public
n_is_auto	./v.h	/^ unsigned n_is_auto : 1;      \/* T => is an automatic var  *\/$/;"	m	struct:net_t	access:public
n_is_auto_var	./v.h	/^ unsigned n_is_auto_var : 1;  \/* T => is task automatic var  *\/$/;"	m	struct:net_t	access:public
n_isaparam	./v.h	/^ unsigned n_isaparam : 1;     \/* T => net is a parameter *\/$/;"	m	struct:net_t	access:public
n_isapthdst	./v.h	/^ unsigned n_isapthdst : 1;    \/* T => port net is a path dest *\/$/;"	m	struct:net_t	access:public
n_isapthsrc	./v.h	/^ unsigned n_isapthsrc : 1;    \/* T => port net a pth src (or tc ref ev.) *\/$/;"	m	struct:net_t	access:public
n_isarr	./v.h	/^ unsigned n_isarr : 1;$/;"	m	struct:net_t	access:public
n_isarr_vector	./v.h	/^ unsigned n_isarr_vector : 1; \/* T=> is a wire array vector net *\/$/;"	m	struct:net_t	access:public
n_isavec	./v.h	/^ unsigned n_isavec : 1;       \/* this is a vector *\/$/;"	m	struct:net_t	access:public
n_iscompleted	./v.h	/^ unsigned n_iscompleted : 1;  \/* type def completed in earlier source *\/ $/;"	m	struct:ncomp_t	access:public
n_mark	./v.h	/^ unsigned n_mark : 1;         \/* misc. marking flag for var. uses *\/ $/;"	m	struct:net_t	access:public
n_mipd	./v.h	/^ unsigned n_mipd : 1;         \/* net has mipd usage *\/$/;"	m	struct:net_t	access:public
n_multfi	./v.h	/^ unsigned n_multfi : 1;       \/* at least one bit fi > 1 *\/$/;"	m	struct:net_t	access:public
n_on_nblhs_varndx	./v.h	/^ unsigned n_on_nblhs_varndx : 1; \/* T -> net is on lhs of varndx <= *\/$/;"	m	struct:net_t	access:public
n_onlhs	./v.h	/^ unsigned n_onlhs : 1;        \/* appears on some lhs *\/$/;"	m	struct:ncomp_t	access:public
n_onlhs	./v.h	/^ unsigned n_onlhs : 1;        \/* appears on some lhs *\/$/;"	m	struct:net_t	access:public
n_onprocrhs	./v.h	/^ unsigned n_onprocrhs : 1;    \/* appears on some procedural rhs *\/$/;"	m	struct:net_t	access:public
n_onrhs	./v.h	/^ unsigned n_onrhs : 1;        \/* appears on some rhs (also declarative) *\/ $/;"	m	struct:ncomp_t	access:public
n_onrhs	./v.h	/^ unsigned n_onrhs : 1;        \/* appears on some rhs (also declarative) *\/ $/;"	m	struct:net_t	access:public
n_pb_drvtyp	./v.h	/^ byte *n_pb_drvtyp;           \/* per bit drvr state tab for port dir chg *\/ $/;"	m	struct:ncomp_t	access:public
n_peri_tgl_on_se_list	./v.h	/^ int32 *n_peri_tgl_on_se_list;\/* if T this inum on slot's end chged list *\/$/;"	m	struct:net_toggle_t	access:public
n_rngknown	./v.h	/^ unsigned n_rngknown : 1;     \/* needed to separate range in i\/o\/wire decls *\/$/;"	m	struct:ncomp_t	access:public
n_signed	./v.h	/^ unsigned n_signed : 1;$/;"	m	struct:net_t	access:public
n_spltstate	./v.h	/^ unsigned n_spltstate : 2;    \/* scalared\/vectored splitting of wire *\/$/;"	m	struct:ncomp_t	access:public
n_stren	./v.h	/^ unsigned n_stren : 1;        \/* T => needs strength model *\/$/;"	m	struct:net_t	access:public
n_widthdet	./v.h	/^ unsigned n_widthdet : 1;     \/* T => parm is width determing - no IS form *\/$/;"	m	struct:ncomp_t	access:public
n_wirtypknown	./v.h	/^ unsigned n_wirtypknown : 1;$/;"	m	struct:ncomp_t	access:public
n_xprop_accum_set	./v.h	/^ unsigned n_xprop_accum_set : 1;    \/* T => xprop accum value is set *\/$/;"	m	struct:net_t	access:public
n_xprop_accum_set_block1	./v.h	/^ unsigned n_xprop_accum_set_block1: 1;   \/* T => folding for loop inc *\/$/;"	m	struct:net_t	access:public
n_xprop_accum_set_block2	./v.h	/^ unsigned n_xprop_accum_set_block2: 1;   \/* T => folding for loop inc *\/$/;"	m	struct:net_t	access:public
n_xprop_ndx	./v.h	/^ int32 n_xprop_ndx;           \/* xprop block net ndx *\/$/;"	m	struct:net_t	access:public
nam	./v.h	/^ char *nam;$/;"	m	struct:cfgnamlst_t	access:public
name	./fstapi.h	/^                const char *name;$/;"	m	struct:fstHier::__anon18::fstHierAttr	access:public
name	./fstapi.h	/^                const char *name;$/;"	m	struct:fstHier::__anon18::fstHierScope	access:public
name	./fstapi.h	/^                const char *name;$/;"	m	struct:fstHier::__anon18::fstHierVar	access:public
name_length	./fstapi.h	/^                uint32_t name_length;           \/* strlen(u.scope.name) *\/$/;"	m	struct:fstHier::__anon18::fstHierScope	access:public
name_length	./fstapi.h	/^                uint32_t name_length; \/* strlen(u.attr.name) *\/$/;"	m	struct:fstHier::__anon18::fstHierAttr	access:public
name_length	./fstapi.h	/^                uint32_t name_length; \/* strlen(u.var.name) *\/$/;"	m	struct:fstHier::__anon18::fstHierVar	access:public
namid	./v.h	/^ int32 namid;$/;"	m	struct:namlst_t	access:public
namlst_t	./v.h	/^struct namlst_t {$/;"	s
namlst_t::lnam	./v.h	/^ char *lnam;$/;"	m	struct:namlst_t	access:public
namlst_t::namid	./v.h	/^ int32 namid;$/;"	m	struct:namlst_t	access:public
namparam_t	./v.h	/^struct namparam_t {$/;"	s
namparam_t::nprmnxt	./v.h	/^ struct namparam_t *nprmnxt;$/;"	m	struct:namparam_t	typeref:struct:namparam_t::namparam_t	access:public
namparam_t::pnam	./v.h	/^ char *pnam;                  \/* name as string - no sym table when read *\/$/;"	m	struct:namparam_t	access:public
namparam_t::prmfnam_ind	./v.h	/^ word32 prmfnam_ind;          \/* file pound parameter appears in *\/$/;"	m	struct:namparam_t	access:public
namparam_t::prmlin_cnt	./v.h	/^ int32 prmlin_cnt;            \/* line pound parameter defined on *\/$/;"	m	struct:namparam_t	access:public
namparam_t::pxndp	./v.h	/^ struct expr_t *pxndp;        \/* parameter value as expr. *\/$/;"	m	struct:namparam_t	typeref:struct:namparam_t::expr_t	access:public
nan	./fstapi.c	/^double nan; \/* nan value for uninitialized doubles *\/$/;"	m	struct:fstWriterContext	file:	access:public
native_doubles_for_cb	./fstapi.c	/^unsigned native_doubles_for_cb : 1;$/;"	m	struct:fstReaderContext	file:	access:public
nattrs	./v.h	/^ struct attr_t *nattrs;       \/* table of net's attributes *\/$/;"	m	struct:net_t	typeref:struct:net_t::attr_t	access:public
nb_endp	./v.h	/^ struct tev_t *nb_hdrp, *nb_endp;$/;"	m	struct:heap_t	typeref:struct:heap_t::	access:public
nb_endp	./v.h	/^ struct tev_t *nb_hdrp, *nb_endp;$/;"	m	struct:tqnode_t	typeref:struct:tqnode_t::	access:public
nb_evctrl	./v.h	/^ unsigned nb_evctrl : 1;      \/* for non blocking event is event control *\/$/;"	m	struct:tev_t	access:public
nb_event_t	./v.h	/^struct nb_event_t { $/;"	s
nb_event_t::nb_tevp	./v.h	/^ struct tev_t *nb_tevp; $/;"	m	struct:nb_event_t	typeref:struct:nb_event_t::tev_t	access:public
nb_event_t::nbnxt	./v.h	/^ struct nb_event_t *nbnxt;$/;"	m	struct:nb_event_t	typeref:struct:nb_event_t::nb_event_t	access:public
nb_fg_num	./v.h	/^ int32 nb_fg_num;             \/* if non-blocking - its fg number *\/$/;"	m	struct:ctev_t	access:public
nb_hdrp	./v.h	/^ struct tev_t *nb_hdrp, *nb_endp;$/;"	m	struct:heap_t	typeref:struct:heap_t::tev_t	access:public
nb_hdrp	./v.h	/^ struct tev_t *nb_hdrp, *nb_endp;$/;"	m	struct:tqnode_t	typeref:struct:tqnode_t::tev_t	access:public
nb_rhs_byt_size	./v.h	/^ int32 nb_rhs_byt_size;       \/* byte size of nb rhs storage (-1 if none) *\/$/;"	m	struct:ctev_t	access:public
nb_rhs_size	./v.h	/^ word32 nb_rhs_size;           \/* size of nb rhs to free *\/$/;"	m	union:te2_u	access:public
nb_stmt_lst_t	./igen.h	/^struct nb_stmt_lst_t {$/;"	s
nb_stmt_lst_t::has_rhs_const	./igen.h	/^ unsigned has_rhs_const : 1;     \/* T => if rhs is constant *\/$/;"	m	struct:nb_stmt_lst_t	access:public
nb_stmt_lst_t::has_static_mem	./igen.h	/^ unsigned has_static_mem : 1;    \/* T => if this nba has static mem *\/$/;"	m	struct:nb_stmt_lst_t	access:public
nb_stmt_lst_t::is_scalar	./igen.h	/^ unsigned is_scalar : 1;         \/* T => true is scalar *\/$/;"	m	struct:nb_stmt_lst_t	access:public
nb_stmt_lst_t::need_free_fg	./igen.h	/^ unsigned need_free_fg : 1;      \/* T => need free fg to free alloc nb ev *\/$/;"	m	struct:nb_stmt_lst_t	access:public
nb_stmt_lst_t::processing_pnd0s	./igen.h	/^ unsigned processing_pnd0s : 1;  \/* T => known to be processing pnd0s *\/$/;"	m	struct:nb_stmt_lst_t	access:public
nb_stmt_lst_t::stnxt	./igen.h	/^ struct nb_stmt_lst_t *stnxt;    \/* next nb stmt *\/$/;"	m	struct:nb_stmt_lst_t	typeref:struct:nb_stmt_lst_t::nb_stmt_lst_t	access:public
nb_stmt_lst_t::stp	./igen.h	/^ struct st_t *stp;               \/* current nb stmt *\/$/;"	m	struct:nb_stmt_lst_t	typeref:struct:nb_stmt_lst_t::st_t	access:public
nb_tevp	./v.h	/^ struct tev_t *nb_tevp; $/;"	m	struct:nb_event_t	typeref:struct:nb_event_t::tev_t	access:public
nb_xprop_in_list	./v.h	/^ unsigned nb_xprop_in_list : 1; \/* T => nb stmt has already in nb list *\/$/;"	m	struct:st_t	access:public
nbastp	./v.h	/^ struct st_t *nbastp;$/;"	m	struct:tenbpa_t	typeref:struct:tenbpa_t::st_t	access:public
nbawp	./v.h	/^ word32 *nbawp;$/;"	m	struct:tenbpa_t	access:public
nbdctp	./v.h	/^ struct delctrl_t *nbdctp;$/;"	m	struct:tenbpa_t	typeref:struct:tenbpa_t::delctrl_t	access:public
nbi	./v.h	/^ int32 nbi;$/;"	m	struct:tenp_t	access:public
nbi	./v.h	/^ int32 nbi;$/;"	m	struct:teputv_t	access:public
nbi1	./v.h	/^ int32 nbi1;                  \/* range of connection (-1 for all) *\/$/;"	m	struct:npaux_t	access:public
nbi2	./v.h	/^ union intptr_u nbi2;         \/* for IS param union rng ptr (dci1 = -2) *\/$/;"	m	struct:npaux_t	typeref:union:npaux_t::intptr_u	access:public
nblhs_u	./v.h	/^union nblhs_u {$/;"	u
nblhs_u::nblhsnp	./v.h	/^ struct net_t *nblhsnp;$/;"	m	union:nblhs_u	typeref:struct:nblhs_u::net_t	access:public
nblhs_u::nblhsxp	./v.h	/^ struct expr_t *nblhsxp;      \/* if var ndx expr (maybe cat) const ndx copy *\/$/;"	m	union:nblhs_u	typeref:struct:nblhs_u::expr_t	access:public
nblhsnp	./v.h	/^ struct net_t *nblhsnp;$/;"	m	union:nblhs_u	typeref:struct:nblhs_u::net_t	access:public
nblhsu	./v.h	/^ union nblhs_u nblhsu; $/;"	m	struct:tenbpa_t	typeref:union:tenbpa_t::nblhs_u	access:public
nblhsxp	./v.h	/^ struct expr_t *nblhsxp;      \/* if var ndx expr (maybe cat) const ndx copy *\/$/;"	m	struct:tenbpa_t	typeref:struct:tenbpa_t::expr_t	access:public
nblhsxp	./v.h	/^ struct expr_t *nblhsxp;      \/* if var ndx expr (maybe cat) const ndx copy *\/$/;"	m	union:nblhs_u	typeref:struct:nblhs_u::expr_t	access:public
nbnxt	./v.h	/^ struct nb_event_t *nbnxt;$/;"	m	struct:nb_event_t	typeref:struct:nb_event_t::nb_event_t	access:public
nbytes	./v.h	/^ int32 nbytes;                \/* store the num bytes of the stored area *\/$/;"	m	struct:tenbpa_t	access:public
ncablk_t	./v.h	/^struct ncablk_t {$/;"	s
ncablk_t::ancmps	./v.h	/^ struct ncomp_t *ancmps;$/;"	m	struct:ncablk_t	typeref:struct:ncablk_t::ncomp_t	access:public
ncablk_t::ncablknxt	./v.h	/^ struct ncablk_t *ncablknxt; $/;"	m	struct:ncablk_t	typeref:struct:ncablk_t::ncablk_t	access:public
ncablknxt	./v.h	/^ struct ncablk_t *ncablknxt; $/;"	m	struct:ncablk_t	typeref:struct:ncablk_t::ncablk_t	access:public
nchdp	./v.h	/^ struct net_chg_t *nchdp;     \/* net changes info header *\/$/;"	m	struct:net_t	typeref:struct:net_t::net_chg_t	access:public
nchg_fgp	./v.h	/^ struct flowg_t *nchg_fgp; \/* the record nchg flow graph *\/$/;"	m	struct:net_chg_t	typeref:struct:net_chg_t::flowg_t	access:public
nchg_has_dces	./v.h	/^ unsigned nchg_has_dces : 1;  \/* T => var currently has delay ctrls *\/$/;"	m	struct:net_t	access:public
nchg_has_lds	./v.h	/^ unsigned nchg_has_lds : 1;   \/* var has lds (structural from src *\/$/;"	m	struct:net_t	access:public
nchg_idp	./v.h	/^ t_midat *nchg_idp;$/;"	m	struct:nchglst_t	access:public
nchg_idp_ofs	./v.h	/^ size_t nchg_idp_ofs;    \/* idp offset to this net chg *\/$/;"	m	struct:net_chg_t	access:public
nchg_nd_chgstore	./v.h	/^ unsigned nchg_nd_chgstore : 1;\/* need chg store for var *\/$/;"	m	struct:net_t	access:public
nchgaction_ofs	./v.h	/^ size_t nchgaction_ofs;       \/* idp area nchg (or 0 only) assign action bits *\/$/;"	m	struct:net_t	access:public
nchglnxt	./v.h	/^ struct nchglst_t *nchglnxt;$/;"	m	struct:nchglst_t	typeref:struct:nchglst_t::nchglst_t	access:public
nchglp	./v.h	/^ struct nchglst_t *nchglp;    \/* static (maybe alloced) net change *\/$/;"	m	struct:tenbpa_t	typeref:struct:tenbpa_t::nchglst_t	access:public
nchglst_t	./v.h	/^struct nchglst_t {$/;"	s
nchglst_t::bi1	./v.h	/^ int32 bi1, bi2;$/;"	m	struct:nchglst_t	access:public
nchglst_t::bi2	./v.h	/^ int32 bi1, bi2;$/;"	m	struct:nchglst_t	access:public
nchglst_t::chgnp	./v.h	/^ struct net_t *chgnp;$/;"	m	struct:nchglst_t	typeref:struct:nchglst_t::net_t	access:public
nchglst_t::delayed_mipd	./v.h	/^ word32 delayed_mipd;          \/* T - 2nd after schedule from ev process *\/$/;"	m	struct:nchglst_t	access:public
nchglst_t::nchg_idp	./v.h	/^ t_midat *nchg_idp;$/;"	m	struct:nchglst_t	access:public
nchglst_t::nchglnxt	./v.h	/^ struct nchglst_t *nchglnxt;$/;"	m	struct:nchglst_t	typeref:struct:nchglst_t::nchglst_t	access:public
nchglst_t::process_enterptr	./v.h	/^ void (*process_enterptr)(void);\/* process nchg enter address *\/ $/;"	m	struct:nchglst_t	access:public
nchglst_t::triggered	./v.h	/^ word32 triggered;             \/* T => event has been triggered *\/$/;"	m	struct:nchglst_t	access:public
nchgp	./v.h	/^ struct nchglst_t *nchgp;     \/* static net change for this vertex *\/$/;"	m	struct:vtx_t	typeref:struct:vtx_t::nchglst_t	access:public
ncomp_t	./v.h	/^struct ncomp_t {$/;"	s
ncomp_t::ax1	./v.h	/^ struct expr_t *ax1, *ax2;$/;"	m	struct:ncomp_t	typeref:struct:ncomp_t::expr_t	access:public
ncomp_t::ax2	./v.h	/^ struct expr_t *ax1, *ax2;$/;"	m	struct:ncomp_t	typeref:struct:ncomp_t::	access:public
ncomp_t::dmpv_in_src	./v.h	/^ unsigned dmpv_in_src : 1;    \/* if not all dummpvar => has mon\/fmon in src *\/$/;"	m	struct:ncomp_t	access:public
ncomp_t::frc_assgn_in_src	./v.h	/^ unsigned frc_assgn_in_src : 1; \/* T => force or assign appears in src *\/$/;"	m	struct:ncomp_t	access:public
ncomp_t::isparam_ninsts	./v.h	/^ int32 isparam_ninsts;$/;"	m	struct:ncomp_t	access:public
ncomp_t::monit_in_src	./v.h	/^ unsigned monit_in_src : 1;   \/* T => has mon\/fmon in source for var *\/$/;"	m	struct:ncomp_t	access:public
ncomp_t::n_2ndonlhs	./v.h	/^ unsigned n_2ndonlhs : 1;     \/* T => more than 1 on lhs (for in to inout) *\/$/;"	m	struct:ncomp_t	access:public
ncomp_t::n_dels_u	./v.h	/^ union del_u n_dels_u;$/;"	m	struct:ncomp_t	typeref:union:ncomp_t::del_u	access:public
ncomp_t::n_drvtyp	./v.h	/^ byte n_drvtyp;               \/* for scalar simple stat tab for dir chg *\/$/;"	m	struct:ncomp_t	access:public
ncomp_t::n_impldecl	./v.h	/^ unsigned n_impldecl : 1;     \/* declared implicitly *\/$/;"	m	struct:ncomp_t	access:public
ncomp_t::n_in_gia_rng	./v.h	/^ unsigned n_in_gia_rng : 1;   \/* in array of g\/i range expression *\/$/;"	m	struct:ncomp_t	access:public
ncomp_t::n_indir_widthdet	./v.h	/^ unsigned n_indir_widthdet : 1; \/* T => parm passed down to width det *\/$/;"	m	struct:ncomp_t	access:public
ncomp_t::n_iotypknown	./v.h	/^ unsigned n_iotypknown : 1;$/;"	m	struct:ncomp_t	access:public
ncomp_t::n_iscompleted	./v.h	/^ unsigned n_iscompleted : 1;  \/* type def completed in earlier source *\/ $/;"	m	struct:ncomp_t	access:public
ncomp_t::n_onlhs	./v.h	/^ unsigned n_onlhs : 1;        \/* appears on some lhs *\/$/;"	m	struct:ncomp_t	access:public
ncomp_t::n_onrhs	./v.h	/^ unsigned n_onrhs : 1;        \/* appears on some rhs (also declarative) *\/ $/;"	m	struct:ncomp_t	access:public
ncomp_t::n_pb_drvtyp	./v.h	/^ byte *n_pb_drvtyp;           \/* per bit drvr state tab for port dir chg *\/ $/;"	m	struct:ncomp_t	access:public
ncomp_t::n_rngknown	./v.h	/^ unsigned n_rngknown : 1;     \/* needed to separate range in i\/o\/wire decls *\/$/;"	m	struct:ncomp_t	access:public
ncomp_t::n_spltstate	./v.h	/^ unsigned n_spltstate : 2;    \/* scalared\/vectored splitting of wire *\/$/;"	m	struct:ncomp_t	access:public
ncomp_t::n_widthdet	./v.h	/^ unsigned n_widthdet : 1;     \/* T => parm is width determing - no IS form *\/$/;"	m	struct:ncomp_t	access:public
ncomp_t::n_wirtypknown	./v.h	/^ unsigned n_wirtypknown : 1;$/;"	m	struct:ncomp_t	access:public
ncomp_t::num_prtconns	./v.h	/^ unsigned num_prtconns : 2;   \/* count to 2 of no. of ports wire conns to *\/$/;"	m	struct:ncomp_t	access:public
ncomp_t::nx1	./v.h	/^ struct expr_t *nx1, *nx2;$/;"	m	struct:ncomp_t	typeref:struct:ncomp_t::expr_t	access:public
ncomp_t::nx2	./v.h	/^ struct expr_t *nx1, *nx2;$/;"	m	struct:ncomp_t	typeref:struct:ncomp_t::	access:public
ncomp_t::p_canbe_setby_pndprm	./v.h	/^ unsigned p_canbe_setby_pndprm : 1; \/* T => at least 1 inst set by pnd param *\/$/;"	m	struct:ncomp_t	access:public
ncomp_t::p_genvar	./v.h	/^ unsigned p_genvar : 1;       \/* T => local param is really a genvar *\/$/;"	m	struct:ncomp_t	access:public
ncomp_t::p_locparam	./v.h	/^ unsigned p_locparam : 1;     \/* T => local parameter (never # or def) *\/$/;"	m	struct:ncomp_t	access:public
ncomp_t::p_rhs_has_param	./v.h	/^ unsigned p_rhs_has_param : 1;\/* T => param def rhs contains param *\/$/;"	m	struct:ncomp_t	access:public
ncomp_t::p_setby_defprm	./v.h	/^ unsigned p_setby_defprm : 1; \/* T => can't recalc since set by def param*\/$/;"	m	struct:ncomp_t	access:public
ncomp_t::p_specparam	./v.h	/^ unsigned p_specparam : 1;    \/* T => specify parameter *\/$/;"	m	struct:ncomp_t	access:public
ncomp_t::parm_srep	./v.h	/^ unsigned parm_srep : 6;      \/* for parameter n_dels_u original expr rep *\/ $/;"	m	struct:ncomp_t	access:public
ncomp_t::pbase	./v.h	/^ unsigned pbase : 3;          \/* base of original rhs *\/$/;"	m	struct:ncomp_t	access:public
ncomp_t::prngdecl	./v.h	/^ unsigned prngdecl : 1;       \/* T => range declared in source *\/$/;"	m	struct:ncomp_t	access:public
ncomp_t::psigndecl	./v.h	/^ unsigned psigndecl : 1;      \/* T => signed keyword declared in source *\/$/;"	m	struct:ncomp_t	access:public
ncomp_t::pstring	./v.h	/^ unsigned pstring : 1;        \/* T => if string appeared on original rhs *\/$/;"	m	struct:ncomp_t	access:public
ncomp_t::ptypdecl	./v.h	/^ unsigned ptypdecl : 1;       \/* T => type declared in source *\/$/;"	m	struct:ncomp_t	access:public
ncount	./v.h	/^ int32 ncount;                   \/* num nets on lhs *\/$/;"	m	struct:xprop_t	access:public
nd_1bit_concat	./v_fx2.c	/^static void nd_1bit_concat(struct expr_t *lhsx)$/;"	f	file:	signature:(struct expr_t *lhsx)
nd_anyscope	./v_acc.c	/^static int32 nd_anyscope(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
nd_chg_to_idp	./v.h	/^ unsigned nd_chg_to_idp : 1;  \/* T => in src monit dce add, chg to idp later *\/$/;"	m	struct:dcevnt_t	access:public
nd_delisnum	./v_fx2.c	/^static int32 nd_delisnum(struct expr_t *ndp, char *emsg)$/;"	f	file:	signature:(struct expr_t *ndp, char *emsg)
nd_delnum	./v_fx2.c	/^static int32 nd_delnum(struct expr_t *ndp, char *emsg)$/;"	f	file:	signature:(struct expr_t *ndp, char *emsg)
nd_iowirdecl	./v_cnv.c	/^static int32 nd_iowirdecl(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
nd_lval_ptr	./v.h	/^ unsigned nd_lval_ptr : 1;    \/* T => arg is lval (array or out) use addr *\/$/;"	m	struct:dpiarg_t	access:public
nd_modscope	./v_acc.c	/^static int32 nd_modscope(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
nd_ndxisnum	./v_fx3.c	/^static int32 nd_ndxisnum(struct expr_t *ndp, char *emsg, int32 emit_err)$/;"	f	file:	signature:(struct expr_t *ndp, char *emsg, int32 emit_err)
nd_qcreg	./v_fx2.c	/^static int32 nd_qcreg(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
nd_reg	./v_fx3.c	/^static int32 nd_reg(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
nd_unind_arr	./v_fx3.c	/^static int32 nd_unind_arr(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
nd_valtrk_idp_siz	./igen.h	/^ unsigned nd_valtrk_idp_siz : 1; \/* T => idp (%esi?) reg tn - mod idp size *\/$/;"	m	struct:tn_t	access:public
ndel_ctevtab	./v.h	/^ struct ctev_t **ndel_ctevtab; \/* lhsx w\/del must have static tevs *\/$/;"	m	struct:net_t	typeref:struct:net_t::ctev_t	access:public
ndp	./v.h	/^ struct sy_t *ndp;$/;"	m	struct:tnode_t	typeref:struct:tnode_t::sy_t	access:public
ndrvs	./v.h	/^ struct net_pin_t *ndrvs;     \/* list of net drivers *\/$/;"	m	struct:net_t	typeref:struct:net_t::net_pin_t	access:public
ndst_eval2_xpr	./v_ex4.c	/^static void ndst_eval2_xpr(byte *sbp, struct expr_t *ndp)$/;"	f	file:	signature:(byte *sbp, struct expr_t *ndp)
ndx	./igen.h	/^ int32 ndx;                   \/* insn index (identifier) *\/$/;"	m	struct:insn_t	access:public
ndx	./igen.h	/^ int32 ndx;          \/* current index into values *\/$/;"	m	struct:tn_list_t	access:public
ndx	./v.h	/^ int32 ndx;                 \/* dce table current index *\/$/;"	m	struct:dce_info_t	access:public
ndx	./v.h	/^ int32 ndx;              \/* index identifier *\/$/;"	m	struct:net_chg_t	access:public
ndx_outofrng	./v.h	/^ unsigned ndx_outofrng : 1;$/;"	m	struct:pbexpr_t	access:public
ndxjmp_t	./igen.h	/^struct ndxjmp_t {$/;"	s
ndxjmp_t::bbtab	./igen.h	/^ struct bblk_t **bbtab;        \/* jump to blocks *\/$/;"	m	struct:ndxjmp_t	typeref:struct:ndxjmp_t::bblk_t	access:public
ndxjmp_t::has_duplicates	./igen.h	/^ int32 has_duplicates;         \/* T => if jump table can have duplicates *\/$/;"	m	struct:ndxjmp_t	access:public
ndxjmp_t::jtabsiz	./igen.h	/^ int32 jtabsiz;                \/* number of blocks in table *\/$/;"	m	struct:ndxjmp_t	access:public
ndxjmp_t::jtabstart	./igen.h	/^ int32 jtabstart;              \/* start of first block *\/$/;"	m	struct:ndxjmp_t	access:public
ndxjp	./igen.h	/^ struct ndxjmp_t *ndxjp;      \/* ndx jmp pointer info if is a ndx jmp *\/$/;"	m	union:i_extrainfo_u	typeref:struct:i_extrainfo_u::ndxjmp_t	access:public
need_complete_or_suspend	./v_bbgen.c	/^static int32 need_complete_or_suspend(void)$/;"	f	file:	signature:(void)
need_free_fg	./igen.h	/^ unsigned need_free_fg : 1;      \/* T => need free fg to free alloc nb ev *\/$/;"	m	struct:nb_stmt_lst_t	access:public
need_inam	./v_asmlnk.c	/^static int32 need_inam(int32 opcod)$/;"	f	file:	signature:(int32 opcod)
need_npp_downinst_push	./v_bbgen2.c	/^static int32 need_npp_downinst_push(int32 npntyp)$/;"	f	file:	signature:(int32 npntyp)
needs_thread	./v.h	/^ unsigned needs_thread : 1;     \/* T => always block uses thread *\/ $/;"	m	struct:delctrl_t	access:public
needs_thread	./v.h	/^ unsigned needs_thread : 1;  \/* T => needs thread control *\/$/;"	m	struct:ialst_t	access:public
nested_dctrl	./v.h	/^ unsigned nested_dctrl : 1;     \/* T => has nested dctrl *\/ $/;"	m	struct:delctrl_t	access:public
nested_if_case	./v.h	/^ unsigned nested_if_case : 1;    \/* nested if\/case stmts *\/$/;"	m	struct:xprop_t	access:public
net_block1_set	./v.h	/^ int32 *net_block1_set;          \/* net set flags for first block  *\/$/;"	m	struct:xprop_t	access:public
net_block2_set	./v.h	/^ int32 *net_block2_set;          \/* net set flags for second block *\/$/;"	m	struct:xprop_t	access:public
net_chg_t	./v.h	/^struct net_chg_t {$/;"	s
net_chg_t::i1	./v.h	/^ int32 i1;               \/* range one *\/$/;"	m	struct:net_chg_t	access:public
net_chg_t::i2	./v.h	/^ int32 i2;               \/* range two *\/$/;"	m	struct:net_chg_t	access:public
net_chg_t::is_const	./v.h	/^ unsigned is_const: 1;      \/* T => is constant *\/$/;"	m	struct:net_chg_t	access:public
net_chg_t::is_lowered	./v.h	/^ unsigned is_lowered : 1;   \/* T => this net change used in compiled code *\/$/;"	m	struct:net_chg_t	access:public
net_chg_t::is_printed	./v.h	/^ unsigned is_printed : 1;   \/* T => has been printed to asm file *\/$/;"	m	struct:net_chg_t	access:public
net_chg_t::is_tran_force_vec	./v.h	/^ unsigned is_tran_force_vec : 1; \/* T => is from a tran force vector *\/$/;"	m	struct:net_chg_t	access:public
net_chg_t::is_wire_ev	./v.h	/^ unsigned is_wire_ev: 1;    \/* T => is wire event *\/$/;"	m	struct:net_chg_t	access:public
net_chg_t::nchg_fgp	./v.h	/^ struct flowg_t *nchg_fgp; \/* the record nchg flow graph *\/$/;"	m	struct:net_chg_t	typeref:struct:net_chg_t::flowg_t	access:public
net_chg_t::nchg_idp_ofs	./v.h	/^ size_t nchg_idp_ofs;    \/* idp offset to this net chg *\/$/;"	m	struct:net_chg_t	access:public
net_chg_t::ndx	./v.h	/^ int32 ndx;              \/* index identifier *\/$/;"	m	struct:net_chg_t	access:public
net_chg_t::nxt	./v.h	/^ struct net_chg_t *nxt;$/;"	m	struct:net_chg_t	typeref:struct:net_chg_t::net_chg_t	access:public
net_chg_t::process_nchg_fgp	./v.h	/^ struct flowg_t *process_nchg_fgp;    \/* the process nchg flow graph *\/$/;"	m	struct:net_chg_t	typeref:struct:net_chg_t::flowg_t	access:public
net_chg_t::wire_fgp	./v.h	/^ struct flowg_t *wire_fgp; \/* the process wire flow graph *\/$/;"	m	struct:net_chg_t	typeref:struct:net_chg_t::flowg_t	access:public
net_dpctrl_tab	./v.h	/^ struct dpctrl_t **net_dpctrl_tab;\/* ptr to pb tab of dp ctrl for each i\/o net*\/$/;"	m	struct:dpinstel_t	typeref:struct:dpinstel_t::dpctrl_t	access:public
net_drvs_iter	./v_vpi2.c	/^static vpiHandle net_drvs_iter(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
net_in_expr	./v_fx2.c	/^static int32 net_in_expr(struct net_t *np, struct expr_t *xp)$/;"	f	file:	signature:(struct net_t *np, struct expr_t *xp)
net_in_expr	./v_prp2.c	/^static int32 net_in_expr(struct expr_t *ndp, struct net_t *np)$/;"	f	file:	signature:(struct expr_t *ndp, struct net_t *np)
net_itree_loc_allbits_marked	./v_cvr.c	/^static int32 net_itree_loc_allbits_marked(struct itree_t *itp,$/;"	f	file:	signature:(struct itree_t *itp, struct net_t *np)
net_itree_loc_rngbits_marked	./v_cvr.c	/^static int32 net_itree_loc_rngbits_marked(struct itree_t *itp,$/;"	f	file:	signature:(struct itree_t *itp, struct net_t *np, int32 h, int32 l)
net_lds_iter	./v_vpi2.c	/^static vpiHandle net_lds_iter(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
net_needs_change	./v_prp2.c	/^static int32 net_needs_change(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
net_ongetpat_lhs	./v_vpi3.c	/^static int32 net_ongetpat_lhs(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
net_pin_t	./v.h	/^struct net_pin_t {$/;"	s
net_pin_t::chgsubtyp	./v.h	/^ unsigned chgsubtyp : 2;      \/* for change the change subtype *\/$/;"	m	struct:net_pin_t	access:public
net_pin_t::elnpp	./v.h	/^ union el_u elnpp;            \/* net pin connecting objects *\/$/;"	m	struct:net_pin_t	typeref:union:net_pin_t::el_u	access:public
net_pin_t::is_loaded	./v.h	/^ unsigned is_loaded : 1;      \/* T => net_pin is loaded (passed) to a wrapper *\/$/;"	m	struct:net_pin_t	access:public
net_pin_t::is_printed	./v.h	/^ unsigned is_printed : 1;     \/* T => compiled global is printed *\/$/;"	m	struct:net_pin_t	access:public
net_pin_t::np_xmrtyp	./v.h	/^ unsigned np_xmrtyp : 2;      \/* xmr type *\/$/;"	m	struct:net_pin_t	access:public
net_pin_t::npaux	./v.h	/^ struct npaux_t *npaux;       \/* aux. for net pins needing special fields *\/$/;"	m	struct:net_pin_t	typeref:struct:net_pin_t::npaux_t	access:public
net_pin_t::npntyp	./v.h	/^ unsigned npntyp : 4;         \/* type of net pin connection *\/$/;"	m	struct:net_pin_t	access:public
net_pin_t::npnxt	./v.h	/^ struct net_pin_t *npnxt;$/;"	m	struct:net_pin_t	typeref:struct:net_pin_t::net_pin_t	access:public
net_pin_t::npp_fgp	./v.h	/^ struct flowg_t *npp_fgp;     \/* backend mipd flow graph *\/$/;"	m	struct:net_pin_t	typeref:struct:net_pin_t::flowg_t	access:public
net_pin_t::npp_idnum	./v.h	/^ int32 npp_idnum;             \/* per mod unique npp id num *\/$/;"	m	struct:net_pin_t	access:public
net_pin_t::npproctyp	./v.h	/^ unsigned npproctyp : 2;      \/* type of npp processing needed *\/ $/;"	m	struct:net_pin_t	access:public
net_pin_t::obnum	./v.h	/^ unsigned obnum : 20;         \/* port index number *\/$/;"	m	struct:net_pin_t	access:public
net_pin_t::pbi	./v.h	/^ int32 pbi;                   \/* for per bit bit index *\/$/;"	m	struct:net_pin_t	access:public
net_pin_t::pullval	./v.h	/^ unsigned pullval : 1;        \/* for pull driver 0 or 1 *\/$/;"	m	struct:net_pin_t	access:public
net_pin_t::scalar_mdprt_ofs	./v.h	/^ size_t scalar_mdprt_ofs;     \/* idp offset to this net chg *\/$/;"	m	struct:net_pin_t	access:public
net_t	./v.h	/^struct net_t {$/;"	s
net_t::arr_num_els	./v.h	/^ int32 arr_num_els;           \/* number of flattened array elements *\/$/;"	m	struct:net_t	access:public
net_t::cc_need_multfi	./v.h	/^ unsigned cc_need_multfi : 1;$/;"	m	struct:net_t	access:public
net_t::dcelst	./v.h	/^ struct dcevnt_t *dcelst;     \/* fixed list of dce\/monit events *\/$/;"	m	struct:net_t	typeref:struct:net_t::dcevnt_t	access:public
net_t::dcetable	./v.h	/^ struct dce_info_t *dcetable; \/* dce table for linked dces *\/$/;"	m	struct:net_t	typeref:struct:net_t::dce_info_t	access:public
net_t::dmpp_in_src	./v.h	/^ unsigned dmpp_in_src : 1;    \/* T => dumpports for net in src *\/$/;"	m	struct:net_t	access:public
net_t::dmpv_funcu	./v.h	/^ union dmp_funcu dmpv_funcu; \/* dmpv function *\/$/;"	m	struct:net_t	typeref:union:net_t::dmp_funcu	access:public
net_t::dmpv_in_src	./v.h	/^ unsigned dmpv_in_src : 1;    \/* T => dumpvars for net in src *\/$/;"	m	struct:net_t	access:public
net_t::dvns	./v.h	/^ struct dvchgnets_t *dvns;    \/* dump var nets *\/$/;"	m	struct:net_t	typeref:struct:net_t::dvchgnets_t	access:public
net_t::enter_dce	./v.h	/^ void (*enter_dce)(void);     \/* enter address *\/ $/;"	m	struct:net_t	access:public
net_t::enter_npp	./v.h	/^ void (*enter_npp)(void);     \/* enter address *\/ $/;"	m	struct:net_t	access:public
net_t::fold_for_inc	./v.h	/^ unsigned fold_for_inc : 1;   \/* T => folding for loop inc *\/$/;"	m	struct:net_t	access:public
net_t::frc_assgn_allocated	./v.h	/^ unsigned frc_assgn_allocated : 1; \/* T => force\/assign in src or PLI added *\/$/;"	m	struct:net_t	access:public
net_t::has_xmr	./v.h	/^ unsigned has_xmr : 1;        \/* T -> has a xmr ref to it *\/$/;"	m	struct:net_t	access:public
net_t::iotyp	./v.h	/^ unsigned iotyp : 3;          \/* I\/O direction *\/$/;"	m	struct:net_t	access:public
net_t::is_iconn_port_scalar_opt	./v.h	/^ unsigned is_iconn_port_scalar_opt : 1; \/* T => optim scalar iconn port op *\/$/;"	m	struct:net_t	access:public
net_t::is_loaded	./v.h	/^ unsigned is_loaded : 1;      \/* T => net is loaded (passed) to a wrapper *\/$/;"	m	struct:net_t	access:public
net_t::is_printed	./v.h	/^ unsigned is_printed : 1;     \/* T => compiled global is printed *\/$/;"	m	struct:net_t	access:public
net_t::mda	./v.h	/^ struct mda_t *mda;$/;"	m	struct:net_t	typeref:struct:net_t::mda_t	access:public
net_t::mfi_id	./v.h	/^ int32 mfi_id;                \/* mfi indent if is mfi *\/$/;"	m	struct:net_t	access:public
net_t::monit_in_src	./v.h	/^ unsigned monit_in_src : 1;   \/* monit for var somewhere in src *\/$/;"	m	struct:net_t	access:public
net_t::n_2state	./v.h	/^ unsigned n_2state : 1;       \/* var decl as one of 2 state reg types *\/$/;"	m	struct:net_t	access:public
net_t::n_arr_hasdvars	./v.h	/^ int32 *n_arr_hasdvars;       \/* np->n_hasdvars for each array element *\/$/;"	m	struct:net_t	access:public
net_t::n_capsiz	./v.h	/^ unsigned n_capsiz : 2;       \/* special capacitor size constant *\/$/;"	m	struct:net_t	access:public
net_t::n_cause	./v.h	/^ unsigned n_cause : 1;        \/* net has net change used for gen cancel *\/$/;"	m	struct:net_t	access:public
net_t::n_drvtyp	./v.h	/^ unsigned n_drvtyp : 3;       \/* for scalar, pre elab p type chg drvr state *\/$/;"	m	struct:net_t	access:public
net_t::n_gone	./v.h	/^ unsigned n_gone : 1;         \/* T => net deleted by gate eater *\/$/;"	m	struct:net_t	access:public
net_t::n_has_tglbits_excl	./v.h	/^ unsigned n_has_tglbits_excl : 1;\/* T => tgl cover some net bits excluded *\/$/;"	m	struct:net_t	access:public
net_t::n_has_toggle	./v.h	/^ unsigned n_has_toggle : 1;   \/* T => has toggle coverage *\/$/;"	m	struct:net_t	access:public
net_t::n_hasdvars	./v.h	/^ unsigned n_hasdvars : 1;     \/* T => at least one inst. dumpvared *\/$/;"	m	struct:net_t	access:public
net_t::n_is_auto	./v.h	/^ unsigned n_is_auto : 1;      \/* T => is an automatic var  *\/$/;"	m	struct:net_t	access:public
net_t::n_is_auto_var	./v.h	/^ unsigned n_is_auto_var : 1;  \/* T => is task automatic var  *\/$/;"	m	struct:net_t	access:public
net_t::n_isaparam	./v.h	/^ unsigned n_isaparam : 1;     \/* T => net is a parameter *\/$/;"	m	struct:net_t	access:public
net_t::n_isapthdst	./v.h	/^ unsigned n_isapthdst : 1;    \/* T => port net is a path dest *\/$/;"	m	struct:net_t	access:public
net_t::n_isapthsrc	./v.h	/^ unsigned n_isapthsrc : 1;    \/* T => port net a pth src (or tc ref ev.) *\/$/;"	m	struct:net_t	access:public
net_t::n_isarr	./v.h	/^ unsigned n_isarr : 1;$/;"	m	struct:net_t	access:public
net_t::n_isarr_vector	./v.h	/^ unsigned n_isarr_vector : 1; \/* T=> is a wire array vector net *\/$/;"	m	struct:net_t	access:public
net_t::n_isavec	./v.h	/^ unsigned n_isavec : 1;       \/* this is a vector *\/$/;"	m	struct:net_t	access:public
net_t::n_mark	./v.h	/^ unsigned n_mark : 1;         \/* misc. marking flag for var. uses *\/ $/;"	m	struct:net_t	access:public
net_t::n_mipd	./v.h	/^ unsigned n_mipd : 1;         \/* net has mipd usage *\/$/;"	m	struct:net_t	access:public
net_t::n_multfi	./v.h	/^ unsigned n_multfi : 1;       \/* at least one bit fi > 1 *\/$/;"	m	struct:net_t	access:public
net_t::n_on_nblhs_varndx	./v.h	/^ unsigned n_on_nblhs_varndx : 1; \/* T -> net is on lhs of varndx <= *\/$/;"	m	struct:net_t	access:public
net_t::n_onlhs	./v.h	/^ unsigned n_onlhs : 1;        \/* appears on some lhs *\/$/;"	m	struct:net_t	access:public
net_t::n_onprocrhs	./v.h	/^ unsigned n_onprocrhs : 1;    \/* appears on some procedural rhs *\/$/;"	m	struct:net_t	access:public
net_t::n_onrhs	./v.h	/^ unsigned n_onrhs : 1;        \/* appears on some rhs (also declarative) *\/ $/;"	m	struct:net_t	access:public
net_t::n_signed	./v.h	/^ unsigned n_signed : 1;$/;"	m	struct:net_t	access:public
net_t::n_stren	./v.h	/^ unsigned n_stren : 1;        \/* T => needs strength model *\/$/;"	m	struct:net_t	access:public
net_t::n_xprop_accum_set	./v.h	/^ unsigned n_xprop_accum_set : 1;    \/* T => xprop accum value is set *\/$/;"	m	struct:net_t	access:public
net_t::n_xprop_accum_set_block1	./v.h	/^ unsigned n_xprop_accum_set_block1: 1;   \/* T => folding for loop inc *\/$/;"	m	struct:net_t	access:public
net_t::n_xprop_accum_set_block2	./v.h	/^ unsigned n_xprop_accum_set_block2: 1;   \/* T => folding for loop inc *\/$/;"	m	struct:net_t	access:public
net_t::n_xprop_ndx	./v.h	/^ int32 n_xprop_ndx;           \/* xprop block net ndx *\/$/;"	m	struct:net_t	access:public
net_t::nattrs	./v.h	/^ struct attr_t *nattrs;       \/* table of net's attributes *\/$/;"	m	struct:net_t	typeref:struct:net_t::attr_t	access:public
net_t::nchdp	./v.h	/^ struct net_chg_t *nchdp;     \/* net changes info header *\/$/;"	m	struct:net_t	typeref:struct:net_t::net_chg_t	access:public
net_t::nchg_has_dces	./v.h	/^ unsigned nchg_has_dces : 1;  \/* T => var currently has delay ctrls *\/$/;"	m	struct:net_t	access:public
net_t::nchg_has_lds	./v.h	/^ unsigned nchg_has_lds : 1;   \/* var has lds (structural from src *\/$/;"	m	struct:net_t	access:public
net_t::nchg_nd_chgstore	./v.h	/^ unsigned nchg_nd_chgstore : 1;\/* need chg store for var *\/$/;"	m	struct:net_t	access:public
net_t::nchgaction_ofs	./v.h	/^ size_t nchgaction_ofs;       \/* idp area nchg (or 0 only) assign action bits *\/$/;"	m	struct:net_t	access:public
net_t::ndel_ctevtab	./v.h	/^ struct ctev_t **ndel_ctevtab; \/* lhsx w\/del must have static tevs *\/$/;"	m	struct:net_t	typeref:struct:net_t::ctev_t	access:public
net_t::ndrvs	./v.h	/^ struct net_pin_t *ndrvs;     \/* list of net drivers *\/$/;"	m	struct:net_t	typeref:struct:net_t::net_pin_t	access:public
net_t::nflowg	./v.h	/^ struct flowg_t *nflowg;      \/* aux flow for decl processing by net *\/$/;"	m	struct:net_t	typeref:struct:net_t::flowg_t	access:public
net_t::nlds	./v.h	/^ struct net_pin_t *nlds;      \/* list of loads driven by net *\/$/;"	m	struct:net_t	typeref:struct:net_t::net_pin_t	access:public
net_t::nrngrep	./v.h	/^ unsigned nrngrep : 3;        \/* representation for net ranges - nx_u fld *\/$/;"	m	struct:net_t	access:public
net_t::nsym	./v.h	/^ struct sy_t *nsym;$/;"	m	struct:net_t	typeref:struct:net_t::sy_t	access:public
net_t::ntgp	./v.h	/^ struct net_toggle_t *ntgp;   \/* toggle fields *\/$/;"	m	struct:net_t	typeref:struct:net_t::net_toggle_t	access:public
net_t::ntraux	./v.h	/^ struct traux_t *ntraux;      \/* aux tran channel record *\/  $/;"	m	struct:net_t	typeref:struct:net_t::traux_t	access:public
net_t::ntyp	./v.h	/^ unsigned ntyp : 5;$/;"	m	struct:net_t	access:public
net_t::nu	./v.h	/^ union nx_u nu;               \/* ptr to auxiliary range and delay values *\/$/;"	m	struct:net_t	typeref:union:net_t::nx_u	access:public
net_t::nu2	./v.h	/^ union nqc_u nu2;             \/* union - comp. nnxt, and qcval *\/  $/;"	m	struct:net_t	typeref:union:net_t::nqc_u	access:public
net_t::nva_ofs	./v.h	/^ size_t nva_ofs;              \/* offset in mod's variable area for each inst *\/ $/;"	m	struct:net_t	access:public
net_t::nwid	./v.h	/^ int32 nwid;                  \/* net width *\/$/;"	m	struct:net_t	access:public
net_t::param_tndx	./v.h	/^ int32 param_tndx;            \/* index into param table *\/$/;"	m	struct:net_t	access:public
net_t::pli_access	./v.h	/^ int32 pli_access;            \/* pli access level *\/$/;"	m	struct:net_t	access:public
net_t::prm_nva	./v.h	/^ union pck_u prm_nva;        \/* still need during elab per inst params mem *\/$/;"	m	struct:net_t	typeref:union:net_t::pck_u	access:public
net_t::regwir_putv_tedlst	./v.h	/^ struct dltevlst_t **regwir_putv_tedlst; \/*  per inst (all bits) ev list *\/$/;"	m	struct:net_t	typeref:struct:net_t::dltevlst_t	access:public
net_t::srep	./v.h	/^ unsigned srep : 6;           \/* storage representation of value - nva fld *\/$/;"	m	struct:net_t	access:public
net_t::syt_of_net	./v.h	/^ struct symtab_t *syt_of_net; \/* symbol table net is in *\/$/;"	m	struct:net_t	typeref:struct:net_t::symtab_t	access:public
net_t::vec_scalared	./v.h	/^ unsigned vec_scalared : 1;   \/* wire is scalared (bit by bit, T if scalar) *\/$/;"	m	struct:net_t	access:public
net_t::vpi_ndrvs	./v.h	/^ struct vpi_drv_t **vpi_ndrvs;\/* ptr to table of ptrs to drivers *\/$/;"	m	struct:net_t	typeref:struct:net_t::vpi_drv_t	access:public
net_t::xprop_accum	./v.h	/^ word32 *xprop_accum;         \/* accumulator for xprop values *\/$/;"	m	struct:net_t	access:public
net_toggle_t	./v.h	/^struct net_toggle_t {$/;"	s
net_toggle_t::n_peri_tgl_on_se_list	./v.h	/^ int32 *n_peri_tgl_on_se_list;\/* if T this inum on slot's end chged list *\/$/;"	m	struct:net_toggle_t	access:public
net_toggle_t::peri_tgl_on	./v.h	/^ byte *peri_tgl_on;           \/* optconfig record tgl on per inst (byte) *\/$/;"	m	struct:net_toggle_t	access:public
net_toggle_t::peribits_drvn_const	./v.h	/^ word32 **peribits_drvn_const;\/* per inst ptr to per bit driven const bit *\/$/;"	m	struct:net_toggle_t	access:public
net_toggle_t::peribits_tgl_rpt_exclude	./v.h	/^ word32 *peribits_tgl_rpt_exclude; \/* per inst bit tgl report excl (bit) tab *\/$/;"	m	struct:net_toggle_t	access:public
net_toggle_t::toggle_ofs	./v.h	/^ size_t toggle_ofs;           \/* toggle offset *\/$/;"	m	struct:net_toggle_t	access:public
net_type_tri	./v_fx2.c	/^static int32 net_type_tri(word32 ntyp)$/;"	f	file:	signature:(word32 ntyp)
netbit_accnext	./v_acc.c	/^static handle netbit_accnext(handle vector, handle bit)$/;"	f	file:	signature:(handle vector, handle bit)
netprop_vpiget	./v_vpi2.c	/^static int32 netprop_vpiget(struct h_t *hp, int32 prop) $/;"	f	file:	signature:(struct h_t *hp, int32 prop)
netstrprop_vpiget	./v_vpi2.c	/^static char *netstrprop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
new_auto_idp_area	./v_ex.c	/^static t_midat *new_auto_idp_area(t_midat *idp)$/;"	f	file:	signature:(t_midat *idp)
new_i1	./v.h	/^ int32 new_i1;                \/* possibly updated new npp range *\/ $/;"	m	struct:npopt_t	access:public
new_i2	./v.h	/^ int32 new_i2;$/;"	m	struct:npopt_t	access:public
new_to_old_grp	./v.h	/^ struct gref_t *new_to_old_grp; \/* ptr from orig to new split of grp *\/$/;"	m	struct:gref_t	typeref:struct:gref_t::gref_t	access:public
new_vtxval	./v.h	/^ unsigned new_vtxval : 8;     \/* for tran chan, new value *\/$/;"	m	struct:vtx_t	access:public
next	./fstapi.c	/^struct collchain_t *next;$/;"	m	struct:collchain_t	typeref:struct:collchain_t::collchain_t	file:	access:public
next	./fstapi.c	/^struct fstBlackoutChain *next;$/;"	m	struct:fstBlackoutChain	typeref:struct:fstBlackoutChain::fstBlackoutChain	file:	access:public
next	./v.h	/^ struct heap_t *next;$/;"	m	struct:heap_t	typeref:struct:heap_t::heap_t	access:public
nextBlock	./lz4.c	/^    const BYTE* nextBlock;$/;"	m	struct:__anon5	file:	access:public
next_enterptr	./v.h	/^ void (*next_enterptr)(void); \/* next enter event may have to free it *\/ $/;"	m	struct:tev_t	access:public
next_huge_break	./fstapi.c	/^fstHandle next_huge_break;$/;"	m	struct:fstWriterContext	file:	access:public
next_ndx	./v.h	/^ struct expr_t *next_ndx;     \/* pointer to next mult-dim index (select) *\/$/;"	m	struct:expr_t	typeref:struct:expr_t::expr_t	access:public
nextb_msg	./v_dbg.c	/^static char *nextb_msg[] = { $/;"	v	file:
nfbig_alloc	./v_ms.c	/^static char *nfbig_alloc(int32 size)$/;"	f	file:	signature:(int32 size)
nflowg	./v.h	/^ struct flowg_t *nflowg;      \/* aux flow for decl processing by net *\/$/;"	m	struct:net_t	typeref:struct:net_t::flowg_t	access:public
ngenblks	./v.h	/^ int ngenblks;                \/* for if max 1 (none -1) but makes consistent *\/$/;"	m	struct:gen_if_t	access:public
ngenblks	./v.h	/^ int32 ngenblks;            \/* for if max 1 (none -1) but makes consistent *\/$/;"	m	struct:gen_case_t	access:public
ngenblks	./v.h	/^ int32 ngenblks;$/;"	m	struct:gen_for_t	access:public
ni1	./v.h	/^ int32 ni1, ni2;               \/* array element width *\/$/;"	m	struct:mda_t	access:public
ni1	./v.h	/^ int32 ni1, ni2;$/;"	m	struct:rngarr_t	access:public
ni1	./v.h	/^ int32 ni1, ni2;$/;"	m	struct:rngdwir_t	access:public
ni1	./v.h	/^ int32 ni1, ni2;$/;"	m	struct:rngwir_t	access:public
ni2	./v.h	/^ int32 ni1, ni2;               \/* array element width *\/$/;"	m	struct:mda_t	access:public
ni2	./v.h	/^ int32 ni1, ni2;$/;"	m	struct:rngarr_t	access:public
ni2	./v.h	/^ int32 ni1, ni2;$/;"	m	struct:rngdwir_t	access:public
ni2	./v.h	/^ int32 ni1, ni2;$/;"	m	struct:rngwir_t	access:public
nibblexz	./v_ms.c	/^static int32 nibblexz(word32 aw, word32 bw, int32 srcblen)$/;"	f	file:	signature:(word32 aw, word32 bw, int32 srcblen)
nlds	./v.h	/^ struct net_pin_t *nlds;      \/* list of loads driven by net *\/$/;"	m	struct:net_t	typeref:struct:net_t::net_pin_t	access:public
nlines	./v.h	/^ int32 nlines;$/;"	m	struct:filpos_t	access:public
nlo_ndx	./igen.h	/^ word32 nlo_ndx;               \/* net list object in mod index *\/$/;"	m	struct:tn_dup_t	access:public
nmatch	./v.h	/^ int32 nmatch;                \/* the number of matched files *\/$/;"	m	struct:xpndfile_t	access:public
nnxt	./v.h	/^ struct net_t *nnxt;          \/* during src rd and fixup, nets not yet tab *\/ $/;"	m	union:nqc_u	typeref:struct:nqc_u::net_t	access:public
no1_1to1h_err	./v_vpi.c	/^static void no1_1to1h_err(word32 typ1to1, word32 exptyp, struct h_t *hp)$/;"	f	file:	signature:(word32 typ1to1, word32 exptyp, struct h_t *hp)
noPrefix	./lz4.c	/^typedef enum { noPrefix = 0, withPrefix = 1 } prefix64k_directive;$/;"	e	enum:__anon8	file:
no_1to1h_err	./v_vpi.c	/^static void no_1to1h_err(int32 typ1to1, struct h_t *hp)$/;"	f	file:	signature:(int32 typ1to1, struct h_t *hp)
no_delay	./v.h	/^ unsigned no_delay : 1;       \/* T => task has no reachable delay *\/ $/;"	m	struct:task_t	access:public
no_if_beg	./v.h	/^ unsigned no_if_beg : 1;      \/* T => really a begin-end (added if (1) *\/ $/;"	m	struct:gen_if_t	access:public
no_mipd	./v.h	/^ unsigned no_mipd : 1;        \/* T => no mipd delay for this bit *\/$/;"	m	struct:mipd_t	access:public
no_rhs_expr	./v.h	/^ unsigned no_rhs_expr : 1;     \/* lhs widers bits need 0\/z assign *\/$/;"	m	struct:pbexpr_t	access:public
no_sig_bits_drvn_const	./v_cvr.c	/^static int32 no_sig_bits_drvn_const(struct net_t *np, int32 ii)$/;"	f	file:	signature:(struct net_t *np, int32 ii)
no_xmrcall	./v.h	/^ unsigned no_xmrcall : 1;     \/* T => task has no reachable xmr task *\/$/;"	m	struct:task_t	access:public
nodep	./v.h	/^ struct tqnode_t *nodep;     \/* AIV timing tree node so no search is needed *\/$/;"	m	struct:tev_t	typeref:struct:tev_t::tqnode_t	access:public
nonis_to_delval	./v_del.c	/^static void nonis_to_delval(word64 *ticksval, struct expr_t *xp)$/;"	f	file:	signature:(word64 *ticksval, struct expr_t *xp)
nores_insn	./v_bbgen3.c	/^static void nores_insn(int32 opcod, int32 src_amode, ...)$/;"	f	file:	signature:(int32 opcod, int32 src_amode, ...)
normal	./v_ex2.c	/^static double normal(int32 *seed, int32 mean, int32 deviation)$/;"	f	file:	signature:(int32 *seed, int32 mean, int32 deviation)
normalize_ndx_	./cvmacros.h	505;"	d
notLimited	./lz4.c	/^typedef enum { notLimited = 0, limited = 1 } limitedOutput_directive;$/;"	e	enum:__anon6	file:
not_a_port	./v_sdf.c	/^static int32 not_a_port(char *pnam, int32 ptyp, struct mod_t *mdp, char *formnam)$/;"	f	file:	signature:(char *pnam, int32 ptyp, struct mod_t *mdp, char *formnam)
notpropof_err	./v_vpi2.c	/^static void notpropof_err(word32 typh, int32 prop)$/;"	f	file:	signature:(word32 typh, int32 prop)
np	./v.h	/^ struct net_t *np;            \/* net this toggle is for *\/$/;"	m	struct:rt_tgl_t	typeref:struct:rt_tgl_t::net_t	access:public
np	./v.h	/^ struct net_t *np;          \/* net it is dumping *\/$/;"	m	struct:dmp_buf_t	typeref:struct:dmp_buf_t::net_t	access:public
np	./v.h	/^ struct net_t *np;$/;"	m	struct:teputv_t	typeref:struct:teputv_t::net_t	access:public
np	./v.h	/^ struct net_t *np;$/;"	m	union:ten_u	typeref:struct:ten_u::net_t	access:public
np_iconn_t	./igen.h	/^struct np_iconn_t {$/;"	s
np_iconn_t::fgp	./igen.h	/^ struct flowg_t *fgp;           \/* the flowg generated for this iconn *\/$/;"	m	struct:np_iconn_t	typeref:struct:np_iconn_t::flowg_t	access:public
np_iconn_t::iconn_ndx	./igen.h	/^ int32 iconn_ndx;               \/* this flow graph identifier number *\/$/;"	m	struct:np_iconn_t	access:public
np_iconn_t::npp	./igen.h	/^ struct net_pin_t *npp;         \/* npp this is from *\/$/;"	m	struct:np_iconn_t	typeref:struct:np_iconn_t::net_pin_t	access:public
np_iconn_t::up_rhsx	./igen.h	/^ struct expr_t *up_rhsx;        \/* up rhsx expr *\/$/;"	m	struct:np_iconn_t	typeref:struct:np_iconn_t::expr_t	access:public
np_u	./v.h	/^union np_u {$/;"	u
np_u::filtidp	./v.h	/^ t_midat *filtidp;            \/* for root or uprel xmr filt to 1 inst *\/$/;"	m	union:np_u	access:public
np_u::npgrp	./v.h	/^ struct gref_t *npgrp;        \/* xmr glb that needs normal downward proc. *\/$/;"	m	union:np_u	typeref:struct:np_u::gref_t	access:public
np_u::vpihp	./v.h	/^ struct h_t *vpihp;           \/* for vpi_ added, the assoc. handle *\/$/;"	m	union:np_u	typeref:struct:np_u::h_t	access:public
np_xmrtyp	./v.h	/^ unsigned np_xmrtyp : 2;      \/* xmr type *\/$/;"	m	struct:net_pin_t	access:public
npaux	./v.h	/^ struct npaux_t *npaux;       \/* aux. for net pins needing special fields *\/$/;"	m	struct:net_pin_t	typeref:struct:net_pin_t::npaux_t	access:public
npaux_t	./v.h	/^struct npaux_t {$/;"	s
npaux_t::idp_ofs	./v.h	/^ size_t idp_ofs;              \/* idp offset for filtidp location *\/$/;"	m	struct:npaux_t	access:public
npaux_t::lcbi1	./v.h	/^ int32 lcbi1, lcbi2;          \/* if fi is lhs concat, the rhs val subrange *\/$/;"	m	struct:npaux_t	access:public
npaux_t::lcbi2	./v.h	/^ int32 lcbi1, lcbi2;          \/* if fi is lhs concat, the rhs val subrange *\/$/;"	m	struct:npaux_t	access:public
npaux_t::mdp	./v.h	/^ struct mod_t *mdp;           \/* module for filter npp *\/$/;"	m	struct:npaux_t	typeref:struct:npaux_t::mod_t	access:public
npaux_t::nbi1	./v.h	/^ int32 nbi1;                  \/* range of connection (-1 for all) *\/$/;"	m	struct:npaux_t	access:public
npaux_t::nbi2	./v.h	/^ union intptr_u nbi2;         \/* for IS param union rng ptr (dci1 = -2) *\/$/;"	m	struct:npaux_t	typeref:union:npaux_t::intptr_u	access:public
npaux_t::npdownitp	./v.h	/^ struct itree_t *npdownitp;$/;"	m	struct:npaux_t	typeref:struct:npaux_t::itree_t	access:public
npaux_t::npu	./v.h	/^ union np_u npu;$/;"	m	struct:npaux_t	typeref:union:npaux_t::np_u	access:public
npdownitp	./v.h	/^ struct itree_t *npdownitp;$/;"	m	struct:npaux_t	typeref:struct:npaux_t::itree_t	access:public
npgrp	./v.h	/^ struct gref_t *npgrp;        \/* xmr glb that needs normal downward proc. *\/$/;"	m	union:np_u	typeref:struct:np_u::gref_t	access:public
npi	./v.h	/^ int32 npi;                   \/* for params fixup sorting\/matching val *\/$/;"	m	union:nqc_u	access:public
npic_node_alloc	./v_bbgen3.c	/^static struct avlnode_t *npic_node_alloc(void *tnsydup)$/;"	f	file:	signature:(void *tnsydup)
npic_node_cmp	./v_bbgen3.c	/^static cmpsword npic_node_cmp(const void *valp, const struct avlnode_t *nodp)$/;"	f	file:	signature:(const void *valp, const struct avlnode_t *nodp)
npntyp	./v.h	/^ unsigned npntyp : 4;         \/* type of net pin connection *\/$/;"	m	struct:net_pin_t	access:public
npnxt	./v.h	/^ struct net_pin_t *npnxt;$/;"	m	struct:net_pin_t	typeref:struct:net_pin_t::net_pin_t	access:public
npopt_t	./v.h	/^struct npopt_t {$/;"	s
npopt_t::cant_opt	./v.h	/^ unsigned cant_opt : 1;       \/* npp must not be deleted or changed *\/$/;"	m	struct:npopt_t	access:public
npopt_t::new_i1	./v.h	/^ int32 new_i1;                \/* possibly updated new npp range *\/ $/;"	m	struct:npopt_t	access:public
npopt_t::new_i2	./v.h	/^ int32 new_i2;$/;"	m	struct:npopt_t	access:public
npopt_t::npp	./v.h	/^ struct net_pin_t *npp;       \/* corresponding npp *\/$/;"	m	struct:npopt_t	typeref:struct:npopt_t::net_pin_t	access:public
npopt_t::npp_del	./v.h	/^ unsigned npp_del : 1;        \/* remove this npp when rebuild npp list *\/$/;"	m	struct:npopt_t	access:public
npopt_t::npp_processed	./v.h	/^ unsigned npp_processed : 1;  \/* T => its group has been processed *\/$/;"	m	struct:npopt_t	access:public
npopt_t::nxt_dup_nppi	./v.h	/^ int32 nxt_dup_nppi;          \/* ptr to nxt in duped possible del list group *\/$/;"	m	struct:npopt_t	access:public
npopt_t::opt_in_grp	./v.h	/^ unsigned opt_in_grp : 1;     \/* this npp is a maybe del duplicated group *\/ $/;"	m	struct:npopt_t	access:public
npp	./igen.h	/^ struct net_pin_t *npp;         \/* net pin from which this is gened *\/$/;"	m	struct:gate_conta_t	typeref:struct:gate_conta_t::net_pin_t	access:public
npp	./igen.h	/^ struct net_pin_t *npp;         \/* npp this is from *\/$/;"	m	struct:np_iconn_t	typeref:struct:np_iconn_t::net_pin_t	access:public
npp	./v.h	/^ struct net_pin_t *npp;       \/* corresponding npp *\/$/;"	m	struct:npopt_t	typeref:struct:npopt_t::net_pin_t	access:public
npp_can_del_or_merge	./v_prp.c	/^static int32 npp_can_del_or_merge(struct net_pin_t *npp)$/;"	f	file:	signature:(struct net_pin_t *npp)
npp_del	./v.h	/^ unsigned npp_del : 1;        \/* remove this npp when rebuild npp list *\/$/;"	m	struct:npopt_t	access:public
npp_fgp	./v.h	/^ struct flowg_t *npp_fgp;     \/* backend mipd flow graph *\/$/;"	m	struct:net_pin_t	typeref:struct:net_pin_t::flowg_t	access:public
npp_idnum	./v.h	/^ int32 npp_idnum;             \/* per mod unique npp id num *\/$/;"	m	struct:net_pin_t	access:public
npp_processed	./v.h	/^ unsigned npp_processed : 1;  \/* T => its group has been processed *\/$/;"	m	struct:npopt_t	access:public
npproctyp	./v.h	/^ unsigned npproctyp : 2;      \/* type of npp processing needed *\/ $/;"	m	struct:net_pin_t	access:public
npps_same	./v_prp.c	/^static int32 npps_same(struct mod_t *mdp, struct net_pin_t *npp1,$/;"	f	file:	signature:(struct mod_t *mdp, struct net_pin_t *npp1, struct net_pin_t *npp2)
nprmnxt	./v.h	/^ struct namparam_t *nprmnxt;$/;"	m	struct:namparam_t	typeref:struct:namparam_t::namparam_t	access:public
npu	./v.h	/^ union np_u npu;$/;"	m	struct:npaux_t	typeref:union:npaux_t::np_u	access:public
nqc_u	./v.h	/^union nqc_u {$/;"	u
nqc_u::nnxt	./v.h	/^ struct net_t *nnxt;          \/* during src rd and fixup, nets not yet tab *\/ $/;"	m	union:nqc_u	typeref:struct:nqc_u::net_t	access:public
nqc_u::npi	./v.h	/^ int32 npi;                   \/* for params fixup sorting\/matching val *\/$/;"	m	union:nqc_u	access:public
nqc_u::qcval	./v.h	/^ struct qcval_t *qcval;       \/* per inst. (maybe per bit) qc aux records *\/$/;"	m	union:nqc_u	typeref:struct:nqc_u::qcval_t	access:public
nqc_u::wp	./v.h	/^ word32 *wp;                  \/* for params work saved param val ptr *\/ $/;"	m	union:nqc_u	access:public
nrngrep	./v.h	/^ unsigned nrngrep : 3;        \/* representation for net ranges - nx_u fld *\/$/;"	m	struct:net_t	access:public
nsym	./v.h	/^ struct sy_t *nsym;$/;"	m	struct:net_t	typeref:struct:net_t::sy_t	access:public
ntfy_np	./v.h	/^ struct net_t *ntfy_np;       \/* notify wire (known during fix up) *\/$/;"	m	struct:tchk_t	typeref:struct:tchk_t::net_t	access:public
ntfy_toggle_tab	./v_sim.c	/^static const word32 ntfy_toggle_tab[] = {1, 0, 2, 1};$/;"	v	file:
ntgp	./v.h	/^ struct net_toggle_t *ntgp;   \/* toggle fields *\/$/;"	m	struct:net_t	typeref:struct:net_t::net_toggle_t	access:public
ntraux	./v.h	/^ struct traux_t *ntraux;      \/* aux tran channel record *\/  $/;"	m	struct:net_t	typeref:struct:net_t::traux_t	access:public
ntyp	./v.h	/^ unsigned ntyp : 5;$/;"	m	struct:net_t	access:public
nu	./v.h	/^ union nx_u nu;               \/* ptr to auxiliary range and delay values *\/$/;"	m	struct:net_t	typeref:union:net_t::nx_u	access:public
nu2	./v.h	/^ union nqc_u nu2;             \/* union - comp. nnxt, and qcval *\/  $/;"	m	struct:net_t	typeref:union:net_t::nqc_u	access:public
num	./v.h	/^ int32 num;              \/* size of sys call tab *\/$/;"	m	struct:expr_tab_t	access:public
num_alias	./fstapi.c	/^uint64_t num_alias;$/;"	m	struct:fstReaderContext	file:	access:public
num_blackouts	./fstapi.c	/^uint32_t num_blackouts;$/;"	m	struct:fstReaderContext	file:	access:public
num_blackouts	./fstapi.c	/^uint32_t num_blackouts;$/;"	m	struct:fstWriterContext	file:	access:public
num_events	./v.h	/^ int32 num_events;$/;"	m	struct:telhdr_t	access:public
num_formal_args	./v.h	/^ int32 num_formal_args;$/;"	m	struct:amac_t	access:public
num_nodes	./igen.h	/^ int32 num_nodes;$/;"	m	struct:avlhd_t	access:public
num_optim_catels	./cvc.c	/^int32 num_optim_catels;\/* number of all elements in optim concats *\/$/;"	v
num_optim_cats	./cvc.c	/^int32 num_optim_cats;  \/* number of optimized concats *\/$/;"	v
num_prtconns	./v.h	/^ unsigned num_prtconns : 2;   \/* count to 2 of no. of ports wire conns to *\/$/;"	m	struct:ncomp_t	access:public
num_xmatch	./v.h	/^ int32 num_xmatch;            \/* number of x\/zs in this case item *\/$/;"	m	struct:exprlst_t	access:public
numexpr_disp	./v_cnv.c	/^static void numexpr_disp(struct expr_t *ndp, int32 inum)$/;"	f	file:	signature:(struct expr_t *ndp, int32 inum)
numhs	./v.h	/^ int32 numhs;                 \/* total number of handles for iterator *\/$/;"	m	struct:pviter_t	access:public
numins	./v.h	/^ unsigned numins : 8;         \/* number of inputs *\/$/;"	m	struct:udp_t	access:public
numscopes	./fstapi.c	/^uint32_t numscopes;$/;"	m	struct:fstWriterContext	file:	access:public
numsigs	./fstapi.c	/^fstHandle numsigs;$/;"	m	struct:fstWriterContext	file:	access:public
numstates	./v.h	/^ unsigned numstates : 8;      \/* for combinatorial same else one more *\/$/;"	m	struct:udp_t	access:public
numsyms	./v.h	/^ unsigned numsyms : 31;$/;"	m	struct:symtab_t	access:public
numvtxs	./v.h	/^ word32 numvtxs;              \/* number of vertices (net-bits) in channel *\/$/;"	m	struct:chanrec_t	access:public
nva_ofs	./v.h	/^ size_t nva_ofs;              \/* offset in mod's variable area for each inst *\/ $/;"	m	struct:net_t	access:public
nwid	./v.h	/^ int32 nwid;                  \/* net width *\/$/;"	m	struct:net_t	access:public
nx1	./v.h	/^ struct expr_t *nx1, *nx2;$/;"	m	struct:ncomp_t	typeref:struct:ncomp_t::expr_t	access:public
nx2	./v.h	/^ struct expr_t *nx1, *nx2;$/;"	m	struct:ncomp_t	typeref:struct:ncomp_t::	access:public
nx_u	./v.h	/^union nx_u {$/;"	u
nx_u::ct	./v.h	/^ struct ncomp_t *ct;          \/* compile time value *\/$/;"	m	union:nx_u	typeref:struct:nx_u::ncomp_t	access:public
nx_u::rngarr	./v.h	/^ struct rngarr_t *rngarr;$/;"	m	union:nx_u	typeref:struct:nx_u::rngarr_t	access:public
nx_u::rngdwir	./v.h	/^ struct rngdwir_t *rngdwir;$/;"	m	union:nx_u	typeref:struct:nx_u::rngdwir_t	access:public
nx_u::rngwir	./v.h	/^ struct rngwir_t *rngwir;$/;"	m	union:nx_u	typeref:struct:nx_u::rngwir_t	access:public
nxt	./igen.h	/^ struct gate_da_list_t *nxt;      \/* nxt delay assign fg *\/$/;"	m	struct:gate_da_list_t	typeref:struct:gate_da_list_t::gate_da_list_t	access:public
nxt	./v.h	/^ struct net_chg_t *nxt;$/;"	m	struct:net_chg_t	typeref:struct:net_chg_t::net_chg_t	access:public
nxt_dup_nppi	./v.h	/^ int32 nxt_dup_nppi;          \/* ptr to nxt in duped possible del list group *\/$/;"	m	struct:npopt_t	access:public
nxt_stp	./v.h	/^ struct st_list_t *nxt_stp;$/;"	m	struct:st_list_t	typeref:struct:st_list_t::st_list_t	access:public
nxthi	./v.h	/^ int32 nxthi;                 \/* next handle to return *\/$/;"	m	struct:pviter_t	access:public
obj	./v.h	/^ void *obj;                 \/* system function call *\/$/;"	m	struct:prep_obj_t	access:public
obj_node_alloc	./v_cvcrt.c	/^static struct avlnode_t *obj_node_alloc(void *tnsydup)$/;"	f	file:	signature:(void *tnsydup)
obj_node_cmp	./v_cvcrt.c	/^static cmpsword obj_node_cmp(const void *valp, const struct avlnode_t *nodp)$/;"	f	file:	signature:(const void *valp, const struct avlnode_t *nodp)
objnam	./v.h	/^ char *objnam;                \/* inst clause: [XMR inst path] *\/ $/;"	m	struct:cfgrule_t	access:public
obnum	./v.h	/^ unsigned obnum : 20;         \/* port index number *\/$/;"	m	struct:net_pin_t	access:public
oc_props	./v.h	/^ struct oc_vtok_t *oc_props;\/* list of opt cfg attribs\/props as nam *\/$/;"	m	struct:ocfg_stmt_t	typeref:struct:ocfg_stmt_t::oc_vtok_t	access:public
oc_stmts	./v.h	/^ struct ocfg_stmt_t *oc_stmts;\/* this opt fil's attr stmts *\/  $/;"	m	struct:ocfil_lst_t	typeref:struct:ocfil_lst_t::ocfg_stmt_t	access:public
oc_ver_objs	./v.h	/^ struct oc_vtok_t *oc_ver_objs; \/* list of insts, mods, etc tokens *\/$/;"	m	struct:ocfg_stmt_t	typeref:struct:ocfg_stmt_t::oc_vtok_t	access:public
oc_vtok_t	./v.h	/^struct oc_vtok_t {$/;"	s
oc_vtok_t::ebi1	./v.h	/^ int32 ebi1;                 \/* exclude lsb *\/$/;"	m	struct:oc_vtok_t	access:public
oc_vtok_t::ebi2	./v.h	/^ int32 ebi2;                 \/* exclude rsb *\/$/;"	m	struct:oc_vtok_t	access:public
oc_vtok_t::ocs_toctyp	./v.h	/^ unsigned ocs_toctyp : 8;$/;"	m	struct:oc_vtok_t	access:public
oc_vtok_t::ocs_toknam	./v.h	/^ char *ocs_toknam;$/;"	m	struct:oc_vtok_t	access:public
oc_vtok_t::ocvtnxt	./v.h	/^ struct oc_vtok_t *ocvtnxt;$/;"	m	struct:oc_vtok_t	typeref:struct:oc_vtok_t::oc_vtok_t	access:public
oc_vtok_t::tok_lcnt	./v.h	/^ int32 tok_lcnt;$/;"	m	struct:oc_vtok_t	access:public
ocfg_stmt_t	./v.h	/^struct ocfg_stmt_t {$/;"	s
ocfg_stmt_t::oc_props	./v.h	/^ struct oc_vtok_t *oc_props;\/* list of opt cfg attribs\/props as nam *\/$/;"	m	struct:ocfg_stmt_t	typeref:struct:ocfg_stmt_t::oc_vtok_t	access:public
ocfg_stmt_t::oc_ver_objs	./v.h	/^ struct oc_vtok_t *oc_ver_objs; \/* list of insts, mods, etc tokens *\/$/;"	m	struct:ocfg_stmt_t	typeref:struct:ocfg_stmt_t::oc_vtok_t	access:public
ocfg_stmt_t::ocfgtyp	./v.h	/^ unsigned ocfgtyp : 8;$/;"	m	struct:ocfg_stmt_t	access:public
ocfg_stmt_t::ocsnxt	./v.h	/^ struct ocfg_stmt_t *ocsnxt;$/;"	m	struct:ocfg_stmt_t	typeref:struct:ocfg_stmt_t::ocfg_stmt_t	access:public
ocfg_stmt_t::tree_level_val	./v.h	/^ int32 tree_level_val;$/;"	m	struct:ocfg_stmt_t	access:public
ocfgtyp	./v.h	/^ unsigned ocfgtyp : 8;$/;"	m	struct:ocfg_stmt_t	access:public
ocfil_lst_t	./v.h	/^struct ocfil_lst_t {$/;"	s
ocfil_lst_t::oc_stmts	./v.h	/^ struct ocfg_stmt_t *oc_stmts;\/* this opt fil's attr stmts *\/  $/;"	m	struct:ocfil_lst_t	typeref:struct:ocfil_lst_t::ocfg_stmt_t	access:public
ocfil_lst_t::ocfnam	./v.h	/^ char *ocfnam;$/;"	m	struct:ocfil_lst_t	access:public
ocfil_lst_t::oclnxt	./v.h	/^ struct ocfil_lst_t *oclnxt;$/;"	m	struct:ocfil_lst_t	typeref:struct:ocfil_lst_t::ocfil_lst_t	access:public
ocfnam	./v.h	/^ char *ocfnam;$/;"	m	struct:ocfil_lst_t	access:public
oclnxt	./v.h	/^ struct ocfil_lst_t *oclnxt;$/;"	m	struct:ocfil_lst_t	typeref:struct:ocfil_lst_t::ocfil_lst_t	access:public
ocs_toctyp	./v.h	/^ unsigned ocs_toctyp : 8;$/;"	m	struct:oc_vtok_t	access:public
ocs_toknam	./v.h	/^ char *ocs_toknam;$/;"	m	struct:oc_vtok_t	access:public
ocsnxt	./v.h	/^ struct ocfg_stmt_t *ocsnxt;$/;"	m	struct:ocfg_stmt_t	typeref:struct:ocfg_stmt_t::ocfg_stmt_t	access:public
octdigxz	./v_ms.c	/^static int32 octdigxz(word32 *ap, word32 *bp, int32 srcblen)$/;"	f	file:	signature:(word32 *ap, word32 *bp, int32 srcblen)
ocvtnxt	./v.h	/^ struct oc_vtok_t *ocvtnxt;$/;"	m	struct:oc_vtok_t	typeref:struct:oc_vtok_t::oc_vtok_t	access:public
off_stvtxtab_marks	./v_trch.c	/^static void off_stvtxtab_marks(void)$/;"	f	file:	signature:(void)
off_trchan_marks	./v_trch.c	/^static void off_trchan_marks(struct chanrec_t *chanp) $/;"	f	file:	signature:(struct chanrec_t *chanp)
offset	./igen.h	/^ size_t offset;             \/* offset from the parent *\/$/;"	m	struct:adradd_dup_t	access:public
old_pvc_flgs	./v.h	/^ byte *old_pvc_flgs;          \/* old and sav pvc flags *\/$/;"	m	struct:tfarg_t	access:public
old_vtxval	./v.h	/^ unsigned old_vtxval : 8;     \/* value at start of tran relax *\/$/;"	m	struct:vtx_t	access:public
oldval_ofs	./v.h	/^ size_t oldval_ofs;           \/* idp ofs of value of source bit *\/$/;"	m	struct:tchg_t	access:public
oldvals	./v.h	/^ byte *oldvals;               \/* per inst array of old values *\/$/;"	m	struct:mipd_t	access:public
on_list	./v.h	/^ unsigned on_list : 1;         \/* array element is on list *\/ $/;"	m	struct:dvchgnets_t	access:public
onames_vpi	./v_vpi3.c	/^static struct onamvpi_t onames_vpi[] = {$/;"	v	typeref:struct:onamvpi_t	file:
onamvpi_t	./v.h	/^struct onamvpi_t {$/;"	s
onamvpi_t::vpiobjnam	./v.h	/^ char *vpiobjnam;$/;"	m	struct:onamvpi_t	access:public
onamvpi_t::vpiotyp	./v.h	/^ word32 vpiotyp;              \/* redundant value same as obj constant ind *\/$/;"	m	struct:onamvpi_t	access:public
one_allbits_	./cvmacros.h	488;"	d
one_rot	./v_ms.c	/^static void one_rot(struct tnode_t *bal_pt, struct tnode_t *bal_down, $/;"	f	file:	signature:(struct tnode_t *bal_pt, struct tnode_t *bal_down, struct tnode_t *balpt_par)
oneword_binop	./v_bbgen3.c	/^static int32 oneword_binop(int32 opcod, int32 op1_ti, int32 op2_ti)$/;"	f	file:	signature:(int32 opcod, int32 op1_ti, int32 op2_ti)
opclass	./v.h	/^ unsigned opclass : 8;$/;"	m	struct:opinfo_t	access:public
opcod	./igen.h	/^ unsigned opcod : 16;         \/* high level vm insn op code *\/$/;"	m	struct:insn_t	access:public
open_cfg_lbfil	./v_src3.c	/^static int32 open_cfg_lbfil(char *lbnam)$/;"	f	file:	signature:(char *lbnam)
open_dumpports_file	./v_sim.c	/^static int32 open_dumpports_file(struct dp_fildesc_t *fdescp)$/;"	f	file:	signature:(struct dp_fildesc_t *fdescp)
open_lbfil	./v_fx.c	/^static int32 open_lbfil(int32 ifi, int32 is_dir)$/;"	f	file:	signature:(int32 ifi, int32 is_dir)
open_logfile	./cvc.c	/^static void open_logfile(void)$/;"	f	file:	signature:(void)
opinfo_t	./v.h	/^struct opinfo_t {$/;"	s
opinfo_t::opclass	./v.h	/^ unsigned opclass : 8;$/;"	m	struct:opinfo_t	access:public
opinfo_t::opnam	./v.h	/^ char *opnam;$/;"	m	struct:opinfo_t	access:public
opinfo_t::pthexpop	./v.h	/^ unsigned pthexpop: 8;        \/* T => op legal in SDPD condional expr. *\/$/;"	m	struct:opinfo_t	access:public
opinfo_t::realop	./v.h	/^ unsigned realop : 8;$/;"	m	struct:opinfo_t	access:public
opinfo_t::reswid	./v.h	/^ unsigned reswid : 8;$/;"	m	struct:opinfo_t	access:public
opinfo_t::stringop	./v.h	/^ unsigned stringop : 1;       \/* T => op legal for SV strings *\/$/;"	m	struct:opinfo_t	access:public
opnam	./v.h	/^ char *opnam;$/;"	m	struct:opinfo_t	access:public
opnames_vpi	./v_vpi3.c	/^static struct opnamvpi_t opnames_vpi[] = {$/;"	v	typeref:struct:opnamvpi_t	file:
opnamvpi_t	./v.h	/^struct opnamvpi_t { $/;"	s
opnamvpi_t::vpiopchar	./v.h	/^ char *vpiopchar;             \/* operator character (such as +) *\/$/;"	m	struct:opnamvpi_t	access:public
opnamvpi_t::vpiopnam	./v.h	/^ char *vpiopnam;$/;"	m	struct:opnamvpi_t	access:public
opnamvpi_t::vpioptyp	./v.h	/^ int32 vpioptyp;              \/* redundant value same as op constant ind *\/$/;"	m	struct:opnamvpi_t	access:public
opt	./v.h	/^ char *opt;$/;"	m	struct:optlst_t	access:public
opt_in_grp	./v.h	/^ unsigned opt_in_grp : 1;     \/* this npp is a maybe del duplicated group *\/ $/;"	m	struct:npopt_t	access:public
opt_slcnt	./v.h	/^ int32 opt_slcnt;$/;"	m	struct:sdfnamlst_t	access:public
optcfg_free_1net_tgl_record	./v_src3.c	/^static void optcfg_free_1net_tgl_record(struct mod_t *mdp, struct net_t *np)$/;"	f	file:	signature:(struct mod_t *mdp, struct net_t *np)
optcfg_skipto_semi	./v_src3.c	/^static int32 optcfg_skipto_semi(void)$/;"	f	file:	signature:(void)
optfnam	./v.h	/^ char *optfnam;$/;"	m	struct:sdfnamlst_t	access:public
optfnam_ind	./v.h	/^ unsigned optfnam_ind : 16;$/;"	m	struct:optlst_t	access:public
optim_port_np	./igen.h	/^ struct net_t *optim_port_np; \/* optimize port net for fixed style fg *\/$/;"	m	struct:flowg_t	typeref:struct:flowg_t::net_t	access:public
optim_scalar_port	./igen.h	/^ unsigned optim_scalar_port : 1; \/* T => has optimized scalar port *\/$/;"	m	struct:flowg_t	access:public
optim_u	./igen.h	/^union optim_u {$/;"	u
optim_u::fudp	./igen.h	/^ struct iusedef_t *fudp;      \/* ptrs to use <bblk, insn> or deflst insn *\/$/;"	m	union:optim_u	typeref:struct:optim_u::iusedef_t	access:public
optim_u::rap	./igen.h	/^ struct reg_alloc_t *rap;     \/* record for reg allocator live in\/outs *\/  $/;"	m	union:optim_u	typeref:struct:optim_u::reg_alloc_t	access:public
optimize_1fg_symbolic_con_out_insns	./v_bbopt.c	/^static void optimize_1fg_symbolic_con_out_insns(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
optlev	./v.h	/^ int32 optlev;$/;"	m	struct:optlst_t	access:public
optlin_cnt	./v.h	/^ int32 optlin_cnt;$/;"	m	struct:optlst_t	access:public
optlnxt	./v.h	/^ struct optlst_t *optlnxt;$/;"	m	struct:optlst_t	typeref:struct:optlst_t::optlst_t	access:public
optlst_t	./v.h	/^struct optlst_t {$/;"	s
optlst_t::argv_done	./v.h	/^ unsigned argv_done : 1;$/;"	m	struct:optlst_t	access:public
optlst_t::dargv	./v.h	/^ char **dargv;$/;"	m	struct:optlst_t	access:public
optlst_t::is_argv	./v.h	/^ unsigned is_argv : 1;$/;"	m	struct:optlst_t	access:public
optlst_t::is_bmark	./v.h	/^ unsigned is_bmark : 1;       \/* special -f markers for vpi_ *\/         $/;"	m	struct:optlst_t	access:public
optlst_t::is_emark	./v.h	/^ unsigned is_emark : 1;$/;"	m	struct:optlst_t	access:public
optlst_t::opt	./v.h	/^ char *opt;$/;"	m	struct:optlst_t	access:public
optlst_t::optfnam_ind	./v.h	/^ unsigned optfnam_ind : 16;$/;"	m	struct:optlst_t	access:public
optlst_t::optlev	./v.h	/^ int32 optlev;$/;"	m	struct:optlst_t	access:public
optlst_t::optlin_cnt	./v.h	/^ int32 optlin_cnt;$/;"	m	struct:optlst_t	access:public
optlst_t::optlnxt	./v.h	/^ struct optlst_t *optlnxt;$/;"	m	struct:optlst_t	typeref:struct:optlst_t::optlst_t	access:public
optlst_t::optnum	./v.h	/^ int32 optnum;$/;"	m	struct:optlst_t	access:public
optnum	./v.h	/^ int32 optnum;$/;"	m	struct:optlst_t	access:public
optu	./igen.h	/^ union optim_u optu;          \/* short lived optimization fields *\/$/;"	m	struct:insn_t	typeref:union:insn_t::optim_u	access:public
optyp	./v.h	/^ unsigned optyp : 10;         \/* token type of node *\/$/;"	m	struct:expr_t	access:public
output_pb_separable	./v_prp.c	/^static int32 output_pb_separable(void)$/;"	f	file:	signature:(void)
outv	./v.h	/^ byte outv;                   \/* for gate output value *\/$/;"	m	struct:tev_t	access:public
p_canbe_setby_pndprm	./v.h	/^ unsigned p_canbe_setby_pndprm : 1; \/* T => at least 1 inst set by pnd param *\/$/;"	m	struct:ncomp_t	access:public
p_genvar	./v.h	/^ unsigned p_genvar : 1;       \/* T => local param is really a genvar *\/$/;"	m	struct:ncomp_t	access:public
p_locparam	./v.h	/^ unsigned p_locparam : 1;     \/* T => local parameter (never # or def) *\/$/;"	m	struct:ncomp_t	access:public
p_rhs_has_param	./v.h	/^ unsigned p_rhs_has_param : 1;\/* T => param def rhs contains param *\/$/;"	m	struct:ncomp_t	access:public
p_setby_defprm	./v.h	/^ unsigned p_setby_defprm : 1; \/* T => can't recalc since set by def param*\/$/;"	m	struct:ncomp_t	access:public
p_specparam	./v.h	/^ unsigned p_specparam : 1;    \/* T => specify parameter *\/$/;"	m	struct:ncomp_t	access:public
packtypes	./fstapi.c	/^static const char *packtypes[] = {$/;"	v	file:
par_ti	./igen.h	/^ int32 par_ti;             \/* parent tmp *\/$/;"	m	struct:adradd_dup_t	access:public
parallel	./v.h	/^ void (*parallel)(struct net_t *, t_midat *, struct dmp_buf_t *);$/;"	m	union:dmp_funcu	access:public
parallel_enabled	./fstapi.c	/^unsigned parallel_enabled : 1;$/;"	m	struct:fstWriterContext	file:	access:public
parallel_was_enabled	./fstapi.c	/^unsigned parallel_was_enabled : 1;$/;"	m	struct:fstWriterContext	file:	access:public
param_addto_iter	./v_acc.c	/^static int32 param_addto_iter(vpiHandle ihref, int32 iti2, int32 aotyp)$/;"	f	file:	signature:(vpiHandle ihref, int32 iti2, int32 aotyp)
param_rng_chk_cnvt_to_num	./v_src.c	/^static void param_rng_chk_cnvt_to_num(struct net_t *parm_np, char *ptnam)$/;"	f	file:	signature:(struct net_t *parm_np, char *ptnam)
param_tndx	./v.h	/^ int32 param_tndx;            \/* index into param table *\/$/;"	m	struct:net_t	access:public
paramlst_t	./v.h	/^struct paramlst_t {$/;"	s
paramlst_t::plxndp	./v.h	/^ struct expr_t *plxndp;$/;"	m	struct:paramlst_t	typeref:struct:paramlst_t::expr_t	access:public
paramlst_t::pmlnxt	./v.h	/^ struct paramlst_t *pmlnxt;$/;"	m	struct:paramlst_t	typeref:struct:paramlst_t::paramlst_t	access:public
paramprop_vpiget	./v_vpi2.c	/^static int32 paramprop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
parent	./v.h	/^ struct tqnode_t *parent; \/* node's parent *\/$/;"	m	struct:tqnode_t	typeref:struct:tqnode_t::tqnode_t	access:public
parent_net_indices	./v.h	/^ int32 *parent_net_indices;      \/* save net indices *\/$/;"	m	struct:xprop_t	access:public
parent_xprop	./v.h	/^ struct xprop_t *parent_xprop;   \/* parent of this xprop *\/$/;"	m	struct:xprop_t	typeref:struct:xprop_t::xprop_t	access:public
parm_srep	./v.h	/^ unsigned parm_srep : 6;      \/* for parameter n_dels_u original expr rep *\/ $/;"	m	struct:ncomp_t	access:public
parmnet_pin_t	./v.h	/^struct parmnet_pin_t {$/;"	s
parmnet_pin_t::elpnp	./v.h	/^ union el_u elpnp;            \/* in mod element with delay *\/$/;"	m	struct:parmnet_pin_t	typeref:union:parmnet_pin_t::el_u	access:public
parmnet_pin_t::pnp_free	./v.h	/^ unsigned pnp_free : 1;       \/* T => master ptr to delay need to free *\/$/;"	m	struct:parmnet_pin_t	access:public
parmnet_pin_t::pnplp	./v.h	/^ struct paramlst_t *pnplp;    \/* param list (all dels) - copy or orig *\/$/;"	m	struct:parmnet_pin_t	typeref:struct:parmnet_pin_t::paramlst_t	access:public
parmnet_pin_t::pnpnxt	./v.h	/^ struct parmnet_pin_t *pnpnxt;$/;"	m	struct:parmnet_pin_t	typeref:struct:parmnet_pin_t::parmnet_pin_t	access:public
parmnet_pin_t::pnptyp	./v.h	/^ unsigned pnptyp : 8;         \/* delay expr (or list) type param ref. in *\/$/;"	m	struct:parmnet_pin_t	access:public
parse_addop	./v_src2.c	/^static struct expr_t *parse_addop(void)$/;"	f	file:	signature:(void)
parse_bandop	./v_src2.c	/^static struct expr_t *parse_bandop(void)$/;"	f	file:	signature:(void)
parse_boolandop	./v_src2.c	/^static struct expr_t *parse_boolandop(void)$/;"	f	file:	signature:(void)
parse_boolorop	./v_src2.c	/^static struct expr_t *parse_boolorop(void)$/;"	f	file:	signature:(void)
parse_borop	./v_src2.c	/^static struct expr_t *parse_borop(void)$/;"	f	file:	signature:(void)
parse_bxorop	./v_src2.c	/^static struct expr_t *parse_bxorop(void)$/;"	f	file:	signature:(void)
parse_concat	./v_src2.c	/^static struct expr_t *parse_concat(void)$/;"	f	file:	signature:(void)
parse_eqop	./v_src2.c	/^static struct expr_t *parse_eqop(void)$/;"	f	file:	signature:(void)
parse_evexpr	./v_src2.c	/^static struct expr_t *parse_evexpr(void)$/;"	f	file:	signature:(void)
parse_fcall	./v_src2.c	/^static struct expr_t *parse_fcall(struct expr_t *fcall_ndp,$/;"	f	file:	signature:(struct expr_t *fcall_ndp, struct expridtab_t *xidp, int32 is_glb)
parse_glbref	./v_src2.c	/^static struct expr_t *parse_glbref(struct expr_t *cmp1_ndp,$/;"	f	file:	signature:(struct expr_t *cmp1_ndp, struct expridtab_t *cmp1_xidp)
parse_ltgtop	./v_src2.c	/^static struct expr_t *parse_ltgtop(void)$/;"	f	file:	signature:(void)
parse_mulop	./v_src2.c	/^static struct expr_t *parse_mulop(void)$/;"	f	file:	signature:(void)
parse_power	./v_src2.c	/^static struct expr_t *parse_power(void)$/;"	f	file:	signature:(void)
parse_qcexpr	./v_src2.c	/^static struct expr_t *parse_qcexpr(void)$/;"	f	file:	signature:(void)
parse_scope_ref	./v_dbg2.c	/^static int32 parse_scope_ref(t_midat **ref_idp, struct task_t **ref_tskp,$/;"	f	file:	signature:(t_midat **ref_idp, struct task_t **ref_tskp, int32 *ref_ifi, int32 *ref_lini, int32 *iref)
parse_select	./v_src2.c	/^static struct expr_t *parse_select(struct expr_t *idndp)$/;"	f	file:	signature:(struct expr_t *idndp)
parse_shop	./v_src2.c	/^static struct expr_t *parse_shop(void)$/;"	f	file:	signature:(void)
parse_term	./v_src2.c	/^static struct expr_t *parse_term(void)$/;"	f	file:	signature:(void)
parse_unopterm	./v_src2.c	/^static struct expr_t *parse_unopterm(void)$/;"	f	file:	signature:(void)
partial	./lz4.c	/^typedef enum { full = 0, partial = 1 } earlyEnd_directive;$/;"	e	enum:__anon10	file:
partially_free_mod	./v_src3.c	/^static void partially_free_mod(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
pass_array	./v.h	/^ unsigned pass_array : 1;     \/* T => can pass unindexed array *\/$/;"	m	struct:sysfunc_t	access:public
passed_args	./igen.h	/^ unsigned passed_args: 3;     \/* arg num passed to a asl wrapper *\/$/;"	m	struct:tn_t	access:public
path	./v.h	/^ char *path;$/;"	m	struct:sv_lib_t	access:public
path_array	./fstapi.c	/^Pvoid_t path_array;$/;"	m	struct:fstWriterContext	file:	access:public
path_array_count	./fstapi.c	/^uint32_t path_array_count;$/;"	m	struct:fstWriterContext	file:	access:public
path_has_isel	./v.h	/^ unsigned path_has_isel : 1;  \/* T => down or root path has inst arr select *\/$/;"	m	struct:gref_t	access:public
path_ndx	./v.h	/^ int32 path_ndx;              \/* path index *\/$/;"	m	struct:ctev_t	access:public
pathel_t	./v.h	/^struct pathel_t {$/;"	s
pathel_t::penp	./v.h	/^ struct net_t *penp;          \/* path input\/out wire - NULL if removed *\/$/;"	m	struct:pathel_t	typeref:struct:pathel_t::net_t	access:public
pathel_t::pthi1	./v.h	/^ int32 pthi1, pthi2;          \/* specparam then index number value *\/$/;"	m	struct:pathel_t	access:public
pathel_t::pthi2	./v.h	/^ int32 pthi1, pthi2;          \/* specparam then index number value *\/$/;"	m	struct:pathel_t	access:public
payload	./fstapi.c	/^void *payload;$/;"	m	struct:collchain_t	file:	access:public
pb_ipins_tab	./v.h	/^ struct expr_t ***pb_ipins_tab; \/* if non nil, ptr to pb sep pin expr tab *\/ $/;"	m	struct:inst_t	typeref:struct:inst_t::expr_t	access:public
pb_mipd_delrep	./v.h	/^ unsigned pb_mipd_delrep : 5; \/* bit's delay type *\/ $/;"	m	struct:mipd_t	access:public
pb_mipd_du	./v.h	/^ union del_u pb_mipd_du;      \/* bit's delay - max if src-dst impth *\/$/;"	m	struct:mipd_t	typeref:union:mipd_t::del_u	access:public
pb_pthdst	./v.h	/^ struct pthdst_t **pb_pthdst; \/* per bit path dest. ptr to same dst. src *\/$/;"	m	union:del_u	typeref:struct:del_u::pthdst_t	access:public
pbase	./v.h	/^ unsigned pbase : 3;          \/* base of original rhs *\/$/;"	m	struct:ncomp_t	access:public
pbca_u	./v.h	/^union pbca_u {$/;"	u
pbca_u::canxt	./v.h	/^ struct conta_t *canxt;       \/* canxt only need up to late fixup 2 tab bld *\/ $/;"	m	union:pbca_u	typeref:struct:pbca_u::conta_t	access:public
pbca_u::mast_cap	./v.h	/^ struct conta_t *mast_cap;    \/* for per bit element, ptr to master *\/$/;"	m	union:pbca_u	typeref:struct:pbca_u::conta_t	access:public
pbca_u::pbcaps	./v.h	/^ struct conta_t *pbcaps;      \/* for rhs cat per bit conta tab for sim *\/$/;"	m	union:pbca_u	typeref:struct:pbca_u::conta_t	access:public
pbcaps	./v.h	/^ struct conta_t *pbcaps;      \/* for rhs cat per bit conta tab for sim *\/$/;"	m	union:pbca_u	typeref:struct:pbca_u::conta_t	access:public
pbcau	./v.h	/^ union pbca_u pbcau;          \/* up or down tab rhs cat decomposed PB val *\/ $/;"	m	struct:conta_t	typeref:union:conta_t::pbca_u	access:public
pbexpr_t	./v.h	/^struct pbexpr_t {$/;"	s
pbexpr_t::aval	./v.h	/^ word32 aval;                  \/* aways 1 bit constant value (for rhs only) *\/$/;"	m	struct:pbexpr_t	access:public
pbexpr_t::bi	./v.h	/^ int32 bi;                     \/* for bsel\/psel offset in var object *\/$/;"	m	struct:pbexpr_t	access:public
pbexpr_t::bval	./v.h	/^ word32 bval;$/;"	m	struct:pbexpr_t	access:public
pbexpr_t::ndx_outofrng	./v.h	/^ unsigned ndx_outofrng : 1;$/;"	m	struct:pbexpr_t	access:public
pbexpr_t::no_rhs_expr	./v.h	/^ unsigned no_rhs_expr : 1;     \/* lhs widers bits need 0\/z assign *\/$/;"	m	struct:pbexpr_t	access:public
pbexpr_t::rhs_const	./v.h	/^ unsigned rhs_const : 1;$/;"	m	struct:pbexpr_t	access:public
pbexpr_t::xp	./v.h	/^ struct expr_t *xp;$/;"	m	struct:pbexpr_t	typeref:struct:pbexpr_t::expr_t	access:public
pbi	./v.h	/^ int32 pbi;                   \/* for per bit bit index *\/$/;"	m	struct:net_pin_t	access:public
pbmpps	./v.h	/^ struct mod_pin_t *pbmpps;    \/* for rhs hconn input port, per bit mpp *\/$/;"	m	struct:mod_pin_t	typeref:struct:mod_pin_t::mod_pin_t	access:public
pck_u	./v.h	/^union pck_u {$/;"	u
pck_u::bp	./v.h	/^ byte *bp;$/;"	m	union:pck_u	access:public
pck_u::dp	./v.h	/^ double *dp;$/;"	m	union:pck_u	access:public
pck_u::hwp	./v.h	/^ hword *hwp;$/;"	m	union:pck_u	access:public
pck_u::wp	./v.h	/^ word32 *wp;$/;"	m	union:pck_u	access:public
pdels	./v.h	/^ struct paramlst_t *pdels;    \/* original compile time # delay form *\/$/;"	m	union:del_u	typeref:struct:del_u::paramlst_t	access:public
pdnxt	./v.h	/^ struct pthdst_t *pdnxt;      \/* destination bit can have >1 sources *\/$/;"	m	struct:pthdst_t	typeref:struct:pthdst_t::pthdst_t	access:public
peep_hole_optimize	./v_bbopt.c	/^static void peep_hole_optimize(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
peii	./v.h	/^ int32 peii, peoi; $/;"	m	struct:xpnd_pthel_t	access:public
peins	./v.h	/^ struct pathel_t *peins;      \/* array of path input elements *\/$/;"	m	struct:spcpth_t	typeref:struct:spcpth_t::pathel_t	access:public
penp	./v.h	/^ struct net_t *penp;          \/* path input\/out wire - NULL if removed *\/$/;"	m	struct:pathel_t	typeref:struct:pathel_t::net_t	access:public
peoi	./v.h	/^ int32 peii, peoi; $/;"	m	struct:xpnd_pthel_t	access:public
peouts	./v.h	/^ struct pathel_t *peouts;     \/* array of path output elements *\/$/;"	m	struct:spcpth_t	typeref:struct:spcpth_t::pathel_t	access:public
peri_tgl_on	./v.h	/^ byte *peri_tgl_on;           \/* optconfig record tgl on per inst (byte) *\/$/;"	m	struct:net_toggle_t	access:public
peribits_drvn_const	./v.h	/^ word32 **peribits_drvn_const;\/* per inst ptr to per bit driven const bit *\/$/;"	m	struct:net_toggle_t	access:public
peribits_tgl_rpt_exclude	./v.h	/^ word32 *peribits_tgl_rpt_exclude; \/* per inst bit tgl report excl (bit) tab *\/$/;"	m	struct:net_toggle_t	access:public
pipe_1mod_asm_insns	./v_asmlnk.c	/^static void pipe_1mod_asm_insns(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
pipe_cvcsim	./v_asmlnk.c	/^static void pipe_cvcsim(void)$/;"	f	file:	signature:(void)
pli1_option	./v.h	/^ unsigned pli1_option : 1;    \/* T => +loadpli1= option *\/$/;"	m	struct:loadpli_t	access:public
pli_access	./v.h	/^ int32 pli_access;            \/* pli access level *\/$/;"	m	struct:net_t	access:public
pli_prevval	./v.h	/^ union pck_u pli_prevval;     \/* storage for wire or range for PLI only *\/$/;"	m	struct:dcevnt_t	typeref:union:dcevnt_t::pck_u	access:public
plxndp	./v.h	/^ struct expr_t *plxndp;$/;"	m	struct:paramlst_t	typeref:struct:paramlst_t::expr_t	access:public
pmlnxt	./v.h	/^ struct paramlst_t *pmlnxt;$/;"	m	struct:paramlst_t	typeref:struct:paramlst_t::paramlst_t	access:public
pnam	./v.h	/^ char *pnam;                  \/* name as string - no sym table when read *\/$/;"	m	struct:namparam_t	access:public
pnam	./v.h	/^ char *pnam;                  \/* probably no symbol table when read *\/$/;"	m	struct:cell_pin_t	access:public
pnames_vpi	./v_vpi3.c	/^static struct pnamvpi_t pnames_vpi[] = {$/;"	v	typeref:struct:pnamvpi_t	file:
pnamvpi_t	./v.h	/^struct pnamvpi_t { $/;"	s
pnamvpi_t::vpipropnam	./v.h	/^ char *vpipropnam;$/;"	m	struct:pnamvpi_t	access:public
pnamvpi_t::vpiproptyp	./v.h	/^ int32 vpiproptyp;            \/* redundant value same as prop constant ind *\/$/;"	m	struct:pnamvpi_t	access:public
pndparams_explicit	./v_fx.c	/^static int32 pndparams_explicit(struct namparam_t *npmphdr, int32 *all_named)$/;"	f	file:	signature:(struct namparam_t *npmphdr, int32 *all_named)
pnp_free	./v.h	/^ unsigned pnp_free : 1;       \/* T => master ptr to delay need to free *\/$/;"	m	struct:parmnet_pin_t	access:public
pnplp	./v.h	/^ struct paramlst_t *pnplp;    \/* param list (all dels) - copy or orig *\/$/;"	m	struct:parmnet_pin_t	typeref:struct:parmnet_pin_t::paramlst_t	access:public
pnpnxt	./v.h	/^ struct parmnet_pin_t *pnpnxt;$/;"	m	struct:parmnet_pin_t	typeref:struct:parmnet_pin_t::parmnet_pin_t	access:public
pnptyp	./v.h	/^ unsigned pnptyp : 8;         \/* delay expr (or list) type param ref. in *\/$/;"	m	struct:parmnet_pin_t	access:public
pnum	./v.h	/^ int32 pnum;                  \/* for pvc dce tf routine port number *\/     $/;"	m	union:dce_u	access:public
poisson	./v_ex2.c	/^static int32 poisson(int32 *seed, int32 mean)$/;"	f	file:	signature:(int32 *seed, int32 mean)
popen_child_process_func	./v_asmlnk.c	/^static int32 popen_child_process_func(void *empty) $/;"	f	file:	signature:(void *empty)
port_expr_has_wrong_dir_drvr	./v_fx2.c	/^static int32 port_expr_has_wrong_dir_drvr(struct expr_t *xp, int32 pdir, int32 ri1,$/;"	f	file:	signature:(struct expr_t *xp, int32 pdir, int32 ri1, int32 ri2, int32 fnind, int32 flcnt)
port_qual_nam	./v_sdf.c	/^static int32 port_qual_nam(char *nam, char *emsg)$/;"	f	file:	signature:(char *nam, char *emsg)
portbit_accnext	./v_acc.c	/^static handle portbit_accnext(handle port, handle bit)$/;"	f	file:	signature:(handle port, handle bit)
portprop_vpiget	./v_vpi2.c	/^static int32 portprop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
portstrprop_vpiget	./v_vpi2.c	/^static char *portstrprop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
post_inc_dec	./v.h	/^ unsigned post_inc_dec : 1;   \/* T => is id++ not ++id *\/$/;"	m	struct:expr_t	access:public
pprm_explicit	./v.h	/^ unsigned pprm_explicit : 1;  \/* has explicit form pound params *\/$/;"	m	struct:inst_t	access:public
pre_fixup1_genblk	./v_fx.c	/^static void pre_fixup1_genblk(struct genblk_t *gblkp)$/;"	f	file:	signature:(struct genblk_t *gblkp)
pre_fixup1_genitem	./v_fx.c	/^static void pre_fixup1_genitem(struct genitem_t *gip)$/;"	f	file:	signature:(struct genitem_t *gip)
pre_fixup_dsgn_gens	./v_fx.c	/^static void pre_fixup_dsgn_gens(void)$/;"	f	file:	signature:(void)
predom_frontiers	./igen.h	/^ struct bblklst_t *predom_frontiers;\/* predom frontier's list *\/$/;"	m	struct:bblk_t	typeref:struct:bblk_t::bblklst_t	access:public
predom_intersect	./v_bbopt.c	/^static int32 predom_intersect(int32 *doms, int32 idom1, int32 idom2)$/;"	f	file:	signature:(int32 *doms, int32 idom1, int32 idom2)
predoms	./igen.h	/^ int32 *predoms;              \/* predominator tree stored as array *\/$/;"	m	struct:flowg_t	access:public
prefix64k_directive	./lz4.c	/^typedef enum { noPrefix = 0, withPrefix = 1 } prefix64k_directive;$/;"	t	typeref:enum:__anon8	file:
prefix_free_dfplist	./v_genfx.c	/^static void prefix_free_dfplist(struct dfparam_t *dfpp)$/;"	f	file:	signature:(struct dfparam_t *dfpp)
prefixup_copy_1mod_dfparms	./v_genfx.c	/^static struct dfparam_t *prefixup_copy_1mod_dfparms(struct dfparam_t *fr_dfpp,$/;"	f	file:	signature:(struct dfparam_t *fr_dfpp, int32 empty_flds)
prefixup_cp1_dfp	./v_genfx.c	/^static struct dfparam_t *prefixup_cp1_dfp(struct dfparam_t *fr_dfpp,$/;"	f	file:	signature:(struct dfparam_t *fr_dfpp, int32 empty_flds)
prefixup_restor_defparams	./v_genfx.c	/^static void prefixup_restor_defparams(void)$/;"	f	file:	signature:(void)
prefixup_sav_not_yet_sav_defparams	./v_genfx.c	/^static void prefixup_sav_not_yet_sav_defparams(void)$/;"	f	file:	signature:(void)
prep1_udp	./v_prp.c	/^static void prep1_udp(struct udp_t *udpp)$/;"	f	file:	signature:(struct udp_t *udpp)
prep2_delay	./v_del.c	/^static void prep2_delay(struct gate_t *gp, struct paramlst_t *dhdr,$/;"	f	file:	signature:(struct gate_t *gp, struct paramlst_t *dhdr, int32 ispath, int32 is_trireg)
prep_1delform	./v_del.c	/^static void prep_1delform(struct gate_t *gp, struct expr_t *xp1)$/;"	f	file:	signature:(struct gate_t *gp, struct expr_t *xp1)
prep_bld_monit_dces	./v_ex2.c	/^static void prep_bld_monit_dces(struct expr_t *xp, int32 argisvfmt,$/;"	f	file:	signature:(struct expr_t *xp, int32 argisvfmt, struct itree_t *ref_itp)
prep_case	./v_prp2.c	/^static void prep_case(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
prep_cfg_vflist	./v_src3.c	/^static void prep_cfg_vflist(void)$/;"	f	file:	signature:(void)
prep_comb_udptab	./v_prp.c	/^static void prep_comb_udptab(struct udp_t *udpp)$/;"	f	file:	signature:(struct udp_t *udpp)
prep_confunc_stmts	./v_prp.c	/^static void prep_confunc_stmts(struct task_t *confp)$/;"	f	file:	signature:(struct task_t *confp)
prep_conta_dels	./v_prp.c	/^static void prep_conta_dels(void)$/;"	f	file:	signature:(void)
prep_dctrl	./v_prp2.c	/^static void prep_dctrl(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
prep_edge_udptab	./v_prp.c	/^static void prep_edge_udptab(struct udp_t *udpp)$/;"	f	file:	signature:(struct udp_t *udpp)
prep_event_dctrl	./v_prp2.c	/^static void prep_event_dctrl(struct delctrl_t *dctp)$/;"	f	file:	signature:(struct delctrl_t *dctp)
prep_func_dsable	./v_prp2.c	/^static void prep_func_dsable(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
prep_get_qc_wirrng	./v_prp2.c	/^static void prep_get_qc_wirrng(struct expr_t *lhsx, struct net_t **nnp,$/;"	f	file:	signature:(struct expr_t *lhsx, struct net_t **nnp, int32 *biti, int32 *bitj, struct itree_t **itpp)
prep_idp_area	./v_prp.c	/^static void prep_idp_area(void)$/;"	f	file:	signature:(void)
prep_noncat_qc_assign	./v_prp2.c	/^static struct dceauxlst_t *prep_noncat_qc_assign(struct st_t *qcstp,$/;"	f	file:	signature:(struct st_t *qcstp, struct expr_t *lhsx)
prep_noncat_qc_regforce	./v_prp2.c	/^static struct dceauxlst_t *prep_noncat_qc_regforce(struct st_t *qcastp,$/;"	f	file:	signature:(struct st_t *qcastp, struct expr_t *lhsx)
prep_noncat_qc_wireforce	./v_prp2.c	/^static void prep_noncat_qc_wireforce(struct st_t *qcfstp, struct expr_t *lhsx,$/;"	f	file:	signature:(struct st_t *qcfstp, struct expr_t *lhsx, struct dceauxlstlst_t *dcllp)
prep_noncat_qc_wirerelease	./v_prp2.c	/^static void prep_noncat_qc_wirerelease(struct expr_t *lhsx)$/;"	f	file:	signature:(struct expr_t *lhsx)
prep_obj_t	./v.h	/^struct prep_obj_t {$/;"	s
prep_obj_t::blen	./v.h	/^ int32 blen;                \/* bit blen *\/$/;"	m	struct:prep_obj_t	access:public
prep_obj_t::id	./v.h	/^ int32 id;                  \/* value added to the isnum tree *\/$/;"	m	struct:prep_obj_t	access:public
prep_obj_t::isnum_idp_ofs	./v.h	/^ size_t isnum_idp_ofs;      \/* idp offset if expr is an IS num in idp area *\/$/;"	m	struct:prep_obj_t	access:public
prep_obj_t::obj	./v.h	/^ void *obj;                 \/* system function call *\/$/;"	m	struct:prep_obj_t	access:public
prep_obj_t::xvi	./v.h	/^ int32 xvi;                 \/* index into contab *\/$/;"	m	struct:prep_obj_t	access:public
prep_path_is_dels	./v_del.c	/^static void prep_path_is_dels(struct gate_t *gp, struct expr_t **xa,$/;"	f	file:	signature:(struct gate_t *gp, struct expr_t **xa, int32 nparams)
prep_prim_is_dels	./v_del.c	/^static void prep_prim_is_dels(struct gate_t *gp, struct expr_t **xa,$/;"	f	file:	signature:(struct gate_t *gp, struct expr_t **xa, int32 nparams, int32 is_trireg)
prep_pths	./v_prp2.c	/^static void prep_pths(void)$/;"	f	file:	signature:(void)
prep_push_real_arg	./v_bbgen3.c	/^static int32 prep_push_real_arg(int32 op_ti)$/;"	f	file:	signature:(int32 op_ti)
prep_push_tn_addr_arg	./v_bbgen3.c	/^static int32 prep_push_tn_addr_arg(int32 op_ti)$/;"	f	file:	signature:(int32 op_ti)
prep_push_word_arg	./v_bbgen3.c	/^static int32 prep_push_word_arg(int32 op_ti)$/;"	f	file:	signature:(int32 op_ti)
prep_qc_assign	./v_prp2.c	/^static void prep_qc_assign(struct st_t *stp, int32 is_force)$/;"	f	file:	signature:(struct st_t *stp, int32 is_force)
prep_qc_deassign	./v_prp2.c	/^static void prep_qc_deassign(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
prep_qc_wireforce	./v_prp2.c	/^static void prep_qc_wireforce(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
prep_qc_wirerelease	./v_prp2.c	/^static void prep_qc_wirerelease(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
prep_sdfdev_verbmsg	./v_sdf.c	/^static void prep_sdfdev_verbmsg(struct gate_t *gp, struct gate_t *ogp,$/;"	f	file:	signature:(struct gate_t *gp, struct gate_t *ogp, struct itree_t *itp, struct mod_t *mdp)
prep_sdfiopath_verbmsg	./v_sdf.c	/^static void prep_sdfiopath_verbmsg(struct spcpth_t *pthp, struct gate_t *ogp, $/;"	f	file:	signature:(struct spcpth_t *pthp, struct gate_t *ogp, struct itree_t *itp, struct mod_t *mdp)
prep_sdftchk_verbmsg	./v_sdf.c	/^static void prep_sdftchk_verbmsg(struct tchk_t *tcp, char *tcnam,$/;"	f	file:	signature:(struct tchk_t *tcp, char *tcnam, struct gate_t *ogp, struct itree_t *itp, struct mod_t *mdp, char *limnam)
prep_stskcalls	./v_prp2.c	/^static void prep_stskcalls(struct st_t *stp, struct mod_t *mdp)$/;"	f	file:	signature:(struct st_t *stp, struct mod_t *mdp)
prep_tchks	./v_prp2.c	/^static void prep_tchks(void)$/;"	f	file:	signature:(void)
prep_tf_rwexprs	./v_prp2.c	/^static void prep_tf_rwexprs(void)$/;"	f	file:	signature:(void)
prep_udps	./v_prp.c	/^static void prep_udps(void)$/;"	f	file:	signature:(void)
prep_vflist	./cvc.c	/^static void prep_vflist(void)$/;"	f	file:	signature:(void)
prep_xprop_lstofsts	./v_xprop.c	/^static void prep_xprop_lstofsts(struct st_t *hdstp, int32 slevel)$/;"	f	file:	signature:(struct st_t *hdstp, int32 slevel)
prep_xprop_mark_lstofsts	./v_xprop.c	/^static void prep_xprop_mark_lstofsts(struct st_t *hdstp, int32 slevel,$/;"	f	file:	signature:(struct st_t *hdstp, int32 slevel, int32 *not_eligible)
prep_xprop_mark_stmt	./v_xprop.c	/^static struct st_t *prep_xprop_mark_stmt(struct st_t *stp, int32 slevel,$/;"	f	file:	signature:(struct st_t *stp, int32 slevel, int32 *not_eligible)
prep_xprop_stmt	./v_xprop.c	/^static struct st_t *prep_xprop_stmt(struct st_t *stp, int32 slevel)$/;"	f	file:	signature:(struct st_t *stp, int32 slevel)
prep_xprop_turnoff_lstofsts	./v_xprop.c	/^static void prep_xprop_turnoff_lstofsts(struct st_t *hdstp)$/;"	f	file:	signature:(struct st_t *hdstp)
prep_xprop_turnoff_stmt	./v_xprop.c	/^static struct st_t *prep_xprop_turnoff_stmt(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
prev	./fstapi.c	/^struct fstCurrHier *prev;$/;"	m	struct:fstCurrHier	typeref:struct:fstCurrHier::fstCurrHier	file:	access:public
prevval_ofs	./v.h	/^ size_t prevval_ofs;$/;"	m	struct:dcevnt_t	access:public
prim_addto_iter	./v_acc.c	/^static int32 prim_addto_iter(vpiHandle ihref, int32 iti2, int32 gclass,$/;"	f	file:	signature:(vpiHandle ihref, int32 iti2, int32 gclass, int32 gtyp)
prim_rdset_device_del	./v_sdf.c	/^static int32 prim_rdset_device_del(FILE *f, struct itree_t *itp,$/;"	f	file:	signature:(FILE *f, struct itree_t *itp, struct sy_t *tsyp, struct gate_t *ctgp)
prims	./cvc.c	/^static struct primtab_t prims[] = {$/;"	v	typeref:struct:primtab_t	file:
primtab_t	./v.h	/^struct primtab_t {$/;"	s
primtab_t::gateid	./v.h	/^ unsigned gateid : 8;$/;"	m	struct:primtab_t	access:public
primtab_t::gatnam	./v.h	/^ char *gatnam;$/;"	m	struct:primtab_t	access:public
primtab_t::gclass	./v.h	/^ unsigned gclass : 8;         \/* class of gate *\/$/;"	m	struct:primtab_t	access:public
primtab_t::gnsym	./v.h	/^ struct sy_t *gnsym;$/;"	m	struct:primtab_t	typeref:struct:primtab_t::sy_t	access:public
print_1sig_drvn_const	./v_cvr.c	/^static void print_1sig_drvn_const(FILE *fp, struct net_t *np,$/;"	f	file:	signature:(FILE *fp, struct net_t *np, struct itree_t *itp)
print_hits_misses	./v_cvr.c	/^static void print_hits_misses(FILE *fp, char *indentp, int32 hits01, $/;"	f	file:	signature:(FILE *fp, char *indentp, int32 hits01, int32 hits10, int32 nbits)
print_iddecl_ref	./v_dbg.c	/^static void print_iddecl_ref(struct sy_t *syp, struct sy_t *scope_syp)$/;"	f	file:	signature:(struct sy_t *syp, struct sy_t *scope_syp)
print_msg	./v_dbg.c	/^static char *print_msg[] = { $/;"	v	file:
print_toggle_net_coverage	./v_cvr.c	/^static int32 print_toggle_net_coverage(FILE *fp, struct mod_t *mdp,$/;"	f	file:	signature:(FILE *fp, struct mod_t *mdp, struct net_t *np, char *icp, int32 max_net_slen, word32 *seen01p, word32 *seen10p, word32 *zero_bp)
priority	./igen.h	/^ int32 priority;$/;"	m	struct:reg_prty_t	access:public
prm_nva	./v.h	/^ union pck_u prm_nva;        \/* still need during elab per inst params mem *\/$/;"	m	struct:net_t	typeref:union:net_t::pck_u	access:public
prmfnam_ind	./v.h	/^ word32 prmfnam_ind;          \/* file pound parameter appears in *\/$/;"	m	struct:namparam_t	access:public
prmlin_cnt	./v.h	/^ int32 prmlin_cnt;            \/* line pound parameter defined on *\/$/;"	m	struct:namparam_t	access:public
prmtab_cmp	./v_fx.c	/^static int32 prmtab_cmp(const void *np1, const void *np2)$/;"	f	file:	signature:(const void *np1, const void *np2)
prngdecl	./v.h	/^ unsigned prngdecl : 1;       \/* T => range declared in source *\/$/;"	m	struct:ncomp_t	access:public
proca_t	./v.h	/^struct proca_t {$/;"	s
proca_t::lhsx	./v.h	/^ struct expr_t *lhsx;         \/* need to make sure this is an lvalue *\/$/;"	m	struct:proca_t	typeref:struct:proca_t::expr_t	access:public
proca_t::rhsx	./v.h	/^ struct expr_t *rhsx;$/;"	m	struct:proca_t	typeref:struct:proca_t::expr_t	access:public
process_all_netchgs	./v_sim.c	/^static void process_all_netchgs(void)$/;"	f	file:	signature:(void)
process_bid_vertices	./v_trch.c	/^static void process_bid_vertices(struct chanrec_t *chanp, struct vtx_t *vtxp,$/;"	f	file:	signature:(struct chanrec_t *chanp, struct vtx_t *vtxp, struct itree_t *vt1_itp)
process_enterptr	./v.h	/^ void (*process_enterptr)(void);\/* process nchg enter address *\/ $/;"	m	struct:nchglst_t	access:public
process_lib	./v_fx.c	/^static void process_lib(void)$/;"	f	file:	signature:(void)
process_macdef	./v_ms.c	/^static void process_macdef(void)$/;"	f	file:	signature:(void)
process_macundef	./v_ms.c	/^static void process_macundef(void)$/;"	f	file:	signature:(void)
process_mask	./fstapi.c	/^unsigned char *process_mask;            \/* maxhandle-based, bitwise sized *\/$/;"	m	struct:fstReaderContext	file:	access:public
process_nbpa_ev_pnd0	./v_sim.c	/^static void process_nbpa_ev_pnd0(void)$/;"	f	file:	signature:(void)
process_nbpa_varndx_concat_ev_2state	./v_sim.c	/^static void process_nbpa_varndx_concat_ev_2state(struct tev_t *tevp, $/;"	f	file:	signature:(struct tev_t *tevp, struct tenbpa_t *tenbp, struct net_t *np)
process_nchg_fgp	./v.h	/^ struct flowg_t *process_nchg_fgp;    \/* the process nchg flow graph *\/$/;"	m	struct:net_chg_t	typeref:struct:net_chg_t::flowg_t	access:public
process_notify	./v_sim.c	/^static void process_notify(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
process_pnd0s	./v_sim.c	/^static void process_pnd0s(void)$/;"	f	file:	signature:(void)
process_upwards_grp	./v_prp2.c	/^static void process_upwards_grp(struct gref_t *grp)$/;"	f	file:	signature:(struct gref_t *grp)
processing_pnd0s	./igen.h	/^ unsigned processing_pnd0s : 1;  \/* T => known to be processing pnd0s *\/$/;"	m	struct:nb_stmt_lst_t	access:public
prologue_bblkno	./igen.h	/^ int32 prologue_bblkno;       \/* for prologue pseudo insn, entry bblk num *\/$/;"	m	union:i_extrainfo_u	access:public
prop_gatechg	./v_sim.c	/^static void prop_gatechg(struct gate_t *gp, int32 outchg, int32 is_acc)$/;"	f	file:	signature:(struct gate_t *gp, int32 outchg, int32 is_acc)
prop_stsdown	./v_fx2.c	/^static void prop_stsdown(void)$/;"	f	file:	signature:(void)
prop_stsup	./v_fx2.c	/^static void prop_stsup(void)$/;"	f	file:	signature:(void)
prov_mstndx	./v.h	/^ struct st_t **prov_mstndx;   \/* provisional index (ptr to stmt) *\/ $/;"	m	struct:mod_t	typeref:struct:mod_t::st_t	access:public
prov_mstnum	./v.h	/^ int32 prov_mstnum;           \/* provisional mod stmt ndx size for storage *\/$/;"	m	struct:mod_t	access:public
prt1_iahist_cmd	./v_dbg.c	/^static int32 prt1_iahist_cmd(int32 iahi)$/;"	f	file:	signature:(int32 iahi)
prt2_desmod_tab	./cvc.c	/^static void prt2_desmod_tab(void)$/;"	f	file:	signature:(void)
prt2_permod_tasktabs	./cvc.c	/^static void prt2_permod_tasktabs(void)$/;"	f	file:	signature:(void)
prt2_permod_wiretab	./cvc.c	/^static void prt2_permod_wiretab(void)$/;"	f	file:	signature:(void)
prt_1bblk_cvc_stats	./v_asmlnk.c	/^static void prt_1bblk_cvc_stats(struct flowg_t *fgp, struct bblk_t *bbp)$/;"	f	file:	signature:(struct flowg_t *fgp, struct bblk_t *bbp)
prt_1m_nestscopes	./v_ex.c	/^static void prt_1m_nestscopes(struct itree_t *itp)$/;"	f	file:	signature:(struct itree_t *itp)
prt_1m_scopelist	./v_ex.c	/^static void prt_1m_scopelist(void)$/;"	f	file:	signature:(void)
prt_1tsk_nestscopes	./v_ex.c	/^static void prt_1tsk_nestscopes(struct symtab_t *up_sytp)$/;"	f	file:	signature:(struct symtab_t *up_sytp)
prt_1tsk_scopelist	./v_ex.c	/^static void prt_1tsk_scopelist(struct task_t *tskp, int32 nd_msg)$/;"	f	file:	signature:(struct task_t *tskp, int32 nd_msg)
prt_all_disp_exprs	./v_dbg.c	/^static void prt_all_disp_exprs(void)$/;"	f	file:	signature:(void)
prt_alldesmod_tabs	./cvc.c	/^static void prt_alldesmod_tabs(void)$/;"	f	file:	signature:(void)
prt_assignedto_val	./v_ex4.c	/^static void prt_assignedto_val(struct expr_t *xp, char *nppnam)$/;"	f	file:	signature:(struct expr_t *xp, char *nppnam)
prt_brkpts	./v_dbg2.c	/^static void prt_brkpts(void)$/;"	f	file:	signature:(void)
prt_dbgimpthtrmsg	./v_ex3.c	/^static void prt_dbgimpthtrmsg(struct net_t *np, int32 bi, word64 chgtim,$/;"	f	file:	signature:(struct net_t *np, int32 bi, word64 chgtim, word64 newdel)
prt_dbgpthtrmsg	./v_ex3.c	/^static void prt_dbgpthtrmsg(struct spcpth_t *newpthp, word64 chgtim)$/;"	f	file:	signature:(struct spcpth_t *newpthp, word64 chgtim)
prt_deswide_stats	./cvc.c	/^static void prt_deswide_stats(void)$/;"	f	file:	signature:(void)
prt_edge	./v_trch.c	/^static void prt_edge(struct vtx_t *vtxp, struct edge_t *ep, int32 ei)$/;"	f	file:	signature:(struct vtx_t *vtxp, struct edge_t *ep, int32 ei)
prt_elapsed_time	./cvc.c	/^static void prt_elapsed_time(void)$/;"	f	file:	signature:(void)
prt_modhdr	./cvc.c	/^static void prt_modhdr(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
prt_sdftok	./v_sdf.c	/^static char *prt_sdftok(void)$/;"	f	file:	signature:(void)
prt_summary	./cvc.c	/^static int32 prt_summary(void)$/;"	f	file:	signature:(void)
psel_set_allexprs	./v_fx2.c	/^static void psel_set_allexprs(struct mod_t *pmdp)$/;"	f	file:	signature:(struct mod_t *pmdp)
psigndecl	./v.h	/^ unsigned psigndecl : 1;      \/* T => signed keyword declared in source *\/$/;"	m	struct:ncomp_t	access:public
pstchgp	./v.h	/^ struct tchg_t *pstchgp;      \/* path src time change and indir. to path *\/ $/;"	m	struct:pthdst_t	typeref:struct:pthdst_t::tchg_t	access:public
pstring	./v.h	/^ unsigned pstring : 1;        \/* T => if string appeared on original rhs *\/$/;"	m	struct:ncomp_t	access:public
pth_0del_rem	./v.h	/^ unsigned pth_0del_rem : 1;   \/* T => removed from 0 delay *\/ $/;"	m	struct:spcpth_t	access:public
pth_as_xprs	./v.h	/^ unsigned pth_as_xprs : 1;    \/* T => fixup not done path els still exprs *\/$/;"	m	struct:spcpth_t	access:public
pth_delrep	./v.h	/^ unsigned pth_delrep : 5;     \/* delay representation for path *\/$/;"	m	struct:spcpth_t	access:public
pth_du	./v.h	/^ union del_u pth_du;          \/* delay value *\/$/;"	m	struct:spcpth_t	typeref:union:spcpth_t::del_u	access:public
pth_gone	./v.h	/^ unsigned pth_gone : 1;       \/* must ignore because of serious error *\/$/;"	m	struct:spcpth_t	access:public
pth_ifnone	./v.h	/^ unsigned pth_ifnone : 1;     \/* T => condition is ifnone and other sdpds *\/$/;"	m	struct:spcpth_t	access:public
pth_mipd	./v.h	/^ unsigned pth_mipd : 1;       \/* T => do not treat as src-dest inter mod pth *\/$/;"	m	struct:mipd_t	access:public
pth_overlap	./v_fx3.c	/^static int32 pth_overlap( struct pathel_t *pep1, struct pathel_t *pep2)$/;"	f	file:	signature:( struct pathel_t *pep1, struct pathel_t *pep2)
pth_tostr	./v_fx3.c	/^static char *pth_tostr(char *s, struct spcpth_t *pthp,$/;"	f	file:	signature:(char *s, struct spcpth_t *pthp, struct pathel_t *pep1, struct pathel_t *pep2)
pthcondx	./v.h	/^ struct expr_t *pthcondx;     \/* for if (cond) sdpd, the cond expr. *\/$/;"	m	struct:spcpth_t	typeref:struct:spcpth_t::expr_t	access:public
pthdst_t	./v.h	/^struct pthdst_t {$/;"	s
pthdst_t::pdnxt	./v.h	/^ struct pthdst_t *pdnxt;      \/* destination bit can have >1 sources *\/$/;"	m	struct:pthdst_t	typeref:struct:pthdst_t::pthdst_t	access:public
pthdst_t::pstchgp	./v.h	/^ struct tchg_t *pstchgp;      \/* path src time change and indir. to path *\/ $/;"	m	struct:pthdst_t	typeref:struct:pthdst_t::tchg_t	access:public
pthedge	./v.h	/^ unsigned pthedge : 8;        \/* if edge, edge sensitive path *\/$/;"	m	struct:spcpth_t	access:public
pthel_tostr	./v_fx3.c	/^static char *pthel_tostr(char *s, struct pathel_t *pep)$/;"	f	file:	signature:(char *s, struct pathel_t *pep)
pthexpop	./v.h	/^ unsigned pthexpop: 8;        \/* T => op legal in SDPD condional expr. *\/$/;"	m	struct:opinfo_t	access:public
pthi1	./v.h	/^ int32 pthi1, pthi2;          \/* specparam then index number value *\/$/;"	m	struct:pathel_t	access:public
pthi2	./v.h	/^ int32 pthi1, pthi2;          \/* specparam then index number value *\/$/;"	m	struct:pathel_t	access:public
pthlnxt	./v_sdf.c	/^ struct pthlst_t *pthlnxt;$/;"	m	struct:pthlst_t	typeref:struct:pthlst_t::pthlst_t	file:	access:public
pthlst_t	./v_sdf.c	/^struct pthlst_t {$/;"	s	file:
pthlst_t::lpthp	./v_sdf.c	/^ struct spcpth_t *lpthp;$/;"	m	struct:pthlst_t	typeref:struct:pthlst_t::spcpth_t	file:	access:public
pthlst_t::pthlnxt	./v_sdf.c	/^ struct pthlst_t *pthlnxt;$/;"	m	struct:pthlst_t	typeref:struct:pthlst_t::pthlst_t	file:	access:public
pthp	./v.h	/^ struct spcpth_t *pthp;$/;"	m	struct:xpnd_pthel_t	typeref:struct:xpnd_pthel_t::spcpth_t	access:public
pthpolar	./v.h	/^ unsigned pthpolar : 2;       \/* simple path polarity (no sim meaning) *\/$/;"	m	struct:spcpth_t	access:public
pthprop_vpiget	./v_vpi2.c	/^static int32 pthprop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
pthsym	./v.h	/^ struct sy_t *pthsym;         \/* built symbol for identifying path *\/$/;"	m	struct:spcpth_t	typeref:struct:spcpth_t::sy_t	access:public
pthtermprop_vpiget	./v_vpi2.c	/^static int32 pthtermprop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
pthtyp	./v.h	/^ unsigned pthtyp : 2;         \/* type of path (full or *>) *\/ $/;"	m	struct:spcpth_t	access:public
ptypdecl	./v.h	/^ unsigned ptypdecl : 1;       \/* T => type declared in source *\/$/;"	m	struct:ncomp_t	access:public
pullval	./v.h	/^ unsigned pullval : 1;        \/* for pull driver 0 or 1 *\/$/;"	m	struct:net_pin_t	access:public
push_bsel	./v_ex2.c	/^static void push_bsel(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
push_dpi_c_side_arr_cell	./v_dpi.c	/^static struct xstk_t *push_dpi_c_side_arr_cell(int32 argi, int32 arri,$/;"	f	file:	signature:(int32 argi, int32 arri, struct dpiarg_t *dap, union adpi_u *a_u_tab, struct net_t *ver_np)
push_index_width_psel	./v_ex2.c	/^static void push_index_width_psel(struct expr_t *ndp, int32 optyp)$/;"	f	file:	signature:(struct expr_t *ndp, int32 optyp)
push_psel	./v_ex2.c	/^static void push_psel(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
push_string_array	./v_ex2.c	/^static void push_string_array(struct expr_t *ndp, int32 biti)$/;"	f	file:	signature:(struct expr_t *ndp, int32 biti)
push_vpi_bitdrv_val	./v_vpi3.c	/^static struct xstk_t *push_vpi_bitdrv_val(struct h_t *hp, struct net_t **pnp)$/;"	f	file:	signature:(struct h_t *hp, struct net_t **pnp)
push_vpi_drv_val	./v_vpi3.c	/^static struct xstk_t *push_vpi_drv_val(struct h_t *hp, struct net_t **pnp)$/;"	f	file:	signature:(struct h_t *hp, struct net_t **pnp)
push_vpi_valuep	./v_vpi3.c	/^static struct xstk_t *push_vpi_valuep(p_vpi_value value_p, int32 vwid,$/;"	f	file:	signature:(p_vpi_value value_p, int32 vwid, word32 vntyp, int32 vstren)
push_xstk_	./cvmacros.h	256;"	d
putv_drv_tedlst	./v.h	/^ struct dltevlst_t **putv_drv_tedlst;\/* per inst per bit pending ev. lists *\/$/;"	m	struct:vpi_drv_t	typeref:struct:vpi_drv_t::dltevlst_t	access:public
putv_drvwp_allocinit	./v_vpi3.c	/^static void putv_drvwp_allocinit(struct mod_t *mdp, struct net_t *np,$/;"	f	file:	signature:(struct mod_t *mdp, struct net_t *np, struct vpi_drv_t *vpidrvp, int32 nd_alloc)
putv_flag_to_str	./v_vpi3.c	/^static char *putv_flag_to_str(char *s, word32 dtyp)$/;"	f	file:	signature:(char *s, word32 dtyp)
putv_in_future	./v_vpi3.c	/^static int32 putv_in_future(word32 dtyp, p_vpi_time time_p)$/;"	f	file:	signature:(word32 dtyp, p_vpi_time time_p)
putv_wp	./v.h	/^ word32 *putv_wp;$/;"	m	struct:teputv_t	access:public
pv_stralloc2	./v_ms.c	/^static char *pv_stralloc2(char *s)$/;"	f	file:	signature:(char *s)
pvcdcep	./v.h	/^ struct dceauxlst_t **pvcdcep;\/* per inst dce list but all parameters *\/$/;"	m	struct:tfrec_t	typeref:struct:tfrec_t::dceauxlst_t	access:public
pviter_t	./v.h	/^struct pviter_t {$/;"	s
pviter_t::numhs	./v.h	/^ int32 numhs;                 \/* total number of handles for iterator *\/$/;"	m	struct:pviter_t	access:public
pviter_t::nxthi	./v.h	/^ int32 nxthi;                 \/* next handle to return *\/$/;"	m	struct:pviter_t	access:public
pviter_t::scanhptab	./v.h	/^ struct h_t **scanhptab;      \/* tab of ptr to handles built by vpi iterator *\/$/;"	m	struct:pviter_t	typeref:struct:pviter_t::h_t	access:public
pxndp	./v.h	/^ struct expr_t *pxndp;        \/* parameter value as expr. *\/$/;"	m	struct:namparam_t	typeref:struct:namparam_t::expr_t	access:public
q_fifo	./v.h	/^ unsigned q_fifo : 1;       \/* T => fifo, F => lifo *\/$/;"	m	struct:q_hdr_t	access:public
q_hdr	./v.h	/^ int32 q_hdr;               \/* index of current head *\/$/;"	m	struct:q_hdr_t	access:public
q_hdr_t	./v.h	/^struct q_hdr_t {$/;"	s
q_hdr_t::q_fifo	./v.h	/^ unsigned q_fifo : 1;       \/* T => fifo, F => lifo *\/$/;"	m	struct:q_hdr_t	access:public
q_hdr_t::q_hdr	./v.h	/^ int32 q_hdr;               \/* index of current head *\/$/;"	m	struct:q_hdr_t	access:public
q_hdr_t::q_id	./v.h	/^ int32 q_id;                \/* user passed ID *\/$/;"	m	struct:q_hdr_t	access:public
q_hdr_t::q_maxlen	./v.h	/^ int32 q_maxlen;            \/* maximum length of queue *\/$/;"	m	struct:q_hdr_t	access:public
q_hdr_t::q_maxsize	./v.h	/^ int32 q_maxsize;           \/* for entire run, max size of q *\/$/;"	m	struct:q_hdr_t	access:public
q_hdr_t::q_minwait	./v.h	/^ word64 q_minwait;          \/* shortest wait (min) of all els. ever in Q *\/$/;"	m	struct:q_hdr_t	access:public
q_hdr_t::q_size	./v.h	/^ int32 q_size;              \/* need to store size for q_exam *\/$/;"	m	struct:q_hdr_t	access:public
q_hdr_t::q_tail	./v.h	/^ int32 q_tail;              \/* index of current tail *\/$/;"	m	struct:q_hdr_t	access:public
q_hdr_t::qarr	./v.h	/^ struct q_val_t *qarr;      \/* table contain queue *\/$/;"	m	struct:q_hdr_t	typeref:struct:q_hdr_t::q_val_t	access:public
q_hdr_t::qhdrnxt	./v.h	/^ struct q_hdr_t *qhdrnxt; $/;"	m	struct:q_hdr_t	typeref:struct:q_hdr_t::q_hdr_t	access:public
q_id	./v.h	/^ int32 q_id;                \/* user passed ID *\/$/;"	m	struct:q_hdr_t	access:public
q_maxlen	./v.h	/^ int32 q_maxlen;            \/* maximum length of queue *\/$/;"	m	struct:q_hdr_t	access:public
q_maxsize	./v.h	/^ int32 q_maxsize;           \/* for entire run, max size of q *\/$/;"	m	struct:q_hdr_t	access:public
q_minwait	./v.h	/^ word64 q_minwait;          \/* shortest wait (min) of all els. ever in Q *\/$/;"	m	struct:q_hdr_t	access:public
q_size	./v.h	/^ int32 q_size;              \/* need to store size for q_exam *\/$/;"	m	struct:q_hdr_t	access:public
q_tail	./v.h	/^ int32 q_tail;              \/* index of current tail *\/$/;"	m	struct:q_hdr_t	access:public
q_val_t	./v.h	/^struct q_val_t {$/;"	s
q_val_t::enter_tim	./v.h	/^ word64 enter_tim;$/;"	m	struct:q_val_t	access:public
q_val_t::inform_id	./v.h	/^ int32 inform_id;$/;"	m	struct:q_val_t	access:public
q_val_t::job_id	./v.h	/^ int32 job_id;$/;"	m	struct:q_val_t	access:public
qarr	./v.h	/^ struct q_val_t *qarr;      \/* table contain queue *\/$/;"	m	struct:q_hdr_t	typeref:struct:q_hdr_t::q_val_t	access:public
qc_active	./v.h	/^ unsigned qc_active : 1;      \/* T => this net(\/bit) force or assign active *\/$/;"	m	struct:qcval_t	access:public
qc_overridden	./v.h	/^ unsigned qc_overridden : 1;  \/* T => reg assgn active but force overrides *\/$/;"	m	struct:qcval_t	access:public
qcatyp	./v.h	/^ unsigned qcatyp : 8;$/;"	m	struct:qconta_t	access:public
qcdalhs	./v.h	/^ struct expr_t *qcdalhs;$/;"	m	struct:qcontdea_t	typeref:struct:qcontdea_t::expr_t	access:public
qcdatyp	./v.h	/^ unsigned qcdatyp : 8;$/;"	m	struct:qcontdea_t	access:public
qcdcep	./v.h	/^ struct dceauxlst_t *qcdcep;  \/* rhs dce tab of lists *\/$/;"	m	struct:qcval_t	typeref:struct:qcval_t::dceauxlst_t	access:public
qclhsbi	./v.h	/^ int32 qclhsbi;               \/* for wire, select lhs low bit index *\/$/;"	m	struct:qcval_t	access:public
qclhsx	./v.h	/^ struct expr_t *qclhsx;$/;"	m	struct:qconta_t	typeref:struct:qconta_t::expr_t	access:public
qconta_t	./v.h	/^struct qconta_t {$/;"	s
qconta_t::qcatyp	./v.h	/^ unsigned qcatyp : 8;$/;"	m	struct:qconta_t	access:public
qconta_t::qclhsx	./v.h	/^ struct expr_t *qclhsx;$/;"	m	struct:qconta_t	typeref:struct:qconta_t::expr_t	access:public
qconta_t::qcrhsx	./v.h	/^ struct expr_t *qcrhsx;$/;"	m	struct:qconta_t	typeref:struct:qconta_t::expr_t	access:public
qconta_t::regform	./v.h	/^ unsigned regform : 8;$/;"	m	struct:qconta_t	access:public
qconta_t::rhs_qcdlstlst	./v.h	/^ struct dceauxlstlst_t *rhs_qcdlstlst;$/;"	m	struct:qconta_t	typeref:struct:qconta_t::dceauxlstlst_t	access:public
qcontdea_t	./v.h	/^struct qcontdea_t {$/;"	s
qcontdea_t::qcdalhs	./v.h	/^ struct expr_t *qcdalhs;$/;"	m	struct:qcontdea_t	typeref:struct:qcontdea_t::expr_t	access:public
qcontdea_t::qcdatyp	./v.h	/^ unsigned qcdatyp : 8;$/;"	m	struct:qcontdea_t	access:public
qcontdea_t::regform	./v.h	/^ unsigned regform : 8;$/;"	m	struct:qcontdea_t	access:public
qcrhsbi	./v.h	/^ int32 qcrhsbi;               \/* if concat, rhs low bit index else -1 *\/$/;"	m	struct:qcval_t	access:public
qcrhsx	./v.h	/^ struct expr_t *qcrhsx;$/;"	m	struct:qconta_t	typeref:struct:qconta_t::expr_t	access:public
qcstp	./v.h	/^ struct st_t *qcstp;$/;"	m	struct:qcval_t	typeref:struct:qcval_t::st_t	access:public
qcval	./v.h	/^ struct qcval_t *qcval;       \/* per inst. (maybe per bit) qc aux records *\/$/;"	m	union:nqc_u	typeref:struct:nqc_u::qcval_t	access:public
qcval_t	./v.h	/^struct qcval_t {$/;"	s
qcval_t::lhsidp	./v.h	/^ t_midat *lhsidp;$/;"	m	struct:qcval_t	access:public
qcval_t::qc_active	./v.h	/^ unsigned qc_active : 1;      \/* T => this net(\/bit) force or assign active *\/$/;"	m	struct:qcval_t	access:public
qcval_t::qc_overridden	./v.h	/^ unsigned qc_overridden : 1;  \/* T => reg assgn active but force overrides *\/$/;"	m	struct:qcval_t	access:public
qcval_t::qcdcep	./v.h	/^ struct dceauxlst_t *qcdcep;  \/* rhs dce tab of lists *\/$/;"	m	struct:qcval_t	typeref:struct:qcval_t::dceauxlst_t	access:public
qcval_t::qclhsbi	./v.h	/^ int32 qclhsbi;               \/* for wire, select lhs low bit index *\/$/;"	m	struct:qcval_t	access:public
qcval_t::qcrhsbi	./v.h	/^ int32 qcrhsbi;               \/* if concat, rhs low bit index else -1 *\/$/;"	m	struct:qcval_t	access:public
qcval_t::qcstp	./v.h	/^ struct st_t *qcstp;$/;"	m	struct:qcval_t	typeref:struct:qcval_t::st_t	access:public
qhdrnxt	./v.h	/^ struct q_hdr_t *qhdrnxt; $/;"	m	struct:q_hdr_t	typeref:struct:q_hdr_t::q_hdr_t	access:public
qnchp	./v.h	/^ char *qnchp;                 \/* for local qual. name, pointer to name *\/ $/;"	m	union:r_u	access:public
quit_msg	./v_dbg.c	/^static char *quit_msg[] = { $/;"	v	file:
r_u	./v.h	/^union r_u {$/;"	u
r_u::gri	./v.h	/^ int32 gri;                   \/* for compile\/save index *\/$/;"	m	union:r_u	access:public
r_u::grp	./v.h	/^ struct gref_t *grp;          \/* during compile\/exec - ptr to gref *\/$/;"	m	union:r_u	typeref:struct:r_u::gref_t	access:public
r_u::iop_ptr	./v.h	/^ union pck_u iop_ptr;         \/* for special malloc iopt node ptr to area *\/$/;"	m	union:r_u	typeref:union:r_u::pck_u	access:public
r_u::qnchp	./v.h	/^ char *qnchp;                 \/* for local qual. name, pointer to name *\/ $/;"	m	union:r_u	access:public
r_u::x	./v.h	/^ struct expr_t *x;$/;"	m	union:r_u	typeref:struct:r_u::expr_t	access:public
r_u::xvi	./v.h	/^ int32 xvi;                   \/* wrd index into constant tab *\/$/;"	m	union:r_u	access:public
ralloci	./igen.h	/^ struct reg_alloc_info_t *ralloci; \/* reg alloc save info for 2nd pass *\/$/;"	m	struct:tn_t	typeref:struct:tn_t::reg_alloc_info_t	access:public
rap	./igen.h	/^ struct reg_alloc_t *rap;     \/* record for reg allocator live in\/outs *\/  $/;"	m	union:optim_u	typeref:struct:optim_u::reg_alloc_t	access:public
rb_delete_min_fixup	./v_sim.c	/^static void rb_delete_min_fixup(struct tqnode_t *x)$/;"	f	file:	signature:(struct tqnode_t *x)
rb_insert_max	./v_sim.c	/^static void rb_insert_max(struct tqnode_t *n)$/;"	f	file:	signature:(struct tqnode_t *n)
rb_insert_middle	./v_sim.c	/^static void rb_insert_middle(struct tqnode_t *n)$/;"	f	file:	signature:(struct tqnode_t *n)
rb_insert_min	./v_sim.c	/^static void rb_insert_min(struct tqnode_t *n)$/;"	f	file:	signature:(struct tqnode_t *n)
rd1_cfg_file	./v_src3.c	/^static void rd1_cfg_file(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
rd1_gen_block	./v_src.c	/^static struct genblk_t *rd1_gen_block(void)$/;"	f	file:	signature:(void)
rd1_gen_mod_item	./v_src.c	/^static int32 rd1_gen_mod_item(struct genblk_t *cgblkp)$/;"	f	file:	signature:(struct genblk_t *cgblkp)
rd1_namedparam	./v_src.c	/^static struct namparam_t *rd1_namedparam(void)$/;"	f	file:	signature:(void)
rd1_nd_blk_gen_body	./v_src.c	/^static struct genblk_t *rd1_nd_blk_gen_body(void)$/;"	f	file:	signature:(void)
rd1_optcfg_fil	./v_src3.c	/^static int32 rd1_optcfg_fil(struct ocfil_lst_t *ocfnp)$/;"	f	file:	signature:(struct ocfil_lst_t *ocfnp)
rd2_1_val	./v_sdf.c	/^static int32 rd2_1_val(FILE *f)$/;"	f	file:	signature:(FILE *f)
rd2_sdf_formtyp	./v_sdf.c	/^static int32 rd2_sdf_formtyp(FILE *f)$/;"	f	file:	signature:(FILE *f)
rd_1_val	./v_sdf.c	/^static int32 rd_1_val(FILE *f, char *formnam)$/;"	f	file:	signature:(FILE *f, char *formnam)
rd_1net_tgldat_rec	./v_cvr.c	/^static int32 rd_1net_tgldat_rec(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
rd_1or2_vals	./v_sdf.c	/^static int32 rd_1or2_vals(FILE *f, char *formnam)$/;"	f	file:	signature:(FILE *f, char *formnam)
rd_1verstren	./v_src.c	/^static int32 rd_1verstren(int32 *strentyp)$/;"	f	file:	signature:(int32 *strentyp)
rd_4_vals	./v_sdf.c	/^static int32 rd_4_vals(FILE *f, char *formnam)$/;"	f	file:	signature:(FILE *f, char *formnam)
rd_attribute	./v_ms.c	/^static void rd_attribute(FILE *f)$/;"	f	file:	signature:(FILE *f)
rd_block	./v_src2.c	/^static struct st_t *rd_block(int32 btok, int32 endbtok)$/;"	f	file:	signature:(int32 btok, int32 endbtok)
rd_brkpt_num	./v_dbg2.c	/^static struct brkpt_t *rd_brkpt_num(char *cmdnam, int32 argnum)$/;"	f	file:	signature:(char *cmdnam, int32 argnum)
rd_case	./v_src2.c	/^static struct st_t *rd_case(int32 casttyp)$/;"	f	file:	signature:(int32 casttyp)
rd_cause	./v_src2.c	/^static struct st_t *rd_cause(void)$/;"	f	file:	signature:(void)
rd_cfg_cfg	./v_src3.c	/^static void rd_cfg_cfg(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
rd_cfg_fspec_list	./v_src3.c	/^static struct libel_t *rd_cfg_fspec_list(FILE *fp, int32 in_incdir)$/;"	f	file:	signature:(FILE *fp, int32 in_incdir)
rd_cfg_library	./v_src3.c	/^static void rd_cfg_library(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
rd_cfg_srcfil	./v_src3.c	/^static void rd_cfg_srcfil(struct libel_t *lbep)$/;"	f	file:	signature:(struct libel_t *lbep)
rd_chk_ifdef_macnam_to_str	./v_ms.c	/^static int32 rd_chk_ifdef_macnam_to_str(char *macro_s, int32 ifdtyp) $/;"	f	file:	signature:(char *macro_s, int32 ifdtyp)
rd_comment	./v_ms.c	/^static int32 rd_comment(FILE *f)$/;"	f	file:	signature:(FILE *f)
rd_constraint_path	./v_sdf.c	/^static int32 rd_constraint_path(FILE *f, char *formnam, int32 required)$/;"	f	file:	signature:(FILE *f, char *formnam, int32 required)
rd_contassign	./v_src.c	/^static int32 rd_contassign(void)$/;"	f	file:	signature:(void)
rd_cpin_conn	./v_src.c	/^static int32 rd_cpin_conn(void)$/;"	f	file:	signature:(void)
rd_dctrl_st	./v_src2.c	/^static struct st_t *rd_dctrl_st(void)$/;"	f	file:	signature:(void)
rd_decl_rng	./v_src.c	/^static int32 rd_decl_rng(struct expr_t **x1, struct expr_t **x2, $/;"	f	file:	signature:(struct expr_t **x1, struct expr_t **x2, int32 canbe_lsb_style)
rd_del_def_cond	./v_sdf.c	/^static int32 rd_del_def_cond(FILE *f, struct itree_t *itp, struct mod_t *ctmdp,$/;"	f	file:	signature:(FILE *f, struct itree_t *itp, struct mod_t *ctmdp, char *formnam)
rd_delay_pth	./v_src3.c	/^static int32 rd_delay_pth(void)$/;"	f	file:	signature:(void)
rd_delctrl	./v_src2.c	/^static struct expr_t *rd_delctrl(int32 *dtyp, int32 *ev_impl)$/;"	f	file:	signature:(int32 *dtyp, int32 *ev_impl)
rd_deldef	./v_sdf.c	/^static int32 rd_deldef(FILE *f, struct itree_t *itp, struct mod_t *ctmdp,$/;"	f	file:	signature:(FILE *f, struct itree_t *itp, struct mod_t *ctmdp, char *formnam)
rd_dfparam_stmt	./v_src.c	/^static int32 rd_dfparam_stmt(void)$/;"	f	file:	signature:(void)
rd_disable	./v_src2.c	/^static struct st_t *rd_disable(void)$/;"	f	file:	signature:(void)
rd_do_while_loop	./v_src2.c	/^static struct st_t *rd_do_while_loop(void)$/;"	f	file:	signature:(void)
rd_dpi_declaration	./v_src.c	/^static int32 rd_dpi_declaration(void)$/;"	f	file:	signature:(void)
rd_edge_ident	./v_sdf.c	/^static int32 rd_edge_ident(FILE *f)$/;"	f	file:	signature:(FILE *f)
rd_edgepair_list	./v_sdf.c	/^static int32 rd_edgepair_list(FILE *f)$/;"	f	file:	signature:(FILE *f)
rd_edges	./v_src3.c	/^static int32 rd_edges(int32 *edge)$/;"	f	file:	signature:(int32 *edge)
rd_eventdecl	./v_src.c	/^static int32 rd_eventdecl(int32 reading_tsk)$/;"	f	file:	signature:(int32 reading_tsk)
rd_exception	./v_sdf.c	/^static int32 rd_exception(FILE *f)$/;"	f	file:	signature:(FILE *f)
rd_exec_iact_stmt	./v_dbg.c	/^static void rd_exec_iact_stmt(int32 hist_rexec)$/;"	f	file:	signature:(int32 hist_rexec)
rd_for	./v_src2.c	/^static struct st_t *rd_for(void)$/;"	f	file:	signature:(void)
rd_foreach	./v_src2.c	/^static struct st_t *rd_foreach(void)$/;"	f	file:	signature:(void)
rd_func	./v_src.c	/^static int32 rd_func(void)$/;"	f	file:	signature:(void)
rd_gen_begin	./v_src.c	/^static int32 rd_gen_begin(struct genblk_t *cgblkp)$/;"	f	file:	signature:(struct genblk_t *cgblkp)
rd_gen_case	./v_src.c	/^static int32 rd_gen_case(struct genblk_t *cgblkp)$/;"	f	file:	signature:(struct genblk_t *cgblkp)
rd_gen_for	./v_src.c	/^static int32 rd_gen_for(struct genblk_t *cgblkp)$/;"	f	file:	signature:(struct genblk_t *cgblkp)
rd_gen_foreach	./v_src.c	/^static int32 rd_gen_foreach(struct genblk_t *cgblkp)$/;"	f	file:	signature:(struct genblk_t *cgblkp)
rd_gen_if	./v_src.c	/^static int32 rd_gen_if(struct genblk_t *cgblkp)$/;"	f	file:	signature:(struct genblk_t *cgblkp)
rd_gen_region_mod_items	./v_src.c	/^static int32 rd_gen_region_mod_items()   $/;"	f	file:
rd_genvar_decl	./v_src.c	/^static int32 rd_genvar_decl(void)$/;"	f	file:	signature:(void)
rd_hdrpnd_parmdecls	./v_src.c	/^static int32 rd_hdrpnd_parmdecls(void)$/;"	f	file:	signature:(void)
rd_if	./v_src2.c	/^static struct st_t *rd_if(void)$/;"	f	file:	signature:(void)
rd_init_always	./v_src.c	/^static int32 rd_init_always(int32 iattyp)$/;"	f	file:	signature:(int32 iattyp)
rd_inst	./v_src.c	/^static int32 rd_inst(char *typnam)$/;"	f	file:	signature:(char *typnam)
rd_iodecl	./v_src.c	/^static int32 rd_iodecl(word32 typ)$/;"	f	file:	signature:(word32 typ)
rd_iopath	./v_sdf.c	/^static int32 rd_iopath(FILE *f, struct itree_t *itp, struct mod_t *ctmdp,$/;"	f	file:	signature:(FILE *f, struct itree_t *itp, struct mod_t *ctmdp, struct expr_t *cndx, int32 is_condelse, char *formnam)
rd_iports	./v_src.c	/^static int32 rd_iports(char *inam)$/;"	f	file:	signature:(char *inam)
rd_liblist	./v_src3.c	/^static struct cfgnamlst_t *rd_liblist(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
rd_list_of_ports_decl	./v_src.c	/^static int32 rd_list_of_ports_decl(struct mod_t *mp)$/;"	f	file:	signature:(struct mod_t *mp)
rd_loop	./v_src2.c	/^static struct st_t *rd_loop(int32 ttyp)$/;"	f	file:	signature:(int32 ttyp)
rd_modbody	./v_src.c	/^static int32 rd_modbody(void)$/;"	f	file:	signature:(void)
rd_modhdr	./v_src.c	/^static int32 rd_modhdr(struct mod_t *mp)$/;"	f	file:	signature:(struct mod_t *mp)
rd_namblock	./v_src2.c	/^static struct st_t *rd_namblock(int32 btok, int32 endbtok, int32 slcnt,$/;"	f	file:	signature:(int32 btok, int32 endbtok, int32 slcnt, int32 sfnind)
rd_nochg_tchk	./v_src3.c	/^static int32 rd_nochg_tchk(void)$/;"	f	file:	signature:(void)
rd_notifier	./v_src3.c	/^static struct sy_t *rd_notifier(void) $/;"	f	file:	signature:(void)
rd_npndparams	./v_src.c	/^static struct namparam_t *rd_npndparams(void)$/;"	f	file:	signature:(void)
rd_num	./v_ms.c	/^static int32 rd_num(FILE *f, int32 c1)$/;"	f	file:	signature:(FILE *f, int32 c1)
rd_oparamdels	./v_src.c	/^static int32 rd_oparamdels(struct paramlst_t **pmphdr)$/;"	f	file:	signature:(struct paramlst_t **pmphdr)
rd_optcfg_1prop	./v_src3.c	/^static int32 rd_optcfg_1prop(void)$/;"	f	file:	signature:(void)
rd_optcfg_1ver_el	./v_src3.c	/^static int32 rd_optcfg_1ver_el(void)$/;"	f	file:	signature:(void)
rd_optcfg_prop_list	./v_src3.c	/^static int32 rd_optcfg_prop_list(struct oc_vtok_t **ocvtok_hdr)$/;"	f	file:	signature:(struct oc_vtok_t **ocvtok_hdr)
rd_optcfg_ver_el_list	./v_src3.c	/^static int32 rd_optcfg_ver_el_list(struct oc_vtok_t **ocvtok_hdr)$/;"	f	file:	signature:(struct oc_vtok_t **ocvtok_hdr)
rd_optional_tc_cond	./v_src3.c	/^static int32 rd_optional_tc_cond(struct expr_t **timcondx, int32 ttyp)$/;"	f	file:	signature:(struct expr_t **timcondx, int32 ttyp)
rd_optional_tc_delayed_net	./v_src3.c	/^static int32 rd_optional_tc_delayed_net(struct expr_t **delayedx, int32 ttyp)$/;"	f	file:	signature:(struct expr_t **delayedx, int32 ttyp)
rd_paramdecl	./v_src.c	/^static int32 rd_paramdecl(int32 is_hdr_form, int32 is_local_param)$/;"	f	file:	signature:(int32 is_hdr_form, int32 is_local_param)
rd_pathdelaylist	./v_src3.c	/^static int32 rd_pathdelaylist(struct paramlst_t **pmphdr)$/;"	f	file:	signature:(struct paramlst_t **pmphdr)
rd_period_tchk	./v_src3.c	/^static int32 rd_period_tchk(void)$/;"	f	file:	signature:(void)
rd_port	./v_sdf.c	/^static int32 rd_port(FILE *f, char *portnam, int32 *i1, int32 *i2)$/;"	f	file:	signature:(FILE *f, char *portnam, int32 *i1, int32 *i2)
rd_port_spec	./v_sdf.c	/^static int32 rd_port_spec(FILE *f, char *pnam, int32 *i1, int32 *i2, int32 *eval,$/;"	f	file:	signature:(FILE *f, char *pnam, int32 *i1, int32 *i2, int32 *eval, int32 is_tchk)
rd_port_tchk	./v_sdf.c	/^static int32 rd_port_tchk(FILE *f, struct tcterm_t *tctp)$/;"	f	file:	signature:(FILE *f, struct tcterm_t *tctp)
rd_portref	./v_src.c	/^static int32 rd_portref(void)$/;"	f	file:	signature:(void)
rd_pthtermlst	./v_src3.c	/^static struct exprlst_t *rd_pthtermlst(void)$/;"	f	file:	signature:(void)
rd_pull_stren	./v_src.c	/^static int32 rd_pull_stren(char *pullnam, int32 *strenval)$/;"	f	file:	signature:(char *pullnam, int32 *strenval)
rd_recrem_tchk	./v_src3.c	/^static int32 rd_recrem_tchk(void)$/;"	f	file:	signature:(void)
rd_return	./v_src2.c	/^static struct st_t *rd_return(void)$/;"	f	file:	signature:(void)
rd_rtriple	./v_sdf.c	/^static int32 rd_rtriple(FILE *f, struct t_vpi_time *dap)$/;"	f	file:	signature:(FILE *f, struct t_vpi_time *dap)
rd_scalar_const	./v_sdf.c	/^static int32 rd_scalar_const(FILE *f)$/;"	f	file:	signature:(FILE *f)
rd_scalar_node	./v_sdf.c	/^static int32 rd_scalar_node(FILE *f, char *nnam, int32 *i1)$/;"	f	file:	signature:(FILE *f, char *nnam, int32 *i1)
rd_sdf_dellst	./v_sdf.c	/^static int32 rd_sdf_dellst(FILE *f, char *formnam)$/;"	f	file:	signature:(FILE *f, char *formnam)
rd_sdf_file	./v_sdf.c	/^static void rd_sdf_file(FILE *f)$/;"	f	file:	signature:(FILE *f)
rd_sdf_formtyp	./v_sdf.c	/^static int32 rd_sdf_formtyp(FILE *f)$/;"	f	file:	signature:(FILE *f)
rd_sdf_sepchar	./v_sdf.c	/^static int32 rd_sdf_sepchar(FILE *f, char *sep)$/;"	f	file:	signature:(FILE *f, char *sep)
rd_sdf_strval	./v_sdf.c	/^static int32 rd_sdf_strval(FILE *f)$/;"	f	file:	signature:(FILE *f)
rd_sdf_timescaleval	./v_sdf.c	/^static int32 rd_sdf_timescaleval(FILE *f, int32 *tunits)$/;"	f	file:	signature:(FILE *f, int32 *tunits)
rd_setup_or_hold_tchk	./v_src3.c	/^static int32 rd_setup_or_hold_tchk(word32 ttyp)$/;"	f	file:	signature:(word32 ttyp)
rd_setuphold_tchk	./v_src3.c	/^static int32 rd_setuphold_tchk(void)$/;"	f	file:	signature:(void)
rd_skew_recov_rem_tchk	./v_src3.c	/^static int32 rd_skew_recov_rem_tchk(word32 ttyp)$/;"	f	file:	signature:(word32 ttyp)
rd_specparamdecl	./v_src3.c	/^static int32 rd_specparamdecl(void)$/;"	f	file:	signature:(void)
rd_sv_always	./v_src.c	/^static int32 rd_sv_always(int32 iattyp)$/;"	f	file:	signature:(int32 iattyp)
rd_task	./v_src.c	/^static int32 rd_task(void)$/;"	f	file:	signature:(void)
rd_taske_or_proc_assign	./v_src2.c	/^static struct st_t *rd_taske_or_proc_assign(void)$/;"	f	file:	signature:(void)
rd_taskvardecl	./v_src.c	/^static int32 rd_taskvardecl(int32 wtyp, int32 is_io, char *tftypnam)$/;"	f	file:	signature:(int32 wtyp, int32 is_io, char *tftypnam)
rd_tchk_cond	./v_sdf.c	/^static int32 rd_tchk_cond(FILE *f, struct tcterm_t *tctp)$/;"	f	file:	signature:(FILE *f, struct tcterm_t *tctp)
rd_tchk_part	./v_src3.c	/^static int32 rd_tchk_part(word32 ttyp, struct tchk_t *tcp,$/;"	f	file:	signature:(word32 ttyp, struct tchk_t *tcp, struct expr_t **limx)
rd_tchk_selector	./v_src3.c	/^static int32 rd_tchk_selector(int32 *edgval, struct expr_t **xp,$/;"	f	file:	signature:(int32 *edgval, struct expr_t **xp, struct expr_t **condx)
rd_tf_list_of_ports_decl	./v_src.c	/^static int32 rd_tf_list_of_ports_decl(struct task_t *tskp, char *tftypnam,$/;"	f	file:	signature:(struct task_t *tskp, char *tftypnam, int32 already_decl)
rd_udp_decls	./v_src3.c	/^static int32 rd_udp_decls(void)$/;"	f	file:	signature:(void)
rd_udp_hdr	./v_src3.c	/^static int32 rd_udp_hdr(struct udp_t *udpp)$/;"	f	file:	signature:(struct udp_t *udpp)
rd_udp_init	./v_src3.c	/^static int32 rd_udp_init(struct udp_t *udpp)$/;"	f	file:	signature:(struct udp_t *udpp)
rd_udp_table	./v_src3.c	/^static int32 rd_udp_table(struct udp_t *udpp)$/;"	f	file:	signature:(struct udp_t *udpp)
rd_use_clause	./v_src3.c	/^static int32 rd_use_clause(FILE *fp, char *libnam, char *celnam,$/;"	f	file:	signature:(FILE *fp, char *libnam, char *celnam, int32 *expl_config)
rd_vardecl	./v_src.c	/^static int32 rd_vardecl(word32 wtyp)$/;"	f	file:	signature:(word32 wtyp)
rd_verstrens	./v_src.c	/^static int32 rd_verstrens(void)$/;"	f	file:	signature:(void)
rd_vlibfil	./v_fx.c	/^static void rd_vlibfil(struct undef_t *res_undefp)$/;"	f	file:	signature:(struct undef_t *res_undefp)
rd_width_tchk	./v_src3.c	/^static int32 rd_width_tchk(void)$/;"	f	file:	signature:(void)
rd_wireassign	./v_src2.c	/^static struct st_t *rd_wireassign(int32 qcattyp)$/;"	f	file:	signature:(int32 qcattyp)
rd_wiredeassign	./v_src2.c	/^static struct st_t *rd_wiredeassign(int32 qcdeattyp)$/;"	f	file:	signature:(int32 qcdeattyp)
rdbld_mod_varinitlst	./v_src.c	/^static int32 rdbld_mod_varinitlst(struct sy_t *syp, int32 is_hdr_format)$/;"	f	file:	signature:(struct sy_t *syp, int32 is_hdr_format)
rdset_1term_1v_tchk	./v_sdf.c	/^static int32 rdset_1term_1v_tchk(struct tclst_t **tclhd, FILE *f,$/;"	f	file:	signature:(struct tclst_t **tclhd, FILE *f, struct mod_t *ctmdp, char *sdf_tcnam, int32 tchktyp, int32 lcnt, int32 *sav_lcnt)
rdset_2term_1v_tchk	./v_sdf.c	/^static int32 rdset_2term_1v_tchk(struct tclst_t **tclhd, int32 *match_tctyp,$/;"	f	file:	signature:(struct tclst_t **tclhd, int32 *match_tctyp, FILE *f, struct mod_t *ctmdp, char *sdf_tcnam, int32 tchktyp, int32 lcnt, int32 *sav_lcnt)
rdset_2term_2v_tchk	./v_sdf.c	/^static int32 rdset_2term_2v_tchk(struct tclst_t **tclhd, FILE *f,$/;"	f	file:	signature:(struct tclst_t **tclhd, FILE *f, struct mod_t *ctmdp, char *sdf_tcnam, int32 tchktyp, int32 lcnt, int32 *sav_lcnt)
rdset_deltyps	./v_sdf.c	/^static int32 rdset_deltyps(FILE *f, struct itree_t *itp, struct mod_t *ctmdp)$/;"	f	file:	signature:(FILE *f, struct itree_t *itp, struct mod_t *ctmdp)
rdset_devpath_dels	./v_sdf.c	/^static int32 rdset_devpath_dels(FILE *f, struct itree_t *itp,$/;"	f	file:	signature:(FILE *f, struct itree_t *itp, struct mod_t *ctmdp, char *formnam)
rdset_interconn_dels	./v_sdf.c	/^static int32 rdset_interconn_dels(FILE *f, struct itree_t *itp,$/;"	f	file:	signature:(FILE *f, struct itree_t *itp, struct mod_t *ctmdp, char *formnam)
rdset_labels	./v_sdf.c	/^static int32 rdset_labels(FILE *f, struct itree_t *itp, struct mod_t *ctmdp)$/;"	f	file:	signature:(FILE *f, struct itree_t *itp, struct mod_t *ctmdp)
rdset_port_mipd	./v_sdf.c	/^static int32 rdset_port_mipd(FILE *f, struct itree_t *itp, struct mod_t *ctmdp,$/;"	f	file:	signature:(FILE *f, struct itree_t *itp, struct mod_t *ctmdp, char *formnam)
rdset_prim_delay	./v_sdf.c	/^static int32 rdset_prim_delay(FILE *f, struct sy_t *tsyp, int32 i1, char *inam,$/;"	f	file:	signature:(FILE *f, struct sy_t *tsyp, int32 i1, char *inam, struct sy_t *gisyp)
rdset_sdf_cells	./v_sdf.c	/^static int32 rdset_sdf_cells(FILE *f)$/;"	f	file:	signature:(FILE *f)
rdset_tchk_defs	./v_sdf.c	/^static int32 rdset_tchk_defs(FILE *f, struct itree_t *itp,$/;"	f	file:	signature:(FILE *f, struct itree_t *itp, struct mod_t *ctmdp)
rdset_timing_spec	./v_sdf.c	/^static int32 rdset_timing_spec(FILE *f, struct itree_t *itp, struct mod_t *ctmdp)$/;"	f	file:	signature:(FILE *f, struct itree_t *itp, struct mod_t *ctmdp)
rdskip_te_defs	./v_sdf.c	/^static int32 rdskip_te_defs(FILE *f)$/;"	f	file:	signature:(FILE *f)
rdwr_siz	./igen.h	/^ unsigned rdwr_siz : 8;$/;"	m	struct:insn_info_t	access:public
real_setchk_quest	./v_fx3.c	/^static void real_setchk_quest(struct expr_t *xrhs)$/;"	f	file:	signature:(struct expr_t *xrhs)
real_to_ticks	./v_del.c	/^static word64 real_to_ticks(double d1, struct mod_t *mdp)$/;"	f	file:	signature:(double d1, struct mod_t *mdp)
realop	./v.h	/^ unsigned realop : 8;$/;"	m	struct:opinfo_t	access:public
reassign2_itnums	./v_genfx.c	/^static void reassign2_itnums(struct itree_t *new_itp)$/;"	f	file:	signature:(struct itree_t *new_itp)
reassign_itnums	./v_genfx.c	/^static void reassign_itnums(void)$/;"	f	file:	signature:(void)
rebld_1mod_g_and_i_arr	./v_genfx.c	/^static void rebld_1mod_g_and_i_arr(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
rebld_dsgn_giars_from_split	./v_genfx.c	/^static void rebld_dsgn_giars_from_split(int32 second_call)$/;"	f	file:	signature:(int32 second_call)
rebld_mgtab	./v_genfx.c	/^static void rebld_mgtab(struct mod_t *mdp, int32 newgnum)$/;"	f	file:	signature:(struct mod_t *mdp, int32 newgnum)
rebld_mitab	./v_genfx.c	/^static void rebld_mitab(struct mod_t *mdp, int32 newinum)$/;"	f	file:	signature:(struct mod_t *mdp, int32 newinum)
rebld_mod_g_and_i_arrs	./v_genfx.c	/^static void rebld_mod_g_and_i_arrs(void)$/;"	f	file:	signature:(void)
rebld_splt_comb_nl	./v_fx.c	/^static void rebld_splt_comb_nl(void)$/;"	f	file:	signature:(void)
rebld_tns_used_in_fgs	./v_regasn.c	/^static void rebld_tns_used_in_fgs(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
rebld_undecl_parm_net	./v_genfx.c	/^static void rebld_undecl_parm_net(struct xstk_t *xsp, $/;"	f	file:	signature:(struct xstk_t *xsp, struct expr_t *xrhs, struct net_t *np)
recalc_1mod_params	./v_genfx.c	/^static void recalc_1mod_params(struct mod_t *mdp, struct net_t *mprms, $/;"	f	file:	signature:(struct mod_t *mdp, struct net_t *mprms, int32 num)
recalc_1mod_pndparams	./v_genfx.c	/^static void recalc_1mod_pndparams(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
recomb_to_mdp	./v.h	/^ struct mod_t *recomb_to_mdp; \/* for recombining - recombs to this one *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::mod_t	access:public
reconn_1mod_gateterms	./v_fx2.c	/^static void reconn_1mod_gateterms(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
reconn_1mod_instports	./v_fx2.c	/^static void reconn_1mod_instports(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
record_nchg_	./cvmacros.h	366;"	d
record_sel_nchg_	./cvmacros.h	390;"	d
ref_idp_ofs	./v.h	/^ size_t ref_idp_ofs;           \/* idp offset for dce_refu *\/$/;"	m	struct:dce_idp_info_t	access:public
ref_mdp	./v.h	/^ struct mod_t *ref_mdp;       \/* ref mdp *\/$/;"	m	struct:dce_idp_info_t	typeref:struct:dce_idp_info_t::mod_t	access:public
reg_16bytes	./v_asmlnk.c	/^static int32 reg_16bytes[] = {REG_NONE, AX, BX, CX, DX, SI, DI }; $/;"	v	file:
reg_16bytes	./v_asmlnk.c	/^static int32 reg_16bytes[] = {REG_NONE, REG_NONE, REG_NONE, REG_NONE, REG_NONE,$/;"	v	file:
reg_32bytes	./v_asmlnk.c	/^static int32 reg_32bytes[] = {REG_NONE, REG_NONE, REG_NONE, REG_NONE, REG_NONE,$/;"	v	file:
reg_alloc_info_t	./igen.h	/^struct reg_alloc_info_t {$/;"	s
reg_alloc_info_t::spill_ebp_byt_ofs	./igen.h	/^ int32 spill_ebp_byt_ofs;     \/* for spill wrd and all wid, ebp ofs in bytes *\/$/;"	m	struct:reg_alloc_info_t	access:public
reg_alloc_info_t::t_used_cross_call	./igen.h	/^ unsigned t_used_cross_call : 1; \/* T => used across a call *\/$/;"	m	struct:reg_alloc_info_t	access:public
reg_alloc_info_t::t_used_in_bw_insn	./igen.h	/^ unsigned t_used_in_bw_insn : 1; \/* T => used in a byte or half word insn *\/$/;"	m	struct:reg_alloc_info_t	access:public
reg_alloc_info_t::tn_adj_lst	./igen.h	/^ struct tn_list_t *tn_adj_lst; \/* tmps adjacent to this one *\/ $/;"	m	struct:reg_alloc_info_t	typeref:struct:reg_alloc_info_t::tn_list_t	access:public
reg_alloc_info_t::tn_assigned	./igen.h	/^ unsigned tn_assigned : 1;    \/* T => tn assigned to reg for this flowg *\/$/;"	m	struct:reg_alloc_info_t	access:public
reg_alloc_info_t::tn_coalesce_into	./igen.h	/^ int32 tn_coalesce_into;      \/* for colalescing - tni that replaces *\/$/;"	m	struct:reg_alloc_info_t	access:public
reg_alloc_info_t::tn_spilled	./igen.h	/^ unsigned tn_spilled : 1;     \/* T => this tmp name is spilled - wide always *\/$/;"	m	struct:reg_alloc_info_t	access:public
reg_alloc_info_t::x86_regno	./igen.h	/^ unsigned x86_regno : 6;      \/* the x86 regno this tmp lowers to *\/$/;"	m	struct:reg_alloc_info_t	access:public
reg_alloc_t	./igen.h	/^struct reg_alloc_t {$/;"	s
reg_alloc_t::tn_def_lst	./igen.h	/^ struct tn_list_t *tn_def_lst;\/* regs def in this insn *\/ $/;"	m	struct:reg_alloc_t	typeref:struct:reg_alloc_t::tn_list_t	access:public
reg_alloc_t::tn_in_lst	./igen.h	/^ struct tn_list_t *tn_in_lst; \/* regs used coming into this insn *\/ $/;"	m	struct:reg_alloc_t	typeref:struct:reg_alloc_t::tn_list_t	access:public
reg_alloc_t::tn_out_lst	./igen.h	/^ struct tn_list_t *tn_out_lst;\/* regs used leaving this insn *\/ $/;"	m	struct:reg_alloc_t	typeref:struct:reg_alloc_t::tn_list_t	access:public
reg_alloc_t::tn_use_lst	./igen.h	/^ struct tn_list_t *tn_use_lst;\/* regs used in this insn *\/ $/;"	m	struct:reg_alloc_t	typeref:struct:reg_alloc_t::tn_list_t	access:public
reg_bytes	./v_asmlnk.c	/^static int32 reg_bytes[] = {REG_NONE, AL, BL, CL, DL, SI, DI }; $/;"	v	file:
reg_bytes	./v_asmlnk.c	/^static int32 reg_bytes[] = {REG_NONE, REG_NONE, REG_NONE, REG_NONE, REG_NONE,$/;"	v	file:
reg_drvs_iter	./v_vpi2.c	/^static vpiHandle reg_drvs_iter(struct h_t *hp)$/;"	f	file:	signature:(struct h_t *hp)
reg_fr_inhibit_	./cvmacros.h	509;"	d
reg_prty_t	./igen.h	/^struct reg_prty_t {$/;"	s
reg_prty_t::priority	./igen.h	/^ int32 priority;$/;"	m	struct:reg_prty_t	access:public
reg_prty_t::tni	./igen.h	/^ int32 tni;$/;"	m	struct:reg_prty_t	access:public
reg_tostr	./v_asmlnk.c	/^static char *reg_tostr(char *s1, struct amode_t *amp, int32 dbg_fmt)$/;"	f	file:	signature:(char *s1, struct amode_t *amp, int32 dbg_fmt)
reg_vpi_force	./v_vpi3.c	/^static void reg_vpi_force(struct net_t *np, word32 *ap, word32 *bp)$/;"	f	file:	signature:(struct net_t *np, word32 *ap, word32 *bp)
reg_vpi_release	./v_vpi3.c	/^static void reg_vpi_release(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
regform	./v.h	/^ unsigned regform : 8;$/;"	m	struct:qconta_t	access:public
regform	./v.h	/^ unsigned regform : 8;$/;"	m	struct:qcontdea_t	access:public
regprop_vpiget	./v_vpi2.c	/^static int32 regprop_vpiget(struct h_t *hp, int32 prop) $/;"	f	file:	signature:(struct h_t *hp, int32 prop)
regwir_putv_tedlst	./v.h	/^ struct dltevlst_t **regwir_putv_tedlst; \/*  per inst (all bits) ev list *\/$/;"	m	struct:net_t	typeref:struct:net_t::dltevlst_t	access:public
reinit_1wirereg	./v_prp2.c	/^static void reinit_1wirereg(struct net_t *np, struct mod_t *mdp)$/;"	f	file:	signature:(struct net_t *np, struct mod_t *mdp)
reinit_stime	./v_sim.c	/^static void reinit_stime(void)$/;"	f	file:	signature:(void)
reinit_vars_and_state	./v_dbg2.c	/^static void reinit_vars_and_state(void)$/;"	f	file:	signature:(void)
rel_ndssign	./v.h	/^ unsigned rel_ndssign : 1;    \/* T => 1 bit result relational needs sign *\/$/;"	m	struct:expr_t	access:public
rem_del_npps	./v_prp.c	/^static void rem_del_npps(void)$/;"	f	file:	signature:(void)
rem_escape_newlines	./v_dbg.c	/^static void rem_escape_newlines(char *lp)$/;"	f	file:	signature:(char *lp)
rem_inc_dupes	./v_prp.c	/^static void rem_inc_dupes(void)$/;"	f	file:	signature:(void)
rem_ins_from_iter	./v_acc.c	/^static vpiHandle rem_ins_from_iter(struct mod_t *mdp, vpiHandle ihref) $/;"	f	file:	signature:(struct mod_t *mdp, vpiHandle ihref)
rem_lead_0chars	./v_ms.c	/^static void rem_lead_0chars(char *s)$/;"	f	file:	signature:(char *s)
remchk_macdef_coms	./v_ms.c	/^static char *remchk_macdef_coms(char *mchp)$/;"	f	file:	signature:(char *mchp)
remove_0width_catrep_els	./v_fx3.c	/^static void remove_0width_catrep_els(struct expr_t *catndp)$/;"	f	file:	signature:(struct expr_t *catndp)
remove_all_npps	./v_prp.c	/^static void remove_all_npps(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
remove_empty_bblks	./v_bbopt.c	/^static void remove_empty_bblks(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
remove_jmponly_bblks	./v_bbopt.c	/^static void remove_jmponly_bblks(struct flowg_t *fgp, struct mod_t *mdp)$/;"	f	file:	signature:(struct flowg_t *fgp, struct mod_t *mdp)
remove_multiple_idp_set	./v_regasn.c	/^static void remove_multiple_idp_set(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
remove_unneeded_machreg_insns	./v_bbopt.c	/^static void remove_unneeded_machreg_insns(struct flowg_t *fgp,$/;"	f	file:	signature:(struct flowg_t *fgp, struct mod_t *mdp)
renumber_1stmt	./v_dbg.c	/^static void renumber_1stmt(struct st_t *stp, int32 sfnind, int32 slcnt)$/;"	f	file:	signature:(struct st_t *stp, int32 sfnind, int32 slcnt)
renumber_csitemlst	./v_dbg.c	/^static void renumber_csitemlst(struct csitem_t *csip, int32 sfnind,$/;"	f	file:	signature:(struct csitem_t *csip, int32 sfnind, int32 slcnt)
renumber_stlst	./v_dbg.c	/^static void renumber_stlst(struct st_t *stp, int32 sfnind, int32 slcnt)$/;"	f	file:	signature:(struct st_t *stp, int32 sfnind, int32 slcnt)
reorder_all_mods_ialst_always_first	./v_prp2.c	/^static void reorder_all_mods_ialst_always_first(void)$/;"	f	file:	signature:(void)
repack_on_close	./fstapi.c	/^unsigned repack_on_close : 1;$/;"	m	struct:fstWriterContext	file:	access:public
repcntx	./v.h	/^ struct expr_t *repcntx;      \/* for rhs ev ctrl repeat form, rep cnt expr *\/$/;"	m	struct:delctrl_t	typeref:struct:delctrl_t::expr_t	access:public
repeat_t	./v.h	/^struct repeat_t {$/;"	s
repeat_t::repst	./v.h	/^ struct st_t *repst;$/;"	m	struct:repeat_t	typeref:struct:repeat_t::st_t	access:public
repeat_t::reptmp_ofs	./v.h	/^ size_t reptmp_ofs;            \/* now rep count is ofs from idp (%esi) area *\/$/;"	m	struct:repeat_t	access:public
repeat_t::repx	./v.h	/^ struct expr_t *repx;$/;"	m	struct:repeat_t	typeref:struct:repeat_t::expr_t	access:public
replace_asl_with_copy_insn	./v_bbopt.c	/^static void replace_asl_with_copy_insn(struct insn_t *asl_ip,$/;"	f	file:	signature:(struct insn_t *asl_ip, word32 *res_valp, int32 ret_nbytes)
replace_child_tns	./v_bbopt.c	/^static void replace_child_tns(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
replace_param_rhs_expr	./v_genfx.c	/^static void replace_param_rhs_expr(struct net_t *np, word32 *wp,$/;"	f	file:	signature:(struct net_t *np, word32 *wp, struct mod_t *imdp)
repst	./v.h	/^ struct st_t *repst;$/;"	m	struct:repeat_t	typeref:struct:repeat_t::st_t	access:public
reptmp_ofs	./v.h	/^ size_t reptmp_ofs;            \/* now rep count is ofs from idp (%esi) area *\/$/;"	m	struct:repeat_t	access:public
repx	./v.h	/^ struct expr_t *repx;$/;"	m	struct:repeat_t	typeref:struct:repeat_t::expr_t	access:public
res_ti	./igen.h	/^ int32 res_ti;             \/* result of adr add *\/$/;"	m	struct:adradd_dup_t	access:public
res_tn_useistays	./igen.h	/^ unsigned res_tn_useistays : 1;\/* T => insn res or uses this tn must stay *\/$/;"	m	struct:tn_t	access:public
res_tni	./igen.h	/^ int32 res_tni;               \/* original risc vm insns can be 3 addr *\/$/;"	m	struct:insn_t	access:public
res_tni	./igen.h	/^ int32 res_tni;$/;"	m	struct:ftval_t	access:public
res_tnwid	./igen.h	/^ unsigned res_tnwid : 24;$/;"	m	struct:ftval_t	access:public
rescan_process_lib	./v_fx.c	/^static void rescan_process_lib(void)$/;"	f	file:	signature:(void)
rescan_resolve_from_ydir	./v_fx.c	/^static void rescan_resolve_from_ydir(struct vylib_t *vyp,$/;"	f	file:	signature:(struct vylib_t *vyp, struct undef_t *undefp)
reschedule_1gev	./v_sim.c	/^static void reschedule_1gev(struct tev_t *tevp, word64 gdel, word64 newtim,$/;"	f	file:	signature:(struct tev_t *tevp, word64 gdel, word64 newtim, word32 newoutv, int32 is_acc)
reschedule_1mipd	./v_ex3.c	/^static struct tev_t *reschedule_1mipd(struct net_t *np, int32 bi, $/;"	f	file:	signature:(struct net_t *np, int32 bi, struct tev_t *tevp, word64 ndel, word64 newtim)
reset_1dfp_targsyp	./v_genfx.c	/^static void reset_1dfp_targsyp(struct dfparam_t *dfpp)$/;"	f	file:	signature:(struct dfparam_t *dfpp)
reset_cntabs	./cvc.c	/^static void reset_cntabs(int32 *gftab, int32 *gstab, int32 *cgftab, int32 *mftab,$/;"	f	file:	signature:(int32 *gftab, int32 *gstab, int32 *cgftab, int32 *mftab, int32 *mstab, int32 nmods, int32 *uftab, int32 *ustab, int32 *cuftab, int32 nudps)
reset_dfp_targsyps	./v_genfx.c	/^static void reset_dfp_targsyps(void)$/;"	f	file:	signature:(void)
reset_dim_rng_indices	./v_cnv.c	/^static void reset_dim_rng_indices(struct net_t *np, int32 *mda_ndxies,$/;"	f	file:	signature:(struct net_t *np, int32 *mda_ndxies, int32 low_dim, int32 high_dim)
reset_msg	./v_dbg.c	/^static char *reset_msg[] = { $/;"	v	file:
resolve_from_ydir	./v_fx.c	/^static void resolve_from_ydir(struct vylib_t *vyp)$/;"	f	file:	signature:(struct vylib_t *vyp)
resolve_undef_mods	./v_fx.c	/^static void resolve_undef_mods(void)$/;"	f	file:	signature:(void)
restore_idp_	./cvmacros.h	189;"	d
restore_savchains	./v_bbopt.c	/^static void restore_savchains(struct bblk_t *bbp)$/;"	f	file:	signature:(struct bblk_t *bbp)
restore_task_scope	./v_bbgen.c	/^static void restore_task_scope(void)$/;"	f	file:	signature:(void)
restrict	./lz4.c	117;"	d	file:
reswid	./v.h	/^ unsigned reswid : 8;$/;"	m	struct:opinfo_t	access:public
ret_veriusertf	./v.h	/^ struct t_tfcell *ret_veriusertf;$/;"	m	struct:dynboot_t	typeref:struct:dynboot_t::t_tfcell	access:public
retntyp	./v.h	/^ unsigned retntyp : 8;$/;"	m	struct:sysfunc_t	access:public
retsigned	./v.h	/^ unsigned retsigned : 1;      \/* need for signed wire *\/$/;"	m	struct:sysfunc_t	access:public
retwid	./v.h	/^ int32 retwid;                \/* for veriuser and vpi systf sizetf call sets *\/$/;"	m	struct:sysfunc_t	access:public
revpostordno	./igen.h	/^ int32 revpostordno;          \/* this bblks reverse post order num in flowg *\/$/;"	m	struct:bblk_t	access:public
rf_all_register_cb	./v_vpi.c	/^static vpiHandle rf_all_register_cb(p_cb_data cb_data_p, int32 qctyp)$/;"	f	file:	signature:(p_cb_data cb_data_p, int32 qctyp)
rf_cb_register	./v_vpi.c	/^static vpiHandle rf_cb_register(p_cb_data cb_data_p, int32 qctyp)$/;"	f	file:	signature:(p_cb_data cb_data_p, int32 qctyp)
rfcblst_t	./v.h	/^struct rfcblst_t {$/;"	s
rfcblst_t::rfcbnxt	./v.h	/^ struct rfcblst_t *rfcbnxt;$/;"	m	struct:rfcblst_t	typeref:struct:rfcblst_t::rfcblst_t	access:public
rfcblst_t::rfcbp	./v.h	/^ struct cbrec_t *rfcbp; $/;"	m	struct:rfcblst_t	typeref:struct:rfcblst_t::cbrec_t	access:public
rfcbnxt	./v.h	/^ struct rfcblst_t *rfcbnxt;$/;"	m	struct:rfcblst_t	typeref:struct:rfcblst_t::rfcblst_t	access:public
rfcbp	./v.h	/^ struct cbrec_t *rfcbp; $/;"	m	struct:rfcblst_t	typeref:struct:rfcblst_t::cbrec_t	access:public
rhs_cat_separable	./v_prp.c	/^static int32 rhs_cat_separable(struct expr_t *rhsx)$/;"	f	file:	signature:(struct expr_t *rhsx)
rhs_concat	./v_ex2.c	/^static void rhs_concat(struct expr_t *lcbndp)$/;"	f	file:	signature:(struct expr_t *lcbndp)
rhs_concat_string	./v_ex2.c	/^static void rhs_concat_string(struct expr_t *lcbndp)$/;"	f	file:	signature:(struct expr_t *lcbndp)
rhs_const	./v.h	/^ unsigned rhs_const : 1;$/;"	m	struct:pbexpr_t	access:public
rhs_expr_has_net	./v_fx2.c	/^static int32 rhs_expr_has_net(struct expr_t *rhsx, struct net_t *np)$/;"	f	file:	signature:(struct expr_t *rhsx, struct net_t *np)
rhs_idp_ofs	./v.h	/^ size_t rhs_idp_ofs;          \/* storag area index for rhs *\/$/;"	m	struct:st_t	access:public
rhs_modpin_separable	./v_prp.c	/^static int32 rhs_modpin_separable(struct expr_t *rhsx)$/;"	f	file:	signature:(struct expr_t *rhsx)
rhs_net_no_perbit_drvn_con	./v_cvr.c	/^static int32 rhs_net_no_perbit_drvn_con(struct net_t *rhs_np,$/;"	f	file:	signature:(struct net_t *rhs_np, struct expr_t *rhsx)
rhs_qcdlstlst	./v.h	/^ struct dceauxlstlst_t *rhs_qcdlstlst;$/;"	m	struct:qconta_t	typeref:struct:qconta_t::dceauxlstlst_t	access:public
rhs_stconcat	./v_bbgen2.c	/^static int32 rhs_stconcat(struct expr_t *lcbndp) $/;"	f	file:	signature:(struct expr_t *lcbndp)
rhs_stconcat	./v_ex4.c	/^static void rhs_stconcat(byte *sbp, struct expr_t *lcbndp)$/;"	f	file:	signature:(byte *sbp, struct expr_t *lcbndp)
rhs_wp	./v.h	/^ word32 *rhs_wp;                 \/* rhs nb value pointer *\/$/;"	m	union:te_u	access:public
rhsbsel_	./cvmacros.h	478;"	d
rhsx	./v.h	/^ struct expr_t *rhsx;$/;"	m	struct:conta_t	typeref:struct:conta_t::expr_t	access:public
rhsx	./v.h	/^ struct expr_t *rhsx;$/;"	m	struct:proca_t	typeref:struct:proca_t::expr_t	access:public
right	./v.h	/^ struct tqnode_t *right;  \/* node's right child *\/$/;"	m	struct:tqnode_t	typeref:struct:tqnode_t::tqnode_t	access:public
right_rotate	./v_sim.c	/^static void right_rotate(struct tqnode_t *x)$/;"	f	file:	signature:(struct tqnode_t *x)
right_rotate_min	./v_sim.c	/^static void right_rotate_min(struct tqnode_t *x)$/;"	f	file:	signature:(struct tqnode_t *x)
rl_stmttyp	./v.h	/^ unsigned rl_stmttyp : 6;     \/* for break set at statment, real type *\/$/;"	m	struct:st_t	access:public
rm_1endjmp_bblk	./v_bbopt.c	/^static void rm_1endjmp_bblk(struct bblk_t *rm_bbp, struct flowg_t *fgp,$/;"	f	file:	signature:(struct bblk_t *rm_bbp, struct flowg_t *fgp, struct mod_t *mdp)
rm_afs_unreachable_bblks	./v_bbopt.c	/^static void rm_afs_unreachable_bblks(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
rm_and_merge_bblks	./v_bbopt.c	/^static void rm_and_merge_bblks(struct flowg_t *fgp, int32 rebuild_rpo)$/;"	f	file:	signature:(struct flowg_t *fgp, int32 rebuild_rpo)
rm_comb_dup_lds	./v_prp.c	/^static void rm_comb_dup_lds() $/;"	f	file:
rm_getc	./v_ex2.c	/^static int32 rm_getc(FILE *f)$/;"	f	file:	signature:(FILE *f)
rm_one_bbedge	./v_bbopt.c	/^static void rm_one_bbedge(struct bblk_t *jmpfr_bbp, struct bblk_t *jmpto_bbp) $/;"	f	file:	signature:(struct bblk_t *jmpfr_bbp, struct bblk_t *jmpto_bbp)
rm_ungetc	./v_ex2.c	/^static void rm_ungetc(int32 c, FILE *f)$/;"	f	file:	signature:(int32 c, FILE *f)
rmrd_comment	./v_ex2.c	/^static int32 rmrd_comment(FILE *f)$/;"	f	file:	signature:(FILE *f)
rng1	./v.h	/^ int32 *rng1;                  \/* range array for lsb indexed by dimension *\/$/;"	m	struct:mda_t	access:public
rng2	./v.h	/^ int32 *rng2;                  \/* range array for lsb indexed by dimension *\/$/;"	m	struct:mda_t	access:public
rngarr	./v.h	/^ struct rngarr_t *rngarr;$/;"	m	union:nx_u	typeref:struct:nx_u::rngarr_t	access:public
rngarr_t	./v.h	/^struct rngarr_t {$/;"	s
rngarr_t::ai1	./v.h	/^ int32 ai1, ai2;$/;"	m	struct:rngarr_t	access:public
rngarr_t::ai2	./v.h	/^ int32 ai1, ai2;$/;"	m	struct:rngarr_t	access:public
rngarr_t::ni1	./v.h	/^ int32 ni1, ni2;$/;"	m	struct:rngarr_t	access:public
rngarr_t::ni2	./v.h	/^ int32 ni1, ni2;$/;"	m	struct:rngarr_t	access:public
rngbeg	./cvc.c	/^  int32 rngbeg;$/;"	m	struct:warnsup_t	file:	access:public
rngdwir	./v.h	/^ struct rngdwir_t *rngdwir;$/;"	m	union:nx_u	typeref:struct:nx_u::rngdwir_t	access:public
rngdwir_t	./v.h	/^struct rngdwir_t {$/;"	s
rngdwir_t::n_delrep	./v.h	/^ unsigned n_delrep : 5;$/;"	m	struct:rngdwir_t	access:public
rngdwir_t::n_du	./v.h	/^ union del_u n_du;            \/* every bit has same delay for nets *\/ $/;"	m	struct:rngdwir_t	typeref:union:rngdwir_t::del_u	access:public
rngdwir_t::ni1	./v.h	/^ int32 ni1, ni2;$/;"	m	struct:rngdwir_t	access:public
rngdwir_t::ni2	./v.h	/^ int32 ni1, ni2;$/;"	m	struct:rngdwir_t	access:public
rngdwir_t::wschd_pbtevs	./v.h	/^ struct tev_t **wschd_pbtevs;  \/* any schd. event ndxes - indexed nwid*inst *\/$/;"	m	struct:rngdwir_t	typeref:struct:rngdwir_t::tev_t	access:public
rngend	./cvc.c	/^  int32 rngend;$/;"	m	struct:warnsup_t	file:	access:public
rngwir	./v.h	/^ struct rngwir_t *rngwir;$/;"	m	union:nx_u	typeref:struct:nx_u::rngwir_t	access:public
rngwir_t	./v.h	/^struct rngwir_t {$/;"	s
rngwir_t::ni1	./v.h	/^ int32 ni1, ni2;$/;"	m	struct:rngwir_t	access:public
rngwir_t::ni2	./v.h	/^ int32 ni1, ni2;$/;"	m	struct:rngwir_t	access:public
rooted_dfps	./v.h	/^ struct dfparam_t *rooted_dfps;\/* work for converting downward to rooted *\/$/;"	m	struct:dfparam_t	typeref:struct:dfparam_t::dfparam_t	access:public
rosync_tevp	./v.h	/^ struct tev_t **rosync_tevp;      \/* per inst ndx to ro sync event in list *\/ $/;"	m	struct:tfrec_t	typeref:struct:tfrec_t::tev_t	access:public
rp	./igen.h	/^ struct avlnode_t *lp, *rp;$/;"	m	struct:avlnode_t	typeref:struct:avlnode_t::	access:public
rp	./v.h	/^ struct tnode_t *lp, *rp;$/;"	m	struct:tnode_t	typeref:struct:tnode_t::	access:public
rt_change_rngrep	./v_prp.c	/^static void rt_change_rngrep(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
rt_tgl_t	./v.h	/^struct rt_tgl_t {$/;"	s
rt_tgl_t::idp	./v.h	/^ t_midat *idp;                \/* idp of this toggle *\/$/;"	m	struct:rt_tgl_t	access:public
rt_tgl_t::is_2state	./v.h	/^ unsigned is_2state : 1;      \/* T => toggled net is 2-state *\/$/;"	m	struct:rt_tgl_t	access:public
rt_tgl_t::last_valp	./v.h	/^ word32 *last_valp;           \/* last value time value *\/$/;"	m	struct:rt_tgl_t	access:public
rt_tgl_t::np	./v.h	/^ struct net_t *np;            \/* net this toggle is for *\/$/;"	m	struct:rt_tgl_t	typeref:struct:rt_tgl_t::net_t	access:public
rt_tgl_t::seen01p	./v.h	/^ word32 *seen01p;             \/* 0->1 bit mask *\/$/;"	m	struct:rt_tgl_t	access:public
rt_tgl_t::seen10p	./v.h	/^ word32 *seen10p;             \/* 1->0 bit mask *\/$/;"	m	struct:rt_tgl_t	access:public
rt_tgl_t::tognxt	./v.h	/^ struct rt_tgl_t *tognxt;     \/* next on the list *\/$/;"	m	struct:rt_tgl_t	typeref:struct:rt_tgl_t::rt_tgl_t	access:public
rtl_dist_chi_square	./v_ex2.c	/^static int32 rtl_dist_chi_square(int32 *seed, int32 df)$/;"	f	file:	signature:(int32 *seed, int32 df)
rtl_dist_erlang	./v_ex2.c	/^static int32 rtl_dist_erlang(int32 *seed, int32 k, int32 mean)$/;"	f	file:	signature:(int32 *seed, int32 k, int32 mean)
rtl_dist_exponential	./v_ex2.c	/^static int32 rtl_dist_exponential(int32 *seed, int32 mean)$/;"	f	file:	signature:(int32 *seed, int32 mean)
rtl_dist_normal	./v_ex2.c	/^static int32 rtl_dist_normal(int32 *seed, int32 mean, int32 sd)$/;"	f	file:	signature:(int32 *seed, int32 mean, int32 sd)
rtl_dist_poisson	./v_ex2.c	/^static int32 rtl_dist_poisson(int32 *seed, int32 mean)$/;"	f	file:	signature:(int32 *seed, int32 mean)
rtl_dist_t	./v_ex2.c	/^static int32 rtl_dist_t(int32 *seed, int32 df)$/;"	f	file:	signature:(int32 *seed, int32 df)
ru	./v.h	/^ union r_u ru;                \/* right sub expr. or ptr. to value union *\/$/;"	m	struct:expr_t	typeref:union:expr_t::r_u	access:public
rul_libs	./v.h	/^ struct cfgnamlst_t *rul_libs;\/* liblist clause - just list of libraries *\/$/;"	m	struct:cfgrule_t	typeref:struct:cfgrule_t::cfgnamlst_t	access:public
rul_lno	./v.h	/^ int32 rul_lno;$/;"	m	struct:cfgrule_t	access:public
rul_use_celnam	./v.h	/^ char *rul_use_celnam;$/;"	m	struct:cfgrule_t	access:public
rul_use_libnam	./v.h	/^ char *rul_use_libnam;        \/* use <lib name.>[cell name][:config] *\/$/;"	m	struct:cfgrule_t	access:public
rulnxt	./v.h	/^ struct cfgrule_t *rulnxt;$/;"	m	struct:cfgrule_t	typeref:struct:cfgrule_t::cfgrule_t	access:public
rultyp	./v.h	/^ unsigned rultyp : 8;         \/* type - cfg symbol number *\/$/;"	m	struct:cfgrule_t	access:public
run_dpi_interp_mkfil	./v_dpi.c	/^static void run_dpi_interp_mkfil(void)$/;"	f	file:	signature:(void)
run_executable	./cvc.c	/^static void run_executable(void)$/;"	f	file:	signature:(void)
run_makefile	./v_asmlnk.c	/^static void run_makefile(void)$/;"	f	file:	signature:(void)
running_bin_setup	./cvc.c	/^static void running_bin_setup(void)$/;"	f	file:	signature:(void)
rvat_beg_tim	./fstapi.c	/^uint64_t rvat_beg_tim, rvat_end_tim;$/;"	m	struct:fstReaderContext	file:	access:public
rvat_chain_facidx	./fstapi.c	/^fstHandle rvat_chain_facidx;$/;"	m	struct:fstReaderContext	file:	access:public
rvat_chain_len	./fstapi.c	/^uint32_t rvat_chain_len;$/;"	m	struct:fstReaderContext	file:	access:public
rvat_chain_mem	./fstapi.c	/^unsigned char *rvat_chain_mem;$/;"	m	struct:fstReaderContext	file:	access:public
rvat_chain_pos_idx	./fstapi.c	/^uint32_t rvat_chain_pos_idx;$/;"	m	struct:fstReaderContext	file:	access:public
rvat_chain_pos_tidx	./fstapi.c	/^uint32_t rvat_chain_pos_tidx;$/;"	m	struct:fstReaderContext	file:	access:public
rvat_chain_pos_time	./fstapi.c	/^uint64_t rvat_chain_pos_time;$/;"	m	struct:fstReaderContext	file:	access:public
rvat_chain_pos_valid	./fstapi.c	/^unsigned rvat_chain_pos_valid : 1;$/;"	m	struct:fstReaderContext	file:	access:public
rvat_chain_table	./fstapi.c	/^off_t *rvat_chain_table;$/;"	m	struct:fstReaderContext	file:	access:public
rvat_chain_table_lengths	./fstapi.c	/^uint32_t *rvat_chain_table_lengths;$/;"	m	struct:fstReaderContext	file:	access:public
rvat_data_valid	./fstapi.c	/^unsigned rvat_data_valid : 1;$/;"	m	struct:fstReaderContext	file:	access:public
rvat_end_tim	./fstapi.c	/^uint64_t rvat_beg_tim, rvat_end_tim;$/;"	m	struct:fstReaderContext	file:	access:public
rvat_frame_data	./fstapi.c	/^unsigned char *rvat_frame_data;$/;"	m	struct:fstReaderContext	file:	access:public
rvat_frame_maxhandle	./fstapi.c	/^uint64_t rvat_frame_maxhandle;$/;"	m	struct:fstReaderContext	file:	access:public
rvat_sig_offs	./fstapi.c	/^uint32_t *rvat_sig_offs;$/;"	m	struct:fstReaderContext	file:	access:public
rvat_time_table	./fstapi.c	/^uint64_t *rvat_time_table;$/;"	m	struct:fstReaderContext	file:	access:public
rvat_vc_maxhandle	./fstapi.c	/^uint64_t rvat_vc_maxhandle;$/;"	m	struct:fstReaderContext	file:	access:public
rvat_vc_start	./fstapi.c	/^off_t rvat_vc_start;$/;"	m	struct:fstReaderContext	file:	access:public
same_tchk_cond	./v_sdf.c	/^static int32 same_tchk_cond(struct tcterm_t *tctp, struct expr_t *condxp)$/;"	f	file:	signature:(struct tcterm_t *tctp, struct expr_t *condxp)
same_vpi_handle	./v_vpi2.c	/^static int32 same_vpi_handle(struct h_t **htab, int32 fr, int32 num,$/;"	f	file:	signature:(struct h_t **htab, int32 fr, int32 num, struct h_t *hp2, struct hrec_t *hrp2)
sav_mdfps	./v.h	/^ struct dfparam_t *sav_mdfps; \/* place to copy dfps to put back pre gen *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::dfparam_t	access:public
sav_pvc_flgs	./v.h	/^ byte *sav_pvc_flgs;$/;"	m	struct:tfarg_t	access:public
sav_xinfos	./v.h	/^ char **sav_xinfos;           \/* per inst evalp saved expr info rec *\/$/;"	m	struct:tfarg_t	access:public
savchain_ip	./igen.h	/^ struct insn_t *savchain_ip;  \/* for tn define or deflst insn, previous def *\/$/;"	m	struct:iusedef_t	typeref:struct:iusedef_t::insn_t	access:public
save_all_param_vals	./v_genfx.c	/^static void save_all_param_vals(void)$/;"	f	file:	signature:(void)
save_bidandtran_npps	./v_trch.c	/^static void save_bidandtran_npps(void)$/;"	f	file:	signature:(void)
save_fgs_next_nchg_in_reg_and_merge_fgips	./v_asmlnk.c	/^static void save_fgs_next_nchg_in_reg_and_merge_fgips(void)$/;"	f	file:	signature:(void)
save_idp_	./cvmacros.h	196;"	d
save_task_scope	./v_bbgen.c	/^static void save_task_scope(struct task_t *tskp)$/;"	f	file:	signature:(struct task_t *tskp)
savwrkarea	./v.h	/^ char **savwrkarea;           \/* per inst saved work areas *\/$/;"	m	struct:tfrec_t	access:public
sbi	./v.h	/^ int32 sbi;                   \/* and bit *\/$/;"	m	struct:impth_t	access:public
sbsts	./v.h	/^ struct st_t *sbsts;          \/* unnamed block statement list *\/$/;"	m	union:st_u	typeref:struct:st_u::st_t	access:public
scalar_mdprt_ofs	./v.h	/^ size_t scalar_mdprt_ofs;     \/* idp offset to this net chg *\/$/;"	m	struct:net_pin_t	access:public
scalar_nb_val	./v.h	/^ byte scalar_nb_val;          \/* scalar non-blocking value *\/$/;"	m	struct:tev_t	access:public
scalar_rm_iconn_npps	./v_prp.c	/^static int32 scalar_rm_iconn_npps(int32 num_npps)$/;"	f	file:	signature:(int32 num_npps)
scale	./igen.h	/^ unsigned scale : 3;          \/* scale - 0 for none, 1=2x, 2= 4x, 3=8x *\/ $/;"	m	struct:amode_t	access:public
scanf_getc	./v_ex.c	/^static int32 scanf_getc(FILE *f)$/;"	f	file:	signature:(FILE *f)
scanf_ungetc	./v_ex.c	/^static void scanf_ungetc(int32 c, FILE *f)$/;"	f	file:	signature:(int32 c, FILE *f)
scanhptab	./v.h	/^ struct h_t **scanhptab;      \/* tab of ptr to handles built by vpi iterator *\/$/;"	m	struct:pviter_t	typeref:struct:pviter_t::h_t	access:public
scausx	./v.h	/^ struct expr_t *scausx;       \/* cause expr. node symbor or global id. *\/$/;"	m	union:st_u	typeref:struct:st_u::expr_t	access:public
schd_1bitpthdrvr	./v_trch.c	/^static int32 schd_1bitpthdrvr(struct net_t *np, int32 biti,$/;"	f	file:	signature:(struct net_t *np, int32 biti, struct tev_t **itevp)
schd_bidpthdrvrs	./v_trch.c	/^static void schd_bidpthdrvrs(struct net_t *np, struct xstk_t *drv_xsp,$/;"	f	file:	signature:(struct net_t *np, struct xstk_t *drv_xsp, struct xstk_t *trnva_xsp)
schd_drv_ofs	./v.h	/^ size_t schd_drv_ofs;          \/* idp scheduled value *\/$/;"	m	struct:conta_t	access:public
schd_tevs_ofs	./v.h	/^ size_t schd_tevs_ofs;        \/* idp index storage of scheduled events ndxes *\/$/;"	m	struct:gate_t	access:public
schdev_t	./v.h	/^struct schdev_t {$/;"	s
schdev_t::evndxtab	./v.h	/^ struct tev_t **evndxtab; $/;"	m	struct:schdev_t	typeref:struct:schdev_t::tev_t	access:public
schdev_t::evnp	./v.h	/^ struct net_t *evnp;$/;"	m	struct:schdev_t	typeref:struct:schdev_t::net_t	access:public
sched_conta_assign	./v_ex3.c	/^static void sched_conta_assign(struct expr_t *xlhs, word32 *ap, word32 *bp)$/;"	f	file:	signature:(struct expr_t *xlhs, word32 *ap, word32 *bp)
sched_fj_subthread	./v_ex.c	/^static struct thread_t *sched_fj_subthread(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
sched_proc_delay	./v_ex.c	/^static void sched_proc_delay(struct delctrl_t *dctp, word32 *wp, int32 wlen)$/;"	f	file:	signature:(struct delctrl_t *dctp, word32 *wp, int32 wlen)
schedassign_to_bit	./v_ex3.c	/^static void schedassign_to_bit(struct net_t *np, struct expr_t *idndp,$/;"	f	file:	signature:(struct net_t *np, struct expr_t *idndp, struct expr_t *ndx1, word32 *ap, word32 *bp)
schedassign_to_psel	./v_ex3.c	/^static void schedassign_to_psel(struct expr_t *xlhs, word32 *ap, word32 *bp)$/;"	f	file:	signature:(struct expr_t *xlhs, word32 *ap, word32 *bp)
schedule_1gev	./v_sim.c	/^static struct tev_t *schedule_1gev(struct gate_t *gp, word64 gdel,$/;"	f	file:	signature:(struct gate_t *gp, word64 gdel, word64 schtim, int32 is_acc)
scope	./fstapi.h	/^                } scope;$/;"	m	union:fstHier::__anon18	typeref:struct:fstHier::__anon18::fstHierScope	access:public
scope_count	./fstapi.c	/^uint64_t scope_count;$/;"	m	struct:fstReaderContext	file:	access:public
scope_lini_inrng	./v_dbg2.c	/^static int32 scope_lini_inrng(int32 lini, int32 ifi, int32 st_lini, int32 st_ifi,$/;"	f	file:	signature:(int32 lini, int32 ifi, int32 st_lini, int32 st_ifi, int32 last_lini, int32 last_ifi)
scope_msg	./v_dbg.c	/^static char *scope_msg[] = { $/;"	v	file:
scopnam	./v.h	/^ char *scopnam;$/;"	m	struct:sdfnamlst_t	access:public
scs	./v.h	/^ struct case_t scs;$/;"	m	union:st_u	typeref:struct:st_u::case_t	access:public
sdc	./v.h	/^ struct delctrl_t *sdc;$/;"	m	union:st_u	typeref:struct:st_u::delctrl_t	access:public
sdf_adjust_incr	./v_sdf.c	/^static int32 sdf_adjust_incr(struct net_t *np, struct xstk_t *xsp, int32 is_minus)$/;"	f	file:	signature:(struct net_t *np, struct xstk_t *xsp, int32 is_minus)
sdf_annotate	./v_sdf.c	/^static void sdf_annotate(char *sdf_fnam, char *sdf_scopnam, int32 fnind,$/;"	f	file:	signature:(char *sdf_fnam, char *sdf_scopnam, int32 fnind, int32 slcnt)
sdf_annotate_stp	./v.h	/^ struct st_t *sdf_annotate_stp;$/;"	m	struct:sdf_tskenlst_t	typeref:struct:sdf_tskenlst_t::st_t	access:public
sdf_bld_expnode	./v_sdf.c	/^static int32 sdf_bld_expnode(void)$/;"	f	file:	signature:(void)
sdf_collect_num	./v_sdf.c	/^static int32 sdf_collect_num(FILE *f, int32 c)$/;"	f	file:	signature:(FILE *f, int32 c)
sdf_collect_str	./v_sdf.c	/^static int32 sdf_collect_str(FILE *f)$/;"	f	file:	signature:(FILE *f)
sdf_ctab	./v_sdf.c	/^static char sdf_ctab[128] = {$/;"	v	file:
sdf_fillchk_tim	./v_sdf.c	/^static int32 sdf_fillchk_tim(word64 *tim, int32 *negdel, int32 *empty_fld,$/;"	f	file:	signature:(word64 *tim, int32 *negdel, int32 *empty_fld, int32 *has_emp, p_vpi_delay delay_p, char *sdfmsg)
sdf_getsel_indices	./v_sdf.c	/^static int32 sdf_getsel_indices(int32 *i1, int32 *i2, char *s)$/;"	f	file:	signature:(int32 *i1, int32 *i2, char *s)
sdf_push_rvalue	./v_sdf.c	/^static struct xstk_t *sdf_push_rvalue(struct net_t *np, double d1)$/;"	f	file:	signature:(struct net_t *np, double d1)
sdf_rd_comment	./v_sdf.c	/^static int32 sdf_rd_comment(FILE *f)$/;"	f	file:	signature:(FILE *f)
sdf_skip_form	./v_sdf.c	/^static int32 sdf_skip_form(FILE *f)$/;"	f	file:	signature:(FILE *f)
sdf_stp_mod	./v.h	/^ struct mod_t *sdf_stp_mod;$/;"	m	struct:sdf_tskenlst_t	typeref:struct:sdf_tskenlst_t::mod_t	access:public
sdf_tsken_nxt	./v.h	/^ struct sdf_tskenlst_t *sdf_tsken_nxt;$/;"	m	struct:sdf_tskenlst_t	typeref:struct:sdf_tskenlst_t::sdf_tskenlst_t	access:public
sdf_tskenlst_t	./v.h	/^struct sdf_tskenlst_t {$/;"	s
sdf_tskenlst_t::sdf_annotate_stp	./v.h	/^ struct st_t *sdf_annotate_stp;$/;"	m	struct:sdf_tskenlst_t	typeref:struct:sdf_tskenlst_t::st_t	access:public
sdf_tskenlst_t::sdf_stp_mod	./v.h	/^ struct mod_t *sdf_stp_mod;$/;"	m	struct:sdf_tskenlst_t	typeref:struct:sdf_tskenlst_t::mod_t	access:public
sdf_tskenlst_t::sdf_tsken_nxt	./v.h	/^ struct sdf_tskenlst_t *sdf_tsken_nxt;$/;"	m	struct:sdf_tskenlst_t	typeref:struct:sdf_tskenlst_t::sdf_tskenlst_t	access:public
sdfkeywds_t	./v_sdf.c	/^struct sdfkeywds_t {$/;"	s	file:
sdfkeywds_t::sknam	./v_sdf.c	/^ char *sknam;$/;"	m	struct:sdfkeywds_t	file:	access:public
sdfkeywds_t::sknum	./v_sdf.c	/^ int32 sknum;$/;"	m	struct:sdfkeywds_t	file:	access:public
sdfnamlst_t	./v.h	/^struct sdfnamlst_t { $/;"	s
sdfnamlst_t::fnam	./v.h	/^ char *fnam;$/;"	m	struct:sdfnamlst_t	access:public
sdfnamlst_t::opt_slcnt	./v.h	/^ int32 opt_slcnt;$/;"	m	struct:sdfnamlst_t	access:public
sdfnamlst_t::optfnam	./v.h	/^ char *optfnam;$/;"	m	struct:sdfnamlst_t	access:public
sdfnamlst_t::scopnam	./v.h	/^ char *scopnam;$/;"	m	struct:sdfnamlst_t	access:public
sdfnamlst_t::sdfnamnxt	./v.h	/^ struct sdfnamlst_t *sdfnamnxt;$/;"	m	struct:sdfnamlst_t	typeref:struct:sdfnamlst_t::sdfnamlst_t	access:public
sdfnamnxt	./v.h	/^ struct sdfnamlst_t *sdfnamnxt;$/;"	m	struct:sdfnamlst_t	typeref:struct:sdfnamlst_t::sdfnamlst_t	access:public
sdisp_st	./v_cnv.c	/^static void sdisp_st(struct expr_t *xp)$/;"	f	file:	signature:(struct expr_t *xp)
sdisp_string	./v_cnv.c	/^static void sdisp_string(struct expr_t *xp)$/;"	f	file:	signature:(struct expr_t *xp)
sdispb	./v_cnv.c	/^static void sdispb(word32 *ap, word32 *bp, int32 blen, int32 trim)$/;"	f	file:	signature:(word32 *ap, word32 *bp, int32 blen, int32 trim)
sdispd	./v_cnv.c	/^static void sdispd(word32 *ap, word32 *bp, int32 blen, int32 trim, $/;"	f	file:	signature:(word32 *ap, word32 *bp, int32 blen, int32 trim, int32 dsigned)
sdisph	./v_cnv.c	/^static void sdisph(word32 *ap, word32 *bp, int32 blen, int32 trim)$/;"	f	file:	signature:(word32 *ap, word32 *bp, int32 blen, int32 trim)
sdispo	./v_cnv.c	/^static void sdispo(word32 *ap, word32 *bp, int32 blen, int32 trim)$/;"	f	file:	signature:(word32 *ap, word32 *bp, int32 blen, int32 trim)
sdsable	./v.h	/^ struct dsable_t sdsable;     \/* disable struct (also place for goto dest) *\/$/;"	m	union:st_u	typeref:struct:st_u::dsable_t	access:public
sdt_workspace	./fstapi.h	/^                unsigned char sdt_workspace; \/* zeroed out by FST reader, for client code use *\/$/;"	m	struct:fstHier::__anon18::fstHierVar	access:public
search_link_fud_uses	./v_bbopt.c	/^static void search_link_fud_uses(struct bblk_t *bbp)$/;"	f	file:	signature:(struct bblk_t *bbp)
secnum	./fstapi.c	/^uint32_t secnum;$/;"	m	struct:fstWriterContext	file:	access:public
section_header_only	./fstapi.c	/^unsigned section_header_only : 1;$/;"	m	struct:fstWriterContext	file:	access:public
section_header_truncpos	./fstapi.c	/^off_t section_header_truncpos;$/;"	m	struct:fstWriterContext	file:	access:public
section_start	./fstapi.c	/^off_t section_start;$/;"	m	struct:fstWriterContext	file:	access:public
seen01p	./v.h	/^ word32 *seen01p;             \/* 0->1 bit mask *\/$/;"	m	struct:rt_tgl_t	access:public
seen10p	./v.h	/^ word32 *seen10p;             \/* 1->0 bit mask *\/$/;"	m	struct:rt_tgl_t	access:public
segv_handle	./cvc.c	/^static void segv_handle(void)$/;"	f	file:	signature:(void)
sel_ndx	./v.h	/^ word32 sel_ndx;      \/* used to hold array select index for <= saving *\/$/;"	m	struct:tev_t	access:public
sep_lpad_fmt	./v_cnv.c	/^static char *sep_lpad_fmt(char *chp, int32 *lpad)$/;"	f	file:	signature:(char *chp, int32 *lpad)
sep_mdgates	./v_fx.c	/^static void sep_mdgates(void)$/;"	f	file:	signature:(void)
sep_real_fmt	./v_cnv.c	/^static char *sep_real_fmt(char *fmtstr, char *chp, int32 trim)$/;"	f	file:	signature:(char *fmtstr, char *chp, int32 trim)
sequencer_1fg_track_optimize	./v_bbopt.c	/^static int32 sequencer_1fg_track_optimize(struct flowg_t *fgp,$/;"	f	file:	signature:(struct flowg_t *fgp, struct mod_t *mdp)
set1_garr_pndparm	./v_genfx.c	/^static void set1_garr_pndparm(struct net_t *np, struct itree_t *itp) $/;"	f	file:	signature:(struct net_t *np, struct itree_t *itp)
set2_opempty	./v_src2.c	/^static void set2_opempty(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
set2_pnd_gi_rnges	./v_genfx.c	/^static void set2_pnd_gi_rnges(struct mod_t *up_mdp, struct itree_t *up_itp)$/;"	f	file:	signature:(struct mod_t *up_mdp, struct itree_t *up_itp)
set2_poundparams	./v_genfx.c	/^static void set2_poundparams(struct itree_t *up_itp)$/;"	f	file:	signature:(struct itree_t *up_itp)
set2_rhswidth	./v_fx3.c	/^static void set2_rhswidth(struct expr_t *rhsx, int32 cwid)$/;"	f	file:	signature:(struct expr_t *rhsx, int32 cwid)
set_1bit_dp_eval_type	./v_ex4.c	/^static void set_1bit_dp_eval_type(struct net_t *np, struct dpctrl_t *dpcp)$/;"	f	file:	signature:(struct net_t *np, struct dpctrl_t *dpcp)
set_1defparam	./v_genfx.c	/^static void set_1defparam(struct dfparam_t *dfpp)$/;"	f	file:	signature:(struct dfparam_t *dfpp)
set_1defparam_iis	./v_genfx.c	/^static void set_1defparam_iis(struct dfparam_t *dfpp,$/;"	f	file:	signature:(struct dfparam_t *dfpp, struct gref_t *grp)
set_1fg_insn_out_symbolic_vals	./v_bbopt.c	/^static void set_1fg_insn_out_symbolic_vals(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
set_1fil_tgl_seen_flds	./v_cvr.c	/^static void set_1fil_tgl_seen_flds(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
set_1gblk_gblksy_elus	./v_fx.c	/^static void set_1gblk_gblksy_elus(struct mod_t *mdp, struct genblk_t *gblkp)$/;"	f	file:	signature:(struct mod_t *mdp, struct genblk_t *gblkp)
set_1gitem_gblksy_elus	./v_fx.c	/^static void set_1gitem_gblksy_elus(struct mod_t *mdp,  struct genitem_t *gip)$/;"	f	file:	signature:(struct mod_t *mdp, struct genitem_t *gip)
set_1is1val	./v_del.c	/^static void set_1is1val(struct gate_t *gp, int32 iti, int32 nvals, word64 *ntim, $/;"	f	file:	signature:(struct gate_t *gp, int32 iti, int32 nvals, word64 *ntim, int32 mwid)
set_1is416val	./v_del.c	/^static void set_1is416val(struct gate_t *gp, int32 iti, int32 nvals, word64 *ntim, $/;"	f	file:	signature:(struct gate_t *gp, int32 iti, int32 nvals, word64 *ntim, int32 mwid)
set_1mod_all_nets_acc	./v_src3.c	/^static void set_1mod_all_nets_acc(int32 acc_lev, struct mod_t *mdp,$/;"	f	file:	signature:(int32 acc_lev, struct mod_t *mdp, int32 is_excld)
set_1mpx_stren	./v_fx2.c	/^static void set_1mpx_stren(struct expr_t *mpx)$/;"	f	file:	signature:(struct expr_t *mpx)
set_1net_init_tgl_state	./v_cvr.c	/^static void set_1net_init_tgl_state(struct net_t *np, struct itree_t *itp,$/;"	f	file:	signature:(struct net_t *np, struct itree_t *itp, int32 *tgl01arr, int32 *tgl10arr)
set_1pthdel	./v_sdf.c	/^static void set_1pthdel(struct pthlst_t *plp, struct itree_t *itp,$/;"	f	file:	signature:(struct pthlst_t *plp, struct itree_t *itp, struct mod_t *ctmdp)
set_1stmt_ent_bit	./v_cvcrt.c	/^static struct st_t *set_1stmt_ent_bit(struct mod_t *mdp, struct st_t *stp)$/;"	f	file:	signature:(struct mod_t *mdp, struct st_t *stp)
set_all_sym_to_gblk_ptrs	./v_fx.c	/^static void set_all_sym_to_gblk_ptrs(void)$/;"	f	file:	signature:(void)
set_alloutpths_dels	./v_sdf.c	/^static void set_alloutpths_dels(char *qualport, int32 pi1, int32 pi2,$/;"	f	file:	signature:(char *qualport, int32 pi1, int32 pi2, struct itree_t *itp, struct mod_t *ctmdp)
set_allpths_dels	./v_sdf.c	/^static void set_allpths_dels(struct itree_t *itp, struct mod_t *ctmdp)$/;"	f	file:	signature:(struct itree_t *itp, struct mod_t *ctmdp)
set_amode_ebp_disp	./v_bbopt.c	/^static void set_amode_ebp_disp(int32 tni, struct amode_t *amp)$/;"	f	file:	signature:(int32 tni, struct amode_t *amp)
set_asl_call_amode	./v_bbgen3.c	/^static void set_asl_call_amode(struct amode_t *amp, int32 arg_ti,$/;"	f	file:	signature:(struct amode_t *amp, int32 arg_ti, int32 aslotyp)
set_asl_wrapper_trk_state_val	./v_bbopt.c	/^static void set_asl_wrapper_trk_state_val(struct insn_t *ip)$/;"	f	file:	signature:(struct insn_t *ip)
set_asm_file_names	./v_bbgen.c	/^static void set_asm_file_names(int32 nmods)$/;"	f	file:	signature:(int32 nmods)
set_bblk_rev_postorder_nums	./v_bbopt.c	/^static void set_bblk_rev_postorder_nums(struct bblk_t *cbbp, $/;"	f	file:	signature:(struct bblk_t *cbbp, struct bblk_t *case_bbp)
set_byteval_	./cvmacros.h	495;"	d
set_chgsubfld	./v_prp.c	/^static void set_chgsubfld(struct net_pin_t *npp, int32 chgtyp, char *chgp) $/;"	f	file:	signature:(struct net_pin_t *npp, int32 chgtyp, char *chgp)
set_cmp_trk_state_val	./v_bbopt.c	/^static void set_cmp_trk_state_val(struct insn_t *cmp_ip)$/;"	f	file:	signature:(struct insn_t *cmp_ip)
set_conta_idp_ofs	./v_prp2.c	/^static void set_conta_idp_ofs(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
set_dce_strenchg_on	./v_vpi.c	/^static void set_dce_strenchg_on(struct dceauxlst_t *dceaux_hd)$/;"	f	file:	signature:(struct dceauxlst_t *dceaux_hd)
set_deflst_in_state_val	./v_bbopt.c	/^static void set_deflst_in_state_val(struct insn_t *ip)$/;"	f	file:	signature:(struct insn_t *ip)
set_device_del	./v_sdf.c	/^static void set_device_del(struct itree_t *itp, struct gate_t *ctgp,$/;"	f	file:	signature:(struct itree_t *itp, struct gate_t *ctgp, struct sy_t *tsyp)
set_dmpv_bld_func	./v_ex4.c	/^static void set_dmpv_bld_func(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
set_dpi_arg_from_net	./v_dpi.c	/^static void set_dpi_arg_from_net(struct task_pin_t *tpp, int32 argi,$/;"	f	file:	signature:(struct task_pin_t *tpp, int32 argi, struct dpiarg_t *dap, union adpi_u *a_u_tab)
set_dpi_arg_from_xpr	./v_dpi.c	/^static void set_dpi_arg_from_xpr(struct expr_t *argxp, struct task_pin_t *tpp,$/;"	f	file:	signature:(struct expr_t *argxp, struct task_pin_t *tpp, int32 argi, struct dpiarg_t *dap, union adpi_u *a_u_tab)
set_dpi_arg_from_xstk	./v_dpi.c	/^static void set_dpi_arg_from_xstk(struct xstk_t *xsp, struct task_pin_t *tpp,$/;"	f	file:	signature:(struct xstk_t *xsp, struct task_pin_t *tpp, int32 argi, struct dpiarg_t *dap, union adpi_u *a_u_tab)
set_drvn_const_as_if_tgled	./v_cvr.c	/^static void set_drvn_const_as_if_tgled(void)$/;"	f	file:	signature:(void)
set_dsgn_tgl_cover_state	./v_src3.c	/^static void set_dsgn_tgl_cover_state(void) $/;"	f	file:	signature:(void)
set_event_cover_bits	./v_src3.c	/^static void set_event_cover_bits(struct mod_t *mdp, struct inst_t *ip,$/;"	f	file:	signature:(struct mod_t *mdp, struct inst_t *ip, int32 is_excld)
set_fcall_widths	./v_fx3.c	/^static void set_fcall_widths(struct expr_t *fcrhsx,$/;"	f	file:	signature:(struct expr_t *fcrhsx, struct task_t *tskp)
set_from_hconn_unopts	./v_ex4.c	/^static void set_from_hconn_unopts(struct mod_t *imdp, struct inst_t *ip,$/;"	f	file:	signature:(struct mod_t *imdp, struct inst_t *ip, int32 pi, struct expr_t *xp, struct mod_pin_t *mpp, int32 pbi)
set_from_mpp_unopts	./v_ex4.c	/^static void set_from_mpp_unopts(struct mod_t *mdp, struct mod_pin_t *mpp,$/;"	f	file:	signature:(struct mod_t *mdp, struct mod_pin_t *mpp, int32 pbi)
set_gate_idp_ofs	./v_prp2.c	/^static void set_gate_idp_ofs(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
set_gia_expr_pndparms	./v_genfx.c	/^static void set_gia_expr_pndparms(struct expr_t *xp, struct itree_t *itp)$/;"	f	file:	signature:(struct expr_t *xp, struct itree_t *itp)
set_gia_ranges	./v_genfx.c	/^static void set_gia_ranges(void)$/;"	f	file:	signature:(void)
set_half_recrem_tchk_defs	./v_sdf.c	/^static void set_half_recrem_tchk_defs(struct tclst_t *tclhd,$/;"	f	file:	signature:(struct tclst_t *tclhd, int32 sdf_tctyp, struct itree_t *itp, struct mod_t *ctmdp)
set_half_setuphold_tchk_defs	./v_sdf.c	/^static void set_half_setuphold_tchk_defs(struct tclst_t *tclhd,$/;"	f	file:	signature:(struct tclst_t *tclhd, int32 sdf_tctyp, struct itree_t *itp, struct mod_t *ctmdp)
set_iact_dmpv_all_nd_nchgstore	./v_fx3.c	/^static void set_iact_dmpv_all_nd_nchgstore(void)$/;"	f	file:	signature:(void)
set_iact_dmpvmod_nd_nchgstore	./v_fx3.c	/^static void set_iact_dmpvmod_nd_nchgstore(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
set_idp_	./cvmacros.h	186;"	d
set_insn_dst_state_val	./v_bbopt.c	/^static void set_insn_dst_state_val(struct insn_t *ip)$/;"	f	file:	signature:(struct insn_t *ip)
set_ioprtnets	./v_src.c	/^static void set_ioprtnets(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
set_isnum_idp_ofs	./v_prp2.c	/^static void set_isnum_idp_ofs(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
set_lhs_expr_drvrtyp	./v_fx2.c	/^static void set_lhs_expr_drvrtyp(struct expr_t *xp, int32 drvr_typ, int32 fnind,$/;"	f	file:	signature:(struct expr_t *xp, int32 drvr_typ, int32 fnind, int32 flcnt)
set_logic_gdel_tox_val	./v_sdf.c	/^static void set_logic_gdel_tox_val(struct gate_t *gp)$/;"	f	file:	signature:(struct gate_t *gp)
set_mipd_dels	./v_sdf.c	/^static void set_mipd_dels(struct itree_t *itp, char *qualport, int32 si1,$/;"	f	file:	signature:(struct itree_t *itp, char *qualport, int32 si1, int32 si2)
set_msg	./v_dbg.c	/^static char *set_msg[] = { $/;"	v	file:
set_mstmt_stp	./v_prp2.c	/^static void set_mstmt_stp(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
set_nchg_idp_ofs	./v_prp2.c	/^static void set_nchg_idp_ofs(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
set_net_dce_expr_ofs	./v_prp2.c	/^static void set_net_dce_expr_ofs(struct net_t *np, struct mod_t *mdp)$/;"	f	file:	signature:(struct net_t *np, struct mod_t *mdp)
set_net_dce_idp_map	./v_prp2.c	/^static void set_net_dce_idp_map(struct net_t *np, struct mod_t *mdp)$/;"	f	file:	signature:(struct net_t *np, struct mod_t *mdp)
set_net_npp_tchk_ofs	./v_prp2.c	/^static void set_net_npp_tchk_ofs(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
set_net_tchk_chg_val_idp_map	./v_prp2.c	/^static void set_net_tchk_chg_val_idp_map(struct net_t *np, struct mod_t *mdp)$/;"	f	file:	signature:(struct net_t *np, struct mod_t *mdp)
set_net_toggle_ofs	./v_prp2.c	/^static void set_net_toggle_ofs(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
set_nonblocking_fg_num_to_ctev	./v_bbgen.c	/^static void set_nonblocking_fg_num_to_ctev(struct ctev_t *ctevp, $/;"	f	file:	signature:(struct ctev_t *ctevp, struct st_t *stp)
set_optcfg_bits_from_optcfgfils	./v_src3.c	/^static void set_optcfg_bits_from_optcfgfils(void)$/;"	f	file:	signature:(void)
set_optim_nflds	./v_prp.c	/^static void set_optim_nflds(struct net_t *np, int32 mod_has_dumpports)$/;"	f	file:	signature:(struct net_t *np, int32 mod_has_dumpports)
set_other_than_tgl_1subtree_coverage	./v_src3.c	/^static void set_other_than_tgl_1subtree_coverage(struct mod_t *mdp,$/;"	f	file:	signature:(struct mod_t *mdp, int32 level, int32 oc_mask, int32 is_excld)
set_parent_xprop_lstofsts	./v_xprop.c	/^static void set_parent_xprop_lstofsts(struct st_t *hdstp, int32 slevel)$/;"	f	file:	signature:(struct st_t *hdstp, int32 slevel)
set_parent_xprop_stmt	./v_xprop.c	/^static struct st_t *set_parent_xprop_stmt(struct st_t *stp, int32 slevel)$/;"	f	file:	signature:(struct st_t *stp, int32 slevel)
set_parmval_from_isxpr	./v_genfx.c	/^static void set_parmval_from_isxpr(struct net_t *np, struct expr_t *xp,$/;"	f	file:	signature:(struct net_t *np, struct expr_t *xp, struct mod_t *mdp)
set_peribits_excluded_from_optcfg_as_tgl	./v_cvr.c	/^static void set_peribits_excluded_from_optcfg_as_tgl(void)$/;"	f	file:	signature:(void)
set_plitab_acc	./v_src3.c	/^static void set_plitab_acc(int32 acc_lev, struct mod_t *mdp,$/;"	f	file:	signature:(int32 acc_lev, struct mod_t *mdp, struct inst_t *ip, struct net_t *np, int32 is_excld)
set_pnd_gi_rnges	./v_genfx.c	/^static void set_pnd_gi_rnges(void)$/;"	f	file:	signature:(void)
set_process_wire_ev_flag	./v_prp.c	/^static void set_process_wire_ev_flag(struct mod_t *mdp, struct net_t *np)$/;"	f	file:	signature:(struct mod_t *mdp, struct net_t *np)
set_qc_frcassgn_net	./v_fx2.c	/^static void set_qc_frcassgn_net(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
set_regtox_	./cvmacros.h	501;"	d
set_restore_xprop_accum_block	./v_xprop.c	/^static void set_restore_xprop_accum_block(struct xprop_t *xprop, $/;"	f	file:	signature:(struct xprop_t *xprop, int32 combine_blocks, int32 combine_to_self)
set_rhs_signed	./v_fx3.c	/^static void set_rhs_signed(struct expr_t *rhsx)$/;"	f	file:	signature:(struct expr_t *rhsx)
set_rpos_and_ent_bblklst	./v_bbopt.c	/^static void set_rpos_and_ent_bblklst(struct flowg_t *fgp,$/;"	f	file:	signature:(struct flowg_t *fgp, struct mod_t *mdp)
set_save_idp_	./cvmacros.h	182;"	d
set_save_idp_itp_	./cvmacros.h	192;"	d
set_scalar_drvr_type	./v_fx2.c	/^static void set_scalar_drvr_type(struct net_t *np, int32 drvr_typ)$/;"	f	file:	signature:(struct net_t *np, int32 drvr_typ)
set_scope_loc	./v_dbg2.c	/^static void set_scope_loc(t_midat *in_idp, struct task_t *tskp, $/;"	f	file:	signature:(t_midat *in_idp, struct task_t *tskp, int32 *ref_ifi, int32 *ref_lini)
set_specitem_class	./v_ms.c	/^static int32 set_specitem_class(void)$/;"	f	file:	signature:(void)
set_stlst_ent_bits	./v_cvcrt.c	/^static void set_stlst_ent_bits(struct mod_t *mdp, struct st_t *hdstp)$/;"	f	file:	signature:(struct mod_t *mdp, struct st_t *hdstp)
set_stmt_cover_bits	./v_src3.c	/^static void set_stmt_cover_bits(struct mod_t *mdp, struct inst_t *ip,$/;"	f	file:	signature:(struct mod_t *mdp, struct inst_t *ip, int32 is_excld)
set_syncto_tokclass	./v_ms.c	/^static int32 set_syncto_tokclass(int32 ttyp) $/;"	f	file:	signature:(int32 ttyp)
set_sysfcall_widths	./v_fx3.c	/^static void set_sysfcall_widths(struct expr_t *fcrhsx)$/;"	f	file:	signature:(struct expr_t *fcrhsx)
set_tevs_idp_ofs	./v_prp2.c	/^static void set_tevs_idp_ofs(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
set_tfmt_dflts	./cvc.c	/^static void set_tfmt_dflts(void)$/;"	f	file:	signature:(void)
set_tgl_1subtree_coverage	./v_src3.c	/^static void set_tgl_1subtree_coverage(struct itree_t *itp, int32 level,$/;"	f	file:	signature:(struct itree_t *itp, int32 level, int32 oc_mask, int32 is_excld)
set_toz_gdel_tox_val	./v_sdf.c	/^static void set_toz_gdel_tox_val(struct gate_t *gp)$/;"	f	file:	signature:(struct gate_t *gp)
set_trchan_1vtx_nchg_fld	./v_aslib.c	/^static void set_trchan_1vtx_nchg_fld(struct net_t *np, int32 bi, $/;"	f	file:	signature:(struct net_t *np, int32 bi, struct vbinfo_t *vbip, t_midat *tidp)
set_udpsyncto	./v_ms.c	/^static int32 set_udpsyncto(int32 ttyp) $/;"	f	file:	signature:(int32 ttyp)
set_unc_gateterm	./v_fx2.c	/^static void set_unc_gateterm(struct gate_t *gp, int32 pi)$/;"	f	file:	signature:(struct gate_t *gp, int32 pi)
set_union	./v_regasn.c	/^static void set_union(struct tn_list_t *t1, struct tn_list_t *t2)$/;"	f	file:	signature:(struct tn_list_t *t1, struct tn_list_t *t2)
set_vbinfo_vtxs_to_nil	./v_trch.c	/^static void set_vbinfo_vtxs_to_nil(struct chanrec_t *chanp)$/;"	f	file:	signature:(struct chanrec_t *chanp)
set_vcl_reason	./v_acc.c	/^static int32 set_vcl_reason(struct net_t *np, int32 vclflg)$/;"	f	file:	signature:(struct net_t *np, int32 vclflg)
set_vec_drvr_type	./v_fx2.c	/^static void set_vec_drvr_type(struct net_t *np, int32 ri1, int32 ri2,$/;"	f	file:	signature:(struct net_t *np, int32 ri1, int32 ri2, int32 drvr_typ)
set_ver_side_srep	./v_dpi.c	/^static void set_ver_side_srep(struct net_t *np, struct dpiarg_t *dap)$/;"	f	file:	signature:(struct net_t *np, struct dpiarg_t *dap)
set_vpiparam_val	./v_vpi3.c	/^static void set_vpiparam_val(struct h_t *hp, p_vpi_value value_p)$/;"	f	file:	signature:(struct h_t *hp, p_vpi_value value_p)
set_vpisfcall_retval	./v_vpi3.c	/^static void set_vpisfcall_retval(struct h_t *hp, p_vpi_value value_p)$/;"	f	file:	signature:(struct h_t *hp, p_vpi_value value_p)
set_vpiudpdef_ival	./v_vpi3.c	/^static void set_vpiudpdef_ival(struct h_t *hp, p_vpi_value value_p)$/;"	f	file:	signature:(struct h_t *hp, p_vpi_value value_p)
set_wide_binop_trk_state_val	./v_bbopt.c	/^static void set_wide_binop_trk_state_val(struct insn_t *ip)$/;"	f	file:	signature:(struct insn_t *ip)
set_wide_cmp_trk_state_val	./v_bbopt.c	/^static void set_wide_cmp_trk_state_val(struct insn_t *cmp_ip)$/;"	f	file:	signature:(struct insn_t *cmp_ip)
set_wide_jmpor0_cmp_trk_state_val	./v_bbopt.c	/^static void set_wide_jmpor0_cmp_trk_state_val(struct insn_t *cmp_ip)$/;"	f	file:	signature:(struct insn_t *cmp_ip)
set_xedge_dctp_bits	./v_bbgen.c	/^static void set_xedge_dctp_bits(struct net_t *np,$/;"	f	file:	signature:(struct net_t *np, struct delctrl_t *dctp, struct dcevnt_t *dcep)
set_xprop_accum_block	./v_xprop.c	/^static void set_xprop_accum_block(struct xprop_t *xprop)$/;"	f	file:	signature:(struct xprop_t *xprop)
set_xprop_accum_value	./v_xprop.c	/^static void set_xprop_accum_value(struct net_t *np, int32 bi1, int32 bi2,$/;"	f	file:	signature:(struct net_t *np, int32 bi1, int32 bi2, word32 *ap, word32 *bp, struct xprop_t *xprop, int32 force_x)
set_xprop_bits	./v_src3.c	/^static void set_xprop_bits(struct mod_t *mdp, struct inst_t *ip,$/;"	f	file:	signature:(struct mod_t *mdp, struct inst_t *ip, int32 is_exclude, int32 xprop_typ_mask)
set_xprop_ids_only_parent	./v_xprop.c	/^static void set_xprop_ids_only_parent(struct xprop_t *xprop)$/;"	f	file:	signature:(struct xprop_t *xprop)
set_xprop_parent_lhs_ids_lstofsts	./v_xprop.c	/^static void set_xprop_parent_lhs_ids_lstofsts(struct st_t *hdstp)$/;"	f	file:	signature:(struct st_t *hdstp)
set_xprop_parent_lhs_ids_stmt	./v_xprop.c	/^static struct st_t *set_xprop_parent_lhs_ids_stmt(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
setargs	./v_dbg2.c	/^static struct namlst_t setargs[] = {$/;"	v	typeref:struct:namlst_t	file:
setchk_1w_fifo	./v_prp2.c	/^static void setchk_1w_fifo(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
setchk_modports	./v_fx.c	/^static void setchk_modports(void)$/;"	f	file:	signature:(void)
setchk_real_expr	./v_fx3.c	/^static void setchk_real_expr(struct expr_t *xrhs)$/;"	f	file:	signature:(struct expr_t *xrhs)
setchk_string_expr	./v_fx3.c	/^static void setchk_string_expr(struct expr_t *xrhs)$/;"	f	file:	signature:(struct expr_t *xrhs)
setchk_uval	./v_prp.c	/^static void setchk_uval(word32 init_ndx)$/;"	f	file:	signature:(word32 init_ndx)
setd_telst	./v.h	/^ struct tevlst_t **setd_telst; \/* per inst ptr to list of set dels *\/  $/;"	m	struct:tfrec_t	typeref:struct:tfrec_t::tevlst_t	access:public
setschd_1bit_drvr	./v_vpi3.c	/^static struct tev_t *setschd_1bit_drvr(struct net_pin_t *npp, int32 bi,$/;"	f	file:	signature:(struct net_pin_t *npp, int32 bi, struct xstk_t *xsp, word64 ticksdel, byte dtyp)
setschd_drvr_fromvaluep	./v_vpi3.c	/^static struct h_t *setschd_drvr_fromvaluep(p_vpi_value value_p,$/;"	f	file:	signature:(p_vpi_value value_p, struct h_t *hp, word64 ticksdel, byte dtyp, int32 ret_event)
setschd_var_fromvaluep	./v_vpi3.c	/^static struct h_t *setschd_var_fromvaluep(p_vpi_value value_p,$/;"	f	file:	signature:(p_vpi_value value_p, struct net_t *np, int32 ndx, word64 ticksdel, byte dtyp, int32 ret_event)
setup_1argdvars	./v_ex4.c	/^static void setup_1argdvars(struct mdvmast_t *mdvp)$/;"	f	file:	signature:(struct mdvmast_t *mdvp)
setup_1installvars	./v_ex4.c	/^static void setup_1installvars(struct mod_t *mdp, struct itree_t *itp)$/;"	f	file:	signature:(struct mod_t *mdp, struct itree_t *itp)
setup_1subtree_allvars	./v_ex4.c	/^static void setup_1subtree_allvars(struct itree_t *itp, int32 level)$/;"	f	file:	signature:(struct itree_t *itp, int32 level)
setup_all_dvars	./v_ex4.c	/^static void setup_all_dvars(void)$/;"	f	file:	signature:(void)
setup_interactive	./v_dbg.c	/^static void setup_interactive(void)$/;"	f	file:	signature:(void)
setup_xprop_lhs_nets	./v_xprop.c	/^static struct xprop_t *setup_xprop_lhs_nets(int32 save_ndx, int32 has_nested,$/;"	f	file:	signature:(int32 save_ndx, int32 has_nested, int32 has_one_id)
setx_ifnotval	./v_ex3.c	/^static void setx_ifnotval(word32 *ap, word32 *bp, word32 val)$/;"	f	file:	signature:(word32 *ap, word32 *bp, word32 val)
sf_errifn	./v_fx3.c	/^static void sf_errifn(struct sy_t *syp, int32 expn)$/;"	f	file:	signature:(struct sy_t *syp, int32 expn)
sfbp	./v.h	/^ struct sysfunc_t *sfbp;$/;"	m	union:systf_u	typeref:struct:systf_u::sysfunc_t	access:public
sfor	./v.h	/^ struct for_t *sfor;$/;"	m	union:st_u	typeref:struct:st_u::for_t	access:public
sfu	./v.h	/^ union systf_u sfu;$/;"	m	struct:systftab_t	typeref:union:systftab_t::systf_u	access:public
sgn_jmp	./igen.h	/^ unsigned sgn_jmp : 1;        \/* T if jump is signed (chks SF flag) *\/$/;"	m	struct:insn_t	access:public
sgn_linc	./v_ex2.c	/^static int32 sgn_linc(word32 *u, int32 blen)$/;"	f	file:	signature:(word32 *u, int32 blen)
sgoto	./v.h	/^ struct st_t *sgoto;          \/* destination of added goto *\/$/;"	m	union:st_u	typeref:struct:st_u::st_t	access:public
shell_msg	./v_dbg.c	/^static char *shell_msg[] = { $/;"	v	file:
show2_allvars	./v_ex4.c	/^static void show2_allvars(struct itree_t *itp)$/;"	f	file:	signature:(struct itree_t *itp)
showvars_dmp_mda_arr	./v_ex4.c	/^static void showvars_dmp_mda_arr(struct net_t *np, int32 base)$/;"	f	file:	signature:(struct net_t *np, int32 base)
si	./v.h	/^ int32 si; \/* for compile\/save changed to indices *\/$/;"	m	union:l_u	access:public
sif	./v.h	/^ struct if_t sif;$/;"	m	union:st_u	typeref:struct:st_u::if_t	access:public
sighandler	./v.h	/^typedef int32 sighandler();$/;"	t
signal_lens	./fstapi.c	/^uint32_t *signal_lens;                  \/* maxhandle sized *\/$/;"	m	struct:fstReaderContext	file:	access:public
signal_typs	./fstapi.c	/^unsigned char *signal_typs;             \/* maxhandle sized *\/$/;"	m	struct:fstReaderContext	file:	access:public
sigtab	./cvc.c	/^static const int32 sigtab[] = {$/;"	v	file:
simple_coalesce	./v_regasn.c	/^static int32 simple_coalesce(struct flowg_t *fgp, int32 *regs, int32 num_regs,$/;"	f	file:	signature:(struct flowg_t *fgp, int32 *regs, int32 num_regs, int32 num_gen_regs, int32 num_byte_regs, int32 num_call_regs, int32 num_call_byte_regs)
simplify_1fg_bblks	./v_bbopt.c	/^static void simplify_1fg_bblks(struct flowg_t *fgp, struct mod_t *mdp)$/;"	f	file:	signature:(struct flowg_t *fgp, struct mod_t *mdp)
single	./v.h	/^ void (*single)(struct net_t *, t_midat *);     $/;"	m	union:dmp_funcu	access:public
sitp	./v.h	/^ struct itree_t *sitp;        \/* and itree loc *\/$/;"	m	struct:impth_t	typeref:struct:impth_t::itree_t	access:public
sizdflt	./v.h	/^ unsigned sizdflt : 1;        \/* T => '[base] form but no width *\/$/;"	m	struct:expr_t	access:public
size	./igen.h	/^ int32 size;         \/* size of values *\/$/;"	m	struct:tn_list_t	access:public
size	./v.h	/^ int32 size;                \/* dce table size *\/$/;"	m	struct:dce_info_t	access:public
size	./v.h	/^ size_t size;            \/* mod sys call expr size *\/$/;"	m	struct:expr_tab_t	access:public
size_limit_locked	./fstapi.c	/^unsigned size_limit_locked : 1;$/;"	m	struct:fstWriterContext	file:	access:public
size_t_S	./lz4.c	/^typedef struct {size_t v;} _PACKED size_t_S;$/;"	t	typeref:struct:__anon4	file:
skeywds	./v_sdf.c	/^static struct sdfkeywds_t skeywds[] = {$/;"	v	typeref:struct:sdfkeywds_t	file:
skip_3valend	./v_src2.c	/^static void skip_3valend(void)$/;"	f	file:	signature:(void)
skip_ahead_one_stmt	./v_cvr.c	/^static int32 skip_ahead_one_stmt(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
skip_stmt_cover	./v_cvr.c	/^static int32 skip_stmt_cover(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
skip_writing_section_hdr	./fstapi.c	/^unsigned skip_writing_section_hdr : 1;$/;"	m	struct:fstWriterContext	file:	access:public
skipto_attr_end	./v_ms.c	/^static int32 skipto_attr_end(FILE *f) $/;"	f	file:	signature:(FILE *f)
sknam	./v_sdf.c	/^ char *sknam;$/;"	m	struct:sdfkeywds_t	file:	access:public
sknum	./v_sdf.c	/^ int32 sknum;$/;"	m	struct:sdfkeywds_t	file:	access:public
sl_fnam_ind	./v.h	/^ word32 sl_fnam_ind;$/;"	m	struct:srcloc_t	access:public
sl_lin_cnt	./v.h	/^ int32 sl_lin_cnt;$/;"	m	struct:srcloc_t	access:public
smp	./v.h	/^ struct mod_pin_t *smp;$/;"	m	struct:srtmp_t	typeref:struct:srtmp_t::mod_pin_t	access:public
smp_cmp	./v_fx.c	/^static int32 smp_cmp(const void *srp1, const void *srp2)$/;"	f	file:	signature:(const void *srp1, const void *srp2)
smpins	./v.h	/^ struct srtmp_t *smpins;      \/* sorted table of module pins *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::srtmp_t	access:public
snap_finish	./v_dbg.c	/^static void snap_finish(void)$/;"	f	file:	signature:(void)
snapshot_msg	./v_dbg.c	/^static char *snapshot_msg[] = { $/;"	v	file:
snbtsk	./v.h	/^ struct task_t *snbtsk;       \/* named (like task) block *\/$/;"	m	union:st_u	typeref:struct:st_u::task_t	access:public
snp	./v.h	/^ struct net_t *snp;           \/* source net *\/$/;"	m	struct:impth_t	typeref:struct:impth_t::net_t	access:public
softforce_putv_tedlst	./v.h	/^ struct dltevlst_t **softforce_putv_tedlst; \/* per inst\/bit pend ev lists *\/$/;"	m	struct:vpi_drv_t	typeref:struct:vpi_drv_t::dltevlst_t	access:public
spcpth_id	./v.h	/^ int32 spcpth_id;             \/* generate a number (unique id) *\/$/;"	m	struct:spcpth_t	access:public
spcpth_t	./v.h	/^struct spcpth_t {$/;"	s
spcpth_t::datasrcx	./v.h	/^ struct expr_t *datasrcx;     \/* non sim polarity expr, can be FCCOM list *\/$/;"	m	struct:spcpth_t	typeref:struct:spcpth_t::expr_t	access:public
spcpth_t::dsrc_polar	./v.h	/^ unsigned dsrc_polar : 2;     \/* if edge sensitive polarity *\/$/;"	m	struct:spcpth_t	access:public
spcpth_t::last_pein	./v.h	/^ int32 last_pein;$/;"	m	struct:spcpth_t	access:public
spcpth_t::last_peout	./v.h	/^ int32 last_peout;$/;"	m	struct:spcpth_t	access:public
spcpth_t::peins	./v.h	/^ struct pathel_t *peins;      \/* array of path input elements *\/$/;"	m	struct:spcpth_t	typeref:struct:spcpth_t::pathel_t	access:public
spcpth_t::peouts	./v.h	/^ struct pathel_t *peouts;     \/* array of path output elements *\/$/;"	m	struct:spcpth_t	typeref:struct:spcpth_t::pathel_t	access:public
spcpth_t::pth_0del_rem	./v.h	/^ unsigned pth_0del_rem : 1;   \/* T => removed from 0 delay *\/ $/;"	m	struct:spcpth_t	access:public
spcpth_t::pth_as_xprs	./v.h	/^ unsigned pth_as_xprs : 1;    \/* T => fixup not done path els still exprs *\/$/;"	m	struct:spcpth_t	access:public
spcpth_t::pth_delrep	./v.h	/^ unsigned pth_delrep : 5;     \/* delay representation for path *\/$/;"	m	struct:spcpth_t	access:public
spcpth_t::pth_du	./v.h	/^ union del_u pth_du;          \/* delay value *\/$/;"	m	struct:spcpth_t	typeref:union:spcpth_t::del_u	access:public
spcpth_t::pth_gone	./v.h	/^ unsigned pth_gone : 1;       \/* must ignore because of serious error *\/$/;"	m	struct:spcpth_t	access:public
spcpth_t::pth_ifnone	./v.h	/^ unsigned pth_ifnone : 1;     \/* T => condition is ifnone and other sdpds *\/$/;"	m	struct:spcpth_t	access:public
spcpth_t::pthcondx	./v.h	/^ struct expr_t *pthcondx;     \/* for if (cond) sdpd, the cond expr. *\/$/;"	m	struct:spcpth_t	typeref:struct:spcpth_t::expr_t	access:public
spcpth_t::pthedge	./v.h	/^ unsigned pthedge : 8;        \/* if edge, edge sensitive path *\/$/;"	m	struct:spcpth_t	access:public
spcpth_t::pthpolar	./v.h	/^ unsigned pthpolar : 2;       \/* simple path polarity (no sim meaning) *\/$/;"	m	struct:spcpth_t	access:public
spcpth_t::pthsym	./v.h	/^ struct sy_t *pthsym;         \/* built symbol for identifying path *\/$/;"	m	struct:spcpth_t	typeref:struct:spcpth_t::sy_t	access:public
spcpth_t::pthtyp	./v.h	/^ unsigned pthtyp : 2;         \/* type of path (full or *>) *\/ $/;"	m	struct:spcpth_t	access:public
spcpth_t::spcpth_id	./v.h	/^ int32 spcpth_id;             \/* generate a number (unique id) *\/$/;"	m	struct:spcpth_t	access:public
spcpth_t::spcpthnxt	./v.h	/^ struct spcpth_t *spcpthnxt;$/;"	m	struct:spcpth_t	typeref:struct:spcpth_t::spcpth_t	access:public
spcpthnxt	./v.h	/^ struct spcpth_t *spcpthnxt;$/;"	m	struct:spcpth_t	typeref:struct:spcpth_t::spcpth_t	access:public
spcpths	./v.h	/^ struct spcpth_t *spcpths;    \/* delay paths *\/$/;"	m	struct:spfy_t	typeref:struct:spfy_t::spcpth_t	access:public
spfsyms	./v.h	/^ struct symtab_t *spfsyms;    \/* specify symbol table for specparams *\/$/;"	m	struct:spfy_t	typeref:struct:spfy_t::symtab_t	access:public
spfy_t	./v.h	/^struct spfy_t {$/;"	s
spfy_t::msprms	./v.h	/^ struct net_t *msprms;        \/* module's specify parameters *\/$/;"	m	struct:spfy_t	typeref:struct:spfy_t::net_t	access:public
spfy_t::spcpths	./v.h	/^ struct spcpth_t *spcpths;    \/* delay paths *\/$/;"	m	struct:spfy_t	typeref:struct:spfy_t::spcpth_t	access:public
spfy_t::spfsyms	./v.h	/^ struct symtab_t *spfsyms;    \/* specify symbol table for specparams *\/$/;"	m	struct:spfy_t	typeref:struct:spfy_t::symtab_t	access:public
spfy_t::sprmnum	./v.h	/^ int32 sprmnum;               \/* number of specify parameters in table *\/$/;"	m	struct:spfy_t	access:public
spfy_t::tchks	./v.h	/^ struct tchk_t *tchks;        \/* timing checks *\/$/;"	m	struct:spfy_t	typeref:struct:spfy_t::tchk_t	access:public
spill_ebp_byt_ofs	./igen.h	/^ int32 spill_ebp_byt_ofs;     \/* for spill wrd and all wid, ebp ofs in bytes *\/$/;"	m	struct:reg_alloc_info_t	access:public
spill_ebp_byt_ofs	./igen.h	/^ int32 spill_ebp_byt_ofs;     \/* for spill wrd and all wid, ebp ofs in bytes *\/$/;"	m	struct:tn_t	access:public
spill_tmp	./v_regasn.c	/^static void spill_tmp(struct tn_t *tnp, struct flowg_t *fgp, int32 wlen,$/;"	f	file:	signature:(struct tn_t *tnp, struct flowg_t *fgp, int32 wlen, int32 *regs, int32 ti, int32 ndx)
split_hd	./v.h	/^ struct mod_t *split_hd;      \/* module split list head *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::mod_t	access:public
split_nxt	./v.h	/^ struct mod_t *split_nxt;     \/* next split mod *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::mod_t	access:public
split_tail	./v.h	/^ struct mod_t *split_tail;    \/* module split list tail *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::mod_t	access:public
split_upd_mod	./v_genfx.c	/^static void split_upd_mod(struct mod_t *imdp, struct inst_t *ip, int32 mlevel,$/;"	f	file:	signature:(struct mod_t *imdp, struct inst_t *ip, int32 mlevel, int32 is_param_split)
splt_icat_align_xlist	./v_fx2.c	/^static struct exprlst_t *splt_icat_align_xlist(struct expr_t *catxp,$/;"	f	file:	signature:(struct expr_t *catxp, int32 mpwid)
spltsy	./v.h	/^ struct sy_t *spltsy;$/;"	m	struct:sy_t	typeref:struct:sy_t::sy_t	access:public
spra	./v.h	/^ struct proca_t spra;$/;"	m	union:st_u	typeref:struct:st_u::proca_t	access:public
sprmnum	./v.h	/^ int32 sprmnum;               \/* number of specify parameters in table *\/$/;"	m	struct:spfy_t	access:public
sqca	./v.h	/^ struct qconta_t *sqca;       \/* assign and force *\/$/;"	m	union:st_u	typeref:struct:st_u::qconta_t	access:public
sqcdea	./v.h	/^ struct qcontdea_t sqcdea;    \/* deassign and release *\/$/;"	m	union:st_u	typeref:struct:st_u::qcontdea_t	access:public
src_dmp_defparams	./v_cnv.c	/^static void src_dmp_defparams(FILE *f, struct mod_t *mdp, int32 itree_built)$/;"	f	file:	signature:(FILE *f, struct mod_t *mdp, int32 itree_built)
src_else_gblkp	./v.h	/^ struct genblk_t *src_else_gblkp;$/;"	m	struct:gen_if_t	typeref:struct:gen_if_t::genblk_t	access:public
src_gforblkp	./v.h	/^ struct genblk_t *src_gforblkp;$/;"	m	struct:gen_for_t	typeref:struct:gen_for_t::genblk_t	access:public
src_rd_chk_paramexpr	./v_src3.c	/^static int32 src_rd_chk_paramexpr(struct expr_t *ndp, int32 xwid)$/;"	f	file:	signature:(struct expr_t *ndp, int32 xwid)
src_then_gblkp	./v.h	/^ struct genblk_t *src_then_gblkp;$/;"	m	struct:gen_if_t	typeref:struct:gen_if_t::genblk_t	access:public
srch_yfiles	./v_fx.c	/^static int32 srch_yfiles(char *nam, struct mydir_t *mdtab, $/;"	f	file:	signature:(char *nam, struct mydir_t *mdtab, word32 numdfiles)
srcloc_t	./v.h	/^struct srcloc_t {$/;"	s
srcloc_t::sl_fnam_ind	./v.h	/^ word32 sl_fnam_ind;$/;"	m	struct:srcloc_t	access:public
srcloc_t::sl_lin_cnt	./v.h	/^ int32 sl_lin_cnt;$/;"	m	struct:srcloc_t	access:public
srclocp	./v.h	/^ struct srcloc_t *srclocp;$/;"	m	struct:inst_gen_t	typeref:struct:inst_gen_t::srcloc_t	access:public
srep	./igen.h	/^ int32 srep;               \/* srep of this tmp *\/$/;"	m	struct:adradd_dup_t	access:public
srep	./v.h	/^ unsigned srep : 6;           \/* srep type used for nb storage *\/$/;"	m	struct:ctev_t	access:public
srep	./v.h	/^ unsigned srep : 6;           \/* storage representation of value - nva fld *\/$/;"	m	struct:net_t	access:public
srpt	./v.h	/^ struct repeat_t srpt;$/;"	m	union:st_u	typeref:struct:st_u::repeat_t	access:public
srtmp_t	./v.h	/^struct srtmp_t {$/;"	s
srtmp_t::mppos	./v.h	/^ int32 mppos;$/;"	m	struct:srtmp_t	access:public
srtmp_t::smp	./v.h	/^ struct mod_pin_t *smp;$/;"	m	struct:srtmp_t	typeref:struct:srtmp_t::mod_pin_t	access:public
srtyp	./igen.h	/^ unsigned srtyp : 6;          \/* srep type of tmp name *\/  $/;"	m	struct:tn_t	access:public
srtyp	./igen.h	/^ unsigned srtyp : 6;$/;"	m	struct:ftval_t	access:public
st	./v.h	/^ union st_u st;$/;"	m	struct:st_t	typeref:union:st_t::st_u	access:public
st2_peri_scalval_	./cvmacros.h	329;"	d
st_arr_val_2state	./v_ex3.c	/^static void st_arr_val_2state(struct net_t *np, struct expr_t *ndx1, $/;"	f	file:	signature:(struct net_t *np, struct expr_t *ndx1, struct expr_t *sel_ndx, int32 arri, word32 *rgap)
st_arr_val_string	./v_ex3.c	/^static void st_arr_val_string(struct net_t *np, int32 arri, word32 *rgap, $/;"	f	file:	signature:(struct net_t *np, int32 arri, word32 *rgap, int32 rhswid)
st_cnt_modprt_bits	./cvc.c	/^static void st_cnt_modprt_bits(struct mod_t *mdp, int32 *prtbits, int32 *st_prts,$/;"	f	file:	signature:(struct mod_t *mdp, int32 *prtbits, int32 *st_prts, int32 *st_prtbits)
st_cnt_modwires	./cvc.c	/^static void st_cnt_modwires(struct mod_t *mdp, int32 *wires, int32 *wirebits,$/;"	f	file:	signature:(struct mod_t *mdp, int32 *wires, int32 *wirebits, int32 *st_wires, int32 *st_wirebits)
st_dctrl	./v.h	/^ struct delctrl_t *st_dctrl;  \/* statement's delay control record *\/$/;"	m	struct:dcevnt_t	typeref:struct:dcevnt_t::delctrl_t	access:public
st_dpi_arg	./v_dpi.c	/^static void st_dpi_arg(struct expr_t *argxp, int32 argi, struct dpiarg_t *dap,$/;"	f	file:	signature:(struct expr_t *argxp, int32 argi, struct dpiarg_t *dap, union adpi_u *a_u_tab)
st_errif_rng	./v_fx3.c	/^static void st_errif_rng(struct sy_t *syp, int32 expl, int32 exph, int32 anum)$/;"	f	file:	signature:(struct sy_t *syp, int32 expl, int32 exph, int32 anum)
st_errifn	./v_fx3.c	/^static void st_errifn(struct sy_t *syp, int32 expn, int32 anum)$/;"	f	file:	signature:(struct sy_t *syp, int32 expn, int32 anum)
st_into_ip	./igen.h	/^ struct insn_t *st_into_ip;   \/* insn ptr for checking stored intos *\/$/;"	m	struct:tn_t	typeref:struct:tn_t::insn_t	access:public
st_list_t	./v.h	/^struct st_list_t {$/;"	s
st_list_t::nxt_stp	./v.h	/^ struct st_list_t *nxt_stp;$/;"	m	struct:st_list_t	typeref:struct:st_list_t::st_list_t	access:public
st_list_t::stp	./v.h	/^ struct st_t *stp;$/;"	m	struct:st_list_t	typeref:struct:st_list_t::st_t	access:public
st_namblkin	./v.h	/^ struct st_t *st_namblkin;    \/* stmt named block in in *\/$/;"	m	struct:task_t	typeref:struct:task_t::st_t	access:public
st_ndx	./v.h	/^ int32 st_ndx;                \/* stmt index into mstmts *\/$/;"	m	struct:st_t	access:public
st_packintowrd_	./cvmacros.h	427;"	d
st_peri_packintowrd_	./cvmacros.h	432;"	d
st_peri_scalval_	./cvmacros.h	326;"	d
st_prep_peri_scalval_	./cvmacros.h	323;"	d
st_prt2_permod_wiretab	./cvc.c	/^static void st_prt2_permod_wiretab(void)$/;"	f	file:	signature:(void)
st_psel	./v_ex3.c	/^static void st_psel(struct net_t *np, int32 ri1, int32 ri2, word32 *ap,$/;"	f	file:	signature:(struct net_t *np, int32 ri1, int32 ri2, word32 *ap, word32 *bp)
st_regab_disp	./v_cnv.c	/^static void st_regab_disp(byte *sbp, int32 blen)$/;"	f	file:	signature:(byte *sbp, int32 blen)
st_scalval_	./cvmacros.h	319;"	d
st_t	./v.h	/^struct st_t {$/;"	s
st_t::ctevp	./v.h	/^ struct ctev_t *ctevp;        \/* compile time info for building static tev_t *\/$/;"	m	struct:st_t	typeref:struct:st_t::ctev_t	access:public
st_t::dctrl_goto	./v.h	/^ unsigned dctrl_goto : 1;     \/* T => this is next after dctrl chain goto *\/ $/;"	m	struct:st_t	access:public
st_t::dmp_stmt	./v.h	/^ unsigned dmp_stmt : 1;       \/* T => statement has been printed for coverage *\/$/;"	m	struct:st_t	access:public
st_t::enter_created	./v.h	/^ unsigned enter_created : 1;  \/* T => stmt already has an enter loc in asm *\/$/;"	m	struct:st_t	access:public
st_t::enterptr	./v.h	/^ void (*enterptr)(void);      \/* enter address *\/ $/;"	m	struct:st_t	access:public
st_t::is_enter	./v.h	/^ unsigned is_enter : 1;       \/* T => stmt has a enter location *\/$/;"	m	struct:st_t	access:public
st_t::is_loaded	./v.h	/^ unsigned is_loaded : 1;      \/* T => stmt is loaded (passed) to a wrapper *\/$/;"	m	struct:st_t	access:public
st_t::is_nb_enter	./v.h	/^ unsigned is_nb_enter : 1;    \/* T => stmt has a nb enter location *\/$/;"	m	struct:st_t	access:public
st_t::is_printed	./v.h	/^ unsigned is_printed : 1;     \/* T => compiled global is printed *\/$/;"	m	struct:st_t	access:public
st_t::lpend_goto	./v.h	/^ unsigned lpend_goto : 1;     \/* T => this is loopend goto *\/$/;"	m	struct:st_t	access:public
st_t::lpend_goto_dest	./v.h	/^ unsigned lpend_goto_dest : 1; \/* dest. of loop end back goto for compiler *\/$/;"	m	struct:st_t	access:public
st_t::nb_xprop_in_list	./v.h	/^ unsigned nb_xprop_in_list : 1; \/* T => nb stmt has already in nb list *\/$/;"	m	struct:st_t	access:public
st_t::rhs_idp_ofs	./v.h	/^ size_t rhs_idp_ofs;          \/* storag area index for rhs *\/$/;"	m	struct:st_t	access:public
st_t::rl_stmttyp	./v.h	/^ unsigned rl_stmttyp : 6;     \/* for break set at statment, real type *\/$/;"	m	struct:st_t	access:public
st_t::st	./v.h	/^ union st_u st;$/;"	m	struct:st_t	typeref:union:st_t::st_u	access:public
st_t::st_ndx	./v.h	/^ int32 st_ndx;                \/* stmt index into mstmts *\/$/;"	m	struct:st_t	access:public
st_t::st_unbhead	./v.h	/^ unsigned st_unbhead : 1;     \/* if unnamed block removed, indicated here *\/  $/;"	m	struct:st_t	access:public
st_t::stfnam_ind	./v.h	/^ unsigned stfnam_ind : 16;$/;"	m	struct:st_t	access:public
st_t::stlin_cnt	./v.h	/^ int32 stlin_cnt;$/;"	m	struct:st_t	access:public
st_t::stmt_id_ndx	./v.h	/^ int32 stmt_id_ndx;           \/* stmt identifier *\/$/;"	m	struct:st_t	access:public
st_t::stmttyp	./v.h	/^ unsigned stmttyp : 6;$/;"	m	struct:st_t	access:public
st_t::stnxt	./v.h	/^ struct st_t *stnxt;$/;"	m	struct:st_t	typeref:struct:st_t::st_t	access:public
st_t::strb_seen_now	./v.h	/^ unsigned strb_seen_now : 1;  \/* T => for checking strobe on list for now *\/$/;"	m	struct:st_t	access:public
st_t::task_thrd_jmpndx	./v.h	/^ int32 task_thrd_jmpndx;        \/* index of task return location *\/$/;"	m	struct:st_t	access:public
st_t::unreachable	./v.h	/^ unsigned unreachable : 1;    \/* T => stmt is unreachable from compiler *\/$/;"	m	struct:st_t	access:public
st_t::xprop_eligible	./v.h	/^ unsigned xprop_eligible : 1; \/* T => if\/case stmt can be xprop *\/$/;"	m	struct:st_t	access:public
st_t::xprop_level	./v.h	/^ int32 xprop_level;           \/* T => stmt xprop level *\/$/;"	m	struct:st_t	access:public
st_t::xprop_nbu	./v.h	/^ union xprop_nbu xprop_nbu; \/* compile time xprop nb info *\/$/;"	m	struct:st_t	typeref:union:st_t::xprop_nbu	access:public
st_u	./v.h	/^union st_u {$/;"	u
st_u::fj	./v.h	/^ struct fj_t fj;              \/* fj 2 tabs (1 stps and 1 fj c code labs *\/$/;"	m	union:st_u	typeref:struct:st_u::fj_t	access:public
st_u::sbsts	./v.h	/^ struct st_t *sbsts;          \/* unnamed block statement list *\/$/;"	m	union:st_u	typeref:struct:st_u::st_t	access:public
st_u::scausx	./v.h	/^ struct expr_t *scausx;       \/* cause expr. node symbor or global id. *\/$/;"	m	union:st_u	typeref:struct:st_u::expr_t	access:public
st_u::scs	./v.h	/^ struct case_t scs;$/;"	m	union:st_u	typeref:struct:st_u::case_t	access:public
st_u::sdc	./v.h	/^ struct delctrl_t *sdc;$/;"	m	union:st_u	typeref:struct:st_u::delctrl_t	access:public
st_u::sdsable	./v.h	/^ struct dsable_t sdsable;     \/* disable struct (also place for goto dest) *\/$/;"	m	union:st_u	typeref:struct:st_u::dsable_t	access:public
st_u::sfor	./v.h	/^ struct for_t *sfor;$/;"	m	union:st_u	typeref:struct:st_u::for_t	access:public
st_u::sgoto	./v.h	/^ struct st_t *sgoto;          \/* destination of added goto *\/$/;"	m	union:st_u	typeref:struct:st_u::st_t	access:public
st_u::sif	./v.h	/^ struct if_t sif;$/;"	m	union:st_u	typeref:struct:st_u::if_t	access:public
st_u::snbtsk	./v.h	/^ struct task_t *snbtsk;       \/* named (like task) block *\/$/;"	m	union:st_u	typeref:struct:st_u::task_t	access:public
st_u::spra	./v.h	/^ struct proca_t spra;$/;"	m	union:st_u	typeref:struct:st_u::proca_t	access:public
st_u::sqca	./v.h	/^ struct qconta_t *sqca;       \/* assign and force *\/$/;"	m	union:st_u	typeref:struct:st_u::qconta_t	access:public
st_u::sqcdea	./v.h	/^ struct qcontdea_t sqcdea;    \/* deassign and release *\/$/;"	m	union:st_u	typeref:struct:st_u::qcontdea_t	access:public
st_u::srpt	./v.h	/^ struct repeat_t srpt;$/;"	m	union:st_u	typeref:struct:st_u::repeat_t	access:public
st_u::stkc	./v.h	/^ struct tskcall_t stkc;$/;"	m	union:st_u	typeref:struct:st_u::tskcall_t	access:public
st_u::swait	./v.h	/^ struct wait_t swait;$/;"	m	union:st_u	typeref:struct:st_u::wait_t	access:public
st_u::swh	./v.h	/^ struct while_t swh;$/;"	m	union:st_u	typeref:struct:st_u::while_t	access:public
st_unbhead	./v.h	/^ unsigned st_unbhead : 1;     \/* if unnamed block removed, indicated here *\/  $/;"	m	struct:st_t	access:public
st_vecval	./v_ex3.c	/^static void st_vecval(word32 *dwp, int32 blen, word32 *ap, word32 *bp)$/;"	f	file:	signature:(word32 *dwp, int32 blen, word32 *ap, word32 *bp)
stacc_downtomdport	./v_ex4.c	/^static void stacc_downtomdport(struct expr_t *lhsx, struct expr_t *rhsx,$/;"	f	file:	signature:(struct expr_t *lhsx, struct expr_t *rhsx, struct itree_t *down_itp)
stacc_uptoiconn	./v_ex4.c	/^static void stacc_uptoiconn(struct expr_t *lhsx, struct expr_t *rhsx,$/;"	f	file:	signature:(struct expr_t *lhsx, struct expr_t *rhsx, struct itree_t *up_itp)
stamptim_condx	./v.h	/^ struct expr_t *stamptim_condx; \/* optional setuphld\/recrem stamp del expr *\/$/;"	m	struct:tchk_t	typeref:struct:tchk_t::expr_t	access:public
start_time	./fstapi.c	/^uint64_t start_time, end_time;$/;"	m	struct:fstReaderContext	file:	access:public
startchgp	./v.h	/^ struct tchg_t *startchgp;    \/* corresponding start wire time change *\/$/;"	m	struct:chktchg_t	typeref:struct:chktchg_t::tchg_t	access:public
startcondx	./v.h	/^ struct expr_t *startcondx;   \/* &&& ref. event or edge path delay sel. *\/$/;"	m	struct:tchk_t	typeref:struct:tchk_t::expr_t	access:public
startedge	./v.h	/^ unsigned startedge : 8;      \/* edge byte (pli 1 bit per rf coding) *\/$/;"	m	struct:tchk_t	access:public
startxp	./v.h	/^ struct expr_t *startxp;      \/* event (reference) expr *\/$/;"	m	struct:tchk_t	typeref:struct:tchk_t::expr_t	access:public
stassign_1tranbit	./v_trch.c	/^static void stassign_1tranbit(struct net_t *np, int32 bi, word32 sbv)$/;"	f	file:	signature:(struct net_t *np, int32 bi, word32 sbv)
stbp	./v.h	/^ struct systsk_t *stbp;$/;"	m	union:systf_u	typeref:struct:systf_u::systsk_t	access:public
stbsel_acc_downtomdport	./v_ex4.c	/^static void stbsel_acc_downtomdport(struct expr_t *lhsx,$/;"	f	file:	signature:(struct expr_t *lhsx, struct expr_t *rhsx, struct itree_t *down_itp)
stbsel_acc_uptoiconn	./v_ex4.c	/^static void stbsel_acc_uptoiconn(struct expr_t *lhsx, struct expr_t *rhsx,$/;"	f	file:	signature:(struct expr_t *lhsx, struct expr_t *rhsx, struct itree_t *up_itp)
stchan_trif_relax	./v_trch.c	/^static void stchan_trif_relax(void)$/;"	f	file:	signature:(void)
std_chg_bufif_gate	./v_sim.c	/^static void std_chg_bufif_gate(struct gate_t *gp, word32 i)$/;"	f	file:	signature:(struct gate_t *gp, word32 i)
std_chg_cmos_gate	./v_sim.c	/^static void std_chg_cmos_gate(struct gate_t *gp, word32 i)$/;"	f	file:	signature:(struct gate_t *gp, word32 i)
std_chg_logic_gate	./v_sim.c	/^static void std_chg_logic_gate(struct gate_t *gp, word32 i)$/;"	f	file:	signature:(struct gate_t *gp, word32 i)
std_chg_mos_gate	./v_sim.c	/^static void std_chg_mos_gate(struct gate_t *gp, word32 i)$/;"	f	file:	signature:(struct gate_t *gp, word32 i)
std_chg_udp_gate	./v_sim.c	/^static void std_chg_udp_gate(struct gate_t *gp, word32 i)$/;"	f	file:	signature:(struct gate_t *gp, word32 i)
std_downtomdport	./v_ex4.c	/^static void std_downtomdport(struct expr_t *lhsx, struct expr_t *rhsx,$/;"	f	file:	signature:(struct expr_t *lhsx, struct expr_t *rhsx, struct itree_t *down_itp)
std_uptoiconn	./v_ex4.c	/^static void std_uptoiconn(struct expr_t *lhsx, struct expr_t *rhsx,$/;"	f	file:	signature:(struct expr_t *lhsx, struct expr_t *rhsx, struct itree_t *up_itp)
stdrive_tostr	./v_ex4.c	/^static char *stdrive_tostr(char *s, byte *sbp, struct net_pin_t *npp,$/;"	f	file:	signature:(char *s, byte *sbp, struct net_pin_t *npp, int32 rhswid, int32 nonz_only)
step_exec_stmt	./v_ex.c	/^static void step_exec_stmt(struct st_t *stp, int32 *dowhile)$/;"	f	file:	signature:(struct st_t *stp, int32 *dowhile)
step_msg	./v_dbg.c	/^static char *step_msg[] = { $/;"	v	file:
stepped_to_new_loc	./v_ex.c	/^static int32 stepped_to_new_loc(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
stfnam_ind	./v.h	/^ unsigned stfnam_ind : 16;$/;"	m	struct:st_t	access:public
stkc	./v.h	/^ struct tskcall_t stkc;$/;"	m	union:st_u	typeref:struct:st_u::tskcall_t	access:public
stlin_cnt	./v.h	/^ int32 stlin_cnt;$/;"	m	struct:st_t	access:public
stlst_can_be_con_func	./v_src.c	/^static int32 stlst_can_be_con_func(struct task_t *ftskp, struct st_t *stp) $/;"	f	file:	signature:(struct task_t *ftskp, struct st_t *stp)
stmt_can_be_con_func	./v_src.c	/^static int32 stmt_can_be_con_func(struct task_t *ftskp, struct st_t *stp) $/;"	f	file:	signature:(struct task_t *ftskp, struct st_t *stp)
stmt_do_inpsel_set	./v_fx2.c	/^static void stmt_do_inpsel_set(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
stmt_id_ndx	./v.h	/^ int32 stmt_id_ndx;           \/* stmt identifier *\/$/;"	m	struct:st_t	access:public
stmttyp	./v.h	/^ unsigned stmttyp : 6;$/;"	m	struct:st_t	access:public
stnxt	./igen.h	/^ struct nb_stmt_lst_t *stnxt;    \/* next nb stmt *\/$/;"	m	struct:nb_stmt_lst_t	typeref:struct:nb_stmt_lst_t::nb_stmt_lst_t	access:public
stnxt	./v.h	/^ struct st_t *stnxt;$/;"	m	struct:st_t	typeref:struct:st_t::st_t	access:public
store_tskcall_outs	./v_ex.c	/^static void store_tskcall_outs(struct st_t *tskcall_stp) $/;"	f	file:	signature:(struct st_t *tskcall_stp)
stp	./igen.h	/^ struct st_t *stp;               \/* current nb stmt *\/$/;"	m	struct:nb_stmt_lst_t	typeref:struct:nb_stmt_lst_t::st_t	access:public
stp	./v.h	/^ struct st_t *stp;$/;"	m	struct:st_list_t	typeref:struct:st_list_t::st_t	access:public
stp	./v.h	/^ struct st_t *stp;$/;"	m	union:te_u	typeref:struct:te_u::st_t	access:public
str_scope_comp	./fstapi.c	/^char str_scope_comp[FST_ID_NAM_SIZ+1];$/;"	m	struct:fstReaderContext	file:	access:public
str_scope_nam	./fstapi.c	/^char str_scope_nam[FST_ID_NAM_SIZ+1];$/;"	m	struct:fstReaderContext	file:	access:public
str_tolower	./v_src3.c	/^static void str_tolower(char *to, char *from)$/;"	f	file:	signature:(char *to, char *from)
str_tovval	./v_ms.c	/^static void str_tovval(void)$/;"	f	file:	signature:(void)
str_truefalse	./v_acc.c	/^static int32 str_truefalse(char *s)$/;"	f	file:	signature:(char *s)
strb_idp	./v.h	/^ t_midat *strb_idp;$/;"	m	struct:strblst_t	access:public
strb_seen_now	./v.h	/^ unsigned strb_seen_now : 1;  \/* T => for checking strobe on list for now *\/$/;"	m	struct:st_t	access:public
strblst_t	./v.h	/^struct strblst_t {$/;"	s
strblst_t::strb_idp	./v.h	/^ t_midat *strb_idp;$/;"	m	struct:strblst_t	access:public
strblst_t::strbnxt	./v.h	/^ struct strblst_t *strbnxt;$/;"	m	struct:strblst_t	typeref:struct:strblst_t::strblst_t	access:public
strblst_t::strbstp	./v.h	/^ struct st_t *strbstp;$/;"	m	struct:strblst_t	typeref:struct:strblst_t::st_t	access:public
strbnxt	./v.h	/^ struct strblst_t *strbnxt;$/;"	m	struct:strblst_t	typeref:struct:strblst_t::strblst_t	access:public
strbstp	./v.h	/^ struct st_t *strbstp;$/;"	m	struct:strblst_t	typeref:struct:strblst_t::st_t	access:public
stren_schd_bidpthdrvrs	./v_trch.c	/^static void stren_schd_bidpthdrvrs(struct net_t *np, byte *drv_sbp, $/;"	f	file:	signature:(struct net_t *np, byte *drv_sbp, byte *trnva_sbp)
stringop	./v.h	/^ unsigned stringop : 1;       \/* T => op legal for SV strings *\/$/;"	m	struct:opinfo_t	access:public
stscal_fill_valuep	./v_vpi3.c	/^static void stscal_fill_valuep(p_vpi_value value_p, byte *sbp, int32 bi)$/;"	f	file:	signature:(p_vpi_value value_p, byte *sbp, int32 bi)
stsknam	./v.h	/^ char *stsknam;               \/* name of system task or pli task *\/$/;"	m	struct:systsk_t	access:public
stsknum	./v.h	/^ word32 stsknum;              \/* systask ind or 1000+index veriusertfs[] *\/$/;"	m	struct:systsk_t	access:public
stsyms	./v.h	/^ struct sy_t **stsyms;        \/* non null means frozed form *\/$/;"	m	struct:symtab_t	typeref:struct:symtab_t::sy_t	access:public
stvec_fill_valuep	./v_vpi3.c	/^static void stvec_fill_valuep(p_vpi_value value_p, byte *sbp, int32 swid)$/;"	f	file:	signature:(p_vpi_value value_p, byte *sbp, int32 swid)
subst_backedges	./v_bbopt.c	/^static void subst_backedges(struct flowg_t *fgp, struct bblk_t *rm_bbp,$/;"	f	file:	signature:(struct flowg_t *fgp, struct bblk_t *rm_bbp, struct bblk_t *addto_bbp)
subtype	./fstapi.h	/^                unsigned char subtype; \/* from fstMiscType, fstArrayType, fstEnumValueType, fstPackType *\/$/;"	m	struct:fstHier::__anon18::fstHierAttr	access:public
suspend_curthd	./v_ex.c	/^static void suspend_curthd(struct st_t *stp, void *enterp)$/;"	f	file:	signature:(struct st_t *stp, void *enterp)
svAckDisabledState	./v_dpi.c	/^extern void svAckDisabledState()$/;"	f
svDimensions	./v_dpi.c	/^extern int svDimensions(const svOpenArrayHandle h)$/;"	f	signature:(const svOpenArrayHandle h)
svDpiVersion	./v_dpi.c	/^extern const char* svDpiVersion(void)$/;"	f	signature:(void)
svGetArrElemPtr	./v_dpi.c	/^extern void *svGetArrElemPtr(const svOpenArrayHandle h, int indx1, ...)$/;"	f	signature:(const svOpenArrayHandle h, int indx1, ...)
svGetArrElemPtr1	./v_dpi.c	/^extern void *svGetArrElemPtr1(const svOpenArrayHandle h, int indx1)$/;"	f	signature:(const svOpenArrayHandle h, int indx1)
svGetArrElemPtr2	./v_dpi.c	/^extern void *svGetArrElemPtr2(const svOpenArrayHandle h, int indx1, int indx2)$/;"	f	signature:(const svOpenArrayHandle h, int indx1, int indx2)
svGetArrElemPtr3	./v_dpi.c	/^extern void *svGetArrElemPtr3(const svOpenArrayHandle h, int indx1, int indx2,$/;"	f	signature:(const svOpenArrayHandle h, int indx1, int indx2, int indx3)
svGetArrayPtr	./v_dpi.c	/^extern void *svGetArrayPtr(const svOpenArrayHandle h)$/;"	f	signature:(const svOpenArrayHandle h)
svGetBitArrElem	./v_dpi.c	/^extern svBit svGetBitArrElem(const svOpenArrayHandle s, int indx1, ...)$/;"	f	signature:(const svOpenArrayHandle s, int indx1, ...)
svGetBitArrElem1	./v_dpi.c	/^extern svBit svGetBitArrElem1(const svOpenArrayHandle s, int indx1)$/;"	f	signature:(const svOpenArrayHandle s, int indx1)
svGetBitArrElem1VecVal	./v_dpi.c	/^extern void svGetBitArrElem1VecVal(svBitVecVal* d, const svOpenArrayHandle s,$/;"	f	signature:(svBitVecVal* d, const svOpenArrayHandle s, int indx1)
svGetBitArrElem2	./v_dpi.c	/^extern svBit svGetBitArrElem2(const svOpenArrayHandle s, int indx1, int indx2)$/;"	f	signature:(const svOpenArrayHandle s, int indx1, int indx2)
svGetBitArrElem2VecVal	./v_dpi.c	/^extern void svGetBitArrElem2VecVal(svBitVecVal* d, const svOpenArrayHandle s,$/;"	f	signature:(svBitVecVal* d, const svOpenArrayHandle s, int indx1, int indx2)
svGetBitArrElem3	./v_dpi.c	/^extern svBit svGetBitArrElem3(const svOpenArrayHandle s, int indx1, int indx2,$/;"	f	signature:(const svOpenArrayHandle s, int indx1, int indx2, int indx3)
svGetBitArrElem3VecVal	./v_dpi.c	/^extern void svGetBitArrElem3VecVal(svBitVecVal* d, const svOpenArrayHandle s,$/;"	f	signature:(svBitVecVal* d, const svOpenArrayHandle s, int indx1, int indx2, int indx3)
svGetBitArrElemVecVal	./v_dpi.c	/^extern void svGetBitArrElemVecVal(svBitVecVal* d, const svOpenArrayHandle s,$/;"	f	signature:(svBitVecVal* d, const svOpenArrayHandle s, int indx1, ...)
svGetBitselBit	./v_dpi.c	/^extern svBit svGetBitselBit(const svBitVecVal* s, int i)$/;"	f	signature:(const svBitVecVal* s, int i)
svGetBitselLogic	./v_dpi.c	/^extern svLogic svGetBitselLogic(const svLogicVecVal* s, int i)$/;"	f	signature:(const svLogicVecVal* s, int i)
svGetCallerInfo	./v_dpi.c	/^extern int svGetCallerInfo(const char** fileName, int *lineNumber)$/;"	f	signature:(const char** fileName, int *lineNumber)
svGetLogicArrElem	./v_dpi.c	/^extern svLogic svGetLogicArrElem(const svOpenArrayHandle s, int indx1, ...)$/;"	f	signature:(const svOpenArrayHandle s, int indx1, ...)
svGetLogicArrElem1	./v_dpi.c	/^extern svLogic svGetLogicArrElem1(const svOpenArrayHandle s, int indx1)$/;"	f	signature:(const svOpenArrayHandle s, int indx1)
svGetLogicArrElem1VecVal	./v_dpi.c	/^extern void svGetLogicArrElem1VecVal(svLogicVecVal* d, $/;"	f	signature:(svLogicVecVal* d, const svOpenArrayHandle s, int indx1)
svGetLogicArrElem2	./v_dpi.c	/^extern svLogic svGetLogicArrElem2(const svOpenArrayHandle s, int indx1, $/;"	f	signature:(const svOpenArrayHandle s, int indx1, int indx2)
svGetLogicArrElem2VecVal	./v_dpi.c	/^extern void svGetLogicArrElem2VecVal(svLogicVecVal* d, $/;"	f	signature:(svLogicVecVal* d, const svOpenArrayHandle s, int indx1, int indx2)
svGetLogicArrElem3	./v_dpi.c	/^extern svLogic svGetLogicArrElem3(const svOpenArrayHandle s, int indx1, $/;"	f	signature:(const svOpenArrayHandle s, int indx1, int indx2, int indx3)
svGetLogicArrElem3VecVal	./v_dpi.c	/^extern void svGetLogicArrElem3VecVal(svLogicVecVal* d, $/;"	f	signature:(svLogicVecVal* d, const svOpenArrayHandle s, int indx1, int indx2, int indx3)
svGetLogicArrElemVecVal	./v_dpi.c	/^extern void svGetLogicArrElemVecVal(svLogicVecVal* d, const svOpenArrayHandle s,$/;"	f	signature:(svLogicVecVal* d, const svOpenArrayHandle s, int indx1, ...)
svGetNameFromScope	./v_dpi.c	/^extern const char* svGetNameFromScope(const svScope scope)$/;"	f	signature:(const svScope scope)
svGetPartselBit	./v_dpi.c	/^extern void svGetPartselBit(svBitVecVal* d, const svBitVecVal* s, int i, int w)$/;"	f	signature:(svBitVecVal* d, const svBitVecVal* s, int i, int w)
svGetPartselLogic	./v_dpi.c	/^extern void svGetPartselLogic(svLogicVecVal* d, const svLogicVecVal* s, int i, $/;"	f	signature:(svLogicVecVal* d, const svLogicVecVal* s, int i, int w)
svGetScope	./v_dpi.c	/^extern svScope svGetScope()$/;"	f
svGetScopeFromName	./v_dpi.c	/^extern svScope svGetScopeFromName(const char* scopeName)$/;"	f	signature:(const char* scopeName)
svGetUserData	./v_dpi.c	/^extern void* svGetUserData(const svScope scope, void* userKey)$/;"	f	signature:(const svScope scope, void* userKey)
svHigh	./v_dpi.c	/^extern int svHigh(const svOpenArrayHandle h, int d)$/;"	f	signature:(const svOpenArrayHandle h, int d)
svIncrement	./v_dpi.c	/^extern int svIncrement(const svOpenArrayHandle h, int d)$/;"	f	signature:(const svOpenArrayHandle h, int d)
svIsDisabledState	./v_dpi.c	/^extern int svIsDisabledState()$/;"	f
svLeft	./v_dpi.c	/^extern int svLeft(const svOpenArrayHandle h, int d)$/;"	f	signature:(const svOpenArrayHandle h, int d)
svLength	./v_dpi.c	/^extern int svLength(const svOpenArrayHandle h, int d)$/;"	f	signature:(const svOpenArrayHandle h, int d)
svLow	./v_dpi.c	/^extern int svLow(const svOpenArrayHandle h, int d)$/;"	f	signature:(const svOpenArrayHandle h, int d)
svPutBitArrElem	./v_dpi.c	/^extern void svPutBitArrElem(const svOpenArrayHandle d, svBit value, int indx1,   ...)$/;"	f	signature:(const svOpenArrayHandle d, svBit value, int indx1, ...)
svPutBitArrElem1	./v_dpi.c	/^extern void svPutBitArrElem1(const svOpenArrayHandle d, svBit value, int indx1)$/;"	f	signature:(const svOpenArrayHandle d, svBit value, int indx1)
svPutBitArrElem1VecVal	./v_dpi.c	/^extern void svPutBitArrElem1VecVal(const svOpenArrayHandle d, $/;"	f	signature:(const svOpenArrayHandle d, const svBitVecVal* s, int indx1)
svPutBitArrElem2	./v_dpi.c	/^extern void svPutBitArrElem2(const svOpenArrayHandle d, svBit value, int indx1,$/;"	f	signature:(const svOpenArrayHandle d, svBit value, int indx1, int indx2)
svPutBitArrElem2VecVal	./v_dpi.c	/^extern void svPutBitArrElem2VecVal(const svOpenArrayHandle d, $/;"	f	signature:(const svOpenArrayHandle d, const svBitVecVal* s, int indx1, int indx2)
svPutBitArrElem3	./v_dpi.c	/^extern void svPutBitArrElem3(const svOpenArrayHandle d, svBit value, int indx1,$/;"	f	signature:(const svOpenArrayHandle d, svBit value, int indx1, int indx2, int indx3)
svPutBitArrElem3VecVal	./v_dpi.c	/^extern void svPutBitArrElem3VecVal(const svOpenArrayHandle d, $/;"	f	signature:(const svOpenArrayHandle d, const svBitVecVal* s, int indx1, int indx2, int indx3)
svPutBitArrElemVecVal	./v_dpi.c	/^extern void svPutBitArrElemVecVal(const svOpenArrayHandle d, $/;"	f	signature:(const svOpenArrayHandle d, const svBitVecVal* s, int indx1, ...)
svPutBitselBit	./v_dpi.c	/^extern void svPutBitselBit(svBitVecVal* d, int i, svBit s)$/;"	f	signature:(svBitVecVal* d, int i, svBit s)
svPutBitselLogic	./v_dpi.c	/^extern void svPutBitselLogic(svLogicVecVal* d, int i, svLogic s)$/;"	f	signature:(svLogicVecVal* d, int i, svLogic s)
svPutLogicArrElem	./v_dpi.c	/^extern void svPutLogicArrElem(const svOpenArrayHandle d, svLogic value, $/;"	f	signature:(const svOpenArrayHandle d, svLogic value, int indx1, ...)
svPutLogicArrElem1	./v_dpi.c	/^extern void svPutLogicArrElem1(const svOpenArrayHandle d, svLogic value, $/;"	f	signature:(const svOpenArrayHandle d, svLogic value, int indx1)
svPutLogicArrElem1VecVal	./v_dpi.c	/^extern void svPutLogicArrElem1VecVal(const svOpenArrayHandle d, $/;"	f	signature:(const svOpenArrayHandle d, const svLogicVecVal* s, int indx1)
svPutLogicArrElem2	./v_dpi.c	/^extern void svPutLogicArrElem2(const svOpenArrayHandle d, svLogic value, $/;"	f	signature:(const svOpenArrayHandle d, svLogic value, int indx1, int indx2)
svPutLogicArrElem2VecVal	./v_dpi.c	/^extern void svPutLogicArrElem2VecVal(const svOpenArrayHandle d, $/;"	f	signature:(const svOpenArrayHandle d, const svLogicVecVal* s, int indx1, int indx2)
svPutLogicArrElem3	./v_dpi.c	/^extern void svPutLogicArrElem3(const svOpenArrayHandle d, svLogic value, $/;"	f	signature:(const svOpenArrayHandle d, svLogic value, int indx1, int indx2, int indx3)
svPutLogicArrElem3VecVal	./v_dpi.c	/^extern void svPutLogicArrElem3VecVal(const svOpenArrayHandle d, $/;"	f	signature:(const svOpenArrayHandle d, const svLogicVecVal* s, int indx1, int indx2, int indx3)
svPutLogicArrElemVecVal	./v_dpi.c	/^extern void svPutLogicArrElemVecVal(const svOpenArrayHandle d, $/;"	f	signature:(const svOpenArrayHandle d, const svLogicVecVal* s, int indx1, ...)
svPutPartselBit	./v_dpi.c	/^extern void svPutPartselBit(svBitVecVal* d, const svBitVecVal s, int i, int w)$/;"	f	signature:(svBitVecVal* d, const svBitVecVal s, int i, int w)
svPutPartselLogic	./v_dpi.c	/^extern void svPutPartselLogic(svLogicVecVal* d, const svLogicVecVal s, int i, $/;"	f	signature:(svLogicVecVal* d, const svLogicVecVal s, int i, int w)
svPutUserData	./v_dpi.c	/^extern int svPutUserData(const svScope scope, void *userKey, void* userData)$/;"	f	signature:(const svScope scope, void *userKey, void* userData)
svRight	./v_dpi.c	/^extern int svRight(const svOpenArrayHandle h, int d)$/;"	f	signature:(const svOpenArrayHandle h, int d)
svSetScope	./v_dpi.c	/^extern svScope svSetScope(const svScope scope)$/;"	f	signature:(const svScope scope)
svSizeOfArray	./v_dpi.c	/^extern int svSizeOfArray(const svOpenArrayHandle h)$/;"	f	signature:(const svOpenArrayHandle h)
sv_ch	./v.h	/^ unsigned char sv_ch;$/;"	m	union:adpi_u	access:public
sv_d	./v.h	/^ double sv_d; $/;"	m	union:adpi_u	access:public
sv_i	./v.h	/^ int sv_i;$/;"	m	union:adpi_u	access:public
sv_lib_t	./v.h	/^struct sv_lib_t {$/;"	s
sv_lib_t::does_not_exist	./v.h	/^ unsigned does_not_exist : 1;$/;"	m	struct:sv_lib_t	access:public
sv_lib_t::path	./v.h	/^ char *path;$/;"	m	struct:sv_lib_t	access:public
sv_lib_t::svnxt	./v.h	/^ struct sv_lib_t *svnxt;$/;"	m	struct:sv_lib_t	typeref:struct:sv_lib_t::sv_lib_t	access:public
sv_lngi	./v.h	/^ long long int sv_lngi;$/;"	m	union:adpi_u	access:public
sv_ptr	./v.h	/^ void *sv_ptr;$/;"	m	union:adpi_u	access:public
sv_shrti	./v.h	/^ short int sv_shrti;$/;"	m	union:adpi_u	access:public
svec_adr_add	./igen.h	/^ unsigned svec_adr_add : 1;   \/* T => tn is adr add of svec *\/ $/;"	m	struct:tn_t	access:public
svkeywds	./v_ms.c	/^static struct vkeywds_t svkeywds[] = {$/;"	v	typeref:struct:vkeywds_t	file:
svnxt	./v.h	/^ struct sv_lib_t *svnxt;$/;"	m	struct:sv_lib_t	typeref:struct:sv_lib_t::sv_lib_t	access:public
svt_workspace	./fstapi.h	/^                unsigned char svt_workspace; \/* zeroed out by FST reader, for client code use *\/$/;"	m	struct:fstHier::__anon18::fstHierVar	access:public
swait	./v.h	/^ struct wait_t swait;$/;"	m	union:st_u	typeref:struct:st_u::wait_t	access:public
swh	./v.h	/^ struct while_t swh;$/;"	m	union:st_u	typeref:struct:st_u::while_t	access:public
sword32	./v.h	/^typedef long sword32;$/;"	t
sword64	./v.h	/^typedef long long sword64;$/;"	t
sword64	./v.h	/^typedef long sword64;$/;"	t
sxt_workspace	./fstapi.h	/^                unsigned int  sxt_workspace; \/* zeroed out by FST reader, for client code use *\/$/;"	m	struct:fstHier::__anon18::fstHierVar	access:public
sy	./v.h	/^ struct sy_t *sy;$/;"	m	union:l_u	typeref:struct:l_u::sy_t	access:public
sy_argsmac	./v.h	/^ unsigned sy_argsmac : 1;     \/* macro symbol with arguments *\/$/;"	m	struct:sy_t	access:public
sy_gia_added	./v.h	/^ unsigned sy_gia_added : 1;   \/* this is g\/i vector el added symbol *\/$/;"	m	struct:sy_t	access:public
sy_giabase	./v.h	/^ unsigned sy_giabase : 1;     \/* T => symbol is g\/i array base *\/$/;"	m	struct:sy_t	access:public
sy_impldecl	./v.h	/^ unsigned sy_impldecl : 1;    \/* for wire, declared implicitly *\/$/;"	m	struct:sy_t	access:public
sy_in_genblk	./v.h	/^ unsigned sy_in_genblk : 1;   \/* this is local (net?\/lb) in gen blk sy tab *\/$/;"	m	struct:sy_t	access:public
sy_t	./v.h	/^struct sy_t {$/;"	s
sy_t::cfg_needed	./v.h	/^ unsigned cfg_needed : 1;     \/* T => symbol is used in config *\/$/;"	m	struct:sy_t	access:public
sy_t::el	./v.h	/^ union el_u el;$/;"	m	struct:sy_t	typeref:union:sy_t::el_u	access:public
sy_t::gen_add_mstab	./v.h	/^ unsigned gen_add_mstab : 1;  \/* T => qualified gen nam moves to mod sym tab *\/$/;"	m	struct:sy_t	access:public
sy_t::gen_net_impldecl	./v.h	/^ unsigned gen_net_impldecl : 1;\/* net's sym implicitly decled in xpnd gen blk *\/$/;"	m	struct:sy_t	access:public
sy_t::spltsy	./v.h	/^ struct sy_t *spltsy;$/;"	m	struct:sy_t	typeref:struct:sy_t::sy_t	access:public
sy_t::sy_argsmac	./v.h	/^ unsigned sy_argsmac : 1;     \/* macro symbol with arguments *\/$/;"	m	struct:sy_t	access:public
sy_t::sy_gia_added	./v.h	/^ unsigned sy_gia_added : 1;   \/* this is g\/i vector el added symbol *\/$/;"	m	struct:sy_t	access:public
sy_t::sy_giabase	./v.h	/^ unsigned sy_giabase : 1;     \/* T => symbol is g\/i array base *\/$/;"	m	struct:sy_t	access:public
sy_t::sy_impldecl	./v.h	/^ unsigned sy_impldecl : 1;    \/* for wire, declared implicitly *\/$/;"	m	struct:sy_t	access:public
sy_t::sy_in_genblk	./v.h	/^ unsigned sy_in_genblk : 1;   \/* this is local (net?\/lb) in gen blk sy tab *\/$/;"	m	struct:sy_t	access:public
sy_t::sydecl	./v.h	/^ unsigned sydecl : 1;         \/* symbol has been declared *\/$/;"	m	struct:sy_t	access:public
sy_t::syfnam_ind	./v.h	/^ unsigned syfnam_ind : 16;    \/* file symbol defined in *\/$/;"	m	struct:sy_t	access:public
sy_t::sylin_cnt	./v.h	/^ int32 sylin_cnt;             \/* def. line no. *\/$/;"	m	struct:sy_t	access:public
sy_t::synam	./v.h	/^ char *synam;$/;"	m	struct:sy_t	access:public
sy_t::sytyp	./v.h	/^ unsigned sytyp : 5;$/;"	m	struct:sy_t	access:public
sy_t::syundefmod	./v.h	/^ unsigned syundefmod : 1;     \/* undefined mod or udp *\/ $/;"	m	struct:sy_t	access:public
sydecl	./v.h	/^ unsigned sydecl : 1;         \/* symbol has been declared *\/$/;"	m	struct:sy_t	access:public
syfnam	./v.h	/^ char *syfnam;                \/* name of system function *\/$/;"	m	struct:sysfunc_t	access:public
syfnam_ind	./v.h	/^ unsigned syfnam_ind : 16;    \/* file symbol defined in *\/$/;"	m	struct:sy_t	access:public
syfnum	./v.h	/^ word32 syfnum;               \/* sysfunc ind. or 1000+ind veriusertfs[] *\/$/;"	m	struct:sysfunc_t	access:public
sylin_cnt	./v.h	/^ int32 sylin_cnt;             \/* def. line no. *\/$/;"	m	struct:sy_t	access:public
sym_added	./v.h	/^ unsigned sym_added : 1;      \/* T => sym table has been read *\/$/;"	m	struct:cfglib_t	access:public
symb_res_val	./igen.h	/^ unsigned symb_res_val : 2;   \/* symbolic result value - including unkn *\/$/;"	m	struct:insn_t	access:public
symtab_t	./v.h	/^struct symtab_t {$/;"	s
symtab_t::freezes	./v.h	/^ unsigned freezes : 1;$/;"	m	struct:symtab_t	access:public
symtab_t::gblkofsyt	./v.h	/^ struct genblk_t *gblkofsyt;  \/* for gen blk symtabs, gen blk symtab in *\/$/;"	m	struct:symtab_t	typeref:struct:symtab_t::genblk_t	access:public
symtab_t::linkto_cp_osytp	./v.h	/^ struct symtab_t *linkto_cp_osytp; \/* for sym tab copy in old pt to new *\/$/;"	m	struct:symtab_t	typeref:struct:symtab_t::symtab_t	access:public
symtab_t::n_head	./v.h	/^ struct tnode_t *n_head;$/;"	m	struct:symtab_t	typeref:struct:symtab_t::tnode_t	access:public
symtab_t::numsyms	./v.h	/^ unsigned numsyms : 31;$/;"	m	struct:symtab_t	access:public
symtab_t::stsyms	./v.h	/^ struct sy_t **stsyms;        \/* non null means frozed form *\/$/;"	m	struct:symtab_t	typeref:struct:symtab_t::sy_t	access:public
symtab_t::sypofsyt	./v.h	/^ struct sy_t *sypofsyt;       \/* symbol this table is symbol table of *\/$/;"	m	struct:symtab_t	typeref:struct:symtab_t::sy_t	access:public
symtab_t::sytofs	./v.h	/^ struct symtab_t *sytofs;     \/* offspring is list hdr of enclosed scopes *\/$/;"	m	struct:symtab_t	typeref:struct:symtab_t::symtab_t	access:public
symtab_t::sytpar	./v.h	/^ struct symtab_t *sytpar;     \/* parent is enclosing scope *\/$/;"	m	struct:symtab_t	typeref:struct:symtab_t::symtab_t	access:public
symtab_t::sytsib	./v.h	/^ struct symtab_t *sytsib;     \/* sibling is disjoint32 same level scope *\/$/;"	m	struct:symtab_t	typeref:struct:symtab_t::symtab_t	access:public
synam	./v.h	/^ char *synam;$/;"	m	struct:sy_t	access:public
sync_tevp	./v.h	/^ struct tev_t **sync_tevp;        \/* per inst ndx to sync event *\/$/;"	m	struct:tfrec_t	typeref:struct:tfrec_t::tev_t	access:public
sypofsyt	./v.h	/^ struct sy_t *sypofsyt;       \/* symbol this table is symbol table of *\/$/;"	m	struct:symtab_t	typeref:struct:symtab_t::sy_t	access:public
sysf_confunc_legal	./v_src.c	/^static int32 sysf_confunc_legal(int32 sysfunc_no)$/;"	f	file:	signature:(int32 sysfunc_no)
sysfcallx	./v.h	/^ struct expr_t *sysfcallx;    \/* if systf fcall, vpi_ systf call expr. *\/$/;"	m	union:vsystf_u	typeref:struct:vsystf_u::expr_t	access:public
sysfunc_t	./v.h	/^struct sysfunc_t {$/;"	s
sysfunc_t::pass_array	./v.h	/^ unsigned pass_array : 1;     \/* T => can pass unindexed array *\/$/;"	m	struct:sysfunc_t	access:public
sysfunc_t::retntyp	./v.h	/^ unsigned retntyp : 8;$/;"	m	struct:sysfunc_t	access:public
sysfunc_t::retsigned	./v.h	/^ unsigned retsigned : 1;      \/* need for signed wire *\/$/;"	m	struct:sysfunc_t	access:public
sysfunc_t::retwid	./v.h	/^ int32 retwid;                \/* for veriuser and vpi systf sizetf call sets *\/$/;"	m	struct:sysfunc_t	access:public
sysfunc_t::syfnam	./v.h	/^ char *syfnam;                \/* name of system function *\/$/;"	m	struct:sysfunc_t	access:public
sysfunc_t::syfnum	./v.h	/^ word32 syfnum;               \/* sysfunc ind. or 1000+ind veriusertfs[] *\/$/;"	m	struct:sysfunc_t	access:public
sysfunc_t::tftyp	./v.h	/^ unsigned tftyp : 8;          \/* type *\/$/;"	m	struct:sysfunc_t	access:public
systf_chk	./v.h	/^ unsigned systf_chk : 1;      \/* T => already seen in source and checked *\/ $/;"	m	struct:systftab_t	access:public
systf_u	./v.h	/^union systf_u { $/;"	u
systf_u::sfbp	./v.h	/^ struct sysfunc_t *sfbp;$/;"	m	union:systf_u	typeref:struct:systf_u::sysfunc_t	access:public
systf_u::stbp	./v.h	/^ struct systsk_t *stbp;$/;"	m	union:systf_u	typeref:struct:systf_u::systsk_t	access:public
systftab_t	./v.h	/^struct systftab_t {$/;"	s
systftab_t::sfu	./v.h	/^ union systf_u sfu;$/;"	m	struct:systftab_t	typeref:union:systftab_t::systf_u	access:public
systftab_t::systf_chk	./v.h	/^ unsigned systf_chk : 1;      \/* T => already seen in source and checked *\/ $/;"	m	struct:systftab_t	access:public
systftab_t::vpi_sytfdat	./v.h	/^ void *vpi_sytfdat;$/;"	m	struct:systftab_t	access:public
systsk_t	./v.h	/^struct systsk_t {$/;"	s
systsk_t::stsknam	./v.h	/^ char *stsknam;               \/* name of system task or pli task *\/$/;"	m	struct:systsk_t	access:public
systsk_t::stsknum	./v.h	/^ word32 stsknum;              \/* systask ind or 1000+index veriusertfs[] *\/$/;"	m	struct:systsk_t	access:public
syststp	./v.h	/^ struct st_t *syststp;        \/* stmt vpi_ systf call or task enable in *\/$/;"	m	union:vsystf_u	typeref:struct:vsystf_u::st_t	access:public
syt_of_net	./v.h	/^ struct symtab_t *syt_of_net; \/* symbol table net is in *\/$/;"	m	struct:net_t	typeref:struct:net_t::symtab_t	access:public
sytofs	./v.h	/^ struct symtab_t *sytofs;     \/* offspring is list hdr of enclosed scopes *\/$/;"	m	struct:symtab_t	typeref:struct:symtab_t::symtab_t	access:public
sytpar	./v.h	/^ struct symtab_t *sytpar;     \/* parent is enclosing scope *\/$/;"	m	struct:symtab_t	typeref:struct:symtab_t::symtab_t	access:public
sytsib	./v.h	/^ struct symtab_t *sytsib;     \/* sibling is disjoint32 same level scope *\/$/;"	m	struct:symtab_t	typeref:struct:symtab_t::symtab_t	access:public
sytyp	./v.h	/^ unsigned sytyp : 5;$/;"	m	struct:sy_t	access:public
syundefmod	./v.h	/^ unsigned syundefmod : 1;     \/* undefined mod or udp *\/ $/;"	m	struct:sy_t	access:public
sz_u	./v.h	/^union sz_u {$/;"	u
sz_u::vpi_sysf_datap	./v.h	/^ void *vpi_sysf_datap;        \/* for vpi_ sysf get\/put data routine *\/$/;"	m	union:sz_u	access:public
sz_u::xclen	./v.h	/^ int32 xclen;$/;"	m	union:sz_u	access:public
sz_u::xfrec	./v.h	/^ struct tfrec_t *xfrec;$/;"	m	union:sz_u	typeref:struct:sz_u::tfrec_t	access:public
szu	./v.h	/^ union sz_u szu;              \/* size of func tf rec. union *\/ $/;"	m	struct:expr_t	typeref:union:expr_t::sz_u	access:public
t	./v_ex2.c	/^static double t(int32 *seed, int32 deg_of_free)$/;"	f	file:	signature:(int32 *seed, int32 deg_of_free)
t2u	./v.h	/^ union te2_u t2u;     \/* extra word storage for the compiler to avoid malloc *\/$/;"	m	struct:tev_t	typeref:union:tev_t::te2_u	access:public
t_idnum	./v.h	/^ int32 t_idnum;               \/* id number for each task (design wide) *\/$/;"	m	struct:task_t	access:public
t_midat	./v.h	/^typedef word32 t_midat;$/;"	t
t_real	./igen.h	/^ unsigned t_real : 1;         \/* stored as SR VEC but actually double *\/$/;"	m	struct:tn_t	access:public
t_signed	./igen.h	/^ unsigned t_signed : 1;       \/* T => tn signed - any can be *\/$/;"	m	struct:tn_t	access:public
t_used	./v.h	/^ unsigned t_used : 1;         \/* T => task\/func. invoked some where *\/$/;"	m	struct:task_t	access:public
t_used_cross_call	./igen.h	/^ unsigned t_used_cross_call : 1; \/* T => used across a call *\/$/;"	m	struct:reg_alloc_info_t	access:public
t_used_cross_call	./igen.h	/^ unsigned t_used_cross_call : 1; \/* T => used across a call *\/$/;"	m	struct:tn_t	access:public
t_used_in_bw_insn	./igen.h	/^ unsigned t_used_in_bw_insn : 1; \/* T => used in a byte or half word insn *\/$/;"	m	struct:reg_alloc_info_t	access:public
t_used_in_bw_insn	./igen.h	/^ unsigned t_used_in_bw_insn : 1; \/* T => used in a byte or half word insn *\/$/;"	m	struct:tn_t	access:public
tab_ax1	./v.h	/^ struct expr_t **tab_ax1;      \/* dim size table of first range exprs *\/$/;"	m	struct:mda_t	typeref:struct:mda_t::expr_t	access:public
tab_ax2	./v.h	/^ struct expr_t **tab_ax2;      \/* dim size table of first range exprs *\/$/;"	m	struct:mda_t	typeref:struct:mda_t::expr_t	access:public
table	./v.h	/^ struct expr_t **table;  \/* per mod table of sys func call records *\/    $/;"	m	struct:expr_tab_t	typeref:struct:expr_tab_t::expr_t	access:public
tableType_t	./lz4.c	/^typedef enum { byPtr, byU32, byU16 } tableType_t;$/;"	t	typeref:enum:__anon7	file:
tag_parent_tni	./igen.h	/^ int32 tag_parent_tni;        \/* if result of adr add containing parent tni *\/$/;"	m	struct:tn_t	access:public
targ_u	./v.h	/^union targ_u {$/;"	u
targ_u::targitp	./v.h	/^ struct itree_t *targitp;     \/* only for rooted - one target itree place *\/$/;"	m	union:targ_u	typeref:struct:targ_u::itree_t	access:public
targ_u::uprel_itps	./v.h	/^ struct itree_t **uprel_itps; \/* parallel to mod itps dest itree table *\/$/;"	m	union:targ_u	typeref:struct:targ_u::itree_t	access:public
targitp	./v.h	/^ struct itree_t *targitp;     \/* only for rooted - one target itree place *\/$/;"	m	union:targ_u	typeref:struct:targ_u::itree_t	access:public
targmdp	./v.h	/^ struct mod_t *targmdp;       \/* module target declared in *\/$/;"	m	struct:gref_t	typeref:struct:gref_t::mod_t	access:public
targs	./v.h	/^ struct expr_t *targs;        \/* FCCOM expr of args *\/$/;"	m	struct:tskcall_t	typeref:struct:tskcall_t::expr_t	access:public
targsyp	./v.h	/^ struct sy_t *targsyp;        \/* actual end path symbol in target module *\/$/;"	m	struct:gref_t	typeref:struct:gref_t::sy_t	access:public
targsyp	./v.h	/^ struct sy_t *targsyp;        \/* target symbol from gref *\/$/;"	m	struct:dfparam_t	typeref:struct:dfparam_t::sy_t	access:public
targtskp	./v.h	/^ struct task_t *targtskp;     \/* if non NULL, task target declared in *\/$/;"	m	struct:gref_t	typeref:struct:gref_t::task_t	access:public
targu	./v.h	/^ union targ_u targu;          \/* up rel. itp list or rooted 1 target itp *\/$/;"	m	struct:gref_t	typeref:union:gref_t::targ_u	access:public
task_add_vpi_systf	./v_vpi.c	/^static struct sy_t *task_add_vpi_systf(char *tnam, int32 tnum)$/;"	f	file:	signature:(char *tnam, int32 tnum)
task_pin_t	./v.h	/^struct task_pin_t {$/;"	s
task_pin_t::tpnxt	./v.h	/^ struct task_pin_t *tpnxt;$/;"	m	struct:task_pin_t	typeref:struct:task_pin_t::task_pin_t	access:public
task_pin_t::tpsy	./v.h	/^ struct sy_t *tpsy;           \/* port name sym. points to wire\/reg *\/$/;"	m	struct:task_pin_t	typeref:struct:task_pin_t::sy_t	access:public
task_pin_t::trtyp	./v.h	/^ unsigned trtyp : 8;          \/* i\/o type (same as sym np iotyp) *\/$/;"	m	struct:task_pin_t	access:public
task_start_ofs	./v.h	/^ size_t task_start_ofs;        \/* offset where task vars start *\/$/;"	m	struct:mod_t	access:public
task_t	./v.h	/^struct task_t {$/;"	s
task_t::called_tasks	./v.h	/^ struct task_t **called_tasks; \/* array of tasks this task calls *\/$/;"	m	struct:task_t	typeref:struct:task_t::task_t	access:public
task_t::can_be_disabled	./v.h	/^ unsigned can_be_disabled : 1;\/* T => disable somewhere in source *\/$/;"	m	struct:task_t	access:public
task_t::cfu	./v.h	/^ union conf_u cfu;            \/* con func and image aux info union *\/$/;"	m	struct:task_t	typeref:union:task_t::conf_u	access:public
task_t::dsa_brk_ndx	./v.h	/^ int32 dsa_brk_ndx;           \/* index for glob func dsabl nb jmp *\/$/;"	m	struct:task_t	access:public
task_t::end_of_stmtndx	./v.h	/^ int32 end_of_stmtndx;         \/* end of stmt index for this task *\/$/;"	m	struct:task_t	access:public
task_t::fhas_fcall	./v.h	/^ unsigned fhas_fcall : 1;     \/* T => func contains non sys fcall *\/$/;"	m	struct:task_t	access:public
task_t::has_return	./v.h	/^ unsigned has_return : 1;      \/* T => has SV return stmt *\/$/;"	m	struct:task_t	access:public
task_t::is_auto	./v.h	/^ unsigned is_auto : 1;          \/* T => is automatic task *\/$/;"	m	struct:task_t	access:public
task_t::is_con_func	./v.h	/^ unsigned is_con_func : 1;    \/* T => when const args, is a const func *\/$/;"	m	struct:task_t	access:public
task_t::is_cp_conf_image	./v.h	/^ unsigned is_cp_conf_image : 1; \/* T => this is elaborate const copy *\/$/;"	m	struct:task_t	access:public
task_t::is_inter_blk	./v.h	/^ unsigned is_inter_blk : 1;    \/* T => is internal named block *\/$/;"	m	struct:task_t	access:public
task_t::is_loaded	./v.h	/^ unsigned is_loaded : 1;      \/* T => task is loaded (passed) to a wrapper *\/$/;"	m	struct:task_t	access:public
task_t::is_printed	./v.h	/^ unsigned is_printed : 1;     \/* T => compiled global is printed *\/$/;"	m	struct:task_t	access:public
task_t::is_void_func	./v.h	/^ unsigned is_void_func : 1;    \/* T => is SV void func *\/$/;"	m	struct:task_t	access:public
task_t::no_delay	./v.h	/^ unsigned no_delay : 1;       \/* T => task has no reachable delay *\/ $/;"	m	struct:task_t	access:public
task_t::no_xmrcall	./v.h	/^ unsigned no_xmrcall : 1;     \/* T => task has no reachable xmr task *\/$/;"	m	struct:task_t	access:public
task_t::st_namblkin	./v.h	/^ struct st_t *st_namblkin;    \/* stmt named block in in *\/$/;"	m	struct:task_t	typeref:struct:task_t::st_t	access:public
task_t::t_idnum	./v.h	/^ int32 t_idnum;               \/* id number for each task (design wide) *\/$/;"	m	struct:task_t	access:public
task_t::t_used	./v.h	/^ unsigned t_used : 1;         \/* T => task\/func. invoked some where *\/$/;"	m	struct:task_t	access:public
task_t::tf_dpip	./v.h	/^ struct dpi_t *tf_dpip;       \/* if DPI set to DPI struct *\/$/;"	m	struct:task_t	typeref:struct:task_t::dpi_t	access:public
task_t::tf_lofp_decl	./v.h	/^ unsigned tf_lofp_decl : 1;   \/* T => t\/f hdr list of port decl form *\/ $/;"	m	struct:task_t	access:public
task_t::thas_outs	./v.h	/^ unsigned thas_outs : 1;      \/* T => task has outs that must be stored *\/ $/;"	m	struct:task_t	access:public
task_t::thas_tskcall	./v.h	/^ unsigned thas_tskcall : 1;   \/* T => task contains other task call *\/$/;"	m	struct:task_t	access:public
task_t::tlocprmnum	./v.h	/^ int32 tlocprmnum;            \/* number of task local parameters *\/$/;"	m	struct:task_t	access:public
task_t::tprmnum	./v.h	/^ int32 tprmnum;               \/* number of task parameters *\/$/;"	m	struct:task_t	access:public
task_t::trnum	./v.h	/^ int32 trnum;                 \/* number of task regs *\/   $/;"	m	struct:task_t	access:public
task_t::tsk_ingen	./v.h	/^ unsigned tsk_ingen : 1;      \/* T => task defined in gen block *\/$/;"	m	struct:task_t	access:public
task_t::tsk_last_ifi	./v.h	/^ int32 tsk_last_ifi;          \/* end file in case spans multiple files *\/$/;"	m	struct:task_t	access:public
task_t::tsk_last_lini	./v.h	/^ int32 tsk_last_lini;         \/* line no. of end (mabye in next file) *\/$/;"	m	struct:task_t	access:public
task_t::tsk_locprms	./v.h	/^ struct net_t *tsk_locprms;   \/* local parameters defined in task *\/$/;"	m	struct:task_t	typeref:struct:task_t::net_t	access:public
task_t::tsk_prms	./v.h	/^ struct net_t *tsk_prms;      \/* parameters defined in task *\/$/;"	m	struct:task_t	typeref:struct:task_t::net_t	access:public
task_t::tsk_regs	./v.h	/^ struct net_t *tsk_regs;      \/* list then array of nets in task *\/$/;"	m	struct:task_t	typeref:struct:task_t::net_t	access:public
task_t::tsknxt	./v.h	/^ struct task_t *tsknxt;       \/* next defined task in current module *\/$/;"	m	struct:task_t	typeref:struct:task_t::task_t	access:public
task_t::tskpins	./v.h	/^ struct task_pin_t *tskpins;  \/* task ports - procedural not wires *\/$/;"	m	struct:task_t	typeref:struct:task_t::task_pin_t	access:public
task_t::tskst	./v.h	/^ struct st_t *tskst;          \/* one task statement (usually a block) *\/$/;"	m	struct:task_t	typeref:struct:task_t::st_t	access:public
task_t::tsksymtab	./v.h	/^ struct symtab_t *tsksymtab;  \/* symbol table for objects in task *\/$/;"	m	struct:task_t	typeref:struct:task_t::symtab_t	access:public
task_t::tsksyp	./v.h	/^ struct sy_t *tsksyp;         \/* name symbol in module level table *\/$/;"	m	struct:task_t	typeref:struct:task_t::sy_t	access:public
task_t::tsktyp	./v.h	/^ unsigned tsktyp : 9;         \/* symbol number giving task type *\/$/;"	m	struct:task_t	access:public
task_t::tthrds	./v.h	/^ struct tskthrd_t **tthrds;   \/* per inst. list of active threads for task *\/$/;"	m	struct:task_t	typeref:struct:task_t::tskthrd_t	access:public
task_t::unkn_if_con_func	./v.h	/^ unsigned unkn_if_con_func : 1;\/* T => not check to see if con func yet *\/$/;"	m	struct:task_t	access:public
task_t::uses_scope	./v.h	/^ unsigned uses_scope : 1;     \/* T => task calls display uses %m *\/$/;"	m	struct:task_t	access:public
task_thrd_jmpndx	./v.h	/^ int32 task_thrd_jmpndx;        \/* index of task return location *\/$/;"	m	struct:st_t	access:public
taskstrprop_vpiget	./v_vpi2.c	/^static char *taskstrprop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
tbreakpoint_msg	./v_dbg.c	/^static char *tbreakpoint_msg[] = { $/;"	v	file:
tc_chkchgp	./v.h	/^ struct chktchg_t *tc_chkchgp;$/;"	m	struct:tc_pendlst_t	typeref:struct:tc_pendlst_t::chktchg_t	access:public
tc_delrep	./v.h	/^ unsigned tc_delrep : 5;      \/* limit delay type (will be same for both) *\/$/;"	m	struct:tchk_t	access:public
tc_delrep2	./v.h	/^ unsigned tc_delrep2 : 5;     \/* type of 2nd limit if present *\/ $/;"	m	struct:tchk_t	access:public
tc_gone	./v.h	/^ unsigned tc_gone : 1;        \/* must ignore because of error *\/$/;"	m	struct:tchk_t	access:public
tc_haslim2	./v.h	/^ unsigned tc_haslim2 : 1;     \/* lim2 value present *\/$/;"	m	struct:tchk_t	access:public
tc_idp	./v.h	/^ t_midat *tc_idp;$/;"	m	struct:tc_pendlst_t	access:public
tc_pendlst_t	./v.h	/^struct tc_pendlst_t {$/;"	s
tc_pendlst_t::tc_chkchgp	./v.h	/^ struct chktchg_t *tc_chkchgp;$/;"	m	struct:tc_pendlst_t	typeref:struct:tc_pendlst_t::chktchg_t	access:public
tc_pendlst_t::tc_idp	./v.h	/^ t_midat *tc_idp;$/;"	m	struct:tc_pendlst_t	access:public
tc_pendlst_t::tc_plnxt	./v.h	/^ struct tc_pendlst_t *tc_plnxt;$/;"	m	struct:tc_pendlst_t	typeref:struct:tc_pendlst_t::tc_pendlst_t	access:public
tc_plnxt	./v.h	/^ struct tc_pendlst_t *tc_plnxt;$/;"	m	struct:tc_pendlst_t	typeref:struct:tc_pendlst_t::tc_pendlst_t	access:public
tc_recofrecrem	./v.h	/^ unsigned tc_recofrecrem : 1; \/* recovery (added) part of recrem *\/$/;"	m	struct:tchk_t	access:public
tc_supofsuphld	./v.h	/^ unsigned tc_supofsuphld : 1; \/* setup (added) part of setup hold *\/$/;"	m	struct:tchk_t	access:public
tcallprop_vpiget	./v_vpi2.c	/^static int32 tcallprop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
tcallstrprop_vpiget	./v_vpi2.c	/^static char *tcallstrprop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
tchg_t	./v.h	/^struct tchg_t {$/;"	s
tchg_t::chgu	./v.h	/^ union tchg_u chgu;           \/* union pointer to associated master *\/$/;"	m	struct:tchg_t	typeref:union:tchg_t::tchg_u	access:public
tchg_t::lastchg_ofs	./v.h	/^ size_t lastchg_ofs;          \/* last chg idp ofs time for 1 bit *\/$/;"	m	struct:tchg_t	access:public
tchg_t::oldval_ofs	./v.h	/^ size_t oldval_ofs;           \/* idp ofs of value of source bit *\/$/;"	m	struct:tchg_t	access:public
tchg_u	./v.h	/^union tchg_u {$/;"	u
tchg_u::chgpthp	./v.h	/^ struct spcpth_t *chgpthp;$/;"	m	union:tchg_u	typeref:struct:tchg_u::spcpth_t	access:public
tchg_u::chgtcp	./v.h	/^ struct tchk_t *chgtcp;$/;"	m	union:tchg_u	typeref:struct:tchg_u::tchk_t	access:public
tchk_t	./v.h	/^struct tchk_t {$/;"	s
tchk_t::chkcondx	./v.h	/^ struct expr_t *chkcondx;     \/* &&& data event or edge path delay sel. *\/$/;"	m	struct:tchk_t	typeref:struct:tchk_t::expr_t	access:public
tchk_t::chkedge	./v.h	/^ unsigned chkedge : 8;        \/* edge byte (pli 1 bit per rf coding) *\/$/;"	m	struct:tchk_t	access:public
tchk_t::chktim_condx	./v.h	/^ struct expr_t *chktim_condx; \/* optional setuphld\/recrem chk del expr *\/$/;"	m	struct:tchk_t	typeref:struct:tchk_t::expr_t	access:public
tchk_t::chkxp	./v.h	/^ struct expr_t *chkxp;        \/* event (data - check) expr *\/$/;"	m	struct:tchk_t	typeref:struct:tchk_t::expr_t	access:public
tchk_t::delayed_datx	./v.h	/^ struct expr_t *delayed_datx; \/* optional setuphld\/recrem delayed data var x *\/$/;"	m	struct:tchk_t	typeref:struct:tchk_t::expr_t	access:public
tchk_t::delayed_refx	./v.h	/^ struct expr_t *delayed_refx; \/* optional setuphld\/recrem delayed ref var x *\/$/;"	m	struct:tchk_t	typeref:struct:tchk_t::expr_t	access:public
tchk_t::ntfy_np	./v.h	/^ struct net_t *ntfy_np;       \/* notify wire (known during fix up) *\/$/;"	m	struct:tchk_t	typeref:struct:tchk_t::net_t	access:public
tchk_t::stamptim_condx	./v.h	/^ struct expr_t *stamptim_condx; \/* optional setuphld\/recrem stamp del expr *\/$/;"	m	struct:tchk_t	typeref:struct:tchk_t::expr_t	access:public
tchk_t::startcondx	./v.h	/^ struct expr_t *startcondx;   \/* &&& ref. event or edge path delay sel. *\/$/;"	m	struct:tchk_t	typeref:struct:tchk_t::expr_t	access:public
tchk_t::startedge	./v.h	/^ unsigned startedge : 8;      \/* edge byte (pli 1 bit per rf coding) *\/$/;"	m	struct:tchk_t	access:public
tchk_t::startxp	./v.h	/^ struct expr_t *startxp;      \/* event (reference) expr *\/$/;"	m	struct:tchk_t	typeref:struct:tchk_t::expr_t	access:public
tchk_t::tc_delrep	./v.h	/^ unsigned tc_delrep : 5;      \/* limit delay type (will be same for both) *\/$/;"	m	struct:tchk_t	access:public
tchk_t::tc_delrep2	./v.h	/^ unsigned tc_delrep2 : 5;     \/* type of 2nd limit if present *\/ $/;"	m	struct:tchk_t	access:public
tchk_t::tc_gone	./v.h	/^ unsigned tc_gone : 1;        \/* must ignore because of error *\/$/;"	m	struct:tchk_t	access:public
tchk_t::tc_haslim2	./v.h	/^ unsigned tc_haslim2 : 1;     \/* lim2 value present *\/$/;"	m	struct:tchk_t	access:public
tchk_t::tc_recofrecrem	./v.h	/^ unsigned tc_recofrecrem : 1; \/* recovery (added) part of recrem *\/$/;"	m	struct:tchk_t	access:public
tchk_t::tc_supofsuphld	./v.h	/^ unsigned tc_supofsuphld : 1; \/* setup (added) part of setup hold *\/$/;"	m	struct:tchk_t	access:public
tchk_t::tchknxt	./v.h	/^ struct tchk_t *tchknxt;      \/* next in current specify block *\/$/;"	m	struct:tchk_t	typeref:struct:tchk_t::tchk_t	access:public
tchk_t::tchktyp	./v.h	/^ unsigned tchktyp : 8;        \/* timing check type *\/$/;"	m	struct:tchk_t	access:public
tchk_t::tclim2_du	./v.h	/^ union del_u tclim2_du;       \/* 2nd optional limit as delay *\/$/;"	m	struct:tchk_t	typeref:union:tchk_t::del_u	access:public
tchk_t::tclim_du	./v.h	/^ union del_u tclim_du;        \/* 1st limit as delay *\/$/;"	m	struct:tchk_t	typeref:union:tchk_t::del_u	access:public
tchk_t::tcsym	./v.h	/^ struct sy_t *tcsym;          \/* symbol with constructed name for del set *\/$/;"	m	struct:tchk_t	typeref:struct:tchk_t::sy_t	access:public
tchknxt	./v.h	/^ struct tchk_t *tchknxt;      \/* next in current specify block *\/$/;"	m	struct:tchk_t	typeref:struct:tchk_t::tchk_t	access:public
tchkprop_vpiget	./v_vpi2.c	/^static int32 tchkprop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
tchks	./v.h	/^ struct tchk_t *tchks;        \/* timing checks *\/$/;"	m	struct:spfy_t	typeref:struct:spfy_t::tchk_t	access:public
tchktermprop_vpiget	./v_vpi2.c	/^static int32 tchktermprop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
tchktyp	./v.h	/^ unsigned tchktyp : 8;        \/* timing check type *\/$/;"	m	struct:tchk_t	access:public
tchn_cnt	./fstapi.c	/^uint32_t tchn_cnt, tchn_idx;$/;"	m	struct:fstWriterContext	file:	access:public
tchn_handle	./fstapi.c	/^FILE *tchn_handle;$/;"	m	struct:fstWriterContext	file:	access:public
tchn_handle_nam	./fstapi.c	/^char *tchn_handle_nam;$/;"	m	struct:fstWriterContext	file:	access:public
tchn_idx	./fstapi.c	/^uint32_t tchn_cnt, tchn_idx;$/;"	m	struct:fstWriterContext	file:	access:public
tclim2_du	./v.h	/^ union del_u tclim2_du;       \/* 2nd optional limit as delay *\/$/;"	m	struct:tchk_t	typeref:union:tchk_t::del_u	access:public
tclim_du	./v.h	/^ union del_u tclim_du;        \/* 1st limit as delay *\/$/;"	m	struct:tchk_t	typeref:union:tchk_t::del_u	access:public
tclnxt	./v_sdf.c	/^ struct tclst_t *tclnxt;$/;"	m	struct:tclst_t	typeref:struct:tclst_t::tclst_t	file:	access:public
tclst_t	./v_sdf.c	/^struct tclst_t {$/;"	s	file:
tclst_t::tclnxt	./v_sdf.c	/^ struct tclst_t *tclnxt;$/;"	m	struct:tclst_t	typeref:struct:tclst_t::tclst_t	file:	access:public
tclst_t::tcp	./v_sdf.c	/^ struct tchk_t *tcp;$/;"	m	struct:tclst_t	typeref:struct:tclst_t::tchk_t	file:	access:public
tcp	./v_sdf.c	/^ struct tchk_t *tcp;$/;"	m	struct:tclst_t	typeref:struct:tclst_t::tchk_t	file:	access:public
tcsym	./v.h	/^ struct sy_t *tcsym;          \/* symbol with constructed name for del set *\/$/;"	m	struct:tchk_t	typeref:struct:tchk_t::sy_t	access:public
tcterm_t	./v_sdf.c	/^struct tcterm_t {$/;"	s	file:
tcterm_t::cnd_const	./v_sdf.c	/^ int32 cnd_op, cnd_const;$/;"	m	struct:tcterm_t	file:	access:public
tcterm_t::cnd_op	./v_sdf.c	/^ int32 cnd_op, cnd_const;$/;"	m	struct:tcterm_t	file:	access:public
tcterm_t::cndi1	./v_sdf.c	/^ int32 cndi1, cndi2;$/;"	m	struct:tcterm_t	file:	access:public
tcterm_t::cndi2	./v_sdf.c	/^ int32 cndi1, cndi2;$/;"	m	struct:tcterm_t	file:	access:public
tcterm_t::cndnam	./v_sdf.c	/^ char *cndnam;$/;"	m	struct:tcterm_t	file:	access:public
tcterm_t::eval	./v_sdf.c	/^ int32 ti1, ti2, eval;$/;"	m	struct:tcterm_t	file:	access:public
tcterm_t::ti1	./v_sdf.c	/^ int32 ti1, ti2, eval;$/;"	m	struct:tcterm_t	file:	access:public
tcterm_t::ti2	./v_sdf.c	/^ int32 ti1, ti2, eval;$/;"	m	struct:tcterm_t	file:	access:public
tcterm_t::tnam	./v_sdf.c	/^ char *tnam;$/;"	m	struct:tcterm_t	file:	access:public
te2_u	./v.h	/^union te2_u {$/;"	u
te2_u::bi	./v.h	/^ word32 bi;                    \/* lhs bit index *\/$/;"	m	union:te2_u	access:public
te2_u::nb_rhs_size	./v.h	/^ word32 nb_rhs_size;           \/* size of nb rhs to free *\/$/;"	m	union:te2_u	access:public
te_endp	./v.h	/^ struct tev_t *te_hdrp, *te_endp;$/;"	m	struct:heap_t	typeref:struct:heap_t::	access:public
te_endp	./v.h	/^ struct tev_t *te_hdrp, *te_endp;$/;"	m	struct:telhdr_t	typeref:struct:telhdr_t::	access:public
te_endp	./v.h	/^ struct tev_t *te_hdrp, *te_endp;$/;"	m	struct:tqnode_t	typeref:struct:tqnode_t::	access:public
te_hdrp	./v.h	/^ struct tev_t *te_hdrp, *te_endp;$/;"	m	struct:heap_t	typeref:struct:heap_t::tev_t	access:public
te_hdrp	./v.h	/^ struct tev_t *te_hdrp, *te_endp;$/;"	m	struct:telhdr_t	typeref:struct:telhdr_t::tev_t	access:public
te_hdrp	./v.h	/^ struct tev_t *te_hdrp, *te_endp;$/;"	m	struct:tqnode_t	typeref:struct:tqnode_t::tev_t	access:public
te_idp	./v.h	/^ t_midat *te_idp;             \/* idp area *\/$/;"	m	struct:tev_t	access:public
te_trdecay	./v.h	/^ unsigned te_trdecay : 1;     \/* event is trireg decay *\/$/;"	m	struct:tev_t	access:public
te_u	./v.h	/^union te_u {$/;"	u
te_u::bi	./v.h	/^ word32 bi;                      \/* mipd index value *\/$/;"	m	union:te_u	access:public
te_u::rhs_wp	./v.h	/^ word32 *rhs_wp;                 \/* rhs nb value pointer *\/$/;"	m	union:te_u	access:public
te_u::stp	./v.h	/^ struct st_t *stp;$/;"	m	union:te_u	typeref:struct:te_u::st_t	access:public
te_u::tecap	./v.h	/^ struct conta_t *tecap;$/;"	m	union:te_u	typeref:struct:te_u::conta_t	access:public
te_u::tedputp	./v.h	/^ struct tedputp_t *tedputp;$/;"	m	union:te_u	typeref:struct:te_u::tedputp_t	access:public
te_u::tegp	./v.h	/^ struct gate_t *tegp;$/;"	m	union:te_u	typeref:struct:te_u::gate_t	access:public
te_u::tehp	./v.h	/^ struct h_t *tehp;$/;"	m	union:te_u	typeref:struct:te_u::h_t	access:public
te_u::tenbpa	./v.h	/^ struct tenbpa_t *tenbpa;$/;"	m	union:te_u	typeref:struct:te_u::tenbpa_t	access:public
te_u::tenp	./v.h	/^ struct tenp_t *tenp;$/;"	m	union:te_u	typeref:struct:te_u::tenp_t	access:public
te_u::teputvp	./v.h	/^ struct teputv_t *teputvp; $/;"	m	union:te_u	typeref:struct:te_u::teputv_t	access:public
te_u::tetfrec	./v.h	/^ struct tfrec_t *tetfrec;$/;"	m	union:te_u	typeref:struct:te_u::tfrec_t	access:public
te_u::tethrd	./v.h	/^ struct thread_t *tethrd;$/;"	m	union:te_u	typeref:struct:te_u::thread_t	access:public
tecap	./v.h	/^ struct conta_t *tecap;$/;"	m	union:te_u	typeref:struct:te_u::conta_t	access:public
tedpnum	./v.h	/^ int32 tedpnum;$/;"	m	struct:tedputp_t	access:public
tedputp	./v.h	/^ struct tedputp_t *tedputp;$/;"	m	union:te_u	typeref:struct:te_u::tedputp_t	access:public
tedputp_t	./v.h	/^struct tedputp_t {$/;"	s
tedputp_t::tedpnum	./v.h	/^ int32 tedpnum;$/;"	m	struct:tedputp_t	access:public
tedputp_t::tedtfrp	./v.h	/^ struct tfrec_t *tedtfrp;$/;"	m	struct:tedputp_t	typeref:struct:tedputp_t::tfrec_t	access:public
tedputp_t::tedwp	./v.h	/^ word32 *tedwp;               \/* point to both half - know exact lhs word32 len *\/$/;"	m	struct:tedputp_t	access:public
tedtfrp	./v.h	/^ struct tfrec_t *tedtfrp;$/;"	m	struct:tedputp_t	typeref:struct:tedputp_t::tfrec_t	access:public
tedwp	./v.h	/^ word32 *tedwp;               \/* point to both half - know exact lhs word32 len *\/$/;"	m	struct:tedputp_t	access:public
tegp	./v.h	/^ struct gate_t *tegp;$/;"	m	union:te_u	typeref:struct:te_u::gate_t	access:public
tehp	./v.h	/^ struct h_t *tehp;$/;"	m	union:te_u	typeref:struct:te_u::h_t	access:public
telhdr_t	./v.h	/^struct telhdr_t {$/;"	s
telhdr_t::num_events	./v.h	/^ int32 num_events;$/;"	m	struct:telhdr_t	access:public
telhdr_t::te_endp	./v.h	/^ struct tev_t *te_hdrp, *te_endp;$/;"	m	struct:telhdr_t	typeref:struct:telhdr_t::	access:public
telhdr_t::te_hdrp	./v.h	/^ struct tev_t *te_hdrp, *te_endp;$/;"	m	struct:telhdr_t	typeref:struct:telhdr_t::tev_t	access:public
telnxt	./v.h	/^ struct tevlst_t *telnxt;$/;"	m	struct:tevlst_t	typeref:struct:tevlst_t::tevlst_t	access:public
telp	./v.h	/^ struct dltevlst_t *telp, *terp;$/;"	m	struct:dltevlst_t	typeref:struct:dltevlst_t::dltevlst_t	access:public
temp_signal_value_buf	./fstapi.c	/^unsigned char *temp_signal_value_buf;   \/* malloced for len in longest_signal_value_len *\/$/;"	m	struct:fstReaderContext	file:	access:public
ten_u	./v.h	/^union ten_u {$/;"	u
ten_u::mpp	./v.h	/^ struct mod_pin_t *mpp;$/;"	m	union:ten_u	typeref:struct:ten_u::mod_pin_t	access:public
ten_u::np	./v.h	/^ struct net_t *np;$/;"	m	union:ten_u	typeref:struct:ten_u::net_t	access:public
tenbpa	./v.h	/^ struct tenbpa_t *tenbpa;$/;"	m	union:te_u	typeref:struct:te_u::tenbpa_t	access:public
tenbpa_t	./v.h	/^struct tenbpa_t {$/;"	s
tenbpa_t::bi	./v.h	/^ int32 bi;                    \/* AIV 11\/21\/07 - the bit\/arr ndx into the lhs *\/$/;"	m	struct:tenbpa_t	access:public
tenbpa_t::nbastp	./v.h	/^ struct st_t *nbastp;$/;"	m	struct:tenbpa_t	typeref:struct:tenbpa_t::st_t	access:public
tenbpa_t::nbawp	./v.h	/^ word32 *nbawp;$/;"	m	struct:tenbpa_t	access:public
tenbpa_t::nbdctp	./v.h	/^ struct delctrl_t *nbdctp;$/;"	m	struct:tenbpa_t	typeref:struct:tenbpa_t::delctrl_t	access:public
tenbpa_t::nblhsu	./v.h	/^ union nblhs_u nblhsu; $/;"	m	struct:tenbpa_t	typeref:union:tenbpa_t::nblhs_u	access:public
tenbpa_t::nblhsxp	./v.h	/^ struct expr_t *nblhsxp;      \/* if var ndx expr (maybe cat) const ndx copy *\/$/;"	m	struct:tenbpa_t	typeref:struct:tenbpa_t::expr_t	access:public
tenbpa_t::nbytes	./v.h	/^ int32 nbytes;                \/* store the num bytes of the stored area *\/$/;"	m	struct:tenbpa_t	access:public
tenbpa_t::nchglp	./v.h	/^ struct nchglst_t *nchglp;    \/* static (maybe alloced) net change *\/$/;"	m	struct:tenbpa_t	typeref:struct:tenbpa_t::nchglst_t	access:public
tenp	./v.h	/^ struct tenp_t *tenp;$/;"	m	union:te_u	typeref:struct:te_u::tenp_t	access:public
tenp_t	./v.h	/^struct tenp_t {$/;"	s
tenp_t::nbi	./v.h	/^ int32 nbi;$/;"	m	struct:tenp_t	access:public
tenp_t::tenu	./v.h	/^ union ten_u tenu;$/;"	m	struct:tenp_t	typeref:union:tenp_t::ten_u	access:public
tenu	./v.h	/^ union ten_u tenu;$/;"	m	struct:tenp_t	typeref:union:tenp_t::ten_u	access:public
tenxtp	./v.h	/^ struct tev_t *tenxtp;$/;"	m	struct:tev_t	typeref:struct:tev_t::tev_t	access:public
teprevp	./v.h	/^ struct tev_t *teprevp;$/;"	m	struct:tev_t	typeref:struct:tev_t::tev_t	access:public
teputv_t	./v.h	/^struct teputv_t { $/;"	s
teputv_t::di	./v.h	/^ int32 di;                    \/* for mult. drivers the ndx no. in table *\/$/;"	m	struct:teputv_t	access:public
teputv_t::evnt_hp	./v.h	/^ struct h_t *evnt_hp;         \/* ptr back to event for cancelling *\/$/;"	m	struct:teputv_t	typeref:struct:teputv_t::h_t	access:public
teputv_t::nbi	./v.h	/^ int32 nbi;$/;"	m	struct:teputv_t	access:public
teputv_t::np	./v.h	/^ struct net_t *np;$/;"	m	struct:teputv_t	typeref:struct:teputv_t::net_t	access:public
teputv_t::putv_wp	./v.h	/^ word32 *putv_wp;$/;"	m	struct:teputv_t	access:public
teputvp	./v.h	/^ struct teputv_t *teputvp; $/;"	m	union:te_u	typeref:struct:te_u::teputv_t	access:public
termexpr_matches	./v_vpi2.c	/^static int32 termexpr_matches(struct expr_t *xp, struct net_t *np, int32 ndx)$/;"	f	file:	signature:(struct expr_t *xp, struct net_t *np, int32 ndx)
terp	./v.h	/^ struct dltevlst_t *telp, *terp;$/;"	m	struct:dltevlst_t	typeref:struct:dltevlst_t::	access:public
tetfrec	./v.h	/^ struct tfrec_t *tetfrec;$/;"	m	union:te_u	typeref:struct:te_u::tfrec_t	access:public
tethrd	./v.h	/^ struct thread_t *tethrd;$/;"	m	union:te_u	typeref:struct:te_u::thread_t	access:public
tev_t	./v.h	/^struct tev_t {$/;"	s
tev_t::align_filler	./v.h	/^ unsigned align_filler : 9;   \/* empty space to align on word boundary *\/$/;"	m	struct:tev_t	access:public
tev_t::delay	./v.h	/^ word64 delay;                \/* constant delay value -1 for variable *\/$/;"	m	struct:tev_t	access:public
tev_t::enterptr	./v.h	/^ void (*enterptr)(void);      \/* enter address for this event *\/ $/;"	m	struct:tev_t	access:public
tev_t::etime	./v.h	/^ word64 etime;                \/* absolute time not delay *\/$/;"	m	struct:tev_t	access:public
tev_t::free_it	./v.h	/^ unsigned free_it : 1;        \/* this event needs to be freed at rt *\/$/;"	m	struct:tev_t	access:public
tev_t::gev_acc	./v.h	/^ unsigned gev_acc : 1;        \/* accelerated gate value assign *\/$/;"	m	struct:tev_t	access:public
tev_t::nb_evctrl	./v.h	/^ unsigned nb_evctrl : 1;      \/* for non blocking event is event control *\/$/;"	m	struct:tev_t	access:public
tev_t::next_enterptr	./v.h	/^ void (*next_enterptr)(void); \/* next enter event may have to free it *\/ $/;"	m	struct:tev_t	access:public
tev_t::nodep	./v.h	/^ struct tqnode_t *nodep;     \/* AIV timing tree node so no search is needed *\/$/;"	m	struct:tev_t	typeref:struct:tev_t::tqnode_t	access:public
tev_t::outv	./v.h	/^ byte outv;                   \/* for gate output value *\/$/;"	m	struct:tev_t	access:public
tev_t::scalar_nb_val	./v.h	/^ byte scalar_nb_val;          \/* scalar non-blocking value *\/$/;"	m	struct:tev_t	access:public
tev_t::sel_ndx	./v.h	/^ word32 sel_ndx;      \/* used to hold array select index for <= saving *\/$/;"	m	struct:tev_t	access:public
tev_t::t2u	./v.h	/^ union te2_u t2u;     \/* extra word storage for the compiler to avoid malloc *\/$/;"	m	struct:tev_t	typeref:union:tev_t::te2_u	access:public
tev_t::te_idp	./v.h	/^ t_midat *te_idp;             \/* idp area *\/$/;"	m	struct:tev_t	access:public
tev_t::te_trdecay	./v.h	/^ unsigned te_trdecay : 1;     \/* event is trireg decay *\/$/;"	m	struct:tev_t	access:public
tev_t::tenxtp	./v.h	/^ struct tev_t *tenxtp;$/;"	m	struct:tev_t	typeref:struct:tev_t::tev_t	access:public
tev_t::teprevp	./v.h	/^ struct tev_t *teprevp;$/;"	m	struct:tev_t	typeref:struct:tev_t::tev_t	access:public
tev_t::time_hp	./v.h	/^ struct heap_t *time_hp;      \/* last event at given heap time *\/$/;"	m	struct:tev_t	typeref:struct:tev_t::heap_t	access:public
tev_t::trigger	./v.h	/^ word32 trigger; $/;"	m	struct:tev_t	access:public
tev_t::tu	./v.h	/^ union te_u tu;$/;"	m	struct:tev_t	typeref:union:tev_t::te_u	access:public
tev_t::vpi_onfront	./v.h	/^ unsigned vpi_onfront : 1;    \/* T => cb sim time start, add on fut. front *\/$/;"	m	struct:tev_t	access:public
tev_t::vpi_regwir_putv	./v.h	/^ unsigned vpi_regwir_putv : 1;\/* T => putv to reg\/wire soft force *\/$/;"	m	struct:tev_t	access:public
tev_t::vpi_reschd	./v.h	/^ unsigned vpi_reschd : 1;     \/* T => vpi_ time cb moves to other slot part *\/$/;"	m	struct:tev_t	access:public
tevlst_t	./v.h	/^struct tevlst_t {$/;"	s
tevlst_t::telnxt	./v.h	/^ struct tevlst_t *telnxt;$/;"	m	struct:tevlst_t	typeref:struct:tevlst_t::tevlst_t	access:public
tevlst_t::tevp	./v.h	/^ struct tev_t *tevp;$/;"	m	struct:tevlst_t	typeref:struct:tevlst_t::tev_t	access:public
tevp	./v.h	/^ struct tev_t *tevp;$/;"	m	struct:dltevlst_t	typeref:struct:dltevlst_t::tev_t	access:public
tevp	./v.h	/^ struct tev_t *tevp;$/;"	m	struct:tevlst_t	typeref:struct:tevlst_t::tev_t	access:public
tf_dpip	./v.h	/^ struct dpi_t *tf_dpip;       \/* if DPI set to DPI struct *\/$/;"	m	struct:task_t	typeref:struct:task_t::dpi_t	access:public
tf_func	./v.h	/^ unsigned tf_func : 1;        \/* is record for tf_ func *\/$/;"	m	struct:tfrec_t	access:public
tf_inmdp	./v.h	/^ struct mod_t *tf_inmdp;      \/* module in (for inst. number) *\/$/;"	m	struct:tfrec_t	typeref:struct:tfrec_t::mod_t	access:public
tf_intskp	./v.h	/^ struct task_t *tf_intskp;    \/* task call in (nil in in init\/always *\/$/;"	m	struct:tfrec_t	typeref:struct:tfrec_t::task_t	access:public
tf_isrw	./v.h	/^ unsigned tf_isrw : 1;        \/* T => for user tf arg. - assignable (rw) *\/$/;"	m	struct:expr_t	access:public
tf_lofp_decl	./v.h	/^ unsigned tf_lofp_decl : 1;   \/* T => t\/f hdr list of port decl form *\/ $/;"	m	struct:task_t	access:public
tf_rout	./v.h	/^ void *(*tf_rout)(void);$/;"	m	union:dynlb_u	access:public
tf_u	./v.h	/^union tf_u {$/;"	u
tf_u::callx	./v.h	/^ struct expr_t *callx;        \/* for tf_ func ptr back to call expr else nil *\/$/;"	m	union:tf_u	typeref:struct:tf_u::expr_t	access:public
tf_u::tfstp	./v.h	/^ struct st_t *tfstp;          \/* for tf_ task ptr back to call stmt else nil *\/$/;"	m	union:tf_u	typeref:struct:tf_u::st_t	access:public
tfanump1	./v.h	/^ int32 tfanump1;              \/* no. of args plus 1 (included 0th func ret) *\/$/;"	m	struct:tfrec_t	access:public
tfarg_t	./v.h	/^struct tfarg_t {$/;"	s
tfarg_t::anp	./v.h	/^ struct net_t *anp;           \/* for is rw, the wire *\/$/;"	m	struct:tfarg_t	typeref:struct:tfarg_t::net_t	access:public
tfarg_t::arg	./v.h	/^ union tfx_u arg;$/;"	m	struct:tfarg_t	typeref:union:tfarg_t::tfx_u	access:public
tfarg_t::dputp_tedlst	./v.h	/^ struct dltevlst_t **dputp_tedlst;\/* per inst ptr to list of delputps *\/$/;"	m	struct:tfarg_t	typeref:struct:tfarg_t::dltevlst_t	access:public
tfarg_t::old_pvc_flgs	./v.h	/^ byte *old_pvc_flgs;          \/* old and sav pvc flags *\/$/;"	m	struct:tfarg_t	access:public
tfarg_t::sav_pvc_flgs	./v.h	/^ byte *sav_pvc_flgs;$/;"	m	struct:tfarg_t	access:public
tfarg_t::sav_xinfos	./v.h	/^ char **sav_xinfos;           \/* per inst evalp saved expr info rec *\/$/;"	m	struct:tfarg_t	access:public
tfarg_t::tfdrv_wp	./v.h	/^ union pck_u tfdrv_wp;        \/* for rw, pointer to param driver value *\/ $/;"	m	struct:tfarg_t	typeref:union:tfarg_t::pck_u	access:public
tfargs	./v.h	/^ struct tfarg_t *tfargs;      \/* per parameter param record table *\/$/;"	m	struct:tfrec_t	typeref:struct:tfrec_t::tfarg_t	access:public
tfdrv_wp	./v.h	/^ union pck_u tfdrv_wp;        \/* for rw, pointer to param driver value *\/ $/;"	m	struct:tfarg_t	typeref:union:tfarg_t::pck_u	access:public
tfexpr_isrw	./v_fx3.c	/^static int32 tfexpr_isrw(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
tffnam_ind	./v.h	/^ unsigned tffnam_ind : 16;$/;"	m	struct:tfrec_t	access:public
tfidp	./v.h	/^ t_midat *tfidp;$/;"	m	struct:tfinst_t	access:public
tfinst_t	./v.h	/^struct tfinst_t { $/;"	s
tfinst_t::callx	./v.h	/^ struct expr_t *callx;$/;"	m	struct:tfinst_t	typeref:struct:tfinst_t::expr_t	access:public
tfinst_t::tfidp	./v.h	/^ t_midat *tfidp;$/;"	m	struct:tfinst_t	access:public
tfinst_t::tfstp	./v.h	/^ struct st_t *tfstp;$/;"	m	struct:tfinst_t	typeref:struct:tfinst_t::st_t	access:public
tfinst_t::tftskp	./v.h	/^ struct task_t *tftskp;$/;"	m	struct:tfinst_t	typeref:struct:tfinst_t::task_t	access:public
tflin_cnt	./v.h	/^ int32 tflin_cnt;$/;"	m	struct:tfrec_t	access:public
tfm_syp	./igen.h	/^ struct sy_t *tfm_syp;$/;"	m	struct:tn_syadr_t	typeref:struct:tn_syadr_t::sy_t	access:public
tfrec_t	./v.h	/^struct tfrec_t {$/;"	s
tfrec_t::asynchon	./v.h	/^ byte *asynchon;              \/* per inst. async on flag *\/$/;"	m	struct:tfrec_t	access:public
tfrec_t::fretreal	./v.h	/^ unsigned fretreal : 1;       \/* func. returns real *\/$/;"	m	struct:tfrec_t	access:public
tfrec_t::fretsiz	./v.h	/^ int32 fretsiz;               \/* for function return size (sizetf ret. val) *\/  $/;"	m	struct:tfrec_t	access:public
tfrec_t::pvcdcep	./v.h	/^ struct dceauxlst_t **pvcdcep;\/* per inst dce list but all parameters *\/$/;"	m	struct:tfrec_t	typeref:struct:tfrec_t::dceauxlst_t	access:public
tfrec_t::rosync_tevp	./v.h	/^ struct tev_t **rosync_tevp;      \/* per inst ndx to ro sync event in list *\/ $/;"	m	struct:tfrec_t	typeref:struct:tfrec_t::tev_t	access:public
tfrec_t::savwrkarea	./v.h	/^ char **savwrkarea;           \/* per inst saved work areas *\/$/;"	m	struct:tfrec_t	access:public
tfrec_t::setd_telst	./v.h	/^ struct tevlst_t **setd_telst; \/* per inst ptr to list of set dels *\/  $/;"	m	struct:tfrec_t	typeref:struct:tfrec_t::tevlst_t	access:public
tfrec_t::sync_tevp	./v.h	/^ struct tev_t **sync_tevp;        \/* per inst ndx to sync event *\/$/;"	m	struct:tfrec_t	typeref:struct:tfrec_t::tev_t	access:public
tfrec_t::tf_func	./v.h	/^ unsigned tf_func : 1;        \/* is record for tf_ func *\/$/;"	m	struct:tfrec_t	access:public
tfrec_t::tf_inmdp	./v.h	/^ struct mod_t *tf_inmdp;      \/* module in (for inst. number) *\/$/;"	m	struct:tfrec_t	typeref:struct:tfrec_t::mod_t	access:public
tfrec_t::tf_intskp	./v.h	/^ struct task_t *tf_intskp;    \/* task call in (nil in in init\/always *\/$/;"	m	struct:tfrec_t	typeref:struct:tfrec_t::task_t	access:public
tfrec_t::tfanump1	./v.h	/^ int32 tfanump1;              \/* no. of args plus 1 (included 0th func ret) *\/$/;"	m	struct:tfrec_t	access:public
tfrec_t::tfargs	./v.h	/^ struct tfarg_t *tfargs;      \/* per parameter param record table *\/$/;"	m	struct:tfrec_t	typeref:struct:tfrec_t::tfarg_t	access:public
tfrec_t::tffnam_ind	./v.h	/^ unsigned tffnam_ind : 16;$/;"	m	struct:tfrec_t	access:public
tfrec_t::tflin_cnt	./v.h	/^ int32 tflin_cnt;$/;"	m	struct:tfrec_t	access:public
tfrec_t::tfrnxt	./v.h	/^ struct tfrec_t *tfrnxt;      \/* linked list *\/$/;"	m	struct:tfrec_t	typeref:struct:tfrec_t::tfrec_t	access:public
tfrec_t::tfu	./v.h	/^ union tf_u tfu;              \/* ptr back to tf_ task or function *\/$/;"	m	struct:tfrec_t	typeref:union:tfrec_t::tf_u	access:public
tfrnxt	./v.h	/^ struct tfrec_t *tfrnxt;      \/* linked list *\/$/;"	m	struct:tfrec_t	typeref:struct:tfrec_t::tfrec_t	access:public
tfstp	./v.h	/^ struct st_t *tfstp;          \/* for tf_ task ptr back to call stmt else nil *\/$/;"	m	union:tf_u	typeref:struct:tf_u::st_t	access:public
tfstp	./v.h	/^ struct st_t *tfstp;$/;"	m	struct:tfinst_t	typeref:struct:tfinst_t::st_t	access:public
tftskp	./v.h	/^ struct task_t *tftskp;$/;"	m	struct:tfinst_t	typeref:struct:tfinst_t::task_t	access:public
tftyp	./v.h	/^ unsigned tftyp : 8;          \/* type *\/$/;"	m	struct:sysfunc_t	access:public
tfu	./v.h	/^ union tf_u tfu;              \/* ptr back to tf_ task or function *\/$/;"	m	struct:tfrec_t	typeref:union:tfrec_t::tf_u	access:public
tfx_u	./v.h	/^union tfx_u {$/;"	u
tfx_u::awp	./v.h	/^ word32 *awp;                 \/* for 0th return value just the value *\/$/;"	m	union:tfx_u	access:public
tfx_u::axp	./v.h	/^ struct expr_t *axp;          \/* for arg the expr. *\/$/;"	m	union:tfx_u	typeref:struct:tfx_u::expr_t	access:public
tgl_cant_be_const	./v.h	/^ unsigned tgl_cant_be_const: 1;\/* T => for tgl, know rhs can't be const *\/$/;"	m	struct:expr_t	access:public
tgl_is_const_xpr	./v_cvr.c	/^static int32 tgl_is_const_xpr(struct expr_t *rhsx)$/;"	f	file:	signature:(struct expr_t *rhsx)
tgl_xpr_all_known_const_wires	./v_cvr.c	/^static int32 tgl_xpr_all_known_const_wires(struct itree_t *itp,$/;"	f	file:	signature:(struct itree_t *itp, struct expr_t *rhsx)
tgldat_in_lst_t	./v.h	/^struct tgldat_in_lst_t { $/;"	s
tgldat_in_lst_t::in_tgldat_fnam	./v.h	/^ char *in_tgldat_fnam;$/;"	m	struct:tgldat_in_lst_t	access:public
tgldat_in_lst_t::tgldat_in_nxt	./v.h	/^ struct tgldat_in_lst_t *tgldat_in_nxt;$/;"	m	struct:tgldat_in_lst_t	typeref:struct:tgldat_in_lst_t::tgldat_in_lst_t	access:public
tgldat_in_nxt	./v.h	/^ struct tgldat_in_lst_t *tgldat_in_nxt;$/;"	m	struct:tgldat_in_lst_t	typeref:struct:tgldat_in_lst_t::tgldat_in_lst_t	access:public
tgldat_itree_to_rtpth	./v_cvr.c	/^static char *tgldat_itree_to_rtpth(struct itree_t *itp)$/;"	f	file:	signature:(struct itree_t *itp)
th_dctp_tev_ofs	./v.h	/^ size_t th_dctp_tev_ofs;       \/* if armed but not trig. ev ctrl, ptr to it *\/$/;"	m	struct:thread_t	access:public
th_dsable	./v.h	/^ unsigned th_dsable : 1;      \/* thread done because disabled *\/$/;"	m	struct:thread_t	access:public
th_fj	./v.h	/^ unsigned th_fj : 1;          \/* T => thread is fj - assoc. task is upward *\/$/;"	m	struct:thread_t	access:public
th_hctrl	./v.h	/^ struct hctrl_t *th_hctrl;    \/* for iact, pointer to control rec. *\/$/;"	m	struct:thread_t	typeref:struct:thread_t::hctrl_t	access:public
th_ialw	./v.h	/^ unsigned th_ialw : 1;        \/* T => thread in initial\/always list *\/$/;"	m	struct:thread_t	access:public
th_idp	./v.h	/^ t_midat *th_idp;             \/* itree loc. (index) thread runs in *\/$/;"	m	struct:thread_t	access:public
th_postamble	./v.h	/^ unsigned th_postamble : 1;   \/* T => pending task needs end store\/trace *\/$/;"	m	struct:thread_t	access:public
th_rhsform	./v.h	/^ unsigned th_rhsform : 1;     \/* T => rhs form so value in thread record *\/$/;"	m	struct:thread_t	access:public
th_rhswlen	./v.h	/^ int32 th_rhswlen;            \/* word32 length of rhs value for disable *\/$/;"	m	struct:thread_t	access:public
th_rhswp	./v.h	/^ word32 *th_rhswp;            \/* for rhs delay\/event controls, rhs value *\/  $/;"	m	struct:thread_t	access:public
th_save_idp	./v.h	/^ t_midat *th_save_idp;        \/* saved idp area for auto tasks threads *\/$/;"	m	struct:thread_t	access:public
thas_outs	./v.h	/^ unsigned thas_outs : 1;      \/* T => task has outs that must be stored *\/ $/;"	m	struct:task_t	access:public
thas_tskcall	./v.h	/^ unsigned thas_tskcall : 1;   \/* T => task contains other task call *\/$/;"	m	struct:task_t	access:public
thd_ret_lab_ndx	./v.h	/^ int32 thd_ret_lab_ndx;       \/* task return jump to label index *\/  $/;"	m	struct:thread_t	access:public
thdtevp	./v.h	/^ struct tev_t *thdtevp;       \/* if thread has scheduled event, ptr of it *\/$/;"	m	struct:thread_t	typeref:struct:thread_t::tev_t	access:public
thenbl_sfnam_ind	./v.h	/^ word32 thenbl_sfnam_ind;     \/* file index of place thread enabled from *\/$/;"	m	struct:thread_t	access:public
thenbl_slin_cnt	./v.h	/^ int32 thenbl_slin_cnt;       \/* and line number *\/$/;"	m	struct:thread_t	access:public
thenst	./v.h	/^ struct st_t *thenst;$/;"	m	struct:if_t	typeref:struct:if_t::st_t	access:public
thleft	./v.h	/^ struct thread_t *thleft;     \/* double linked same level right ptr *\/$/;"	m	struct:thread_t	typeref:struct:thread_t::thread_t	access:public
thnxtstp	./v.h	/^ struct st_t *thnxtstp;       \/* next st. in thread to execute (resume pc) *\/$/;"	m	struct:thread_t	typeref:struct:thread_t::st_t	access:public
thofs	./v.h	/^ struct thread_t *thofs;      \/* list of threads, enabled by this one *\/$/;"	m	struct:thread_t	typeref:struct:thread_t::thread_t	access:public
thofscnt	./v.h	/^ unsigned thofscnt : 24;      \/* num of still active fork-join offspring *\/$/;"	m	struct:thread_t	access:public
thpar	./v.h	/^ struct thread_t *thpar;      \/* thread that invoked this one *\/$/;"	m	struct:thread_t	typeref:struct:thread_t::thread_t	access:public
thread	./fstapi.c	/^pthread_t thread;$/;"	m	struct:fstWriterContext	file:	access:public
thread_above_cur	./v_ex.c	/^static int32 thread_above_cur(struct thread_t *dsthp)$/;"	f	file:	signature:(struct thread_t *dsthp)
thread_attr	./fstapi.c	/^pthread_attr_t thread_attr;$/;"	m	struct:fstWriterContext	file:	access:public
thread_t	./v.h	/^struct thread_t {$/;"	s
thread_t::assoc_tsk	./v.h	/^ struct task_t *assoc_tsk;    \/* if created from task, connection to it *\/$/;"	m	struct:thread_t	typeref:struct:thread_t::task_t	access:public
thread_t::th_dctp_tev_ofs	./v.h	/^ size_t th_dctp_tev_ofs;       \/* if armed but not trig. ev ctrl, ptr to it *\/$/;"	m	struct:thread_t	access:public
thread_t::th_dsable	./v.h	/^ unsigned th_dsable : 1;      \/* thread done because disabled *\/$/;"	m	struct:thread_t	access:public
thread_t::th_fj	./v.h	/^ unsigned th_fj : 1;          \/* T => thread is fj - assoc. task is upward *\/$/;"	m	struct:thread_t	access:public
thread_t::th_hctrl	./v.h	/^ struct hctrl_t *th_hctrl;    \/* for iact, pointer to control rec. *\/$/;"	m	struct:thread_t	typeref:struct:thread_t::hctrl_t	access:public
thread_t::th_ialw	./v.h	/^ unsigned th_ialw : 1;        \/* T => thread in initial\/always list *\/$/;"	m	struct:thread_t	access:public
thread_t::th_idp	./v.h	/^ t_midat *th_idp;             \/* itree loc. (index) thread runs in *\/$/;"	m	struct:thread_t	access:public
thread_t::th_postamble	./v.h	/^ unsigned th_postamble : 1;   \/* T => pending task needs end store\/trace *\/$/;"	m	struct:thread_t	access:public
thread_t::th_rhsform	./v.h	/^ unsigned th_rhsform : 1;     \/* T => rhs form so value in thread record *\/$/;"	m	struct:thread_t	access:public
thread_t::th_rhswlen	./v.h	/^ int32 th_rhswlen;            \/* word32 length of rhs value for disable *\/$/;"	m	struct:thread_t	access:public
thread_t::th_rhswp	./v.h	/^ word32 *th_rhswp;            \/* for rhs delay\/event controls, rhs value *\/  $/;"	m	struct:thread_t	access:public
thread_t::th_save_idp	./v.h	/^ t_midat *th_save_idp;        \/* saved idp area for auto tasks threads *\/$/;"	m	struct:thread_t	access:public
thread_t::thd_ret_lab_ndx	./v.h	/^ int32 thd_ret_lab_ndx;       \/* task return jump to label index *\/  $/;"	m	struct:thread_t	access:public
thread_t::thdtevp	./v.h	/^ struct tev_t *thdtevp;       \/* if thread has scheduled event, ptr of it *\/$/;"	m	struct:thread_t	typeref:struct:thread_t::tev_t	access:public
thread_t::thenbl_sfnam_ind	./v.h	/^ word32 thenbl_sfnam_ind;     \/* file index of place thread enabled from *\/$/;"	m	struct:thread_t	access:public
thread_t::thenbl_slin_cnt	./v.h	/^ int32 thenbl_slin_cnt;       \/* and line number *\/$/;"	m	struct:thread_t	access:public
thread_t::thleft	./v.h	/^ struct thread_t *thleft;     \/* double linked same level right ptr *\/$/;"	m	struct:thread_t	typeref:struct:thread_t::thread_t	access:public
thread_t::thnxtstp	./v.h	/^ struct st_t *thnxtstp;       \/* next st. in thread to execute (resume pc) *\/$/;"	m	struct:thread_t	typeref:struct:thread_t::st_t	access:public
thread_t::thofs	./v.h	/^ struct thread_t *thofs;      \/* list of threads, enabled by this one *\/$/;"	m	struct:thread_t	typeref:struct:thread_t::thread_t	access:public
thread_t::thofscnt	./v.h	/^ unsigned thofscnt : 24;      \/* num of still active fork-join offspring *\/$/;"	m	struct:thread_t	access:public
thread_t::thpar	./v.h	/^ struct thread_t *thpar;      \/* thread that invoked this one *\/$/;"	m	struct:thread_t	typeref:struct:thread_t::thread_t	access:public
thread_t::thright	./v.h	/^ struct thread_t *thright;    \/* double linked same level right ptr *\/$/;"	m	struct:thread_t	typeref:struct:thread_t::thread_t	access:public
thread_t::tsk_stouts	./v.h	/^ unsigned tsk_stouts : 1;     \/* T => when task returns has outs to store *\/$/;"	m	struct:thread_t	access:public
thread_t::tthlst	./v.h	/^ struct tskthrd_t *tthlst;    \/* ptr to this task assoc. thrd list el. *\/$/;"	m	struct:thread_t	typeref:struct:thread_t::tskthrd_t	access:public
thright	./v.h	/^ struct thread_t *thright;    \/* double linked same level right ptr *\/$/;"	m	struct:thread_t	typeref:struct:thread_t::thread_t	access:public
ti1	./v_sdf.c	/^ int32 ti1, ti2, eval;$/;"	m	struct:tcterm_t	file:	access:public
ti2	./v_sdf.c	/^ int32 ti1, ti2, eval;$/;"	m	struct:tcterm_t	file:	access:public
tibreakpoint_msg	./v_dbg.c	/^static char *tibreakpoint_msg[] = { $/;"	v	file:
tilde_expand	./v_ms.c	/^static char *tilde_expand(char *pthnam, int32 *newlen)$/;"	f	file:	signature:(char *pthnam, int32 *newlen)
tim	./fstapi.c	/^uint64_t tim;$/;"	m	struct:fstBlackoutChain	file:	access:public
time	./v.h	/^ word64 time;             \/* the time node (sorted by) *\/$/;"	m	struct:heap_t	access:public
time	./v.h	/^ word64 time;             \/* the time node (sorted by) *\/$/;"	m	struct:tqnode_t	access:public
time_hp	./v.h	/^ struct heap_t *time_hp;      \/* last event at given heap time *\/$/;"	m	struct:tev_t	typeref:struct:tev_t::heap_t	access:public
timescale	./fstapi.c	/^signed char timescale;$/;"	m	struct:fstReaderContext	file:	access:public
timezero	./fstapi.c	/^int64_t timezero;$/;"	m	struct:fstReaderContext	file:	access:public
timezero	./fstapi.c	/^int64_t timezero;$/;"	m	struct:fstWriterContext	file:	access:public
tkcaux	./v.h	/^ union tkcaux_u tkcaux;       \/* ptr to aux pli tf_ data or monit rec *\/$/;"	m	struct:tskcall_t	typeref:union:tskcall_t::tkcaux_u	access:public
tkcaux_u	./v.h	/^union tkcaux_u {$/;"	u
tkcaux_u::mauxp	./v.h	/^ struct monaux_t *mauxp;      \/* ptr to mon aux v format flag and dce ptr *\/$/;"	m	union:tkcaux_u	typeref:struct:tkcaux_u::monaux_t	access:public
tkcaux_u::trec	./v.h	/^ struct tfrec_t *trec;        \/* ptr to aux pli tf_ data *\/$/;"	m	union:tkcaux_u	typeref:struct:tkcaux_u::tfrec_t	access:public
tkcaux_u::vpi_syst_datap	./v.h	/^ void *vpi_syst_datap;$/;"	m	union:tkcaux_u	access:public
tline	./v.h	/^ char *tline;                 \/* table line - for edge 2nd char in line *\/$/;"	m	struct:utline_t	access:public
tlocprmnum	./v.h	/^ int32 tlocprmnum;            \/* number of task local parameters *\/$/;"	m	struct:task_t	access:public
tmp_canbe_reg	./v_regasn.c	/^static int32 tmp_canbe_reg(int32 tni)$/;"	f	file:	signature:(int32 tni)
tmp_fill_mda_rnges	./v_fx2.c	/^static void tmp_fill_mda_rnges(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
tmp_is_decomposable	./v_bbopt.c	/^static int32 tmp_is_decomposable(struct tn_t *tnp)$/;"	f	file:	signature:(struct tn_t *tnp)
tmp_tev_ndx	./v.h	/^typedef int32 tmp_tev_ndx;$/;"	t
tmpfile_close	./fstapi.c	/^static void tmpfile_close(FILE **f, char **nam)$/;"	f	file:	signature:(FILE **f, char **nam)
tmpfile_open	./fstapi.c	/^static FILE* tmpfile_open(char **nam)$/;"	f	file:	signature:(char **nam)
tn_adj_lst	./igen.h	/^ struct tn_list_t *tn_adj_lst; \/* tmps adjacent to this one *\/ $/;"	m	struct:reg_alloc_info_t	typeref:struct:reg_alloc_info_t::tn_list_t	access:public
tn_adj_lst	./igen.h	/^ struct tn_list_t *tn_adj_lst; \/* tmps adjacent to this one *\/ $/;"	m	struct:tn_t	typeref:struct:tn_t::tn_list_t	access:public
tn_adradd_cmp	./v_bbgen3.c	/^static cmpsword tn_adradd_cmp(const void *valp, const struct avlnode_t *nodp)$/;"	f	file:	signature:(const void *valp, const struct avlnode_t *nodp)
tn_adradd_node_alloc	./v_bbgen3.c	/^static struct avlnode_t *tn_adradd_node_alloc(void *adraddp)$/;"	f	file:	signature:(void *adraddp)
tn_assigned	./igen.h	/^ unsigned tn_assigned : 1;    \/* T => tn assigned to reg for this flowg *\/$/;"	m	struct:reg_alloc_info_t	access:public
tn_assigned	./igen.h	/^ unsigned tn_assigned : 1;    \/* T => tn assigned to reg for this flowg *\/$/;"	m	struct:tn_t	access:public
tn_bpart_zero	./igen.h	/^ unsigned tn_bpart_zero : 1;  \/* tmp used 2to4 state b part (0) *\/$/;"	m	struct:tn_t	access:public
tn_cint	./igen.h	/^ word32 tn_cint;             \/* for cint (immediate) word bit val *\/$/;"	m	union:tn_const_u	access:public
tn_cnvt_from_2state	./igen.h	/^ unsigned tn_cnvt_from_2state : 1; \/* tmp used 4-state from 2-state *\/$/;"	m	struct:tn_t	access:public
tn_coalesce_into	./igen.h	/^ int32 tn_coalesce_into;      \/* for colalescing - tni that replaces *\/$/;"	m	struct:reg_alloc_info_t	access:public
tn_coalesce_into	./igen.h	/^ int32 tn_coalesce_into;      \/* for colalescing - tni that replaces *\/$/;"	m	struct:tn_t	access:public
tn_conflct_tree	./igen.h	/^ struct avlhd_t *tn_conflct_tree;\/* avl tree of tn's this tn comflicts with *\/$/;"	m	struct:tn_t	typeref:struct:tn_t::avlhd_t	access:public
tn_const_u	./igen.h	/^union tn_const_u {$/;"	u
tn_const_u::ctab_ndx	./igen.h	/^ int32 ctab_ndx;              \/* base index for label of per mod contab *\/$/;"	m	union:tn_const_u	access:public
tn_const_u::el_ndx	./igen.h	/^ int32 el_ndx;                \/* addr field depending on type of of com lab *\/ $/;"	m	union:tn_const_u	access:public
tn_const_u::modadr_nlo	./igen.h	/^ int32 modadr_nlo; $/;"	m	union:tn_const_u	access:public
tn_const_u::tn_cint	./igen.h	/^ word32 tn_cint;             \/* for cint (immediate) word bit val *\/$/;"	m	union:tn_const_u	access:public
tn_def_lst	./igen.h	/^ struct tn_list_t *tn_def_lst;\/* regs def in this insn *\/ $/;"	m	struct:reg_alloc_t	typeref:struct:reg_alloc_t::tn_list_t	access:public
tn_dup_node_alloc	./v_bbgen3.c	/^static struct avlnode_t *tn_dup_node_alloc(void *tndup)$/;"	f	file:	signature:(void *tndup)
tn_dup_t	./igen.h	/^struct tn_dup_t {$/;"	s
tn_dup_t::nlo_ndx	./igen.h	/^ word32 nlo_ndx;               \/* net list object in mod index *\/$/;"	m	struct:tn_dup_t	access:public
tn_dup_t::tni	./igen.h	/^ int32 tni;$/;"	m	struct:tn_dup_t	access:public
tn_in_lst	./igen.h	/^ struct tn_list_t *tn_in_lst; \/* regs used coming into this insn *\/ $/;"	m	struct:reg_alloc_t	typeref:struct:reg_alloc_t::tn_list_t	access:public
tn_is_trackable	./v_bbopt.c	/^static int32 tn_is_trackable(int32 tni)$/;"	f	file:	signature:(int32 tni)
tn_list_t	./igen.h	/^struct tn_list_t {$/;"	s
tn_list_t::ndx	./igen.h	/^ int32 ndx;          \/* current index into values *\/$/;"	m	struct:tn_list_t	access:public
tn_list_t::size	./igen.h	/^ int32 size;         \/* size of values *\/$/;"	m	struct:tn_list_t	access:public
tn_list_t::values	./igen.h	/^ int32 *values;      \/* actual values *\/$/;"	m	struct:tn_list_t	access:public
tn_node_cmp	./v_bbgen3.c	/^static cmpsword tn_node_cmp(const void *valp, const struct avlnode_t *nodp)$/;"	f	file:	signature:(const void *valp, const struct avlnode_t *nodp)
tn_out_lst	./igen.h	/^ struct tn_list_t *tn_out_lst;\/* regs used leaving this insn *\/ $/;"	m	struct:reg_alloc_t	typeref:struct:reg_alloc_t::tn_list_t	access:public
tn_spill_fold	./igen.h	/^ unsigned tn_spill_fold: 1;   \/* tmp spill is folded *\/$/;"	m	struct:tn_t	access:public
tn_spilled	./igen.h	/^ unsigned tn_spilled : 1;     \/* T => this tmp name is spilled - wide always *\/$/;"	m	struct:reg_alloc_info_t	access:public
tn_spilled	./igen.h	/^ unsigned tn_spilled : 1;     \/* T => this tmp name is spilled - wide always *\/$/;"	m	struct:tn_t	access:public
tn_syadr_t	./igen.h	/^struct tn_syadr_t {$/;"	s
tn_syadr_t::el2_ndx	./igen.h	/^ int32 el2_ndx;$/;"	m	struct:tn_syadr_t	access:public
tn_syadr_t::in_mdp	./igen.h	/^ struct mod_t *in_mdp;$/;"	m	struct:tn_syadr_t	typeref:struct:tn_syadr_t::mod_t	access:public
tn_syadr_t::tfm_syp	./igen.h	/^ struct sy_t *tfm_syp;$/;"	m	struct:tn_syadr_t	typeref:struct:tn_syadr_t::sy_t	access:public
tn_t	./igen.h	/^struct tn_t {$/;"	s
tn_t::bb_def_tree	./igen.h	/^ struct avlhd_t *bb_def_tree; \/* avl tree of bblk this tn defined in *\/ $/;"	m	struct:tn_t	typeref:struct:tn_t::avlhd_t	access:public
tn_t::bb_use_tree	./igen.h	/^ struct avlhd_t *bb_use_tree; \/* avl tree of bblk this tn used (refed) in *\/ $/;"	m	struct:tn_t	typeref:struct:tn_t::avlhd_t	access:public
tn_t::child_tag_offset	./igen.h	/^ size_t child_tag_offset;      \/* for tn in parent, offset in area in bytes *\/$/;"	m	struct:tn_t	access:public
tn_t::comlab_typ	./igen.h	/^ unsigned comlab_typ : 6;     \/* per mod comm area data object label type *\/  $/;"	m	struct:tn_t	access:public
tn_t::conadr_is_is	./igen.h	/^ unsigned conadr_is_is : 1;   \/* T => per mod comm area const is IS form *\/$/;"	m	struct:tn_t	access:public
tn_t::curdef_ip	./igen.h	/^ struct insn_t **curdef_ip;   \/* per word insn most recent definer of tn *\/ $/;"	m	struct:tn_t	typeref:struct:tn_t::insn_t	access:public
tn_t::idp_typ	./igen.h	/^ unsigned idp_typ : 6;        \/* __idp type (eventually replace comlab) *\/$/;"	m	struct:tn_t	access:public
tn_t::nd_valtrk_idp_siz	./igen.h	/^ unsigned nd_valtrk_idp_siz : 1; \/* T => idp (%esi?) reg tn - mod idp size *\/$/;"	m	struct:tn_t	access:public
tn_t::passed_args	./igen.h	/^ unsigned passed_args: 3;     \/* arg num passed to a asl wrapper *\/$/;"	m	struct:tn_t	access:public
tn_t::ralloci	./igen.h	/^ struct reg_alloc_info_t *ralloci; \/* reg alloc save info for 2nd pass *\/$/;"	m	struct:tn_t	typeref:struct:tn_t::reg_alloc_info_t	access:public
tn_t::res_tn_useistays	./igen.h	/^ unsigned res_tn_useistays : 1;\/* T => insn res or uses this tn must stay *\/$/;"	m	struct:tn_t	access:public
tn_t::spill_ebp_byt_ofs	./igen.h	/^ int32 spill_ebp_byt_ofs;     \/* for spill wrd and all wid, ebp ofs in bytes *\/$/;"	m	struct:tn_t	access:public
tn_t::srtyp	./igen.h	/^ unsigned srtyp : 6;          \/* srep type of tmp name *\/  $/;"	m	struct:tn_t	access:public
tn_t::st_into_ip	./igen.h	/^ struct insn_t *st_into_ip;   \/* insn ptr for checking stored intos *\/$/;"	m	struct:tn_t	typeref:struct:tn_t::insn_t	access:public
tn_t::svec_adr_add	./igen.h	/^ unsigned svec_adr_add : 1;   \/* T => tn is adr add of svec *\/ $/;"	m	struct:tn_t	access:public
tn_t::t_real	./igen.h	/^ unsigned t_real : 1;         \/* stored as SR VEC but actually double *\/$/;"	m	struct:tn_t	access:public
tn_t::t_signed	./igen.h	/^ unsigned t_signed : 1;       \/* T => tn signed - any can be *\/$/;"	m	struct:tn_t	access:public
tn_t::t_used_cross_call	./igen.h	/^ unsigned t_used_cross_call : 1; \/* T => used across a call *\/$/;"	m	struct:tn_t	access:public
tn_t::t_used_in_bw_insn	./igen.h	/^ unsigned t_used_in_bw_insn : 1; \/* T => used in a byte or half word insn *\/$/;"	m	struct:tn_t	access:public
tn_t::tag_parent_tni	./igen.h	/^ int32 tag_parent_tni;        \/* if result of adr add containing parent tni *\/$/;"	m	struct:tn_t	access:public
tn_t::tn_adj_lst	./igen.h	/^ struct tn_list_t *tn_adj_lst; \/* tmps adjacent to this one *\/ $/;"	m	struct:tn_t	typeref:struct:tn_t::tn_list_t	access:public
tn_t::tn_assigned	./igen.h	/^ unsigned tn_assigned : 1;    \/* T => tn assigned to reg for this flowg *\/$/;"	m	struct:tn_t	access:public
tn_t::tn_bpart_zero	./igen.h	/^ unsigned tn_bpart_zero : 1;  \/* tmp used 2to4 state b part (0) *\/$/;"	m	struct:tn_t	access:public
tn_t::tn_cnvt_from_2state	./igen.h	/^ unsigned tn_cnvt_from_2state : 1; \/* tmp used 4-state from 2-state *\/$/;"	m	struct:tn_t	access:public
tn_t::tn_coalesce_into	./igen.h	/^ int32 tn_coalesce_into;      \/* for colalescing - tni that replaces *\/$/;"	m	struct:tn_t	access:public
tn_t::tn_conflct_tree	./igen.h	/^ struct avlhd_t *tn_conflct_tree;\/* avl tree of tn's this tn comflicts with *\/$/;"	m	struct:tn_t	typeref:struct:tn_t::avlhd_t	access:public
tn_t::tn_spill_fold	./igen.h	/^ unsigned tn_spill_fold: 1;   \/* tmp spill is folded *\/$/;"	m	struct:tn_t	access:public
tn_t::tn_spilled	./igen.h	/^ unsigned tn_spilled : 1;     \/* T => this tmp name is spilled - wide always *\/$/;"	m	struct:tn_t	access:public
tn_t::tn_typ	./igen.h	/^ unsigned tn_typ : 2;         \/* register type of tmp name *\/  $/;"	m	struct:tn_t	access:public
tn_t::tn_used_var_shift	./igen.h	/^ unsigned tn_used_var_shift : 1; \/* tmp used as variable shift amount *\/$/;"	m	struct:tn_t	access:public
tn_t::tn_used_wide	./igen.h	/^ unsigned tn_used_wide : 1;   \/* T => tmp is used in a wide context *\/$/;"	m	struct:tn_t	access:public
tn_t::tncu	./igen.h	/^ union tn_const_u tncu;       \/* union for common lab and cint tn vals *\/ $/;"	m	struct:tn_t	typeref:union:tn_t::tn_const_u	access:public
tn_t::tnsyrecp	./igen.h	/^ struct tn_syadr_t *tnsyrecp; \/* rt mem area that needs ndx\/sym *\/$/;"	m	struct:tn_t	typeref:struct:tn_t::tn_syadr_t	access:public
tn_t::tnwid	./igen.h	/^ int32 tnwid;                 \/* width of pointed to tmp name object *\/      $/;"	m	struct:tn_t	access:public
tn_t::trk_known	./igen.h	/^ word32 *trk_known;           \/* only child part may be known, per bit mask *\/  $/;"	m	struct:tn_t	access:public
tn_t::trk_valp	./igen.h	/^ word32 *trk_valp;            \/* malloc tracked current val - only parents *\/$/;"	m	struct:tn_t	access:public
tn_t::used_in_asm	./igen.h	/^ unsigned used_in_asm : 1;    \/* T => tn used in lowered asm *\/$/;"	m	struct:tn_t	access:public
tn_t::valnum	./igen.h	/^ int32 valnum;                \/* current value number for this tn *\/ $/;"	m	struct:tn_t	access:public
tn_t::x86_regno	./igen.h	/^ unsigned x86_regno : 6;      \/* the x86 regno this tmp lowers to *\/$/;"	m	struct:tn_t	access:public
tn_typ	./igen.h	/^ unsigned tn_typ : 2;         \/* register type of tmp name *\/  $/;"	m	struct:tn_t	access:public
tn_typ	./igen.h	/^ unsigned tn_typ : 4;           \/* type of tmp name *\/  $/;"	m	struct:ftval_t	access:public
tn_use_lst	./igen.h	/^ struct tn_list_t *tn_use_lst;\/* regs used in this insn *\/ $/;"	m	struct:reg_alloc_t	typeref:struct:reg_alloc_t::tn_list_t	access:public
tn_used_var_shift	./igen.h	/^ unsigned tn_used_var_shift : 1; \/* tmp used as variable shift amount *\/$/;"	m	struct:tn_t	access:public
tn_used_wide	./igen.h	/^ unsigned tn_used_wide : 1;   \/* T => tmp is used in a wide context *\/$/;"	m	struct:tn_t	access:public
tn_valtrk_invisible	./v_bbopt.c	/^static int32 tn_valtrk_invisible(int32 tni)$/;"	f	file:	signature:(int32 tni)
tnam	./v_sdf.c	/^ char *tnam;$/;"	m	struct:tcterm_t	file:	access:public
tnblk_t	./v.h	/^struct tnblk_t {$/;"	s
tnblk_t::tnblknxt	./v.h	/^ struct tnblk_t *tnblknxt;$/;"	m	struct:tnblk_t	typeref:struct:tnblk_t::tnblk_t	access:public
tnblk_t::tnblks	./v.h	/^ struct tnode_t *tnblks;$/;"	m	struct:tnblk_t	typeref:struct:tnblk_t::tnode_t	access:public
tnblknxt	./v.h	/^ struct tnblk_t *tnblknxt;$/;"	m	struct:tnblk_t	typeref:struct:tnblk_t::tnblk_t	access:public
tnblks	./v.h	/^ struct tnode_t *tnblks;$/;"	m	struct:tnblk_t	typeref:struct:tnblk_t::tnode_t	access:public
tncu	./igen.h	/^ union tn_const_u tncu;       \/* union for common lab and cint tn vals *\/ $/;"	m	struct:tn_t	typeref:union:tn_t::tn_const_u	access:public
tni	./igen.h	/^ int32 tni;                  \/* the tmp for the storage area *\/$/;"	m	struct:dce_expr_info_t	access:public
tni	./igen.h	/^ int32 tni;$/;"	m	struct:reg_prty_t	access:public
tni	./igen.h	/^ int32 tni;$/;"	m	struct:tn_dup_t	access:public
tnode_t	./v.h	/^struct tnode_t {$/;"	s
tnode_t::bal	./v.h	/^ unsigned bal : 8;$/;"	m	struct:tnode_t	access:public
tnode_t::lp	./v.h	/^ struct tnode_t *lp, *rp;$/;"	m	struct:tnode_t	typeref:struct:tnode_t::tnode_t	access:public
tnode_t::ndp	./v.h	/^ struct sy_t *ndp;$/;"	m	struct:tnode_t	typeref:struct:tnode_t::sy_t	access:public
tnode_t::rp	./v.h	/^ struct tnode_t *lp, *rp;$/;"	m	struct:tnode_t	typeref:struct:tnode_t::	access:public
tnode_t::via_dir	./v.h	/^ unsigned via_dir : 8;$/;"	m	struct:tnode_t	access:public
tnsyrecp	./igen.h	/^ struct tn_syadr_t *tnsyrecp; \/* rt mem area that needs ndx\/sym *\/$/;"	m	struct:tn_t	typeref:struct:tn_t::tn_syadr_t	access:public
tnwid	./igen.h	/^ int32 tnwid;                 \/* width of pointed to tmp name object *\/      $/;"	m	struct:tn_t	access:public
to_acc_onam	./v_acc.c	/^static char *to_acc_onam(char *s, word32 vpioval)$/;"	f	file:	signature:(char *s, word32 vpioval)
to_accfmtnam	./v_acc.c	/^static char *to_accfmtnam(char *s, int32 accfmt)$/;"	f	file:	signature:(char *s, int32 accfmt)
to_basename	./v_dbg2.c	/^static char *to_basename(char *s, int32 base)$/;"	f	file:	signature:(char *s, int32 base)
to_bin	./v_ms.c	/^static void to_bin(int32 slen)$/;"	f	file:	signature:(int32 slen)
to_brkptnam	./v_dbg2.c	/^static char *to_brkptnam(char *s, word32 bptyp)$/;"	f	file:	signature:(char *s, word32 bptyp)
to_cbtypnam	./v_vpi.c	/^static char *to_cbtypnam(char *s, int32 reason)$/;"	f	file:	signature:(char *s, int32 reason)
to_codedge_line	./v_src3.c	/^static char *to_codedge_line(char *s, char *culine)$/;"	f	file:	signature:(char *s, char *culine)
to_cur_evtrcanam	./v_sim.c	/^static char *to_cur_evtrcanam(char *s, struct conta_t *cap)$/;"	f	file:	signature:(char *s, struct conta_t *cap)
to_cur_evtronam	./v_sim.c	/^static char *to_cur_evtronam(char *s, char *onam, struct task_t *tskp)$/;"	f	file:	signature:(char *s, char *onam, struct task_t *tskp)
to_dec	./v_ms.c	/^static void to_dec(int32 *blen) $/;"	f	file:	signature:(int32 *blen)
to_dvtimstr	./v_ex4.c	/^static char *to_dvtimstr(char *s, word64 t)$/;"	f	file:	signature:(char *s, word64 t)
to_dvtsktyp	./v_ex4.c	/^static char *to_dvtsktyp(char *s, word32 tskt) $/;"	f	file:	signature:(char *s, word32 tskt)
to_edgech	./v_src3.c	/^static char to_edgech(int32 encodee)$/;"	f	file:	signature:(int32 encodee)
to_evtronam	./v_sim.c	/^static char *to_evtronam(char *s, char *onam, t_midat *te_idp,$/;"	f	file:	signature:(char *s, char *onam, t_midat *te_idp, struct task_t *tskp)
to_exec_confunc	./v.h	/^ struct task_t *to_exec_confunc; \/* copied\/elabed to exec con func image *\/$/;"	m	union:conf_u	typeref:struct:conf_u::task_t	access:public
to_glbinfo	./v_cnv.c	/^static char *to_glbinfo(char *s, struct gref_t *grp)$/;"	f	file:	signature:(char *s, struct gref_t *grp)
to_hex	./v_ms.c	/^static void to_hex(int32 slen)$/;"	f	file:	signature:(int32 slen)
to_oct	./v_ms.c	/^static void to_oct(int32 slen)$/;"	f	file:	signature:(int32 slen)
to_udp_levsym	./v_src3.c	/^static int32 to_udp_levsym(char ch)$/;"	f	file:	signature:(char ch)
to_udp_prtnam	./v_src3.c	/^static char *to_udp_prtnam(struct udp_t *udpp, int32 inum)$/;"	f	file:	signature:(struct udp_t *udpp, int32 inum)
to_vpi_edgeval	./v_vpi2.c	/^static int32 to_vpi_edgeval(word32 edg)$/;"	f	file:	signature:(word32 edg)
to_vpi_reghtyp	./v_vpi2.c	/^static word32 to_vpi_reghtyp(word32 ntyp)$/;"	f	file:	signature:(word32 ntyp)
to_vpi_tchktyp	./v_vpi2.c	/^static int32 to_vpi_tchktyp(word32 tctyp)$/;"	f	file:	signature:(word32 tctyp)
to_vpierr_level	./v_vpi3.c	/^static int32 to_vpierr_level(int32 esev)$/;"	f	file:	signature:(int32 esev)
to_vtx	./v_trch.c	/^static char *to_vtx(char *s, struct vtx_t *vp)$/;"	f	file:	signature:(char *s, struct vtx_t *vp)
to_vtx_info	./v_trch.c	/^static char *to_vtx_info(char *s, struct vtx_t *vtxp, struct itree_t *itp)$/;"	f	file:	signature:(char *s, struct vtx_t *vtxp, struct itree_t *itp)
to_xndnam	./v_src2.c	/^static char *to_xndnam(char *s, int32 xndi)$/;"	f	file:	signature:(char *s, int32 xndi)
toggle_ofs	./v.h	/^ size_t toggle_ofs;           \/* toggle offset *\/$/;"	m	struct:net_toggle_t	access:public
tognxt	./v.h	/^ struct rt_tgl_t *tognxt;     \/* next on the list *\/$/;"	m	struct:rt_tgl_t	typeref:struct:rt_tgl_t::rt_tgl_t	access:public
tok_lcnt	./v.h	/^ int32 tok_lcnt;$/;"	m	struct:oc_vtok_t	access:public
top_single_item	./v.h	/^ unsigned top_single_item : 1;   \/* top-level item not part of nested *\/$/;"	m	struct:xprop_t	access:public
topip_cmp	./v_genfx.c	/^static int32 topip_cmp(const void *ii1, const void *ii2)$/;"	f	file:	signature:(const void *ii1, const void *ii2)
topmodnam	./v.h	/^ char *topmodnam;         \/* name of top level cell (type) *\/$/;"	m	struct:cfgdes_t	access:public
tox_wrange	./v_cnv.c	/^static void tox_wrange(FILE *f, struct expr_t *x1, struct expr_t *x2)$/;"	f	file:	signature:(FILE *f, struct expr_t *x1, struct expr_t *x2)
tpnxt	./v.h	/^ struct task_pin_t *tpnxt;$/;"	m	struct:task_pin_t	typeref:struct:task_pin_t::task_pin_t	access:public
tprmnum	./v.h	/^ int32 tprmnum;               \/* number of task parameters *\/$/;"	m	struct:task_t	access:public
tpsy	./v.h	/^ struct sy_t *tpsy;           \/* port name sym. points to wire\/reg *\/$/;"	m	struct:task_pin_t	typeref:struct:task_pin_t::sy_t	access:public
tqnode_t	./v.h	/^struct tqnode_t {$/;"	s
tqnode_t::color	./v.h	/^ int32 color;             \/* color of node (red\/black) *\/$/;"	m	struct:tqnode_t	access:public
tqnode_t::left	./v.h	/^ struct tqnode_t *left;   \/* node's left child *\/$/;"	m	struct:tqnode_t	typeref:struct:tqnode_t::tqnode_t	access:public
tqnode_t::nb_endp	./v.h	/^ struct tev_t *nb_hdrp, *nb_endp;$/;"	m	struct:tqnode_t	typeref:struct:tqnode_t::	access:public
tqnode_t::nb_hdrp	./v.h	/^ struct tev_t *nb_hdrp, *nb_endp;$/;"	m	struct:tqnode_t	typeref:struct:tqnode_t::tev_t	access:public
tqnode_t::parent	./v.h	/^ struct tqnode_t *parent; \/* node's parent *\/$/;"	m	struct:tqnode_t	typeref:struct:tqnode_t::tqnode_t	access:public
tqnode_t::right	./v.h	/^ struct tqnode_t *right;  \/* node's right child *\/$/;"	m	struct:tqnode_t	typeref:struct:tqnode_t::tqnode_t	access:public
tqnode_t::te_endp	./v.h	/^ struct tev_t *te_hdrp, *te_endp;$/;"	m	struct:tqnode_t	typeref:struct:tqnode_t::	access:public
tqnode_t::te_hdrp	./v.h	/^ struct tev_t *te_hdrp, *te_endp;$/;"	m	struct:tqnode_t	typeref:struct:tqnode_t::tev_t	access:public
tqnode_t::time	./v.h	/^ word64 time;             \/* the time node (sorted by) *\/$/;"	m	struct:tqnode_t	access:public
tr_case_st	./v_ex.c	/^static void tr_case_st(struct xstk_t *selxsp, int32 cas_sign)$/;"	f	file:	signature:(struct xstk_t *selxsp, int32 cas_sign)
tr_nbproc_assign	./v_ex.c	/^static void tr_nbproc_assign(struct st_t *stp, struct xstk_t *xsp)$/;"	f	file:	signature:(struct st_t *stp, struct xstk_t *xsp)
tr_proc_assign	./v_ex.c	/^static void tr_proc_assign(struct st_t *stp, struct xstk_t *xsp)$/;"	f	file:	signature:(struct st_t *stp, struct xstk_t *xsp)
tr_resume_msg	./v_ex.c	/^static void tr_resume_msg(void)$/;"	f	file:	signature:(void)
trace_chg_gateout	./v_sim.c	/^static void trace_chg_gateout(struct gate_t *gp, struct expr_t *xp)$/;"	f	file:	signature:(struct gate_t *gp, struct expr_t *xp)
trace_conta_assign	./v_ex3.c	/^static void trace_conta_assign(struct expr_t *xlhs, word32 *ap, word32 *bp)$/;"	f	file:	signature:(struct expr_t *xlhs, word32 *ap, word32 *bp)
trace_gunchg	./v_sim.c	/^static void trace_gunchg(struct gate_t *gp, word32 i)$/;"	f	file:	signature:(struct gate_t *gp, word32 i)
track_rm_1bblk	./v_bbopt.c	/^static void track_rm_1bblk(struct bblk_t *rm_bbp, struct flowg_t *fgp,$/;"	f	file:	signature:(struct bblk_t *rm_bbp, struct flowg_t *fgp, int32 free_bblk)
track_rm_jmpto_back_edges	./v_bbopt.c	/^static void track_rm_jmpto_back_edges(struct bblk_t *rm_bbp)$/;"	f	file:	signature:(struct bblk_t *rm_bbp)
tradd_tf_argval	./v_ex.c	/^static void tradd_tf_argval(int32 argi, struct net_t *np, struct xstk_t *xsp)$/;"	f	file:	signature:(int32 argi, struct net_t *np, struct xstk_t *xsp)
tran_ids	./v.h	/^ int32 *tran_ids;                \/* indent for loaded compiler values *\/$/;"	m	struct:traux_t	access:public
tran_npps	./v.h	/^ struct net_pin_t *tran_npps; \/* ptr to linked tran chan npps *\/$/;"	m	struct:traux_t	typeref:struct:traux_t::net_pin_t	access:public
transtore_trmsg	./v_trch.c	/^static void transtore_trmsg(struct net_t *np, int32 bi, int32 chg, word32 nav,$/;"	f	file:	signature:(struct net_t *np, int32 bi, int32 chg, word32 nav, word32 nbv)
traux_t	./v.h	/^struct traux_t {$/;"	s
traux_t::tran_ids	./v.h	/^ int32 *tran_ids;                \/* indent for loaded compiler values *\/$/;"	m	struct:traux_t	access:public
traux_t::tran_npps	./v.h	/^ struct net_pin_t *tran_npps; \/* ptr to linked tran chan npps *\/$/;"	m	struct:traux_t	typeref:struct:traux_t::net_pin_t	access:public
traux_t::trnva	./v.h	/^ union pck_u trnva;           \/* per inst hard driver values for all of net *\/$/;"	m	struct:traux_t	typeref:union:traux_t::pck_u	access:public
traux_t::vbitchans	./v.h	/^ struct vbinfo_t **vbitchans; \/* (chan_id, vtx) per bit or bit-inst *\/$/;"	m	struct:traux_t	typeref:struct:traux_t::vbinfo_t	access:public
travfreeze1_genblk	./v_genfx.c	/^static void travfreeze1_genblk(struct genblk_t *gblkp)$/;"	f	file:	signature:(struct genblk_t *gblkp)
travfreeze1_genitem	./v_genfx.c	/^static void travfreeze1_genitem(struct genitem_t *gip)$/;"	f	file:	signature:(struct genitem_t *gip)
travfreeze_lowsymtab	./v_src.c	/^static void travfreeze_lowsymtab(struct symtab_t *sytp)$/;"	f	file:	signature:(struct symtab_t *sytp)
trchan_get_oside_itp	./v_trch.c	/^static struct itree_t *trchan_get_oside_itp(struct net_pin_t *npp,$/;"	f	file:	signature:(struct net_pin_t *npp, int32 bi2, int32 *catel_bi, struct expr_t **xp2, struct itree_t *vt1_itp)
trec	./v.h	/^ struct tfrec_t *trec;        \/* ptr to aux pli tf_ data *\/$/;"	m	union:tkcaux_u	typeref:struct:tkcaux_u::tfrec_t	access:public
tree_level_val	./v.h	/^ int32 tree_level_val;$/;"	m	struct:ocfg_stmt_t	access:public
trigger	./v.h	/^ word32 trigger; $/;"	m	struct:tev_t	access:public
trigger_evctrl	./v_sim.c	/^static void trigger_evctrl(struct delctrl_t *dctp, struct tev_t *tevp)$/;"	f	file:	signature:(struct delctrl_t *dctp, struct tev_t *tevp)
triggered	./v.h	/^ word32 triggered;             \/* T => event has been triggered *\/$/;"	m	struct:nchglst_t	access:public
trim1_1val	./v_cnv.c	/^static int32 trim1_1val(word32 *wp, int32 blen)$/;"	f	file:	signature:(word32 *wp, int32 blen)
trim_abval	./v_cnv.c	/^static int32 trim_abval(word32 *ap, word32 *bp, int32 blen)$/;"	f	file:	signature:(word32 *ap, word32 *bp, int32 blen)
trk_known	./igen.h	/^ word32 *trk_known;           \/* only child part may be known, per bit mask *\/  $/;"	m	struct:tn_t	access:public
trk_later_del	./igen.h	/^ unsigned trk_later_del : 1;  \/* T => in trk removal, must mark before del *\/$/;"	m	struct:insn_t	access:public
trk_nbytes	./igen.h	/^ int32 trk_nbytes;            \/* number of bytes in tracked area *\/$/;"	m	struct:iusedef_t	access:public
trk_valp	./igen.h	/^ word32 *trk_valp;            \/* malloc tracked current val - only parents *\/$/;"	m	struct:tn_t	access:public
trmsg_frc_inhibit	./v_trch.c	/^static void trmsg_frc_inhibit(struct net_t *np, int32 bi)$/;"	f	file:	signature:(struct net_t *np, int32 bi)
trnum	./v.h	/^ int32 trnum;                 \/* number of task regs *\/   $/;"	m	struct:task_t	access:public
trnva	./v.h	/^ union pck_u trnva;           \/* per inst hard driver values for all of net *\/$/;"	m	struct:traux_t	typeref:union:traux_t::pck_u	access:public
trtyp	./v.h	/^ unsigned trtyp : 8;          \/* i\/o type (same as sym np iotyp) *\/$/;"	m	struct:task_pin_t	access:public
try_add_analyze_late_nchges	./v_prp.c	/^static void try_add_analyze_late_nchges(struct net_t *np, struct mod_t *mdp,$/;"	f	file:	signature:(struct net_t *np, struct mod_t *mdp, struct task_t *tskp)
try_add_npp_dpthsrc	./v_prp2.c	/^static struct tchg_t *try_add_npp_dpthsrc(struct spcpth_t *pthp,$/;"	f	file:	signature:(struct spcpth_t *pthp, struct net_t *snp, int32 sbi)
try_add_wrkevtab	./v_dbg2.c	/^static int32 try_add_wrkevtab(struct tev_t *tevp, int32 ntevs, int32 *evnum,$/;"	f	file:	signature:(struct tev_t *tevp, int32 ntevs, int32 *evnum, int32 tefilt)
try_chg_tononesc	./v_ms.c	/^static int32 try_chg_tononesc(void) $/;"	f	file:	signature:(void)
try_cnvt_parmsel_toconst	./v_fx3.c	/^static void try_cnvt_parmsel_toconst(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
try_convert_amode_to_imm	./v_asmlnk.c	/^static int32 try_convert_amode_to_imm(struct amode_t *amp)$/;"	f	file:	signature:(struct amode_t *amp)
try_convert_mov0_reg_to_xor	./v_bbopt.c	/^static int32 try_convert_mov0_reg_to_xor(struct insn_t *ip)$/;"	f	file:	signature:(struct insn_t *ip)
try_convert_vec_to_scalar	./v_bbopt.c	/^static struct insn_t *try_convert_vec_to_scalar(struct insn_t *ip)$/;"	f	file:	signature:(struct insn_t *ip)
try_find_set_intercon_prim_del	./v_sdf.c	/^static void try_find_set_intercon_prim_del(struct mod_pin_t *mpp, int32 i1,$/;"	f	file:	signature:(struct mod_pin_t *mpp, int32 i1, struct mod_t *mdp, struct itree_t *itp, char *sdfkw)
try_fix_genblk_nam_conflict	./v_genfx.c	/^static void try_fix_genblk_nam_conflict(struct genblk_t *gblkp,$/;"	f	file:	signature:(struct genblk_t *gblkp, struct mod_t *mdp)
try_fnd_in_gblk_tsk	./v_genfx.c	/^static struct sy_t *try_fnd_in_gblk_tsk(char *ncmp, struct genblk_t *cur_gblkp,$/;"	f	file:	signature:(char *ncmp, struct genblk_t *cur_gblkp, struct symtab_t **sytp2)
try_fnd_nxtcmp_gblk	./v_genfx.c	/^static struct sy_t *try_fnd_nxtcmp_gblk(char *ncmp, struct mod_t *in_mdp)$/;"	f	file:	signature:(char *ncmp, struct mod_t *in_mdp)
try_fold_for_loop_lstofstmts	./v_prp2.c	/^static void try_fold_for_loop_lstofstmts(struct st_t *hdstp)$/;"	f	file:	signature:(struct st_t *hdstp)
try_fold_for_loop_stmt	./v_prp2.c	/^static struct st_t *try_fold_for_loop_stmt(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
try_gen_mipd_flowg	./v_bbgen2.c	/^static void try_gen_mipd_flowg(struct net_t *np)$/;"	f	file:	signature:(struct net_t *np)
try_get_fillin_ref	./v_dbg2.c	/^static int32 try_get_fillin_ref(char *st_chp, int32 *ifi, int32 *lini,$/;"	f	file:	signature:(char *st_chp, int32 *ifi, int32 *lini, char **sav_chp, char **endchp)
try_insert_deflst_dom_fronts	./v_bbopt.c	/^static void try_insert_deflst_dom_fronts(int32 tni, struct bblk_t *deflst_bbp)$/;"	f	file:	signature:(int32 tni, struct bblk_t *deflst_bbp)
try_match_rule	./v_src3.c	/^static int32 try_match_rule(struct cfglib_t *cntxt_lbp, struct cell_t *cp,$/;"	f	file:	signature:(struct cfglib_t *cntxt_lbp, struct cell_t *cp, struct cfgrule_t *rulp)
try_merge_dces	./v_prp.c	/^static int32 try_merge_dces(struct dcevnt_t *dcep)$/;"	f	file:	signature:(struct dcevnt_t *dcep)
try_reduce_tran_stren	./v_trch.c	/^static void try_reduce_tran_stren(word32 *oside_val, int32 gid)$/;"	f	file:	signature:(word32 *oside_val, int32 gid)
try_reduce_tranif_stren	./v_trch.c	/^static int32 try_reduce_tranif_stren(word32 *oside_val, struct gate_t *gp)$/;"	f	file:	signature:(word32 *oside_val, struct gate_t *gp)
try_repl_bid_with_vec_trchans	./v_trch.c	/^static void try_repl_bid_with_vec_trchans(void)$/;"	f	file:	signature:(void)
try_replace_amode_call_wide_tn	./v_bbopt.c	/^static void try_replace_amode_call_wide_tn(struct insn_t *ip)$/;"	f	file:	signature:(struct insn_t *ip)
try_replace_amode_child_tn	./v_bbopt.c	/^static void try_replace_amode_child_tn(struct amode_t *amp)$/;"	f	file:	signature:(struct amode_t *amp)
try_replace_amode_wide_tn	./v_bbopt.c	/^static void try_replace_amode_wide_tn(struct amode_t *amp)$/;"	f	file:	signature:(struct amode_t *amp)
try_set_1inst_drvn_const_bits	./v_cvr.c	/^static int32 try_set_1inst_drvn_const_bits(struct net_t *np,$/;"	f	file:	signature:(struct net_t *np, struct itree_t *itp, int32 h, int32 l)
try_set_amode_to_reg	./v_bbopt.c	/^static void try_set_amode_to_reg(struct amode_t *amp)$/;"	f	file:	signature:(struct amode_t *amp)
try_set_asl_wrapper_curdefs	./v_bbopt.c	/^static void try_set_asl_wrapper_curdefs(struct insn_t *ip)$/;"	f	file:	signature:(struct insn_t *ip)
try_set_curdefs_and_savchains	./v_bbopt.c	/^static void try_set_curdefs_and_savchains(struct bblk_t *bbp)$/;"	f	file:	signature:(struct bblk_t *bbp)
try_set_net_excl_bit	./v_src3.c	/^static void try_set_net_excl_bit(struct net_t *np, int32 ii)$/;"	f	file:	signature:(struct net_t *np, int32 ii)
try_set_xpr_cant_be_const	./v_cvr.c	/^static int32 try_set_xpr_cant_be_const(struct expr_t *rhsx)$/;"	f	file:	signature:(struct expr_t *rhsx)
try_to_assign_overflow_reg	./v_regasn.c	/^static int32 try_to_assign_overflow_reg(struct flowg_t *fgp, int32 *regs, $/;"	f	file:	signature:(struct flowg_t *fgp, int32 *regs, int32 num_regs)
try_to_expand_environment_var	./cvc.c	/^static void try_to_expand_environment_var(char *s1, char *token)$/;"	f	file:	signature:(char *s1, char *token)
try_to_save_next_nchg_in_reg	./v_asmlnk.c	/^static void try_to_save_next_nchg_in_reg(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
try_turn_on_1inst_net_tgl_coverage	./v_src3.c	/^static void try_turn_on_1inst_net_tgl_coverage(struct itree_t *itp,$/;"	f	file:	signature:(struct itree_t *itp, struct net_t *np, int32 r1, int32 r2)
tryadd_bblk_defines_tn	./v_bbopt.c	/^static void tryadd_bblk_defines_tn(int32 tni, struct bblk_t *bbp) $/;"	f	file:	signature:(int32 tni, struct bblk_t *bbp)
tryadd_bblk_uses_tn	./v_bbopt.c	/^static void tryadd_bblk_uses_tn(int32 tni, struct bblk_t *bbp) $/;"	f	file:	signature:(int32 tni, struct bblk_t *bbp)
tryadd_conflict_tns	./v_regasn.c	/^static void tryadd_conflict_tns(struct tn_t *tnp, int32 conflct_tni) $/;"	f	file:	signature:(struct tn_t *tnp, int32 conflct_tni)
tryadd_var_tn_in_fg	./v_bbopt.c	/^static void tryadd_var_tn_in_fg(struct flowg_t *fgp, int32 tni)$/;"	f	file:	signature:(struct flowg_t *fgp, int32 tni)
tryfnd_param	./v_acc.c	/^static struct net_t *tryfnd_param(char *anam, struct symtab_t *sytp,$/;"	f	file:	signature:(char *anam, struct symtab_t *sytp, char *rtnam, char *ptnam)
tsk_ingen	./v.h	/^ unsigned tsk_ingen : 1;      \/* T => task defined in gen block *\/$/;"	m	struct:task_t	access:public
tsk_last_ifi	./v.h	/^ int32 tsk_last_ifi;          \/* end file in case spans multiple files *\/$/;"	m	struct:task_t	access:public
tsk_last_lini	./v.h	/^ int32 tsk_last_lini;         \/* line no. of end (mabye in next file) *\/$/;"	m	struct:task_t	access:public
tsk_locprms	./v.h	/^ struct net_t *tsk_locprms;   \/* local parameters defined in task *\/$/;"	m	struct:task_t	typeref:struct:task_t::net_t	access:public
tsk_prms	./v.h	/^ struct net_t *tsk_prms;      \/* parameters defined in task *\/$/;"	m	struct:task_t	typeref:struct:task_t::net_t	access:public
tsk_regs	./v.h	/^ struct net_t *tsk_regs;      \/* list then array of nets in task *\/$/;"	m	struct:task_t	typeref:struct:task_t::net_t	access:public
tsk_stouts	./v.h	/^ unsigned tsk_stouts : 1;     \/* T => when task returns has outs to store *\/$/;"	m	struct:thread_t	access:public
tskcall_t	./v.h	/^struct tskcall_t {$/;"	s
tskcall_t::targs	./v.h	/^ struct expr_t *targs;        \/* FCCOM expr of args *\/$/;"	m	struct:tskcall_t	typeref:struct:tskcall_t::expr_t	access:public
tskcall_t::tkcaux	./v.h	/^ union tkcaux_u tkcaux;       \/* ptr to aux pli tf_ data or monit rec *\/$/;"	m	struct:tskcall_t	typeref:union:tskcall_t::tkcaux_u	access:public
tskcall_t::tsksyx	./v.h	/^ struct expr_t *tsksyx;       \/* task symbol or global table entry *\/$/;"	m	struct:tskcall_t	typeref:struct:tskcall_t::expr_t	access:public
tsknxt	./v.h	/^ struct task_t *tsknxt;       \/* next defined task in current module *\/$/;"	m	struct:task_t	typeref:struct:task_t::task_t	access:public
tskp	./v.h	/^ struct task_t *tskp;         \/* for dmpv dce, task variable in *\/$/;"	m	union:dce_u	typeref:struct:dce_u::task_t	access:public
tskpins	./v.h	/^ struct task_pin_t *tskpins;  \/* task ports - procedural not wires *\/$/;"	m	struct:task_t	typeref:struct:task_t::task_pin_t	access:public
tskst	./v.h	/^ struct st_t *tskst;          \/* one task statement (usually a block) *\/$/;"	m	struct:task_t	typeref:struct:task_t::st_t	access:public
tsksymtab	./v.h	/^ struct symtab_t *tsksymtab;  \/* symbol table for objects in task *\/$/;"	m	struct:task_t	typeref:struct:task_t::symtab_t	access:public
tsksyp	./v.h	/^ struct sy_t *tsksyp;         \/* name symbol in module level table *\/$/;"	m	struct:task_t	typeref:struct:task_t::sy_t	access:public
tsksyx	./v.h	/^ struct expr_t *tsksyx;       \/* task symbol or global table entry *\/$/;"	m	struct:tskcall_t	typeref:struct:tskcall_t::expr_t	access:public
tskthrd_t	./v.h	/^struct tskthrd_t {$/;"	s
tskthrd_t::tthd_l	./v.h	/^ struct tskthrd_t *tthd_l, *tthd_r;$/;"	m	struct:tskthrd_t	typeref:struct:tskthrd_t::tskthrd_t	access:public
tskthrd_t::tthd_r	./v.h	/^ struct tskthrd_t *tthd_l, *tthd_r;$/;"	m	struct:tskthrd_t	typeref:struct:tskthrd_t::	access:public
tskthrd_t::tthrd	./v.h	/^ struct thread_t *tthrd;$/;"	m	struct:tskthrd_t	typeref:struct:tskthrd_t::thread_t	access:public
tsktyp	./v.h	/^ unsigned tsktyp : 9;         \/* symbol number giving task type *\/$/;"	m	struct:task_t	access:public
tthd_l	./v.h	/^ struct tskthrd_t *tthd_l, *tthd_r;$/;"	m	struct:tskthrd_t	typeref:struct:tskthrd_t::tskthrd_t	access:public
tthd_r	./v.h	/^ struct tskthrd_t *tthd_l, *tthd_r;$/;"	m	struct:tskthrd_t	typeref:struct:tskthrd_t::	access:public
tthlst	./v.h	/^ struct tskthrd_t *tthlst;    \/* ptr to this task assoc. thrd list el. *\/$/;"	m	struct:thread_t	typeref:struct:thread_t::tskthrd_t	access:public
tthrd	./v.h	/^ struct thread_t *tthrd;$/;"	m	struct:tskthrd_t	typeref:struct:tskthrd_t::thread_t	access:public
tthrds	./v.h	/^ struct tskthrd_t **tthrds;   \/* per inst. list of active threads for task *\/$/;"	m	struct:task_t	typeref:struct:task_t::tskthrd_t	access:public
tu	./v.h	/^ union te_u tu;$/;"	m	struct:tev_t	typeref:union:tev_t::te_u	access:public
turn_off_1inst_allnets_tgl_coverage	./v_src3.c	/^static void turn_off_1inst_allnets_tgl_coverage(struct itree_t *itp,$/;"	f	file:	signature:(struct itree_t *itp, int32 emit_warn)
turn_off_1inst_net_tgl_coverage	./v_src3.c	/^static void turn_off_1inst_net_tgl_coverage(struct itree_t *itp,$/;"	f	file:	signature:(struct itree_t *itp, struct net_t *np, int32 r1, int32 r2, int32 emit_warn)
turn_off_1mod_tgl_coverage	./v_src3.c	/^static void turn_off_1mod_tgl_coverage(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
turn_off_pndsplitting_reuse	./v_genfx.c	/^static void turn_off_pndsplitting_reuse(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
turn_off_used_in_asm_flag	./v_asmlnk.c	/^static void turn_off_used_in_asm_flag(struct flowg_t *fgp)$/;"	f	file:	signature:(struct flowg_t *fgp)
turn_on_1inst_allnets_tgl_coverage	./v_src3.c	/^static void turn_on_1inst_allnets_tgl_coverage(struct itree_t *itp)$/;"	f	file:	signature:(struct itree_t *itp)
turn_on_1inst_dumpports	./v_ex4.c	/^static void turn_on_1inst_dumpports(struct dpinstel_t *dpip)$/;"	f	file:	signature:(struct dpinstel_t *dpip)
turn_on_1mod_tgl_coverage	./v_src3.c	/^static void turn_on_1mod_tgl_coverage(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
turn_on_design_wide_tgl_coverage	./v_src3.c	/^static void turn_on_design_wide_tgl_coverage(void)$/;"	f	file:	signature:(void)
turnon_1net_dmpv	./v_ex4.c	/^static void turnon_1net_dmpv(struct net_t *np, struct itree_t *itp,$/;"	f	file:	signature:(struct net_t *np, struct itree_t *itp, struct task_t *tskp, struct mod_t *mdp, int32 repeat_ok, int32 arr_ndx)
turnon_all_net_dumpvars	./v_fx.c	/^static void turnon_all_net_dumpvars(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
turnon_plitab_from_optcfgfile	./v_fx.c	/^static void turnon_plitab_from_optcfgfile(void)$/;"	f	file:	signature:(void)
two_chans_combinable	./v_trch.c	/^static int32 two_chans_combinable(struct chanrec_t *chanp1, $/;"	f	file:	signature:(struct chanrec_t *chanp1, struct chanrec_t *chanp2)
two_rot	./v_ms.c	/^static void two_rot(struct tnode_t *bal_pt, struct tnode_t *bal_down,$/;"	f	file:	signature:(struct tnode_t *bal_pt, struct tnode_t *bal_down, struct tnode_t *balpt_par)
txhelp	./cvc_wrhelp.h	/^static char *txhelp[] =  $/;"	v
typ	./fstapi.h	/^                unsigned char typ; \/* FST_AT_MIN ... FST_AT_MAX *\/$/;"	m	struct:fstHier::__anon18::fstHierAttr	access:public
typ	./fstapi.h	/^                unsigned char typ; \/* FST_ST_MIN ... FST_ST_MAX *\/$/;"	m	struct:fstHier::__anon18::fstHierScope	access:public
typ	./fstapi.h	/^                unsigned char typ; \/* FST_VT_MIN ... FST_VT_MAX *\/$/;"	m	struct:fstHier::__anon18::fstHierVar	access:public
u	./fstapi.h	/^        } u;$/;"	m	struct:fstHier	typeref:union:fstHier::__anon18	access:public
u_idnum	./v.h	/^ int32 u_idnum;               \/* id number for counting and cvc access *\/$/;"	m	struct:udp_t	access:public
u_used	./v.h	/^ unsigned u_used : 1;         \/* T => need table, instanciated in some mod *\/$/;"	m	struct:udp_t	access:public
u_wide	./v.h	/^ unsigned u_wide : 1;         \/* T => uses alt. wide representation *\/$/;"	m	struct:udp_t	access:public
ubits2_	./cvmacros.h	454;"	d
ubits_	./cvmacros.h	441;"	d
ubits_	./cvmacros.h	447;"	d
udmp_impossible_value	./v_prp.c	/^static int32 udmp_impossible_value(word32 ndx, word32 nstates)$/;"	f	file:	signature:(word32 ndx, word32 nstates)
udp_line_to_str	./v_vpi3.c	/^static void udp_line_to_str(char *s, struct udp_t *udpp, struct utline_t *utlp)$/;"	f	file:	signature:(char *s, struct udp_t *udpp, struct utline_t *utlp)
udp_t	./v.h	/^struct udp_t {$/;"	s
udp_t::ival	./v.h	/^ unsigned ival : 8;           \/* initial value (0,1,3 - none) *\/$/;"	m	struct:udp_t	access:public
udp_t::numins	./v.h	/^ unsigned numins : 8;         \/* number of inputs *\/$/;"	m	struct:udp_t	access:public
udp_t::numstates	./v.h	/^ unsigned numstates : 8;      \/* for combinatorial same else one more *\/$/;"	m	struct:udp_t	access:public
udp_t::u_idnum	./v.h	/^ int32 u_idnum;               \/* id number for counting and cvc access *\/$/;"	m	struct:udp_t	access:public
udp_t::u_used	./v.h	/^ unsigned u_used : 1;         \/* T => need table, instanciated in some mod *\/$/;"	m	struct:udp_t	access:public
udp_t::u_wide	./v.h	/^ unsigned u_wide : 1;         \/* T => uses alt. wide representation *\/$/;"	m	struct:udp_t	access:public
udp_t::udpnxt	./v.h	/^ struct udp_t *udpnxt;$/;"	m	struct:udp_t	typeref:struct:udp_t::udp_t	access:public
udp_t::upins	./v.h	/^ struct mod_pin_t *upins;     \/* defined ports for order *\/$/;"	m	struct:udp_t	typeref:struct:udp_t::mod_pin_t	access:public
udp_t::usym	./v.h	/^ struct sy_t *usym;$/;"	m	struct:udp_t	typeref:struct:udp_t::sy_t	access:public
udp_t::usymtab	./v.h	/^ struct symtab_t *usymtab;    \/* symbol table just for terminals *\/$/;"	m	struct:udp_t	typeref:struct:udp_t::symtab_t	access:public
udp_t::utab	./v.h	/^ struct udptab_t *utab;$/;"	m	struct:udp_t	typeref:struct:udp_t::udptab_t	access:public
udp_t::utlines	./v.h	/^ struct utline_t *utlines;$/;"	m	struct:udp_t	typeref:struct:udp_t::utline_t	access:public
udp_t::utyp	./v.h	/^ unsigned utyp : 4;$/;"	m	struct:udp_t	access:public
udpdefnprop_vpiget	./v_vpi2.c	/^static int32 udpdefnprop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
udpiodecl_get	./v_vpi2.c	/^static int32 udpiodecl_get(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
udploc_to_line	./v_prp.c	/^static char *udploc_to_line(char *s, char *line)$/;"	f	file:	signature:(char *s, char *line)
udpnxt	./v.h	/^ struct udp_t *udpnxt;$/;"	m	struct:udp_t	typeref:struct:udp_t::udp_t	access:public
udptab_t	./v.h	/^struct udptab_t {$/;"	s
udptab_t::eudptabs	./v.h	/^ word32 **eudptabs;$/;"	m	struct:udptab_t	access:public
udptab_t::ludptab	./v.h	/^ word32 *ludptab;$/;"	m	struct:udptab_t	access:public
udptabentryprop_vpiget	./v_vpi2.c	/^static int32 udptabentryprop_vpiget(struct h_t *hp, int32 prop)$/;"	f	file:	signature:(struct h_t *hp, int32 prop)
uledinum	./v.h	/^ unsigned uledinum : 8;       \/* input position number of one allowed edge *\/$/;"	m	struct:utline_t	access:public
ulhas_wcard	./v.h	/^ unsigned ulhas_wcard : 1;$/;"	m	struct:utline_t	access:public
ullen	./v.h	/^ unsigned ullen : 8;          \/* length of original tline in bytes *\/$/;"	m	struct:utline_t	access:public
unary_insn	./v_bbgen3.c	/^static int32 unary_insn(int32 tntyp, int32 opcod, int32 src_amode, ...)$/;"	f	file:	signature:(int32 tntyp, int32 opcod, int32 src_amode, ...)
unbas_unsiz_num	./v.h	/^ unsigned unbas_unsiz_num : 1;\/* SV unsized \/unbased '0 number *\/$/;"	m	struct:expr_t	access:public
unbld_iarrs_and_garrs	./v_genfx.c	/^static void unbld_iarrs_and_garrs(void)$/;"	f	file:	signature:(void)
unc_pull	./v.h	/^ unsigned unc_pull : 2;       \/* unc. pull directive value for OPEMPTY *\/$/;"	m	struct:expr_t	access:public
undef_t	./v.h	/^struct undef_t {$/;"	s
undef_t::dfi	./v.h	/^ int32 dfi;$/;"	m	struct:undef_t	access:public
undef_t::modnam	./v.h	/^ char *modnam;$/;"	m	struct:undef_t	access:public
undef_t::msyp	./v.h	/^ struct sy_t *msyp;$/;"	m	struct:undef_t	typeref:struct:undef_t::sy_t	access:public
undef_t::undefnxt	./v.h	/^ struct undef_t *undefnxt;$/;"	m	struct:undef_t	typeref:struct:undef_t::undef_t	access:public
undef_t::undefprev	./v.h	/^ struct undef_t *undefprev;$/;"	m	struct:undef_t	typeref:struct:undef_t::undef_t	access:public
undefnxt	./v.h	/^ struct undef_t *undefnxt;$/;"	m	struct:undef_t	typeref:struct:undef_t::undef_t	access:public
undefprev	./v.h	/^ struct undef_t *undefprev;$/;"	m	struct:undef_t	typeref:struct:undef_t::undef_t	access:public
undisp_msg	./v_dbg.c	/^static char *undisp_msg[] = { $/;"	v	file:
undo_free_pre_fixup_nl	./v_genfx.c	/^static void undo_free_pre_fixup_nl(void)$/;"	f	file:	signature:(void)
unget2_vtok	./v_ms.c	/^static void unget2_vtok(int32 ttyp)$/;"	f	file:	signature:(int32 ttyp)
uniform	./v_ex2.c	/^static double uniform(int32 *seed, int32 start, int32 end)$/;"	f	file:	signature:(int32 *seed, int32 start, int32 end)
unkn_if_con_func	./v.h	/^ unsigned unkn_if_con_func : 1;\/* T => not check to see if con func yet *\/$/;"	m	struct:task_t	access:public
unlikely	./lz4.c	154;"	d	file:
unlink_fopen	./fstapi.c	/^static FILE *unlink_fopen(const char *nam, const char *mode)$/;"	f	file:	signature:(const char *nam, const char *mode)
unlink_tskthd	./v_ex.c	/^static void unlink_tskthd(struct thread_t *thp)$/;"	f	file:	signature:(struct thread_t *thp)
unmap_arri_to_ndxnums	./v_cnv.c	/^static void unmap_arri_to_ndxnums(int32 arri, struct net_t *np,$/;"	f	file:	signature:(int32 arri, struct net_t *np, int32 *mda_ndxies)
unmap_arri_to_ndxnums	./v_ex4.c	/^static void unmap_arri_to_ndxnums(int32 arri, struct net_t *np,$/;"	f	file:	signature:(int32 arri, struct net_t *np, int32 *mda_ndxies)
unnamed_gblk	./v.h	/^ unsigned unnamed_gblk : 1;$/;"	m	struct:genblk_t	access:public
unpack_isv1_to_isv	./v_del.c	/^static void unpack_isv1_to_isv(struct gate_t *gp, int32 numinsts, int32 nvals)$/;"	f	file:	signature:(struct gate_t *gp, int32 numinsts, int32 nvals)
unpack_isv1_to_isv2	./v_del.c	/^static void unpack_isv1_to_isv2(struct gate_t *gp, int32 numinsts, int32 nvals)$/;"	f	file:	signature:(struct gate_t *gp, int32 numinsts, int32 nvals)
unpack_isv2_to_isv	./v_del.c	/^static void unpack_isv2_to_isv(struct gate_t *gp, int32 numinsts, int32 nvals)$/;"	f	file:	signature:(struct gate_t *gp, int32 numinsts, int32 nvals)
unreachable	./v.h	/^ unsigned unreachable : 1;    \/* T => stmt is unreachable from compiler *\/$/;"	m	struct:st_t	access:public
unsave_gia_expr_pndparms	./v_genfx.c	/^static void unsave_gia_expr_pndparms(struct expr_t *xp, struct itree_t *itp)$/;"	f	file:	signature:(struct expr_t *xp, struct itree_t *itp)
unsgn_widen	./v.h	/^ unsigned unsgn_widen : 1;    \/* T => for cases unsigned widen if needed *\/$/;"	m	struct:expr_t	access:public
unsiznum	./v.h	/^ unsigned unsiznum : 1;       \/* T => constant is unsized *\/$/;"	m	struct:expr_t	access:public
unwind_lhsconcats	./v_fx3.c	/^static void unwind_lhsconcats(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
unwind_rhsconcats	./v_fx3.c	/^static void unwind_rhsconcats(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
up_it	./v.h	/^ struct itree_t *up_it;       \/* containing itree inst. *\/$/;"	m	struct:itree_t	typeref:struct:itree_t::itree_t	access:public
up_rhsx	./igen.h	/^ struct expr_t *up_rhsx;        \/* up rhsx expr *\/$/;"	m	struct:np_iconn_t	typeref:struct:np_iconn_t::expr_t	access:public
upd_sdf_perinst_del	./v_sdf.c	/^static int32 upd_sdf_perinst_del(struct gate_t *ogp, p_vpi_delay delay_p,  $/;"	f	file:	signature:(struct gate_t *ogp, p_vpi_delay delay_p, struct mod_t *ctmdp, int32 is_path, int32 has_toz, int32 dfix, char *sdfmsg)
update_vec_fifo	./v_prp.c	/^static void update_vec_fifo(struct net_t *np, word32 *wpfi, int32 *pbfi, $/;"	f	file:	signature:(struct net_t *np, word32 *wpfi, int32 *pbfi, int32 *pbfo, int32 *pbtcfo)
upins	./v.h	/^ struct mod_pin_t *upins;     \/* defined ports for order *\/$/;"	m	struct:udp_t	typeref:struct:udp_t::mod_pin_t	access:public
uprel_itps	./v.h	/^ struct itree_t **uprel_itps; \/* parallel to mod itps dest itree table *\/$/;"	m	union:targ_u	typeref:struct:targ_u::itree_t	access:public
upwards_rel	./v.h	/^ unsigned upwards_rel : 1;    \/* T => up rel form path starts with mod *\/$/;"	m	struct:gref_t	access:public
use_rule_cfg	./v.h	/^ unsigned use_rule_cfg : 1;   \/* T => use clause config form *\/ $/;"	m	struct:cfgrule_t	access:public
use_vcd_extensions	./fstapi.c	/^unsigned use_vcd_extensions : 1;$/;"	m	struct:fstReaderContext	file:	access:public
used_in_asm	./igen.h	/^ unsigned used_in_asm : 1;    \/* T => tn used in lowered asm *\/$/;"	m	struct:tn_t	access:public
user_info	./fstapi.c	/^void *user_info;$/;"	m	struct:fstCurrHier	file:	access:public
uses_ebp	./igen.h	/^ unsigned uses_ebp : 1;       \/* T => uses %ebp in xjmp region *\/$/;"	m	struct:flowg_t	access:public
uses_ebx	./igen.h	/^ unsigned uses_ebx : 1;       \/* T => uses %ebx in xjmp region *\/$/;"	m	struct:flowg_t	access:public
uses_edi	./igen.h	/^ unsigned uses_edi : 1;       \/* T => uses %edi in xjmp region *\/$/;"	m	struct:flowg_t	access:public
uses_esi	./igen.h	/^ unsigned uses_esi : 1;       \/* T => uses %esi in xjmp region *\/$/;"	m	struct:flowg_t	access:public
uses_idp	./igen.h	/^ unsigned uses_idp : 1;       \/* T => uses accesses __idp storage area *\/$/;"	m	struct:flowg_t	access:public
uses_idp	./igen.h	/^ unsigned uses_idp : 1;      \/* T => needs __idp to be set upon entering *\/$/;"	m	struct:asl_info_t	access:public
uses_r12	./igen.h	/^ unsigned uses_r12 : 1;       \/* T => uses r12 in fg *\/$/;"	m	struct:flowg_t	access:public
uses_r13	./igen.h	/^ unsigned uses_r13 : 1;       \/* T => uses r12 in fg *\/$/;"	m	struct:flowg_t	access:public
uses_r14	./igen.h	/^ unsigned uses_r14 : 1;       \/* T => uses r12 in fg *\/$/;"	m	struct:flowg_t	access:public
uses_r15	./igen.h	/^ unsigned uses_r15 : 1;       \/* T => uses r12 in fg *\/$/;"	m	struct:flowg_t	access:public
uses_scope	./v.h	/^ unsigned uses_scope : 1;     \/* T => task calls display uses %m *\/$/;"	m	struct:task_t	access:public
usym	./v.h	/^ struct sy_t *usym;$/;"	m	struct:udp_t	typeref:struct:udp_t::sy_t	access:public
usymtab	./v.h	/^ struct symtab_t *usymtab;    \/* symbol table just for terminals *\/$/;"	m	struct:udp_t	typeref:struct:udp_t::symtab_t	access:public
utab	./v.h	/^ struct udptab_t *utab;$/;"	m	struct:udp_t	typeref:struct:udp_t::udptab_t	access:public
utabsel	./v.h	/^ unsigned utabsel : 8;        \/* first edge char table select (maybe wc) *\/$/;"	m	struct:utline_t	access:public
utlfnam_ind	./v.h	/^ unsigned utlfnam_ind : 16;   \/* file no. of udp line *\/$/;"	m	struct:utline_t	access:public
utlin_cnt	./v.h	/^ int32 utlin_cnt;             \/* line no. of udp tble line *\/$/;"	m	struct:utline_t	access:public
utline_t	./v.h	/^struct utline_t {$/;"	s
utline_t::tline	./v.h	/^ char *tline;                 \/* table line - for edge 2nd char in line *\/$/;"	m	struct:utline_t	access:public
utline_t::uledinum	./v.h	/^ unsigned uledinum : 8;       \/* input position number of one allowed edge *\/$/;"	m	struct:utline_t	access:public
utline_t::ulhas_wcard	./v.h	/^ unsigned ulhas_wcard : 1;$/;"	m	struct:utline_t	access:public
utline_t::ullen	./v.h	/^ unsigned ullen : 8;          \/* length of original tline in bytes *\/$/;"	m	struct:utline_t	access:public
utline_t::utabsel	./v.h	/^ unsigned utabsel : 8;        \/* first edge char table select (maybe wc) *\/$/;"	m	struct:utline_t	access:public
utline_t::utlfnam_ind	./v.h	/^ unsigned utlfnam_ind : 16;   \/* file no. of udp line *\/$/;"	m	struct:utline_t	access:public
utline_t::utlin_cnt	./v.h	/^ int32 utlin_cnt;             \/* line no. of udp tble line *\/$/;"	m	struct:utline_t	access:public
utline_t::utlnxt	./v.h	/^ struct utline_t *utlnxt;$/;"	m	struct:utline_t	typeref:struct:utline_t::utline_t	access:public
utlines	./v.h	/^ struct utline_t *utlines;$/;"	m	struct:udp_t	typeref:struct:udp_t::utline_t	access:public
utlnxt	./v.h	/^ struct utline_t *utlnxt;$/;"	m	struct:utline_t	typeref:struct:utline_t::utline_t	access:public
utyp	./v.h	/^ unsigned utyp : 4;$/;"	m	struct:udp_t	access:public
v	./lz4.c	/^typedef struct { U16 v; }  _PACKED U16_S;$/;"	m	struct:__anon1	file:	access:public
v	./lz4.c	/^typedef struct { U32 v; }  _PACKED U32_S;$/;"	m	struct:__anon2	file:	access:public
v	./lz4.c	/^typedef struct { U64 v; }  _PACKED U64_S;$/;"	m	struct:__anon3	file:	access:public
v	./lz4.c	/^typedef struct {size_t v;} _PACKED size_t_S;$/;"	m	struct:__anon4	file:	access:public
val	./v.h	/^ word32 val;$/;"	m	union:dv_storage_u	access:public
valchg_cb_register	./v_vpi.c	/^static vpiHandle valchg_cb_register(p_cb_data cb_data_p) $/;"	f	file:	signature:(p_cb_data cb_data_p)
validate_acc_handle	./v_acc.c	/^static int32 validate_acc_handle(char *rnam, struct h_t *hp) $/;"	f	file:	signature:(char *rnam, struct h_t *hp)
validate_property	./v_vpi2.c	/^static int32 validate_property(char *rnam, int32 proptyp)$/;"	f	file:	signature:(char *rnam, int32 proptyp)
valnum	./igen.h	/^ int32 valnum;                \/* current value number for this tn *\/ $/;"	m	struct:tn_t	access:public
valp	./igen.h	/^ void *valp;                  \/* probably ptr to record of compare values *\/$/;"	m	struct:avlnode_t	access:public
valp_stren_err	./v_vpi3.c	/^static int32 valp_stren_err(struct hrec_t *hrp, p_vpi_value value_p)  $/;"	f	file:	signature:(struct hrec_t *hrp, p_vpi_value value_p)
valpos_handle	./fstapi.c	/^FILE *valpos_handle;$/;"	m	struct:fstWriterContext	file:	access:public
valpos_handle_nam	./fstapi.c	/^char *valpos_handle_nam;$/;"	m	struct:fstWriterContext	file:	access:public
valpos_mem	./fstapi.c	/^uint32_t *valpos_mem;$/;"	m	struct:fstWriterContext	file:	access:public
valtoch_	./cvmacros.h	408;"	d
valtoch_tab	./v_ex4.c	/^static const char valtoch_tab[] = { '0', '1', 'z', 'x' };$/;"	v	file:
valtrk_insn_skip_dst	./v_bbopt.c	/^static int32 valtrk_insn_skip_dst(struct insn_t *ip)$/;"	f	file:	signature:(struct insn_t *ip)
values	./igen.h	/^ int32 *values;      \/* actual values *\/$/;"	m	struct:tn_list_t	access:public
var	./fstapi.h	/^                } var;$/;"	m	union:fstHier::__anon18	typeref:struct:fstHier::__anon18::fstHierVar	access:public
var_addto_iter	./v_acc.c	/^static int32 var_addto_iter(vpiHandle ihref, int32 iti2, int32 vntyp)$/;"	f	file:	signature:(vpiHandle ihref, int32 iti2, int32 vntyp)
var_count	./fstapi.c	/^uint64_t var_count;$/;"	m	struct:fstReaderContext	file:	access:public
varinitlst_t	./v.h	/^struct varinitlst_t {$/;"	s
varinitlst_t::init_syp	./v.h	/^ struct sy_t *init_syp;$/;"	m	struct:varinitlst_t	typeref:struct:varinitlst_t::sy_t	access:public
varinitlst_t::init_xp	./v.h	/^ struct expr_t *init_xp;$/;"	m	struct:varinitlst_t	typeref:struct:varinitlst_t::expr_t	access:public
varinitlst_t::varinitnxt	./v.h	/^ struct varinitlst_t *varinitnxt;$/;"	m	struct:varinitlst_t	typeref:struct:varinitlst_t::varinitlst_t	access:public
varinitnxt	./v.h	/^ struct varinitlst_t *varinitnxt;$/;"	m	struct:varinitlst_t	typeref:struct:varinitlst_t::varinitlst_t	access:public
varis_msg	./v_dbg.c	/^static char *varis_msg[] = { $/;"	v	file:
vartypes	./fstapi.c	/^static const char *vartypes[] = {$/;"	v	file:
vbinfo_t	./v.h	/^struct vbinfo_t {$/;"	s
vbinfo_t::chan_id	./v.h	/^ int32 chan_id;               \/* ID for channel *\/$/;"	m	struct:vbinfo_t	access:public
vbinfo_t::vivxp	./v.h	/^ struct vtx_t *vivxp;         \/* vertex *\/$/;"	m	struct:vbinfo_t	typeref:struct:vbinfo_t::vtx_t	access:public
vbitchans	./v.h	/^ struct vbinfo_t **vbitchans; \/* (chan_id, vtx) per bit or bit-inst *\/$/;"	m	struct:traux_t	typeref:struct:traux_t::vbinfo_t	access:public
vc_emitted	./fstapi.c	/^unsigned vc_emitted : 1;$/;"	m	struct:fstWriterContext	file:	access:public
vc_section_count	./fstapi.c	/^uint64_t vc_section_count;$/;"	m	struct:fstReaderContext	file:	access:public
vchg_alloc_siz	./fstapi.c	/^uint32_t vchg_alloc_siz;$/;"	m	struct:fstWriterContext	file:	access:public
vchg_mem	./fstapi.c	/^unsigned char *vchg_mem;$/;"	m	struct:fstWriterContext	file:	access:public
vchg_siz	./fstapi.c	/^uint32_t vchg_siz;$/;"	m	struct:fstWriterContext	file:	access:public
vcl_cb_rtn	./v_acc.c	/^ int32 (*vcl_cb_rtn)();       \/* acc_ vcl call back routine *\/$/;"	m	struct:vclrec_t	file:	access:public
vcl_oldstval	./v_acc.c	/^ unsigned vcl_oldstval : 8;   \/* old stren val not vpi for chg of val only *\/$/;"	m	struct:vclrec_t	file:	access:public
vcl_reason	./v_acc.c	/^ unsigned vcl_reason : 8;     \/* object determined change reason *\/$/;"	m	struct:vclrec_t	file:	access:public
vcl_udata	./v_acc.c	/^ char *vcl_udata;             \/* user's user data (not vpi_ cb) *\/$/;"	m	struct:vclrec_t	file:	access:public
vclcbp	./v_acc.c	/^ struct cbrec_t *vclcbp;      \/* internal cver cbrec *\/$/;"	m	struct:vclrec_t	typeref:struct:vclrec_t::cbrec_t	file:	access:public
vclflg	./v_acc.c	/^ unsigned vclflg : 8;         \/* user passed vcl flag *\/$/;"	m	struct:vclrec_t	file:	access:public
vclobj	./v_acc.c	/^ handle vclobj;               \/* acc_ handle of object vcl on *\/$/;"	m	struct:vclrec_t	file:	access:public
vclrec_t	./v_acc.c	/^struct vclrec_t {$/;"	s	file:
vclrec_t::vcl_cb_rtn	./v_acc.c	/^ int32 (*vcl_cb_rtn)();       \/* acc_ vcl call back routine *\/$/;"	m	struct:vclrec_t	file:	access:public
vclrec_t::vcl_oldstval	./v_acc.c	/^ unsigned vcl_oldstval : 8;   \/* old stren val not vpi for chg of val only *\/$/;"	m	struct:vclrec_t	file:	access:public
vclrec_t::vcl_reason	./v_acc.c	/^ unsigned vcl_reason : 8;     \/* object determined change reason *\/$/;"	m	struct:vclrec_t	file:	access:public
vclrec_t::vcl_udata	./v_acc.c	/^ char *vcl_udata;             \/* user's user data (not vpi_ cb) *\/$/;"	m	struct:vclrec_t	file:	access:public
vclrec_t::vclcbp	./v_acc.c	/^ struct cbrec_t *vclcbp;      \/* internal cver cbrec *\/$/;"	m	struct:vclrec_t	typeref:struct:vclrec_t::cbrec_t	file:	access:public
vclrec_t::vclflg	./v_acc.c	/^ unsigned vclflg : 8;         \/* user passed vcl flag *\/$/;"	m	struct:vclrec_t	file:	access:public
vclrec_t::vclobj	./v_acc.c	/^ handle vclobj;               \/* acc_ handle of object vcl on *\/$/;"	m	struct:vclrec_t	file:	access:public
vec_assign_1bid_wire	./v_trch.c	/^static void vec_assign_1bid_wire(struct net_t *np, word32 *ap, word32 *bp)$/;"	f	file:	signature:(struct net_t *np, word32 *ap, word32 *bp)
vec_bidvtx_cmp	./v_trch.c	/^static int32 vec_bidvtx_cmp(const void *p1, const void *p2)$/;"	f	file:	signature:(const void *p1, const void *p2)
vec_eval_assign_bid_chan	./v_trch.c	/^static void vec_eval_assign_bid_chan(struct chanrec_t *chanp) $/;"	f	file:	signature:(struct chanrec_t *chanp)
vec_eval_assign_stbid_chan	./v_trch.c	/^static void vec_eval_assign_stbid_chan(struct chanrec_t *chanp)$/;"	f	file:	signature:(struct chanrec_t *chanp)
vec_merge_rm_iconn_npps	./v_prp.c	/^static int32 vec_merge_rm_iconn_npps(int32 num_npps)$/;"	f	file:	signature:(int32 num_npps)
vec_scalared	./v.h	/^ unsigned vec_scalared : 1;   \/* wire is scalared (bit by bit, T if scalar) *\/$/;"	m	struct:net_t	access:public
vec_transtore_trmsg	./v_trch.c	/^static void vec_transtore_trmsg(struct net_t *np, int32 chg, word32 *ap,$/;"	f	file:	signature:(struct net_t *np, int32 chg, word32 *ap, word32 *bp)
vedges	./v.h	/^ struct edge_t *vedges;       \/* ptr to adjacency list for this node *\/$/;"	m	struct:vtx_t	typeref:struct:vtx_t::edge_t	access:public
ver_rint_	./cvmacros.h	410;"	d
ver_rword	./cvmacros.h	412;"	d
ver_side_svtyp	./v.h	/^ unsigned ver_side_svtyp : 8; \/* Ver side SV type constant from imp\/exp decl *\/$/;"	m	struct:dpiarg_t	access:public
version	./fstapi.c	/^char version[FST_HDR_SIM_VERSION_SIZE + 1];$/;"	m	struct:fstReaderContext	file:	access:public
vgetstr	./v_ms.c	/^static int32 vgetstr(FILE *f)$/;"	f	file:	signature:(FILE *f)
vi1	./v.h	/^ int32 vi1;                   \/* bit index for vec wire (-1 for all of vec) *\/ $/;"	m	struct:bidvtx_t	access:public
vi1	./v.h	/^ int32 vi1;                   \/* bit index for vector wire *\/$/;"	m	struct:vtx_t	access:public
vi_s	./v.h	/^ FILE *vi_s;$/;"	m	struct:vinstk_t	access:public
via_dir	./igen.h	/^ unsigned via_dir : 8;$/;"	m	struct:avlnode_t	access:public
via_dir	./v.h	/^ unsigned via_dir : 8;$/;"	m	struct:tnode_t	access:public
vichp	./v.h	/^ char *vichp;                 \/* macro string current char *\/$/;"	m	struct:vinstk_t	access:public
vichp_beg	./v.h	/^ char *vichp_beg;             \/* beginning of macro string *\/  $/;"	m	struct:vinstk_t	access:public
vichplen	./v.h	/^ int32 vichplen;              \/* if not -1, len + 1 must be freed *\/$/;"	m	struct:vinstk_t	access:public
vifnam_ind	./v.h	/^ word32 vifnam_ind;$/;"	m	struct:vinstk_t	access:public
vilin_cnt	./v.h	/^ int32 vilin_cnt;$/;"	m	struct:vinstk_t	access:public
vinstk_t	./v.h	/^struct vinstk_t {$/;"	s
vinstk_t::vi_s	./v.h	/^ FILE *vi_s;$/;"	m	struct:vinstk_t	access:public
vinstk_t::vichp	./v.h	/^ char *vichp;                 \/* macro string current char *\/$/;"	m	struct:vinstk_t	access:public
vinstk_t::vichp_beg	./v.h	/^ char *vichp_beg;             \/* beginning of macro string *\/  $/;"	m	struct:vinstk_t	access:public
vinstk_t::vichplen	./v.h	/^ int32 vichplen;              \/* if not -1, len + 1 must be freed *\/$/;"	m	struct:vinstk_t	access:public
vinstk_t::vifnam_ind	./v.h	/^ word32 vifnam_ind;$/;"	m	struct:vinstk_t	access:public
vinstk_t::vilin_cnt	./v.h	/^ int32 vilin_cnt;$/;"	m	struct:vinstk_t	access:public
vis_nonnl_white_	./cvmacros.h	518;"	d
vis_white_	./cvmacros.h	515;"	d
vivxp	./v.h	/^ struct vtx_t *vivxp;         \/* vertex *\/$/;"	m	struct:vbinfo_t	typeref:struct:vbinfo_t::vtx_t	access:public
vkeywds	./v_ms.c	/^static struct vkeywds_t vkeywds[] = {$/;"	v	typeref:struct:vkeywds_t	file:
vkeywds_t	./v_ms.c	/^struct vkeywds_t {$/;"	s	file:
vkeywds_t::vknam	./v_ms.c	/^ char *vknam;$/;"	m	struct:vkeywds_t	file:	access:public
vkeywds_t::vknum	./v_ms.c	/^ int32 vknum;$/;"	m	struct:vkeywds_t	file:	access:public
vknam	./v_ms.c	/^ char *vknam;$/;"	m	struct:vkeywds_t	file:	access:public
vknum	./v_ms.c	/^ int32 vknum;$/;"	m	struct:vkeywds_t	file:	access:public
vnp	./v.h	/^ struct net_t *vnp;           \/* net in channel *\/$/;"	m	struct:bidvtx_t	typeref:struct:bidvtx_t::net_t	access:public
vnp	./v.h	/^ struct net_t *vnp;           \/* net in channel *\/$/;"	m	struct:vtx_t	typeref:struct:vtx_t::net_t	access:public
vnum_toowide	./v_ms.c	/^static int32 vnum_toowide(word32 *wp, int32 srcblen)$/;"	f	file:	signature:(word32 *wp, int32 srcblen)
voverwhite	./v_ms.c	/^static int32 voverwhite(FILE *f, int32 c)$/;"	f	file:	signature:(FILE *f, int32 c)
vpi_chk_error	./v_vpi3.c	/^extern int32 vpi_chk_error(p_vpi_error_info error_info_p)$/;"	f	signature:(p_vpi_error_info error_info_p)
vpi_compare_objects	./v_vpi3.c	/^extern PLI_INT32 vpi_compare_objects(vpiHandle object1, vpiHandle object2)$/;"	f	signature:(vpiHandle object1, vpiHandle object2)
vpi_control	./v_vpi3.c	/^extern PLI_INT32 vpi_control(PLI_INT32 operation, ...)$/;"	f	signature:(PLI_INT32 operation, ...)
vpi_copy_object	./v_vpi3.c	/^extern vpiHandle vpi_copy_object(vpiHandle object)$/;"	f	signature:(vpiHandle object)
vpi_delay_all0s	./v_sdf.c	/^static int32 vpi_delay_all0s(p_vpi_delay delay_p)$/;"	f	file:	signature:(p_vpi_delay delay_p)
vpi_drv_t	./v.h	/^struct vpi_drv_t {$/;"	s
vpi_drv_t::putv_drv_tedlst	./v.h	/^ struct dltevlst_t **putv_drv_tedlst;\/* per inst per bit pending ev. lists *\/$/;"	m	struct:vpi_drv_t	typeref:struct:vpi_drv_t::dltevlst_t	access:public
vpi_drv_t::softforce_putv_tedlst	./v.h	/^ struct dltevlst_t **softforce_putv_tedlst; \/* per inst\/bit pend ev lists *\/$/;"	m	struct:vpi_drv_t	typeref:struct:vpi_drv_t::dltevlst_t	access:public
vpi_drv_t::vpi_drvwp	./v.h	/^ union pck_u vpi_drvwp;       \/* per inst. net wide driver values *\/$/;"	m	struct:vpi_drv_t	typeref:union:vpi_drv_t::pck_u	access:public
vpi_drv_t::vpi_hasdrv	./v.h	/^ union pck_u vpi_hasdrv;      \/* per inst. net wide driver added table *\/$/;"	m	struct:vpi_drv_t	typeref:union:vpi_drv_t::pck_u	access:public
vpi_drvwp	./v.h	/^ union pck_u vpi_drvwp;       \/* per inst. net wide driver values *\/$/;"	m	struct:vpi_drv_t	typeref:union:vpi_drv_t::pck_u	access:public
vpi_flush	./v_vpi3.c	/^extern PLI_INT32 vpi_flush(void)$/;"	f	signature:(void)
vpi_free_object	./v_vpi3.c	/^extern PLI_INT32 vpi_free_object(vpiHandle object)$/;"	f	signature:(vpiHandle object)
vpi_get	./v_vpi2.c	/^extern int32 vpi_get(PLI_INT32 property, vpiHandle object)$/;"	f	signature:(PLI_INT32 property, vpiHandle object)
vpi_get_cb_info	./v_vpi.c	/^extern void vpi_get_cb_info(vpiHandle object, p_cb_data cb_data_p)$/;"	f	signature:(vpiHandle object, p_cb_data cb_data_p)
vpi_get_data	./v_vpi3.c	/^extern PLI_INT32 vpi_get_data(PLI_INT32 id, PLI_BYTE8 *dataLoc,$/;"	f	signature:(PLI_INT32 id, PLI_BYTE8 *dataLoc, PLI_INT32 numOfBytes)
vpi_get_delays	./v_vpi3.c	/^extern void vpi_get_delays(vpiHandle object, p_vpi_delay delay_p)$/;"	f	signature:(vpiHandle object, p_vpi_delay delay_p)
vpi_get_str	./v_vpi2.c	/^extern char *vpi_get_str(PLI_INT32 property, vpiHandle object)$/;"	f	signature:(PLI_INT32 property, vpiHandle object)
vpi_get_systf_info	./v_vpi.c	/^extern void vpi_get_systf_info(vpiHandle object,$/;"	f	signature:(vpiHandle object, p_vpi_systf_data systf_data_p)
vpi_get_time	./v_vpi3.c	/^extern void vpi_get_time(vpiHandle object, p_vpi_time time_p)$/;"	f	signature:(vpiHandle object, p_vpi_time time_p)
vpi_get_userdata	./v_vpi3.c	/^extern void *vpi_get_userdata(vpiHandle obj)$/;"	f	signature:(vpiHandle obj)
vpi_get_value	./v_vpi3.c	/^extern void vpi_get_value(vpiHandle expr, p_vpi_value value_p)$/;"	f	signature:(vpiHandle expr, p_vpi_value value_p)
vpi_get_vlog_info	./v_vpi3.c	/^extern PLI_INT32 vpi_get_vlog_info(p_vpi_vlog_info vlog_info_p)$/;"	f	signature:(p_vpi_vlog_info vlog_info_p)
vpi_handle	./v_vpi.c	/^extern vpiHandle vpi_handle(PLI_INT32 type, vpiHandle referenceHandle)$/;"	f	signature:(PLI_INT32 type, vpiHandle referenceHandle)
vpi_handle_by_index	./v_vpi2.c	/^extern vpiHandle vpi_handle_by_index(vpiHandle object, int32 indx)$/;"	f	signature:(vpiHandle object, int32 indx)
vpi_handle_by_multi_index	./v_vpi2.c	/^extern vpiHandle vpi_handle_by_multi_index(vpiHandle obj, PLI_INT32 num_index,$/;"	f	signature:(vpiHandle obj, PLI_INT32 num_index, PLI_INT32 *index_array)
vpi_handle_by_name	./v_vpi2.c	/^extern vpiHandle vpi_handle_by_name(char *name, vpiHandle scope)$/;"	f	signature:(char *name, vpiHandle scope)
vpi_handle_multi	./v_vpi.c	/^extern vpiHandle vpi_handle_multi(PLI_INT32 type, vpiHandle refHandle1,$/;"	f	signature:(PLI_INT32 type, vpiHandle refHandle1, vpiHandle refHandle2, ...)
vpi_hasdrv	./v.h	/^ union pck_u vpi_hasdrv;      \/* per inst. net wide driver added table *\/$/;"	m	struct:vpi_drv_t	typeref:union:vpi_drv_t::pck_u	access:public
vpi_iterate	./v_vpi.c	/^extern vpiHandle vpi_iterate(PLI_INT32 itype, vpiHandle referenceHandle)$/;"	f	signature:(PLI_INT32 itype, vpiHandle referenceHandle)
vpi_mcd_close	./v_vpi3.c	/^extern PLI_UINT32 vpi_mcd_close(PLI_UINT32 mcd)$/;"	f	signature:(PLI_UINT32 mcd)
vpi_mcd_flush	./v_vpi3.c	/^extern PLI_INT32 vpi_mcd_flush(PLI_UINT32 mcd)$/;"	f	signature:(PLI_UINT32 mcd)
vpi_mcd_name	./v_vpi3.c	/^extern PLI_BYTE8 *vpi_mcd_name(PLI_UINT32 mcd)$/;"	f	signature:(PLI_UINT32 mcd)
vpi_mcd_open	./v_vpi3.c	/^extern PLI_UINT32 vpi_mcd_open(PLI_BYTE8 *filename)$/;"	f	signature:(PLI_BYTE8 *filename)
vpi_mcd_printf	./v_vpi3.c	/^extern PLI_INT32 vpi_mcd_printf(PLI_UINT32 mcd, PLI_BYTE8 *format, ...)$/;"	f	signature:(PLI_UINT32 mcd, PLI_BYTE8 *format, ...)
vpi_mcd_vprintf	./v_vpi3.c	/^extern PLI_INT32 vpi_mcd_vprintf(PLI_UINT32 mcd, PLI_BYTE8 *format,$/;"	f	signature:(PLI_UINT32 mcd, PLI_BYTE8 *format, va_list ap)
vpi_ndrvs	./v.h	/^ struct vpi_drv_t **vpi_ndrvs;\/* ptr to table of ptrs to drivers *\/$/;"	m	struct:net_t	typeref:struct:net_t::vpi_drv_t	access:public
vpi_onfront	./v.h	/^ unsigned vpi_onfront : 1;    \/* T => cb sim time start, add on fut. front *\/$/;"	m	struct:tev_t	access:public
vpi_printf	./v_vpi3.c	/^extern PLI_INT32 vpi_printf(PLI_BYTE8 *format, ...)$/;"	f	signature:(PLI_BYTE8 *format, ...)
vpi_put_data	./v_vpi3.c	/^extern PLI_INT32 vpi_put_data(PLI_INT32 id, PLI_BYTE8 *dataLoc,$/;"	f	signature:(PLI_INT32 id, PLI_BYTE8 *dataLoc, PLI_INT32 numOfBytes)
vpi_put_delays	./v_vpi3.c	/^extern void vpi_put_delays(vpiHandle object, p_vpi_delay delay_p)$/;"	f	signature:(vpiHandle object, p_vpi_delay delay_p)
vpi_put_userdata	./v_vpi3.c	/^extern PLI_INT32 vpi_put_userdata (vpiHandle obj, void *userdata) $/;"	f	signature:(vpiHandle obj, void *userdata)
vpi_put_value	./v_vpi3.c	/^extern vpiHandle vpi_put_value(vpiHandle object, p_vpi_value value_p, $/;"	f	signature:(vpiHandle object, p_vpi_value value_p, p_vpi_time time_p, PLI_INT32 flags)
vpi_register_cb	./v_vpi.c	/^extern vpiHandle vpi_register_cb(p_cb_data cb_data_p)$/;"	f	signature:(p_cb_data cb_data_p)
vpi_register_systf	./v_vpi.c	/^extern vpiHandle vpi_register_systf(p_vpi_systf_data systf_data_p)$/;"	f	signature:(p_vpi_systf_data systf_data_p)
vpi_regwir_putv	./v.h	/^ unsigned vpi_regwir_putv : 1;\/* T => putv to reg\/wire soft force *\/$/;"	m	struct:tev_t	access:public
vpi_remove_cb	./v_vpi.c	/^extern PLI_INT32 vpi_remove_cb(vpiHandle cb_obj)$/;"	f	signature:(vpiHandle cb_obj)
vpi_reschd	./v.h	/^ unsigned vpi_reschd : 1;     \/* T => vpi_ time cb moves to other slot part *\/$/;"	m	struct:tev_t	access:public
vpi_rout	./v.h	/^ void (*vpi_rout)(void);$/;"	m	union:dynlb_u	access:public
vpi_scan	./v_vpi2.c	/^extern vpiHandle vpi_scan(vpiHandle iterator)$/;"	f	signature:(vpiHandle iterator)
vpi_sysf_datap	./v.h	/^ void *vpi_sysf_datap;        \/* for vpi_ sysf get\/put data routine *\/$/;"	m	union:sz_u	access:public
vpi_syst_datap	./v.h	/^ void *vpi_syst_datap;$/;"	m	union:tkcaux_u	access:public
vpi_sytfdat	./v.h	/^ void *vpi_sytfdat;$/;"	m	struct:systftab_t	access:public
vpi_to_acc	./v_acc.c	/^static struct vpi_to_acc_t vpi_to_acc[] = {$/;"	v	typeref:struct:vpi_to_acc_t	file:
vpi_to_acc	./v_acc.c	/^static struct vpi_to_acc_t vpi_to_acc[];$/;"	v	typeref:struct:vpi_to_acc_t	file:
vpi_to_acc_t	./v_acc.c	/^struct vpi_to_acc_t {$/;"	s	file:
vpi_to_acc_t::acc_otyp	./v_acc.c	/^ int32 acc_otyp;$/;"	m	struct:vpi_to_acc_t	file:	access:public
vpi_to_acc_t::vpiotyp	./v_acc.c	/^ int32 vpiotyp;$/;"	m	struct:vpi_to_acc_t	file:	access:public
vpi_vprintf	./v_vpi3.c	/^extern int32 vpi_vprintf(char *format, va_list ap)$/;"	f	signature:(char *format, va_list ap)
vpihp	./v.h	/^ struct h_t *vpihp;           \/* for vpi_ added, the assoc. handle *\/$/;"	m	union:np_u	typeref:struct:np_u::h_t	access:public
vpiobjnam	./v.h	/^ char *vpiobjnam;$/;"	m	struct:onamvpi_t	access:public
vpiopchar	./v.h	/^ char *vpiopchar;             \/* operator character (such as +) *\/$/;"	m	struct:opnamvpi_t	access:public
vpiopnam	./v.h	/^ char *vpiopnam;$/;"	m	struct:opnamvpi_t	access:public
vpioptyp	./v.h	/^ int32 vpioptyp;              \/* redundant value same as op constant ind *\/$/;"	m	struct:opnamvpi_t	access:public
vpiotyp	./v.h	/^ word32 vpiotyp;              \/* redundant value same as obj constant ind *\/$/;"	m	struct:onamvpi_t	access:public
vpiotyp	./v_acc.c	/^ int32 vpiotyp;$/;"	m	struct:vpi_to_acc_t	file:	access:public
vpipropnam	./v.h	/^ char *vpipropnam;$/;"	m	struct:pnamvpi_t	access:public
vpiproptyp	./v.h	/^ int32 vpiproptyp;            \/* redundant value same as prop constant ind *\/$/;"	m	struct:pnamvpi_t	access:public
vpistfnxt	./v.h	/^ struct vpisystf_t *vpistfnxt; $/;"	m	struct:vpisystf_t	typeref:struct:vpisystf_t::vpisystf_t	access:public
vpisystf_t	./v.h	/^struct vpisystf_t {$/;"	s
vpisystf_t::curmdp	./v.h	/^ struct mod_t *curmdp;        \/* ptr. to current mod source line of call in *\/$/;"	m	struct:vpisystf_t	typeref:struct:vpisystf_t::mod_t	access:public
vpisystf_t::curtskp	./v.h	/^ struct task_t *curtskp;      \/* ptr. to current task source line of call in *\/$/;"	m	struct:vpisystf_t	typeref:struct:vpisystf_t::task_t	access:public
vpisystf_t::is_sysfunc	./v.h	/^ unsigned is_sysfunc : 1;     \/* t +> vpi_ systf func *\/$/;"	m	struct:vpisystf_t	access:public
vpisystf_t::vpistfnxt	./v.h	/^ struct vpisystf_t *vpistfnxt; $/;"	m	struct:vpisystf_t	typeref:struct:vpisystf_t::vpisystf_t	access:public
vpisystf_t::vstffnam_ind	./v.h	/^ unsigned vstffnam_ind : 16;$/;"	m	struct:vpisystf_t	access:public
vpisystf_t::vstflin_cnt	./v.h	/^ int32 vstflin_cnt;$/;"	m	struct:vpisystf_t	access:public
vpisystf_t::vsystfu	./v.h	/^ union vsystf_u vsystfu;      \/* ptr to callx or sys task stmt *\/ $/;"	m	struct:vpisystf_t	typeref:union:vpisystf_t::vsystf_u	access:public
vstffnam_ind	./v.h	/^ unsigned vstffnam_ind : 16;$/;"	m	struct:vpisystf_t	access:public
vstflin_cnt	./v.h	/^ int32 vstflin_cnt;$/;"	m	struct:vpisystf_t	access:public
vstr_to_cstr	./v_cnv.c	/^static void vstr_to_cstr(char *vstr, int32 blen, int32 space_0,$/;"	f	file:	signature:(char *vstr, int32 blen, int32 space_0, int32 nd_quotes, int32 esc_esc)
vsystasks	./cvc.c	/^static struct systsk_t vsystasks[] = {$/;"	v	typeref:struct:systsk_t	file:
vsystf_u	./v.h	/^union vsystf_u {$/;"	u
vsystf_u::sysfcallx	./v.h	/^ struct expr_t *sysfcallx;    \/* if systf fcall, vpi_ systf call expr. *\/$/;"	m	union:vsystf_u	typeref:struct:vsystf_u::expr_t	access:public
vsystf_u::syststp	./v.h	/^ struct st_t *syststp;        \/* stmt vpi_ systf call or task enable in *\/$/;"	m	union:vsystf_u	typeref:struct:vsystf_u::st_t	access:public
vsystfu	./v.h	/^ union vsystf_u vsystfu;      \/* ptr to callx or sys task stmt *\/ $/;"	m	struct:vpisystf_t	typeref:union:vpisystf_t::vsystf_u	access:public
vtx_chged	./v.h	/^ unsigned vtx_chged : 1;      \/* T => vertex changes - when done store *\/$/;"	m	struct:vtx_t	access:public
vtx_forced	./v.h	/^ unsigned vtx_forced : 1;     \/* T => vertex is forced *\/$/;"	m	struct:vtx_t	access:public
vtx_in_vicinity	./v.h	/^ unsigned vtx_in_vicinity : 1;\/* T => vertex already in vincinity *\/$/;"	m	struct:vtx_t	access:public
vtx_itp	./v.h	/^ struct itree_t *vtx_itp;$/;"	m	struct:vtxlst_t	typeref:struct:vtxlst_t::itree_t	access:public
vtx_mark	./v.h	/^ unsigned vtx_mark : 1;       \/* mark bit used for cutting cycles *\/$/;"	m	struct:vtx_t	access:public
vtx_mark2	./v.h	/^ unsigned vtx_mark2 : 1;      \/* mark bit used for turning off marks *\/$/;"	m	struct:vtx_t	access:public
vtx_supply	./v.h	/^ unsigned vtx_supply : 1;     \/* T => vertex hard drivers\/decl supply *\/ $/;"	m	struct:vtx_t	access:public
vtx_t	./v.h	/^struct vtx_t {$/;"	s
vtx_t::nchgp	./v.h	/^ struct nchglst_t *nchgp;     \/* static net change for this vertex *\/$/;"	m	struct:vtx_t	typeref:struct:vtx_t::nchglst_t	access:public
vtx_t::new_vtxval	./v.h	/^ unsigned new_vtxval : 8;     \/* for tran chan, new value *\/$/;"	m	struct:vtx_t	access:public
vtx_t::old_vtxval	./v.h	/^ unsigned old_vtxval : 8;     \/* value at start of tran relax *\/$/;"	m	struct:vtx_t	access:public
vtx_t::vedges	./v.h	/^ struct edge_t *vedges;       \/* ptr to adjacency list for this node *\/$/;"	m	struct:vtx_t	typeref:struct:vtx_t::edge_t	access:public
vtx_t::vi1	./v.h	/^ int32 vi1;                   \/* bit index for vector wire *\/$/;"	m	struct:vtx_t	access:public
vtx_t::vnp	./v.h	/^ struct net_t *vnp;           \/* net in channel *\/$/;"	m	struct:vtx_t	typeref:struct:vtx_t::net_t	access:public
vtx_t::vtx_chged	./v.h	/^ unsigned vtx_chged : 1;      \/* T => vertex changes - when done store *\/$/;"	m	struct:vtx_t	access:public
vtx_t::vtx_forced	./v.h	/^ unsigned vtx_forced : 1;     \/* T => vertex is forced *\/$/;"	m	struct:vtx_t	access:public
vtx_t::vtx_in_vicinity	./v.h	/^ unsigned vtx_in_vicinity : 1;\/* T => vertex already in vincinity *\/$/;"	m	struct:vtx_t	access:public
vtx_t::vtx_mark	./v.h	/^ unsigned vtx_mark : 1;       \/* mark bit used for cutting cycles *\/$/;"	m	struct:vtx_t	access:public
vtx_t::vtx_mark2	./v.h	/^ unsigned vtx_mark2 : 1;      \/* mark bit used for turning off marks *\/$/;"	m	struct:vtx_t	access:public
vtx_t::vtx_supply	./v.h	/^ unsigned vtx_supply : 1;     \/* T => vertex hard drivers\/decl supply *\/ $/;"	m	struct:vtx_t	access:public
vtxlst_t	./v.h	/^struct vtxlst_t { $/;"	s
vtxlst_t::vtx_itp	./v.h	/^ struct itree_t *vtx_itp;$/;"	m	struct:vtxlst_t	typeref:struct:vtxlst_t::itree_t	access:public
vtxlst_t::vtxnxt	./v.h	/^ struct vtxlst_t *vtxnxt;$/;"	m	struct:vtxlst_t	typeref:struct:vtxlst_t::vtxlst_t	access:public
vtxlst_t::vtxp	./v.h	/^ struct vtx_t *vtxp;$/;"	m	struct:vtxlst_t	typeref:struct:vtxlst_t::vtx_t	access:public
vtxnxt	./v.h	/^ struct vtxlst_t *vtxnxt;$/;"	m	struct:vtxlst_t	typeref:struct:vtxlst_t::vtxlst_t	access:public
vtxp	./v.h	/^ struct vtx_t *vtxp;$/;"	m	struct:vtxlst_t	typeref:struct:vtxlst_t::vtx_t	access:public
vtxs_same_inst	./v_trch.c	/^static int32 vtxs_same_inst(struct bidvtx_t *vtxp1, struct bidvtx_t *vtxp2)$/;"	f	file:	signature:(struct bidvtx_t *vtxp1, struct bidvtx_t *vtxp2)
vval_hasx	./v_cnv.c	/^static int32 vval_hasx(word32 *ap, word32 *bp, int32 blen)$/;"	f	file:	signature:(word32 *ap, word32 *bp, int32 blen)
vval_is0_	./cvmacros.h	469;"	d
vydirpth	./v.h	/^  char *vydirpth;             \/* for -y directory, directory path *\/$/;"	m	union:vylib_t::__anon17	access:public
vyfnam	./v.h	/^  char *vyfnam;               \/* file name *\/ $/;"	m	union:vylib_t::__anon17	access:public
vyfnam_ind	./v.h	/^ unsigned vyfnam_ind : 16;    \/* for rescanning file ind or num dir files *\/$/;"	m	struct:vylib_t	access:public
vylib_t	./v.h	/^struct vylib_t {$/;"	s
vylib_t::__anon17::vydirpth	./v.h	/^  char *vydirpth;             \/* for -y directory, directory path *\/$/;"	m	union:vylib_t::__anon17	access:public
vylib_t::__anon17::vyfnam	./v.h	/^  char *vyfnam;               \/* file name *\/ $/;"	m	union:vylib_t::__anon17	access:public
vylib_t::vyfnam_ind	./v.h	/^ unsigned vyfnam_ind : 16;    \/* for rescanning file ind or num dir files *\/$/;"	m	struct:vylib_t	access:public
vylib_t::vynxt	./v.h	/^ struct vylib_t *vynxt;$/;"	m	struct:vylib_t	typeref:struct:vylib_t::vylib_t	access:public
vylib_t::vytyp	./v.h	/^ unsigned vytyp : 8;          \/* 'v' for -v andd 'y' for -y *\/$/;"	m	struct:vylib_t	access:public
vylib_t::vyu	./v.h	/^ } vyu;$/;"	m	struct:vylib_t	typeref:union:vylib_t::__anon17	access:public
vylib_t::yfiles	./v.h	/^ struct mydir_t *yfiles;      \/* for -y header of file list *\/$/;"	m	struct:vylib_t	typeref:struct:vylib_t::mydir_t	access:public
vynxt	./v.h	/^ struct vylib_t *vynxt;$/;"	m	struct:vylib_t	typeref:struct:vylib_t::vylib_t	access:public
vytyp	./v.h	/^ unsigned vytyp : 8;          \/* 'v' for -v andd 'y' for -y *\/$/;"	m	struct:vylib_t	access:public
vyu	./v.h	/^ } vyu;$/;"	m	struct:vylib_t	typeref:union:vylib_t::__anon17	access:public
w64_u	./v.h	/^} w64_u;$/;"	t	typeref:union:__anon11
w64_u	./v.h	/^} w64_u;$/;"	t	typeref:union:__anon14
w64v	./v.h	/^ word64 w64v; $/;"	m	union:__anon11	access:public
w64v	./v.h	/^ word64 w64v; $/;"	m	union:__anon14	access:public
w_u	./v.h	/^ struct { word32 high; word32 low; } w_u;$/;"	m	union:__anon11	typeref:struct:__anon11::__anon12	access:public
w_u	./v.h	/^ struct { word32 high; word32 low; } w_u;$/;"	m	union:__anon14	typeref:struct:__anon14::__anon15	access:public
w_u	./v.h	/^ struct { word32 low; word32 high; } w_u;$/;"	m	union:__anon11	typeref:struct:__anon11::__anon13	access:public
w_u	./v.h	/^ struct { word32 low; word32 high; } w_u;$/;"	m	union:__anon14	typeref:struct:__anon14::__anon16	access:public
wait_dctp	./v.h	/^ struct delctrl_t *wait_dctp;$/;"	m	struct:wait_t	typeref:struct:wait_t::delctrl_t	access:public
wait_t	./v.h	/^struct wait_t { $/;"	s
wait_t::lpst	./v.h	/^ struct st_t *lpst;$/;"	m	struct:wait_t	typeref:struct:wait_t::st_t	access:public
wait_t::lpx	./v.h	/^ struct expr_t *lpx;$/;"	m	struct:wait_t	typeref:struct:wait_t::expr_t	access:public
wait_t::wait_dctp	./v.h	/^ struct delctrl_t *wait_dctp;$/;"	m	struct:wait_t	typeref:struct:wait_t::delctrl_t	access:public
warnsup_t	./cvc.c	/^struct warnsup_t {$/;"	s	file:
warnsup_t::rngbeg	./cvc.c	/^  int32 rngbeg;$/;"	m	struct:warnsup_t	file:	access:public
warnsup_t::rngend	./cvc.c	/^  int32 rngend;$/;"	m	struct:warnsup_t	file:	access:public
warnsuptab	./cvc.c	/^const struct warnsup_t warnsuptab[] = {$/;"	v	typeref:struct:warnsup_t
wcard_t	./v.h	/^struct wcard_t {$/;"	s
wcard_t::wcchar	./v.h	/^ char wcchar;                 \/* wild card ? or b *\/$/;"	m	struct:wcard_t	access:public
wcard_t::wcinum	./v.h	/^ int32 wcinum;                \/* in port (also state) numb for wild card *\/$/;"	m	struct:wcard_t	access:public
wcchar	./v.h	/^ char wcchar;                 \/* wild card ? or b *\/$/;"	m	struct:wcard_t	access:public
wcinum	./v.h	/^ int32 wcinum;                \/* in port (also state) numb for wild card *\/$/;"	m	struct:wcard_t	access:public
wev_ndx	./v.h	/^ int32 wev_ndx;               \/* wire evnt ndx need by asmlnk tev write proc *\/$/;"	m	struct:ctev_t	access:public
whatis_msg	./v_dbg.c	/^static char *whatis_msg[] = { $/;"	v	file:
where_msg	./v_dbg.c	/^static char *where_msg[] = { $/;"	v	file:
while_t	./v.h	/^struct while_t {$/;"	s
while_t::lpst	./v.h	/^ struct st_t *lpst;$/;"	m	struct:while_t	typeref:struct:while_t::st_t	access:public
while_t::lpx	./v.h	/^ struct expr_t *lpx;$/;"	m	struct:while_t	typeref:struct:while_t::expr_t	access:public
wide_binop	./v_bbgen3.c	/^static int32 wide_binop(int32 asl_rout_num, int32 op1_ti, int32 op2_ti,$/;"	f	file:	signature:(int32 asl_rout_num, int32 op1_ti, int32 op2_ti, int32 blen, int32 len)
wide_shift_binop	./v_bbgen3.c	/^static int32 wide_shift_binop(int32 asl_rout_num, int32 op1_ti, int32 op2_ti,$/;"	f	file:	signature:(int32 asl_rout_num, int32 op1_ti, int32 op2_ti, int32 blen)
wide_strtoverdec	./v_ms.c	/^static void wide_strtoverdec(int32 blen)$/;"	f	file:	signature:(int32 blen)
wide_trk_valp_any1_con	./v_bbopt.c	/^static int32 wide_trk_valp_any1_con(int32 one_def, int32 *trk_state_vec,$/;"	f	file:	signature:(int32 one_def, int32 *trk_state_vec, word32 *valp, int32 arg_wlen)
wide_unop	./v_bbgen3.c	/^static void wide_unop(int32 iop, int32 res_ti, int32 op1_ti, int32 blen)$/;"	f	file:	signature:(int32 iop, int32 res_ti, int32 op1_ti, int32 blen)
widegate_ld_bit	./v_aslib.c	/^static word32 widegate_ld_bit(word32 *gsp, int32 gwid, int32 biti)$/;"	f	file:	signature:(word32 *gsp, int32 gwid, int32 biti)
widegate_ld_bit	./v_ex4.c	/^static word32 widegate_ld_bit(word32 *gsp, int32 gwid, int32 biti)$/;"	f	file:	signature:(word32 *gsp, int32 gwid, int32 biti)
widen_val	./v_ms.c	/^static void widen_val(word32 *vwp, int32 lngblen, int32 shblen, word32 highval)$/;"	f	file:	signature:(word32 *vwp, int32 lngblen, int32 shblen, word32 highval)
wildcard	./v.h	/^ unsigned wildcard: 2;        \/* T=> if it contains a wild char, *, ? or ... *\/$/;"	m	struct:xpndfile_t	access:public
wire_fgp	./v.h	/^ struct flowg_t *wire_fgp; \/* the process wire flow graph *\/$/;"	m	struct:net_chg_t	typeref:struct:net_chg_t::flowg_t	access:public
wire_implied_driver	./v_prp.c	/^static int32 wire_implied_driver(struct net_t *np) $/;"	f	file:	signature:(struct net_t *np)
wire_vpi_force	./v_vpi3.c	/^static void wire_vpi_force(struct net_t *np, word32 *ap, word32 *bp, int32 ndx)$/;"	f	file:	signature:(struct net_t *np, word32 *ap, word32 *bp, int32 ndx)
wire_vpi_release	./v_vpi3.c	/^static void wire_vpi_release(struct net_t *np, int32 ndx)$/;"	f	file:	signature:(struct net_t *np, int32 ndx)
withPrefix	./lz4.c	/^typedef enum { noPrefix = 0, withPrefix = 1 } prefix64k_directive;$/;"	e	enum:__anon8	file:
wlen32_	./cvmacros.h	437;"	d
wlen_	./cvmacros.h	442;"	d
wlen_	./cvmacros.h	448;"	d
word128	./v.h	/^typedef unsigned long long word128;$/;"	t
word32	./v.h	/^typedef unsigned long word32;$/;"	t
word64	./v.h	/^typedef unsigned long long word64;$/;"	t
word64	./v.h	/^typedef unsigned long word64;$/;"	t
wp	./v.h	/^ word32 *wp;                  \/* for params work saved param val ptr *\/ $/;"	m	union:nqc_u	access:public
wp	./v.h	/^ word32 *wp;$/;"	m	union:pck_u	access:public
wr_1argdvhdr	./v_ex4.c	/^static void wr_1argdvhdr(struct mdvmast_t *mdvp)$/;"	f	file:	signature:(struct mdvmast_t *mdvp)
wr_1ev_trace	./v_dbg2.c	/^static void wr_1ev_trace(int32 i, struct tev_t *tevp)$/;"	f	file:	signature:(int32 i, struct tev_t *tevp)
wr_1inst_allports_dphdrs	./v_ex4.c	/^static void wr_1inst_allports_dphdrs(struct dp_fildesc_t *fdescp,$/;"	f	file:	signature:(struct dp_fildesc_t *fdescp, t_midat *idp)
wr_1inst_dp_scope_and_def	./v_ex4.c	/^static void wr_1inst_dp_scope_and_def(struct dp_fildesc_t *fdescp,$/;"	f	file:	signature:(struct dp_fildesc_t *fdescp, struct dpinstel_t *dpip)
wr_1inst_dvhdrs	./v_ex4.c	/^static void wr_1inst_dvhdrs(struct itree_t *itp)$/;"	f	file:	signature:(struct itree_t *itp)
wr_1net_tgldat	./v_cvr.c	/^static void wr_1net_tgldat(FILE *fp, struct itree_t *itp, char *rtpth,$/;"	f	file:	signature:(FILE *fp, struct itree_t *itp, char *rtpth, struct net_t *np)
wr_1subtree_allvars	./v_ex4.c	/^static void wr_1subtree_allvars(struct itree_t *itp, int32 level)$/;"	f	file:	signature:(struct itree_t *itp, int32 level)
wr_1vectored_dpdef	./v_ex4.c	/^static void wr_1vectored_dpdef(struct dp_fildesc_t *fdescp, struct net_t *np,$/;"	f	file:	signature:(struct dp_fildesc_t *fdescp, struct net_t *np, char *dvcod)
wr_1vectored_dvdef	./v_ex4.c	/^static void wr_1vectored_dvdef(struct net_t *np, char *dvcod, t_midat *idp,$/;"	f	file:	signature:(struct net_t *np, char *dvcod, t_midat *idp, int32 arr_ndx, int32 *mda_indices)
wr_1vectored_dvdef_array	./v_ex4.c	/^static void wr_1vectored_dvdef_array(struct net_t *np, struct itree_t *itp)$/;"	f	file:	signature:(struct net_t *np, struct itree_t *itp)
wr_dbg_hlpmsg	./v_dbg.c	/^static void wr_dbg_hlpmsg(char **dbgmsg)$/;"	f	file:	signature:(char **dbgmsg)
wr_dbg_lstofcmds	./v_dbg.c	/^static void wr_dbg_lstofcmds(struct namlst_t *cmdtab, int32 cmdnum)$/;"	f	file:	signature:(struct namlst_t *cmdtab, int32 cmdnum)
wr_dpihdrs	./v_dpi.c	/^static void wr_dpihdrs(void)$/;"	f	file:	signature:(void)
wr_fromtop_iscopeto	./v_ex4.c	/^static void wr_fromtop_iscopeto(struct itree_t *itp)$/;"	f	file:	signature:(struct itree_t *itp)
wr_fromtop_iscopeto_ports	./v_ex4.c	/^static void wr_fromtop_iscopeto_ports(struct dp_fildesc_t *fdescp,$/;"	f	file:	signature:(struct dp_fildesc_t *fdescp, t_midat *idp)
wr_ndisdel_err	./v_fx2.c	/^static void wr_ndisdel_err(struct expr_t *ndp, int32 iti, char *emsg)$/;"	f	file:	signature:(struct expr_t *ndp, int32 iti, char *emsg)
wr_tasks_dvhdrs	./v_ex4.c	/^static void wr_tasks_dvhdrs(struct itree_t *itp, struct symtab_t *sytp)$/;"	f	file:	signature:(struct itree_t *itp, struct symtab_t *sytp)
wr_totop_iscopeback	./v_ex4.c	/^static void wr_totop_iscopeback(struct itree_t *itp)$/;"	f	file:	signature:(struct itree_t *itp)
wr_totop_iscopeback_ports	./v_ex4.c	/^static void wr_totop_iscopeback_ports(struct dp_fildesc_t *fdescp,$/;"	f	file:	signature:(struct dp_fildesc_t *fdescp, t_midat *idp)
wr_tskscopeback	./v_ex4.c	/^static void wr_tskscopeback(struct symtab_t *sytp)$/;"	f	file:	signature:(struct symtab_t *sytp)
wr_tskscopeto	./v_ex4.c	/^static void wr_tskscopeto(struct symtab_t *sytp)$/;"	f	file:	signature:(struct symtab_t *sytp)
wrapper_type	./v.h	/^ unsigned wrapper_type : 3;   \/* type of generic event wrapper handle type *\/$/;"	m	struct:ctev_t	access:public
wrdmwlshift	./v_ex2.c	/^static void wrdmwlshift(word32 *wp, int32 kwrds, int32 lwlen)$/;"	f	file:	signature:(word32 *wp, int32 kwrds, int32 lwlen)
wrdmwrshift	./v_ex2.c	/^static void wrdmwrshift(word32 *wp, int32 kwrds, int32 lwlen)$/;"	f	file:	signature:(word32 *wp, int32 kwrds, int32 lwlen)
wrhelp	./cvc.c	/^static void wrhelp(void)$/;"	f	file:	signature:(void)
write_binary_file	./v_asmlnk.c	/^static void write_binary_file(char *fname, byte *str, int32 size)$/;"	f	file:	signature:(char *fname, byte *str, int32 size)
write_old_style_tgl_coverage_report	./v_cvr.c	/^static void write_old_style_tgl_coverage_report(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
write_tgldat_file	./v_cvr.c	/^static void write_tgldat_file(void)$/;"	f	file:	signature:(void)
write_toggle_coverage_report	./v_cvr.c	/^static void write_toggle_coverage_report(void)$/;"	f	file:	signature:(void)
writex_buf	./fstapi.c	/^unsigned char writex_buf[FST_WRITEX_MAX];$/;"	m	struct:fstReaderContext	file:	access:public
writex_fd	./fstapi.c	/^int writex_fd;$/;"	m	struct:fstReaderContext	file:	access:public
writex_pos	./fstapi.c	/^int writex_pos;$/;"	m	struct:fstReaderContext	file:	access:public
wrkval_grow	./v_vpi3.c	/^static void wrkval_grow(int32 nsize)$/;"	f	file:	signature:(int32 nsize)
wrong_nxtobj_error	./v_acc.c	/^static void wrong_nxtobj_error(char *nxtrtnam, int32 htyp, int32 ndacctyp)$/;"	f	file:	signature:(char *nxtrtnam, int32 htyp, int32 ndacctyp)
wschd_pbtevs	./v.h	/^ struct tev_t **wschd_pbtevs;  \/* any schd. event ndxes - indexed nwid*inst *\/$/;"	m	struct:rngdwir_t	typeref:struct:rngdwir_t::tev_t	access:public
x	./v.h	/^ struct expr_t *x;$/;"	m	union:l_u	typeref:struct:l_u::expr_t	access:public
x	./v.h	/^ struct expr_t *x;$/;"	m	union:r_u	typeref:struct:r_u::expr_t	access:public
x86_regno	./igen.h	/^ unsigned x86_regno : 6;      \/* the x86 regno this tmp lowers to *\/$/;"	m	struct:reg_alloc_info_t	access:public
x86_regno	./igen.h	/^ unsigned x86_regno : 6;      \/* the x86 regno this tmp lowers to *\/$/;"	m	struct:tn_t	access:public
x86_regno	./igen.h	/^ unsigned x86_regno : 6;      \/* x86 reg num if used *\/$/;"	m	struct:amode_t	access:public
x_entered	./v.h	/^ unsigned x_entered : 1;         \/* xprop has been entered *\/$/;"	m	struct:xprop_t	access:public
x_is2state	./v.h	/^ unsigned x_is2state : 1;     \/* T => can be evaled as 2 state (no b part) *\/$/;"	m	struct:expr_t	access:public
x_islhs	./v.h	/^ unsigned x_islhs : 1;        \/* T => expr. is lhs *\/$/;"	m	struct:expr_t	access:public
x_multfi	./v.h	/^ unsigned x_multfi : 1;       \/* T => expr has multi fan-in or stren wire *\/$/;"	m	struct:expr_t	access:public
x_stren	./v.h	/^ unsigned x_stren : 1;        \/* T => expr. is strength wire\/bs\/ps *\/$/;"	m	struct:expr_t	access:public
xbitmask_block1_set	./v.h	/^ word32 **xbitmask_block1_set;   \/* net mask for the first block *\/$/;"	m	struct:xprop_t	access:public
xbitmask_block2_set	./v.h	/^ word32 **xbitmask_block2_set;   \/* net mask for the second block *\/$/;"	m	struct:xprop_t	access:public
xblock	./v.h	/^ int32 xblock;                   \/* xblock 0 or 1 *\/$/;"	m	struct:xprop_t	access:public
xc_parent	./fstapi.c	/^struct fstWriterContext *xc_parent;$/;"	m	struct:fstWriterContext	typeref:struct:fstWriterContext::fstWriterContext	file:	access:public
xchg_stk	./v_ex2.c	/^static void xchg_stk(int32 xspi1, int32 xspi2)$/;"	f	file:	signature:(int32 xspi1, int32 xspi2)
xclen	./v.h	/^ int32 xclen;$/;"	m	union:sz_u	access:public
xedge_dce	./v.h	/^ unsigned xedge_dce : 1;        \/* T => is a dce xedge if stmt *\/$/;"	m	struct:if_t	access:public
xedge_nets	./v.h	/^ struct net_t **xedge_nets;      \/* xedge triggered event control - per inst *\/$/;"	m	struct:xprop_t	typeref:struct:xprop_t::net_t	access:public
xedge_to_vals	./v.h	/^ byte *xedge_to_vals;            \/* set to xedge value 0, 1, 2 (not set) *\/$/;"	m	struct:xprop_t	access:public
xevents	./v.h	/^ struct tev_t **xevents;         \/* store x triggered event controls *\/$/;"	m	struct:xprop_t	typeref:struct:xprop_t::tev_t	access:public
xform_tf_syst_enable	./v_prp2.c	/^static void xform_tf_syst_enable(struct st_t *nstp)$/;"	f	file:	signature:(struct st_t *nstp)
xfrec	./v.h	/^ struct tfrec_t *xfrec;$/;"	m	union:sz_u	typeref:struct:sz_u::tfrec_t	access:public
xget_insn_res_tni	./v_bbopt.c	/^static int32 xget_insn_res_tni(struct insn_t *ip) $/;"	f	file:	signature:(struct insn_t *ip)
xget_tnreg	./v_bbopt.c	/^static int32 xget_tnreg(struct amode_t *amp)$/;"	f	file:	signature:(struct amode_t *amp)
xhas_multconn_wire	./v_fx2.c	/^static int32 xhas_multconn_wire(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
xi	./v.h	/^ int32 xi; \/* for compile\/save changed to indices *\/$/;"	m	union:l_u	access:public
xldlnpp_t	./v.h	/^struct xldlnpp_t {$/;"	s
xldlnpp_t::xlitp	./v.h	/^ struct itree_t *xlitp;$/;"	m	struct:xldlnpp_t	typeref:struct:xldlnpp_t::itree_t	access:public
xldlnpp_t::xlnpp	./v.h	/^ struct net_pin_t *xlnpp;$/;"	m	struct:xldlnpp_t	typeref:struct:xldlnpp_t::net_pin_t	access:public
xldlnpp_t::xlnxt	./v.h	/^ struct xldlnpp_t *xlnxt;$/;"	m	struct:xldlnpp_t	typeref:struct:xldlnpp_t::xldlnpp_t	access:public
xldlvtx_t	./v.h	/^struct xldlvtx_t {$/;"	s
xldlvtx_t::dlbi	./v.h	/^ int32 dlbi;$/;"	m	struct:xldlvtx_t	access:public
xldlvtx_t::dlitp	./v.h	/^ struct itree_t *dlitp;$/;"	m	struct:xldlvtx_t	typeref:struct:xldlvtx_t::itree_t	access:public
xldlvtx_t::dlnp	./v.h	/^ struct net_t *dlnp;$/;"	m	struct:xldlvtx_t	typeref:struct:xldlvtx_t::net_t	access:public
xldrvld_to_netbit	./v_trch.c	/^static struct net_t *xldrvld_to_netbit(struct expr_t *xp,$/;"	f	file:	signature:(struct expr_t *xp, int32 fromr_bi, int32 *bi, struct itree_t *oside_itp)
xlitp	./v.h	/^ struct itree_t *xlitp;$/;"	m	struct:xldlnpp_t	typeref:struct:xldlnpp_t::itree_t	access:public
xlnpp	./v.h	/^ struct net_pin_t *xlnpp;$/;"	m	struct:xldlnpp_t	typeref:struct:xldlnpp_t::net_pin_t	access:public
xlnxt	./v.h	/^ struct xldlnpp_t *xlnxt;$/;"	m	struct:xldlnpp_t	typeref:struct:xldlnpp_t::xldlnpp_t	access:public
xmp_alt_cmpnam	./v.h	/^ char *xmp_alt_cmpnam;        \/* after gen, original name (mabye in gen blk) *\/$/;"	m	struct:xmrcmp_t	access:public
xmp_cmpnam	./v.h	/^ char *xmp_cmpnam;$/;"	m	struct:xmrcmp_t	access:public
xmp_contains_genblk	./v_genfx.c	/^static int32 xmp_contains_genblk(struct xmrcmp_t **xmrcmptab, int32 nxcmps)$/;"	f	file:	signature:(struct xmrcmp_t **xmrcmptab, int32 nxcmps)
xmp_err	./v.h	/^ unsigned xmp_err : 1;        \/* xmr cmp in tab, but had error grp removed *\/$/;"	m	struct:xmrcmp_t	access:public
xmp_in_gblkp	./v.h	/^ struct genblk_t *xmp_in_gblkp;$/;"	m	struct:xmrcmp_t	typeref:struct:xmrcmp_t::genblk_t	access:public
xmp_in_sytab	./v.h	/^ struct symtab_t *xmp_in_sytab;\/* sym tab this component in (modsyms for rt) *\/$/;"	m	struct:xmrcmp_t	typeref:struct:xmrcmp_t::symtab_t	access:public
xmp_is_rooted	./v.h	/^ unsigned xmp_is_rooted : 1;  \/* T component that is head is rooted *\/$/;"	m	struct:xmrcmp_t	access:public
xmp_nxtcmp_sytab	./v.h	/^ struct symtab_t *xmp_nxtcmp_sytab;\/* sym tab if exists down ncmp in *\/$/;"	m	struct:xmrcmp_t	typeref:struct:xmrcmp_t::symtab_t	access:public
xmp_petyp	./v.h	/^ unsigned xmp_petyp : 4;    $/;"	m	struct:xmrcmp_t	access:public
xmp_sel_ndp	./v.h	/^ struct expr_t *xmp_sel_ndp;  \/* if constant select, the select expr *\/$/;"	m	struct:xmrcmp_t	typeref:struct:xmrcmp_t::expr_t	access:public
xmp_syp	./v.h	/^ struct sy_t *xmp_syp;$/;"	m	struct:xmrcmp_t	typeref:struct:xmrcmp_t::sy_t	access:public
xmp_uprel_msym	./v.h	/^ struct sy_t *xmp_uprel_msym;  \/* uprel module symbol *\/$/;"	m	struct:xmrcmp_t	typeref:struct:xmrcmp_t::sy_t	access:public
xmp_upwards_rel	./v.h	/^ unsigned xmp_upwards_rel : 1;  \/* T => up rel form path - starts with mod *\/$/;"	m	struct:xmrcmp_t	access:public
xmr_linkon_dce	./v_prp2.c	/^static void xmr_linkon_dce(struct net_t *np, int32 biti, int32 bitj,$/;"	f	file:	signature:(struct net_t *np, int32 biti, int32 bitj, struct delctrl_t *dctp, int32 e_val, struct gref_t *grp)
xmrcmp_t	./v.h	/^struct xmrcmp_t {$/;"	s
xmrcmp_t::gcmp_ndp	./v.h	/^ struct expr_t *gcmp_ndp;     \/* from XMR parse expr, the XMR expr *\/$/;"	m	struct:xmrcmp_t	typeref:struct:xmrcmp_t::expr_t	access:public
xmrcmp_t::xmp_alt_cmpnam	./v.h	/^ char *xmp_alt_cmpnam;        \/* after gen, original name (mabye in gen blk) *\/$/;"	m	struct:xmrcmp_t	access:public
xmrcmp_t::xmp_cmpnam	./v.h	/^ char *xmp_cmpnam;$/;"	m	struct:xmrcmp_t	access:public
xmrcmp_t::xmp_err	./v.h	/^ unsigned xmp_err : 1;        \/* xmr cmp in tab, but had error grp removed *\/$/;"	m	struct:xmrcmp_t	access:public
xmrcmp_t::xmp_in_gblkp	./v.h	/^ struct genblk_t *xmp_in_gblkp;$/;"	m	struct:xmrcmp_t	typeref:struct:xmrcmp_t::genblk_t	access:public
xmrcmp_t::xmp_in_sytab	./v.h	/^ struct symtab_t *xmp_in_sytab;\/* sym tab this component in (modsyms for rt) *\/$/;"	m	struct:xmrcmp_t	typeref:struct:xmrcmp_t::symtab_t	access:public
xmrcmp_t::xmp_is_rooted	./v.h	/^ unsigned xmp_is_rooted : 1;  \/* T component that is head is rooted *\/$/;"	m	struct:xmrcmp_t	access:public
xmrcmp_t::xmp_nxtcmp_sytab	./v.h	/^ struct symtab_t *xmp_nxtcmp_sytab;\/* sym tab if exists down ncmp in *\/$/;"	m	struct:xmrcmp_t	typeref:struct:xmrcmp_t::symtab_t	access:public
xmrcmp_t::xmp_petyp	./v.h	/^ unsigned xmp_petyp : 4;    $/;"	m	struct:xmrcmp_t	access:public
xmrcmp_t::xmp_sel_ndp	./v.h	/^ struct expr_t *xmp_sel_ndp;  \/* if constant select, the select expr *\/$/;"	m	struct:xmrcmp_t	typeref:struct:xmrcmp_t::expr_t	access:public
xmrcmp_t::xmp_syp	./v.h	/^ struct sy_t *xmp_syp;$/;"	m	struct:xmrcmp_t	typeref:struct:xmrcmp_t::sy_t	access:public
xmrcmp_t::xmp_uprel_msym	./v.h	/^ struct sy_t *xmp_uprel_msym;  \/* uprel module symbol *\/$/;"	m	struct:xmrcmp_t	typeref:struct:xmrcmp_t::sy_t	access:public
xmrcmp_t::xmp_upwards_rel	./v.h	/^ unsigned xmp_upwards_rel : 1;  \/* T => up rel form path - starts with mod *\/$/;"	m	struct:xmrcmp_t	access:public
xmrcmptab_to_gnam	./v_genfx.c	/^static char *xmrcmptab_to_gnam(char *s, struct gref_t *grp)$/;"	f	file:	signature:(char *s, struct gref_t *grp)
xp	./igen.h	/^ struct expr_t *xp;             \/* gate expression *\/$/;"	m	struct:gate_conta_t	typeref:struct:gate_conta_t::expr_t	access:public
xp	./v.h	/^ struct expr_t *xp;$/;"	m	struct:exprlst_t	typeref:struct:exprlst_t::expr_t	access:public
xp	./v.h	/^ struct expr_t *xp;$/;"	m	struct:pbexpr_t	typeref:struct:pbexpr_t::expr_t	access:public
xp_cmp	./v_xprop.c	/^static int32 xp_cmp(const void *x1, const void *x2)$/;"	f	file:	signature:(const void *x1, const void *x2)
xp_in_evxlst	./v_fx2.c	/^static int32 xp_in_evxlst(struct expr_t *evxp) $/;"	f	file:	signature:(struct expr_t *evxp)
xpfnxt	./v.h	/^ struct xpndfile_t *xpfnxt;   \/* next part of original pattern *\/$/;"	m	struct:xpndfile_t	typeref:struct:xpndfile_t::xpndfile_t	access:public
xpnd1_gen_case	./v_genfx.c	/^static void xpnd1_gen_case(struct genitem_t *gip, struct genblk_t *cntxt_gblkp)$/;"	f	file:	signature:(struct genitem_t *gip, struct genblk_t *cntxt_gblkp)
xpnd1_gen_conta	./v_genfx.c	/^static void xpnd1_gen_conta(struct genitem_t *gip,$/;"	f	file:	signature:(struct genitem_t *gip, struct genblk_t *cntxt_gblkp)
xpnd1_gen_for	./v_genfx.c	/^static void xpnd1_gen_for(struct genitem_t *gip, struct genblk_t *cntxt_gblkp)$/;"	f	file:	signature:(struct genitem_t *gip, struct genblk_t *cntxt_gblkp)
xpnd1_gen_gate	./v_genfx.c	/^static void xpnd1_gen_gate(struct genitem_t *gip, struct genblk_t *cntxt_gblkp)$/;"	f	file:	signature:(struct genitem_t *gip, struct genblk_t *cntxt_gblkp)
xpnd1_gen_if	./v_genfx.c	/^static void xpnd1_gen_if(struct genitem_t *gip, struct genblk_t *cntxt_gblkp)$/;"	f	file:	signature:(struct genitem_t *gip, struct genblk_t *cntxt_gblkp)
xpnd1_gen_initalways	./v_genfx.c	/^static void xpnd1_gen_initalways(struct genitem_t *gip)$/;"	f	file:	signature:(struct genitem_t *gip)
xpnd1_gen_inst	./v_genfx.c	/^static void xpnd1_gen_inst(struct genitem_t *gip, struct genblk_t *cntxt_gblkp)$/;"	f	file:	signature:(struct genitem_t *gip, struct genblk_t *cntxt_gblkp)
xpnd1_gen_item	./v_genfx.c	/^static void xpnd1_gen_item(struct genitem_t *gip,$/;"	f	file:	signature:(struct genitem_t *gip, struct genblk_t *cntxt_gblkp)
xpnd1_gen_vardecl	./v_genfx.c	/^static void xpnd1_gen_vardecl(struct genitem_t *gip,$/;"	f	file:	signature:(struct genitem_t *gip, struct genblk_t *cntxt_gblkp)
xpnd1_genblk	./v_genfx.c	/^static void xpnd1_genblk(struct genblk_t *gblkp)$/;"	f	file:	signature:(struct genblk_t *gblkp)
xpnd_1mod_gen_items	./v_genfx.c	/^static void xpnd_1mod_gen_items(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
xpnd_1wcard	./v_prp.c	/^static void xpnd_1wcard(int32 wci, word32 ndx)$/;"	f	file:	signature:(int32 wci, word32 ndx)
xpnd_args	./cvc.c	/^static void xpnd_args(int32 argc, char **argv)$/;"	f	file:	signature:(int32 argc, char **argv)
xpnd_edge_wcard	./v_prp.c	/^static void xpnd_edge_wcard(word32 ustate, int32 e1val, int32 e2val,$/;"	f	file:	signature:(word32 ustate, int32 e1val, int32 e2val, word32 einpnum)
xpnd_pthel_t	./v.h	/^struct xpnd_pthel_t {$/;"	s
xpnd_pthel_t::in_equiv_set	./v.h	/^ unsigned in_equiv_set : 1;$/;"	m	struct:xpnd_pthel_t	access:public
xpnd_pthel_t::peii	./v.h	/^ int32 peii, peoi; $/;"	m	struct:xpnd_pthel_t	access:public
xpnd_pthel_t::peoi	./v.h	/^ int32 peii, peoi; $/;"	m	struct:xpnd_pthel_t	access:public
xpnd_pthel_t::pthp	./v.h	/^ struct spcpth_t *pthp;$/;"	m	struct:xpnd_pthel_t	typeref:struct:xpnd_pthel_t::spcpth_t	access:public
xpnd_pthel_t::xpthnxt	./v.h	/^ struct xpnd_pthel_t *xpthnxt;$/;"	m	struct:xpnd_pthel_t	typeref:struct:xpnd_pthel_t::xpnd_pthel_t	access:public
xpnd_pths	./v_fx3.c	/^static struct xpnd_pthel_t *xpnd_pths(struct spfy_t *spfp,$/;"	f	file:	signature:(struct spfy_t *spfp, int32 *numxpths)
xpndfile_t	./v.h	/^struct xpndfile_t {$/;"	s
xpndfile_t::fpat	./v.h	/^ char *fpat;                  \/* the original pattern per dir, split by '\/' *\/$/;"	m	struct:xpndfile_t	access:public
xpndfile_t::incall	./v.h	/^ unsigned incall : 1;         \/* include the entire dir, ends in '\/' *\/$/;"	m	struct:xpndfile_t	access:public
xpndfile_t::level	./v.h	/^ int32 level;                 \/* current directory level *\/$/;"	m	struct:xpndfile_t	access:public
xpndfile_t::nmatch	./v.h	/^ int32 nmatch;                \/* the number of matched files *\/$/;"	m	struct:xpndfile_t	access:public
xpndfile_t::wildcard	./v.h	/^ unsigned wildcard: 2;        \/* T=> if it contains a wild char, *, ? or ... *\/$/;"	m	struct:xpndfile_t	access:public
xpndfile_t::xpfnxt	./v.h	/^ struct xpndfile_t *xpfnxt;   \/* next part of original pattern *\/$/;"	m	struct:xpndfile_t	typeref:struct:xpndfile_t::xpndfile_t	access:public
xpnxt	./v.h	/^ struct exprlst_t *xpnxt;$/;"	m	struct:exprlst_t	typeref:struct:exprlst_t::exprlst_t	access:public
xpr_has_illegal_sys_fcall	./v_fx3.c	/^static int32 xpr_has_illegal_sys_fcall(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
xpr_has_is_param	./v_genfx.c	/^static int32 xpr_has_is_param(struct expr_t *ndp)$/;"	f	file:	signature:(struct expr_t *ndp)
xprop	./v.h	/^ struct xprop_t *xprop;$/;"	m	struct:case_t	typeref:struct:case_t::xprop_t	access:public
xprop	./v.h	/^ struct xprop_t *xprop;$/;"	m	struct:if_t	typeref:struct:if_t::xprop_t	access:public
xprop_accum	./v.h	/^ word32 *xprop_accum;         \/* accumulator for xprop values *\/$/;"	m	struct:net_t	access:public
xprop_astp	./v.h	/^ struct st_t *xprop_astp;     \/* assign id xprop stmt *\/$/;"	m	union:xprop_nbu	typeref:struct:xprop_nbu::st_t	access:public
xprop_check_case_net_assigned	./v_xprop.c	/^static void xprop_check_case_net_assigned(struct xprop_t *xprop)$/;"	f	file:	signature:(struct xprop_t *xprop)
xprop_copy_stmt	./v_xprop.c	/^static struct st_t *xprop_copy_stmt(struct st_t *stp)$/;"	f	file:	signature:(struct st_t *stp)
xprop_eligible	./v.h	/^ unsigned xprop_eligible : 1; \/* T => if\/case stmt can be xprop *\/$/;"	m	struct:st_t	access:public
xprop_level	./v.h	/^ int32 xprop_level;           \/* T => stmt xprop level *\/$/;"	m	struct:st_t	access:public
xprop_lhsexpr_var_ndx_uses_lhsnet	./v_xprop.c	/^static int32 xprop_lhsexpr_var_ndx_uses_lhsnet(struct expr_t *xp, $/;"	f	file:	signature:(struct expr_t *xp, struct net_t *lhsnp)
xprop_lstp	./v.h	/^ struct st_t *xprop_lstp;     \/* x-prop statement list *\/$/;"	m	struct:case_t	typeref:struct:case_t::st_t	access:public
xprop_nb_actionst	./v.h	/^ struct st_t *xprop_nb_actionst;    \/* nb xprop copy action list *\/$/;"	m	struct:delctrl_t	typeref:struct:delctrl_t::st_t	access:public
xprop_nb_taskp	./v.h	/^ struct task_t *xprop_nb_taskp; \/* dummy xprop non-blocking stmt holder *\/$/;"	m	struct:mod_t	typeref:struct:mod_t::task_t	access:public
xprop_nbu	./v.h	/^ union xprop_nbu xprop_nbu; \/* compile time xprop nb info *\/$/;"	m	struct:st_t	typeref:union:st_t::xprop_nbu	access:public
xprop_nbu	./v.h	/^union xprop_nbu {$/;"	u
xprop_nbu::xprop_astp	./v.h	/^ struct st_t *xprop_astp;     \/* assign id xprop stmt *\/$/;"	m	union:xprop_nbu	typeref:struct:xprop_nbu::st_t	access:public
xprop_nbu::xprop_orig_astp	./v.h	/^ struct st_t *xprop_orig_astp; \/* assign id xprop stmt *\/$/;"	m	union:xprop_nbu	typeref:struct:xprop_nbu::st_t	access:public
xprop_net_used_on_rhs	./v_xprop.c	/^static int32 xprop_net_used_on_rhs(struct expr_t *rhsx, struct net_t *np)$/;"	f	file:	signature:(struct expr_t *rhsx, struct net_t *np)
xprop_orig_astp	./v.h	/^ struct st_t *xprop_orig_astp; \/* assign id xprop stmt *\/$/;"	m	union:xprop_nbu	typeref:struct:xprop_nbu::st_t	access:public
xprop_set_xedge_bits	./v_bbgen.c	/^static void xprop_set_xedge_bits(struct mod_t *mdp)$/;"	f	file:	signature:(struct mod_t *mdp)
xprop_t	./v.h	/^struct xprop_t {$/;"	s
xprop_t::accum_block1	./v.h	/^ word32 **accum_block1;          \/* accum block 1 *\/$/;"	m	struct:xprop_t	access:public
xprop_t::accum_block2	./v.h	/^ word32 **accum_block2;          \/* accum block 2 *\/$/;"	m	struct:xprop_t	access:public
xprop_t::astmts	./v.h	/^ struct st_t **astmts;           \/* assign stmts - all know to be the same *\/$/;"	m	struct:xprop_t	typeref:struct:xprop_t::st_t	access:public
xprop_t::bits_set	./v.h	/^ word32 **bits_set;              \/* net mask for the per set bits *\/$/;"	m	struct:xprop_t	access:public
xprop_t::has_ids_only	./v.h	/^ unsigned has_ids_only : 1;      \/* only contains ids on lhs *\/$/;"	m	struct:xprop_t	access:public
xprop_t::has_one_id_only	./v.h	/^ unsigned has_one_id_only : 1;   \/* only contains single id always set *\/$/;"	m	struct:xprop_t	access:public
xprop_t::is_top_level	./v.h	/^ unsigned is_top_level : 1;      \/* x-prop is top level *\/$/;"	m	struct:xprop_t	access:public
xprop_t::lhs_id_only	./v.h	/^ int32 *lhs_id_only;             \/* lhs id only *\/$/;"	m	struct:xprop_t	access:public
xprop_t::lhsnets	./v.h	/^ struct net_t **lhsnets;         \/* table of nets on the lhs *\/$/;"	m	struct:xprop_t	typeref:struct:xprop_t::net_t	access:public
xprop_t::ncount	./v.h	/^ int32 ncount;                   \/* num nets on lhs *\/$/;"	m	struct:xprop_t	access:public
xprop_t::nested_if_case	./v.h	/^ unsigned nested_if_case : 1;    \/* nested if\/case stmts *\/$/;"	m	struct:xprop_t	access:public
xprop_t::net_block1_set	./v.h	/^ int32 *net_block1_set;          \/* net set flags for first block  *\/$/;"	m	struct:xprop_t	access:public
xprop_t::net_block2_set	./v.h	/^ int32 *net_block2_set;          \/* net set flags for second block *\/$/;"	m	struct:xprop_t	access:public
xprop_t::parent_net_indices	./v.h	/^ int32 *parent_net_indices;      \/* save net indices *\/$/;"	m	struct:xprop_t	access:public
xprop_t::parent_xprop	./v.h	/^ struct xprop_t *parent_xprop;   \/* parent of this xprop *\/$/;"	m	struct:xprop_t	typeref:struct:xprop_t::xprop_t	access:public
xprop_t::top_single_item	./v.h	/^ unsigned top_single_item : 1;   \/* top-level item not part of nested *\/$/;"	m	struct:xprop_t	access:public
xprop_t::x_entered	./v.h	/^ unsigned x_entered : 1;         \/* xprop has been entered *\/$/;"	m	struct:xprop_t	access:public
xprop_t::xbitmask_block1_set	./v.h	/^ word32 **xbitmask_block1_set;   \/* net mask for the first block *\/$/;"	m	struct:xprop_t	access:public
xprop_t::xbitmask_block2_set	./v.h	/^ word32 **xbitmask_block2_set;   \/* net mask for the second block *\/$/;"	m	struct:xprop_t	access:public
xprop_t::xblock	./v.h	/^ int32 xblock;                   \/* xblock 0 or 1 *\/$/;"	m	struct:xprop_t	access:public
xprop_t::xedge_nets	./v.h	/^ struct net_t **xedge_nets;      \/* xedge triggered event control - per inst *\/$/;"	m	struct:xprop_t	typeref:struct:xprop_t::net_t	access:public
xprop_t::xedge_to_vals	./v.h	/^ byte *xedge_to_vals;            \/* set to xedge value 0, 1, 2 (not set) *\/$/;"	m	struct:xprop_t	access:public
xprop_t::xevents	./v.h	/^ struct tev_t **xevents;         \/* store x triggered event controls *\/$/;"	m	struct:xprop_t	typeref:struct:xprop_t::tev_t	access:public
xprop_tr_nbproc_assign	./v_xprop.c	/^static void xprop_tr_nbproc_assign(struct st_t *stp, struct xstk_t *xsp)$/;"	f	file:	signature:(struct st_t *stp, struct xstk_t *xsp)
xprop_tr_proc_assign	./v_xprop.c	/^static void xprop_tr_proc_assign(struct st_t *stp, struct xstk_t *xsp)$/;"	f	file:	signature:(struct st_t *stp, struct xstk_t *xsp)
xprop_xedge_actionst	./v.h	/^ struct st_t *xprop_xedge_actionst; \/* xedge action list *\/$/;"	m	struct:delctrl_t	typeref:struct:delctrl_t::st_t	access:public
xpthnxt	./v.h	/^ struct xpnd_pthel_t *xpthnxt;$/;"	m	struct:xpnd_pthel_t	typeref:struct:xpnd_pthel_t::xpnd_pthel_t	access:public
xsawlen	./v.h	/^ int32 xsawlen;               \/* word32 length of a\/b half of alloced size *\/$/;"	m	struct:xstk_t	access:public
xskip_toend	./v_src2.c	/^static void xskip_toend(void)$/;"	f	file:	signature:(void)
xslen	./v.h	/^ int32 xslen;                 \/* number of bits required to store *\/$/;"	m	struct:xstk_t	access:public
xstk_t	./v.h	/^struct xstk_t {$/;"	s
xstk_t::ap	./v.h	/^ word32 *ap;                  \/* a part of value but must be contigous *\/$/;"	m	struct:xstk_t	access:public
xstk_t::bp	./v.h	/^ word32 *bp;                  \/* b part of value *\/$/;"	m	struct:xstk_t	access:public
xstk_t::xsawlen	./v.h	/^ int32 xsawlen;               \/* word32 length of a\/b half of alloced size *\/$/;"	m	struct:xstk_t	access:public
xstk_t::xslen	./v.h	/^ int32 xslen;                 \/* number of bits required to store *\/$/;"	m	struct:xstk_t	access:public
xtrct_param	./v_sdf.c	/^static int32 xtrct_param(struct itree_t **itp2, char *pnam, struct itree_t *itp)$/;"	f	file:	signature:(struct itree_t **itp2, char *pnam, struct itree_t *itp)
xtrct_portdev	./v_sdf.c	/^static int32 xtrct_portdev(struct itree_t **itp2, char *nam, char *qualport,$/;"	f	file:	signature:(struct itree_t **itp2, char *nam, char *qualport, struct itree_t *itp, char *formnam, char *onam)
xtrct_short_tgl_values	./v_cvr.c	/^static int32 xtrct_short_tgl_values(char *veclst, char *tglbits01,$/;"	f	file:	signature:(char *veclst, char *tglbits01, char *tglbits10)
xvi	./v.h	/^ int32 xvi;                   \/* wrd index into constant tab *\/$/;"	m	union:r_u	access:public
xvi	./v.h	/^ int32 xvi;                 \/* index into contab *\/$/;"	m	struct:prep_obj_t	access:public
xvi	./v.h	/^ int32 xvi;$/;"	m	struct:contab_info_t	access:public
xvi	./v.h	/^ int32 xvi;$/;"	m	union:intptr_u	access:public
ydirfnam_ind	./v.h	/^ unsigned ydirfnam_ind : 16;$/;"	m	struct:mydir_t	access:public
yfiles	./v.h	/^ struct mydir_t *yfiles;      \/* for -y header of file list *\/$/;"	m	struct:vylib_t	typeref:struct:vylib_t::mydir_t	access:public
ylbxi	./v.h	/^ unsigned ylbxi : 16;         \/* ndx in lbexts (-1 if none), -2 no match *\/$/;"	m	struct:mydir_t	access:public
zero_allbits_	./cvmacros.h	485;"	d
zero_unused_16v	./v_del.c	/^static void zero_unused_16v(word64 *tim)$/;"	f	file:	signature:(word64 *tim)
ztrim	./v_ex2.c	/^static int32 ztrim(word32 *zp, int32 z_len)$/;"	f	file:	signature:(word32 *zp, int32 z_len)
